{"version":3,"file":"useAsync.js","sourceRoot":"../src/","sources":["useAsync.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC5C,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAEtC;;GAEG;AACH,MAAM,UAAU,QAAQ;IACtB,IAAM,KAAK,GAAG,QAAQ,CAAQ,cAAM,OAAA,IAAI,KAAK,EAAE,EAAX,CAAW,CAAC,CAAC;IAEjD,qFAAqF;IACrF,KAAK,CAAC,SAAS,CAAC,cAAM,OAAA,cAAM,OAAA,KAAK,CAAC,OAAO,EAAE,EAAf,CAAe,EAArB,CAAqB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAEtD,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import { Async } from '@uifabric/utilities';\nimport * as React from 'react';\nimport { useConst } from './useConst';\n\n/**\n * Hook to provide an Async instance that is automatically cleaned up on dismount.\n */\nexport function useAsync() {\n  const async = useConst<Async>(() => new Async());\n\n  // Function that returns a function in order to dispose the async instance on unmount\n  React.useEffect(() => () => async.dispose(), [async]);\n\n  return async;\n}\n"]}