{"version":3,"file":"rtlifyRules.js","sourceRoot":"../src/","sources":["transforms/rtlifyRules.ts"],"names":[],"mappings":"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","sourcesContent":["import { Stylesheet } from '../Stylesheet';\r\n\r\nconst LEFT = 'left';\r\nconst RIGHT = 'right';\r\nconst NO_FLIP = '@noflip';\r\nconst NAME_REPLACEMENTS: { [key: string]: string } = {\r\n  [LEFT]: RIGHT,\r\n  [RIGHT]: LEFT\r\n};\r\nconst VALUE_REPLACEMENTS: { [key: string]: string } = {\r\n  'w-resize': 'e-resize',\r\n  'sw-resize': 'se-resize',\r\n  'nw-resize': 'ne-resize'\r\n};\r\n\r\nlet _rtl = getRTL();\r\n\r\n/**\r\n * Sets the current RTL value.\r\n */\r\nexport function setRTL(isRTL: boolean): void {\r\n  if (_rtl !== isRTL) {\r\n    Stylesheet.getInstance().resetKeys();\r\n    _rtl = isRTL;\r\n  }\r\n}\r\n\r\n/**\r\n * Gets the current RTL value.\r\n */\r\nexport function getRTL(): boolean {\r\n  if (_rtl === undefined) {\r\n    _rtl = typeof document !== 'undefined' && !!document.documentElement && document.documentElement.getAttribute('dir') === 'rtl';\r\n  }\r\n  return _rtl;\r\n}\r\n\r\n/**\r\n * RTLifies the rulePair in the array at the current index. This mutates the array for performance\r\n * reasons.\r\n */\r\nexport function rtlifyRules(rulePairs: (string | number)[], index: number): void {\r\n  if (getRTL()) {\r\n    const name = rulePairs[index] as string;\r\n\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    const value = rulePairs[index + 1] as string;\r\n\r\n    if (typeof value === 'string' && value.indexOf(NO_FLIP) >= 0) {\r\n      rulePairs[index + 1] = value.replace(/\\s*(?:\\/\\*\\s*)?\\@noflip\\b(?:\\s*\\*\\/)?\\s*?/g, '');\r\n    } else if (name.indexOf(LEFT) >= 0) {\r\n      rulePairs[index] = name.replace(LEFT, RIGHT);\r\n    } else if (name.indexOf(RIGHT) >= 0) {\r\n      rulePairs[index] = name.replace(RIGHT, LEFT);\r\n    } else if (String(value).indexOf(LEFT) >= 0) {\r\n      rulePairs[index + 1] = value.replace(LEFT, RIGHT);\r\n    } else if (String(value).indexOf(RIGHT) >= 0) {\r\n      rulePairs[index + 1] = value.replace(RIGHT, LEFT);\r\n    } else if (NAME_REPLACEMENTS[name]) {\r\n      rulePairs[index] = NAME_REPLACEMENTS[name];\r\n    } else if (VALUE_REPLACEMENTS[value]) {\r\n      rulePairs[index + 1] = VALUE_REPLACEMENTS[value];\r\n    } else {\r\n      switch (name) {\r\n        case 'margin':\r\n        case 'padding':\r\n          rulePairs[index + 1] = flipQuad(value);\r\n          break;\r\n        case 'box-shadow':\r\n          rulePairs[index + 1] = negateNum(value, 0);\r\n          break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Given a string value in a space delimited format (e.g. \"1 2 3 4\"), negates a particular value.\r\n */\r\nfunction negateNum(value: string, partIndex: number): string {\r\n  const parts = value.split(' ');\r\n  const numberVal = parseInt(parts[partIndex], 10);\r\n\r\n  parts[0] = parts[0].replace(String(numberVal), String(numberVal * -1));\r\n\r\n  return parts.join(' ');\r\n}\r\n\r\n/**\r\n * Given a string quad, flips the left and right values.\r\n */\r\nfunction flipQuad(value: string): string {\r\n  if (typeof value === 'string') {\r\n    const parts = value.split(' ');\r\n\r\n    if (parts.length === 4) {\r\n      return `${parts[0]} ${parts[3]} ${parts[2]} ${parts[1]}`;\r\n    }\r\n  }\r\n\r\n  return value;\r\n}\r\n"]}