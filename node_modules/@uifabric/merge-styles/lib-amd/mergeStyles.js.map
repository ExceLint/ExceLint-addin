{"version":3,"file":"mergeStyles.js","sourceRoot":"../src/","sources":["mergeStyles.ts"],"names":[],"mappings":";;;IAIA;;;;OAIG;IACH;QAA4B,cAAgE;aAAhE,UAAgE,EAAhE,qBAAgE,EAAhE,IAAgE;YAAhE,yBAAgE;;QACpF,IAAA,gDAA8C,EAA5C,oBAAO,EAAE,oBAAO,CAA6B;QAErD,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,OAAO,CAAC,IAAI,CAAC,mCAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;SACzC;QAED,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IARD,kCAQC","sourcesContent":["import { IStyle, IStyleBaseArray } from './IStyle';\r\nimport { styleToClassName } from './styleToClassName';\r\nimport { extractStyleParts } from './extractStyleParts';\r\n\r\n/**\r\n * Concatination helper, which can merge class names together. Skips over falsey values.\r\n *\r\n * @public\r\n */\r\nexport function mergeStyles(...args: (IStyle | IStyleBaseArray | false | null | undefined)[]): string {\r\n  const { classes, objects } = extractStyleParts(args);\r\n\r\n  if (objects.length) {\r\n    classes.push(styleToClassName(objects));\r\n  }\r\n\r\n  return classes.join(' ');\r\n}\r\n"]}