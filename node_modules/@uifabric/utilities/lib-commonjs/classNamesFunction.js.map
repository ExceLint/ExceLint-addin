{"version":3,"file":"classNamesFunction.js","sourceRoot":"../src/","sources":["classNamesFunction.ts"],"names":[],"mappings":";;AAAA,uDAA+F;AAG/F;;;GAGG;AACH;IAIE,iBAAiB;IAEjB,IAAM,aAAa,GAAG,UACpB,qBAAiF,EACjF,UAA2C;QAA3C,2BAAA,EAAA,aAA0B,EAAiB;QAE3C,gGAAgG;QAChG,4DAA4D;QAC5D,sGAAsG;QACtG,0GAA0G;QAC1G,IAAI,qBAAqB,KAAK,SAAS,EAAE;YACvC,OAAO,EAAmC,CAAC;SAC5C;QAED,IAAM,QAAQ,GACZ,qBAAqB,IAAI,CAAC,OAAO,qBAAqB,KAAK,UAAU,CAAC,CAAC,CAAC,qBAAqB,CAAC,UAAW,CAAC,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC;QAEtI,OAAO,6BAAc,CAAC,QAAqB,CAAC,CAAC;IAC/C,CAAC,CAAC;IAEF,OAAO,aAAa,CAAC;AACvB,CAAC;AAzBD,gDAyBC","sourcesContent":["import { mergeStyleSets, IStyle, IStyleSet, IProcessedStyleSet } from '@uifabric/merge-styles';\r\nimport { IStyleFunctionOrObject } from '@uifabric/merge-styles';\r\n\r\n/**\r\n * Creates a getClassNames function which calls getStyles given the props, and injects them\r\n * into mergeStyleSets.\r\n */\r\nexport function classNamesFunction<TStyleProps extends {}, TStyleSet extends IStyleSet<TStyleSet>>(): (\r\n  getStyles: IStyleFunctionOrObject<TStyleProps, TStyleSet> | undefined,\r\n  styleProps?: TStyleProps\r\n) => IProcessedStyleSet<TStyleSet> {\r\n  // TODO: memoize.\r\n\r\n  const getClassNames = (\r\n    styleFunctionOrObject: IStyleFunctionOrObject<TStyleProps, TStyleSet> | undefined,\r\n    styleProps: TStyleProps = {} as TStyleProps\r\n  ): IProcessedStyleSet<TStyleSet> => {\r\n    // styleSet might be undefined if styleFunctionOrObject is undefined, but getStyles should never\r\n    // ordinarily be undefined (it would hardly make any sense).\r\n    // However, because we usually use `props.styles` as the argument to an invocation of this method, and\r\n    // `props.styles` itself is defined as optional, this avoids the need to use `!` at all invocation points.\r\n    if (styleFunctionOrObject === undefined) {\r\n      return {} as IProcessedStyleSet<TStyleSet>;\r\n    }\r\n\r\n    const styleSet =\r\n      styleFunctionOrObject && (typeof styleFunctionOrObject === 'function' ? styleFunctionOrObject(styleProps!) : styleFunctionOrObject);\r\n\r\n    return mergeStyleSets(styleSet as TStyleSet);\r\n  };\r\n\r\n  return getClassNames;\r\n}\r\n"]}