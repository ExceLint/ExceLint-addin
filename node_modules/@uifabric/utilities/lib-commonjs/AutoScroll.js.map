{"version":3,"file":"AutoScroll.js","sourceRoot":"../src/","sources":["AutoScroll.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventGroup } from './EventGroup';\r\nimport { findScrollableParent } from './scroll';\r\nimport { getRect } from './dom/getRect';\r\nimport { IRectangle } from './IRectangle';\r\n\r\ndeclare function setTimeout(cb: Function, delay: number): number;\r\n\r\nconst SCROLL_ITERATION_DELAY = 16;\r\nconst SCROLL_GUTTER_HEIGHT = 100;\r\nconst MAX_SCROLL_VELOCITY = 15;\r\n\r\n/**\r\n * AutoScroll simply hooks up mouse events given a parent element, and scrolls the container\r\n * up/down depending on how close the mouse is to the top/bottom of the container.\r\n *\r\n * Once you don't want autoscroll any more, just dispose the helper and it will unhook events.\r\n *\r\n * @public\r\n */\r\nexport class AutoScroll {\r\n  private _events: EventGroup;\r\n  private _scrollableParent: HTMLElement | null;\r\n  private _scrollRect: IRectangle | undefined;\r\n  private _scrollVelocity: number;\r\n  private _timeoutId: number;\r\n\r\n  constructor(element: HTMLElement) {\r\n    this._events = new EventGroup(this);\r\n    this._scrollableParent = findScrollableParent(element);\r\n\r\n    this._incrementScroll = this._incrementScroll.bind(this);\r\n    this._scrollRect = getRect(this._scrollableParent);\r\n\r\n    // tslint:disable-next-line:no-any\r\n    if (this._scrollableParent === (window as any)) {\r\n      this._scrollableParent = document.body;\r\n    }\r\n\r\n    if (this._scrollableParent) {\r\n      this._events.on(window, 'mousemove', this._onMouseMove, true);\r\n      this._events.on(window, 'touchmove', this._onTouchMove, true);\r\n    }\r\n  }\r\n\r\n  public dispose(): void {\r\n    this._events.dispose();\r\n    this._stopScroll();\r\n  }\r\n\r\n  private _onMouseMove(ev: MouseEvent): void {\r\n    this._computeScrollVelocity(ev.clientY);\r\n  }\r\n\r\n  private _onTouchMove(ev: TouchEvent): void {\r\n    if (ev.touches.length > 0) {\r\n      this._computeScrollVelocity(ev.touches[0].clientY);\r\n    }\r\n  }\r\n\r\n  private _computeScrollVelocity(clientY: number): void {\r\n    if (!this._scrollRect) {\r\n      return;\r\n    }\r\n\r\n    let scrollRectTop = this._scrollRect.top;\r\n    let scrollClientBottom = scrollRectTop + this._scrollRect.height - SCROLL_GUTTER_HEIGHT;\r\n\r\n    if (clientY < scrollRectTop + SCROLL_GUTTER_HEIGHT) {\r\n      this._scrollVelocity = Math.max(\r\n        -MAX_SCROLL_VELOCITY,\r\n        -MAX_SCROLL_VELOCITY * ((SCROLL_GUTTER_HEIGHT - (clientY - scrollRectTop)) / SCROLL_GUTTER_HEIGHT)\r\n      );\r\n    } else if (clientY > scrollClientBottom) {\r\n      this._scrollVelocity = Math.min(MAX_SCROLL_VELOCITY, MAX_SCROLL_VELOCITY * ((clientY - scrollClientBottom) / SCROLL_GUTTER_HEIGHT));\r\n    } else {\r\n      this._scrollVelocity = 0;\r\n    }\r\n\r\n    if (this._scrollVelocity) {\r\n      this._startScroll();\r\n    } else {\r\n      this._stopScroll();\r\n    }\r\n  }\r\n\r\n  private _startScroll(): void {\r\n    if (!this._timeoutId) {\r\n      this._incrementScroll();\r\n    }\r\n  }\r\n\r\n  private _incrementScroll(): void {\r\n    if (this._scrollableParent) {\r\n      this._scrollableParent.scrollTop += Math.round(this._scrollVelocity);\r\n    }\r\n\r\n    this._timeoutId = setTimeout(this._incrementScroll, SCROLL_ITERATION_DELAY);\r\n  }\r\n\r\n  private _stopScroll(): void {\r\n    if (this._timeoutId) {\r\n      clearTimeout(this._timeoutId);\r\n      delete this._timeoutId;\r\n    }\r\n  }\r\n}\r\n"]}