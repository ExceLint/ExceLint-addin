{"version":3,"file":"createRef.js","sourceRoot":"../src/","sources":["createRef.ts"],"names":[],"mappings":"AAYA;;;GAGG;AACH,MAAM;IACJ,IAAM,SAAS,GAAG,CAAC,UAAC,OAAiB;QACnC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC;IAC9B,CAAC,CAAiB,CAAC;IAEnB,6EAA6E;IAC7E,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,OAAO,EAAE;QACxC,GAAG,EAAH;YACE,OAAO,SAAS,CAAC,OAAO,CAAC;QAC3B,CAAC;KACF,CAAC,CAAC;IAEH,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;IAEzB,OAAO,SAAS,CAAC;AACnB,CAAC","sourcesContent":["export type IRefObject<T> = React.RefObject<T> | RefObject<T> | ((ref: T | null) => void);\r\n\r\nexport type RefObject<T> = {\r\n  (component: T | null): void;\r\n  current: T | null;\r\n\r\n  /**\r\n   * @deprecated Use .current as that is consistent the official React Api.\r\n   */\r\n  value: T | null;\r\n};\r\n\r\n/**\r\n * @deprecated Use React.createRef.\r\n * May be removed in 6 months (Jan '19).\r\n */\r\nexport function createRef<T>(): RefObject<T> {\r\n  const refObject = ((element: T | null): void => {\r\n    refObject.current = element;\r\n  }) as RefObject<T>;\r\n\r\n  // This getter is here to support the deprecated value prop on the refObject.\r\n  Object.defineProperty(refObject, 'value', {\r\n    get(): T | null {\r\n      return refObject.current;\r\n    }\r\n  });\r\n\r\n  refObject.current = null;\r\n\r\n  return refObject;\r\n}\r\n"]}