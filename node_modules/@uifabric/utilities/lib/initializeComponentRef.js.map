{"version":3,"file":"initializeComponentRef.js","sourceRoot":"../src/","sources":["initializeComponentRef.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAEpD;;;;;GAKG;AACH,MAAM,iCAAoE,GAAoC;IAC5G,eAAe,CAAC,GAAG,EAAE;QACnB,iBAAiB,EAAE,QAAQ;QAC3B,kBAAkB,EAAE,SAAS;QAC7B,oBAAoB,EAAE,UAAU;KACjC,CAAC,CAAC;AACL,CAAC;AAED;IACE,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AAClD,CAAC;AAED,mBAAmB,SAAqB;IACtC,IAAI,SAAS,CAAC,YAAY,KAAK,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;QACtD,kCAAkC;QAClC,gBAAgB,CAAE,SAAiB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QACxD,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;KACjD;AACH,CAAC;AAED;IACE,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AAClD,CAAC;AAED,0BAAsC,YAAyC,EAAE,KAAwB;IACvG,IAAI,YAAY,EAAE;QAChB,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE;YACnC,YAA+C,CAAC,OAAO,GAAG,KAAK,CAAC;SAClE;aAAM,IAAI,OAAO,YAAY,KAAK,UAAU,EAAE;YAC5C,YAAyB,CAAC,KAAK,CAAC,CAAC;SACnC;KACF;AACH,CAAC","sourcesContent":["import { IBaseProps } from './BaseComponent.types';\r\nimport { extendComponent } from './extendComponent';\r\n\r\n/**\r\n * Helper to manage componentRef resolution. Internally appends logic to\r\n * lifetime methods to resolve componentRef to the passed in object.\r\n *\r\n * Usage: call initializeComponentRef(this) in the constructor,\r\n */\r\nexport function initializeComponentRef<TProps extends IBaseProps, TState>(obj: React.Component<TProps, TState>): void {\r\n  extendComponent(obj, {\r\n    componentDidMount: _onMount,\r\n    componentDidUpdate: _onUpdate,\r\n    componentWillUnmount: _onUnmount\r\n  });\r\n}\r\n\r\nfunction _onMount(): void {\r\n  _setComponentRef(this.props.componentRef, this);\r\n}\r\n\r\nfunction _onUpdate(prevProps: IBaseProps): void {\r\n  if (prevProps.componentRef !== this.props.componentRef) {\r\n    // tslint:disable-next-line:no-any\r\n    _setComponentRef((prevProps as any).componentRef, null);\r\n    _setComponentRef(this.props.componentRef, this);\r\n  }\r\n}\r\n\r\nfunction _onUnmount(): void {\r\n  _setComponentRef(this.props.componentRef, null);\r\n}\r\n\r\nfunction _setComponentRef<TInterface>(componentRef: React.RefObject<TInterface>, value: TInterface | null): void {\r\n  if (componentRef) {\r\n    if (typeof componentRef === 'object') {\r\n      (componentRef as { current: TInterface | null }).current = value;\r\n    } else if (typeof componentRef === 'function') {\r\n      (componentRef as Function)(value);\r\n    }\r\n  }\r\n}\r\n"]}