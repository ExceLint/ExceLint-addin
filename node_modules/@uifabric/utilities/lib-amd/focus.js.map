{"version":3,"file":"focus.js","sourceRoot":"../src/","sources":["focus.ts"],"names":[],"mappings":"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","sourcesContent":["import { elementContainsAttribute } from './dom/elementContainsAttribute';\r\nimport { elementContains } from './dom/elementContains';\r\nimport { getParent } from './dom/getParent';\r\nimport { getWindow } from './dom/getWindow';\r\nimport { getDocument } from './dom/getDocument';\r\n\r\nconst IS_FOCUSABLE_ATTRIBUTE = 'data-is-focusable';\r\nconst IS_VISIBLE_ATTRIBUTE = 'data-is-visible';\r\nconst FOCUSZONE_ID_ATTRIBUTE = 'data-focuszone-id';\r\nconst FOCUSZONE_SUB_ATTRIBUTE = 'data-is-sub-focuszone';\r\n\r\n/**\r\n * Gets the first focusable element.\r\n *\r\n * @public\r\n */\r\nexport function getFirstFocusable(\r\n  rootElement: HTMLElement,\r\n  currentElement: HTMLElement,\r\n  includeElementsInFocusZones?: boolean\r\n): HTMLElement | null {\r\n  return getNextElement(\r\n    rootElement,\r\n    currentElement,\r\n    true /*checkNode*/,\r\n    false /*suppressParentTraversal*/,\r\n    false /*suppressChildTraversal*/,\r\n    includeElementsInFocusZones\r\n  );\r\n}\r\n\r\n/**\r\n * Gets the last focusable element.\r\n *\r\n * @public\r\n */\r\nexport function getLastFocusable(\r\n  rootElement: HTMLElement,\r\n  currentElement: HTMLElement,\r\n  includeElementsInFocusZones?: boolean\r\n): HTMLElement | null {\r\n  return getPreviousElement(\r\n    rootElement,\r\n    currentElement,\r\n    true /*checkNode*/,\r\n    false /*suppressParentTraversal*/,\r\n    true /*traverseChildren*/,\r\n    includeElementsInFocusZones\r\n  );\r\n}\r\n\r\n/**\r\n * Gets the first tabbable element.\r\n * The difference between focusable and tabbable is that tabbable elements are focusable elements that also have tabIndex != -1.\r\n * @param rootElement - The parent element to search beneath.\r\n * @param currentElement - The descendant of rootElement to start the search at.  This element is the first one checked,\r\n * and iteration continues forward.  Typical use passes rootElement.firstChild.\r\n * @param includeElementsInFocusZones - true if traversal should go into FocusZone descendants.\r\n * @param checkNode - Include currentElement in search when true. Defaults to true.\r\n * @public\r\n */\r\nexport function getFirstTabbable(\r\n  rootElement: HTMLElement,\r\n  currentElement: HTMLElement,\r\n  includeElementsInFocusZones?: boolean,\r\n  checkNode: boolean = true\r\n): HTMLElement | null {\r\n  return getNextElement(\r\n    rootElement,\r\n    currentElement,\r\n    checkNode,\r\n    false /*suppressParentTraversal*/,\r\n    false /*suppressChildTraversal*/,\r\n    includeElementsInFocusZones,\r\n    false /*allowFocusRoot*/,\r\n    true /*tabbable*/\r\n  );\r\n}\r\n\r\n/**\r\n * Gets the last tabbable element.\r\n * The difference between focusable and tabbable is that tabbable elements are focusable elements that also have tabIndex != -1.\r\n * @param rootElement - The parent element to search beneath.\r\n * @param currentElement - The descendant of rootElement to start the search at.  This element is the first one checked,\r\n * and iteration continues in reverse.  Typical use passes rootElement.lastChild.\r\n * @param includeElementsInFocusZones - true if traversal should go into FocusZone descendants.\r\n * @param checkNode - Include currentElement in search when true. Defaults to true.\r\n * @public\r\n */\r\nexport function getLastTabbable(\r\n  rootElement: HTMLElement,\r\n  currentElement: HTMLElement,\r\n  includeElementsInFocusZones?: boolean,\r\n  checkNode: boolean = true\r\n): HTMLElement | null {\r\n  return getPreviousElement(\r\n    rootElement,\r\n    currentElement,\r\n    checkNode,\r\n    false /*suppressParentTraversal*/,\r\n    true /*traverseChildren*/,\r\n    includeElementsInFocusZones,\r\n    false /*allowFocusRoot*/,\r\n    true /*tabbable*/\r\n  );\r\n}\r\n\r\n/**\r\n * Attempts to focus the first focusable element that is a child or child's child of the rootElement.\r\n *\r\n * @public\r\n * @param rootElement - Element to start the search for a focusable child.\r\n * @returns True if focus was set, false if it was not.\r\n */\r\nexport function focusFirstChild(rootElement: HTMLElement): boolean {\r\n  let element: HTMLElement | null = getNextElement(rootElement, rootElement, true, false, false, true);\r\n\r\n  if (element) {\r\n    focusAsync(element);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Traverse to find the previous element.\r\n * If tabbable is true, the element must have tabIndex != -1.\r\n *\r\n * @public\r\n */\r\nexport function getPreviousElement(\r\n  rootElement: HTMLElement,\r\n  currentElement: HTMLElement | null,\r\n  checkNode?: boolean,\r\n  suppressParentTraversal?: boolean,\r\n  traverseChildren?: boolean,\r\n  includeElementsInFocusZones?: boolean,\r\n  allowFocusRoot?: boolean,\r\n  tabbable?: boolean\r\n): HTMLElement | null {\r\n  if (!currentElement || (!allowFocusRoot && currentElement === rootElement)) {\r\n    return null;\r\n  }\r\n\r\n  let isCurrentElementVisible = isElementVisible(currentElement);\r\n\r\n  // Check its children.\r\n  if (\r\n    traverseChildren &&\r\n    isCurrentElementVisible &&\r\n    (includeElementsInFocusZones || !(isElementFocusZone(currentElement) || isElementFocusSubZone(currentElement)))\r\n  ) {\r\n    const childMatch = getPreviousElement(\r\n      rootElement,\r\n      currentElement.lastElementChild as HTMLElement,\r\n      true,\r\n      true,\r\n      true,\r\n      includeElementsInFocusZones,\r\n      allowFocusRoot,\r\n      tabbable\r\n    );\r\n\r\n    if (childMatch) {\r\n      if ((tabbable && isElementTabbable(childMatch, true)) || !tabbable) {\r\n        return childMatch;\r\n      }\r\n\r\n      const childMatchSiblingMatch = getPreviousElement(\r\n        rootElement,\r\n        childMatch.previousElementSibling as HTMLElement,\r\n        true,\r\n        true,\r\n        true,\r\n        includeElementsInFocusZones,\r\n        allowFocusRoot,\r\n        tabbable\r\n      );\r\n      if (childMatchSiblingMatch) {\r\n        return childMatchSiblingMatch;\r\n      }\r\n\r\n      let childMatchParent = childMatch.parentElement;\r\n\r\n      // At this point if we have not found any potential matches\r\n      // start looking at the rest of the subtree under the currentParent.\r\n      // NOTE: We do not want to recurse here because doing so could\r\n      // cause elements to get skipped.\r\n      while (childMatchParent && childMatchParent !== currentElement) {\r\n        const childMatchParentMatch = getPreviousElement(\r\n          rootElement,\r\n          childMatchParent.previousElementSibling as HTMLElement,\r\n          true,\r\n          true,\r\n          true,\r\n          includeElementsInFocusZones,\r\n          allowFocusRoot,\r\n          tabbable\r\n        );\r\n\r\n        if (childMatchParentMatch) {\r\n          return childMatchParentMatch;\r\n        }\r\n\r\n        childMatchParent = childMatchParent.parentElement;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Check the current node, if it's not the first traversal.\r\n  if (checkNode && isCurrentElementVisible && isElementTabbable(currentElement, tabbable)) {\r\n    return currentElement;\r\n  }\r\n\r\n  // Check its previous sibling.\r\n  const siblingMatch = getPreviousElement(\r\n    rootElement,\r\n    currentElement.previousElementSibling as HTMLElement,\r\n    true,\r\n    true,\r\n    true,\r\n    includeElementsInFocusZones,\r\n    allowFocusRoot,\r\n    tabbable\r\n  );\r\n\r\n  if (siblingMatch) {\r\n    return siblingMatch;\r\n  }\r\n\r\n  // Check its parent.\r\n  if (!suppressParentTraversal) {\r\n    return getPreviousElement(\r\n      rootElement,\r\n      currentElement.parentElement,\r\n      true,\r\n      false,\r\n      false,\r\n      includeElementsInFocusZones,\r\n      allowFocusRoot,\r\n      tabbable\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * Traverse to find the next focusable element.\r\n * If tabbable is true, the element must have tabIndex != -1.\r\n *\r\n * @public\r\n * @param checkNode - Include currentElement in search when true.\r\n */\r\nexport function getNextElement(\r\n  rootElement: HTMLElement,\r\n  currentElement: HTMLElement | null,\r\n  checkNode?: boolean,\r\n  suppressParentTraversal?: boolean,\r\n  suppressChildTraversal?: boolean,\r\n  includeElementsInFocusZones?: boolean,\r\n  allowFocusRoot?: boolean,\r\n  tabbable?: boolean\r\n): HTMLElement | null {\r\n  if (!currentElement || (currentElement === rootElement && suppressChildTraversal && !allowFocusRoot)) {\r\n    return null;\r\n  }\r\n\r\n  let isCurrentElementVisible = isElementVisible(currentElement);\r\n\r\n  // Check the current node, if it's not the first traversal.\r\n  if (checkNode && isCurrentElementVisible && isElementTabbable(currentElement, tabbable)) {\r\n    return currentElement;\r\n  }\r\n\r\n  // Check its children.\r\n  if (\r\n    !suppressChildTraversal &&\r\n    isCurrentElementVisible &&\r\n    (includeElementsInFocusZones || !(isElementFocusZone(currentElement) || isElementFocusSubZone(currentElement)))\r\n  ) {\r\n    const childMatch = getNextElement(\r\n      rootElement,\r\n      currentElement.firstElementChild as HTMLElement,\r\n      true,\r\n      true,\r\n      false,\r\n      includeElementsInFocusZones,\r\n      allowFocusRoot,\r\n      tabbable\r\n    );\r\n\r\n    if (childMatch) {\r\n      return childMatch;\r\n    }\r\n  }\r\n\r\n  if (currentElement === rootElement) {\r\n    return null;\r\n  }\r\n\r\n  // Check its sibling.\r\n  const siblingMatch = getNextElement(\r\n    rootElement,\r\n    currentElement.nextElementSibling as HTMLElement,\r\n    true,\r\n    true,\r\n    false,\r\n    includeElementsInFocusZones,\r\n    allowFocusRoot,\r\n    tabbable\r\n  );\r\n\r\n  if (siblingMatch) {\r\n    return siblingMatch;\r\n  }\r\n\r\n  if (!suppressParentTraversal) {\r\n    return getNextElement(\r\n      rootElement,\r\n      currentElement.parentElement,\r\n      false,\r\n      false,\r\n      true,\r\n      includeElementsInFocusZones,\r\n      allowFocusRoot,\r\n      tabbable\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * Determines if an element is visible.\r\n *\r\n * @public\r\n */\r\nexport function isElementVisible(element: HTMLElement | undefined | null): boolean {\r\n  // If the element is not valid, return false.\r\n  if (!element || !element.getAttribute) {\r\n    return false;\r\n  }\r\n\r\n  const visibilityAttribute = element.getAttribute(IS_VISIBLE_ATTRIBUTE);\r\n\r\n  // If the element is explicitly marked with the visibility attribute, return that value as boolean.\r\n  if (visibilityAttribute !== null && visibilityAttribute !== undefined) {\r\n    return visibilityAttribute === 'true';\r\n  }\r\n\r\n  // Fallback to other methods of determining actual visibility.\r\n  return (\r\n    element.offsetHeight !== 0 ||\r\n    element.offsetParent !== null ||\r\n    // tslint:disable-next-line:no-any\r\n    (element as any).isVisible === true\r\n  ); // used as a workaround for testing.\r\n}\r\n\r\n/**\r\n * Determines if an element can receive focus programmatically or via a mouse click.\r\n * If checkTabIndex is true, additionally checks to ensure the element can be focused with the tab key, meaning tabIndex != -1.\r\n *\r\n * @public\r\n */\r\nexport function isElementTabbable(element: HTMLElement, checkTabIndex?: boolean): boolean {\r\n  // If this element is null or is disabled, it is not considered tabbable.\r\n  if (!element || (element as HTMLButtonElement).disabled) {\r\n    return false;\r\n  }\r\n\r\n  let tabIndex = 0;\r\n  let tabIndexAttributeValue = null;\r\n\r\n  if (element && element.getAttribute) {\r\n    tabIndexAttributeValue = element.getAttribute('tabIndex');\r\n\r\n    if (tabIndexAttributeValue) {\r\n      tabIndex = parseInt(tabIndexAttributeValue, 10);\r\n    }\r\n  }\r\n\r\n  let isFocusableAttribute = element.getAttribute ? element.getAttribute(IS_FOCUSABLE_ATTRIBUTE) : null;\r\n  let isTabIndexSet = tabIndexAttributeValue !== null && tabIndex >= 0;\r\n\r\n  const result =\r\n    !!element &&\r\n    isFocusableAttribute !== 'false' &&\r\n    (element.tagName === 'A' ||\r\n      element.tagName === 'BUTTON' ||\r\n      element.tagName === 'INPUT' ||\r\n      element.tagName === 'TEXTAREA' ||\r\n      isFocusableAttribute === 'true' ||\r\n      isTabIndexSet);\r\n\r\n  return checkTabIndex ? tabIndex !== -1 && result : result;\r\n}\r\n\r\n/**\r\n * Determines if a given element is a focus zone.\r\n *\r\n * @public\r\n */\r\nexport function isElementFocusZone(element?: HTMLElement): boolean {\r\n  return !!(element && element.getAttribute && !!element.getAttribute(FOCUSZONE_ID_ATTRIBUTE));\r\n}\r\n\r\n/**\r\n * Determines if a given element is a focus sub zone.\r\n *\r\n * @public\r\n */\r\nexport function isElementFocusSubZone(element?: HTMLElement): boolean {\r\n  return !!(element && element.getAttribute && element.getAttribute(FOCUSZONE_SUB_ATTRIBUTE) === 'true');\r\n}\r\n\r\n/**\r\n * Determines if an element, or any of its children, contain focus.\r\n *\r\n * @public\r\n */\r\nexport function doesElementContainFocus(element: HTMLElement): boolean {\r\n  let document = getDocument(element);\r\n  let currentActiveElement: HTMLElement | undefined = document && (document.activeElement as HTMLElement);\r\n  if (currentActiveElement && elementContains(element, currentActiveElement)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Determines if an, or any of its ancestors, sepcificies that it doesn't want focus to wrap\r\n * @param element - element to start searching from\r\n * @param noWrapDataAttribute - the no wrap data attribute to match (either)\r\n * @returns true if focus should wrap, false otherwise\r\n */\r\nexport function shouldWrapFocus(element: HTMLElement, noWrapDataAttribute: 'data-no-vertical-wrap' | 'data-no-horizontal-wrap'): boolean {\r\n  return elementContainsAttribute(element, noWrapDataAttribute) === 'true' ? false : true;\r\n}\r\n\r\nlet targetToFocusOnNextRepaint: HTMLElement | { focus: () => void } | null | undefined = undefined;\r\n\r\n/**\r\n * Sets focus to an element asynchronously. The focus will be set at the next browser repaint,\r\n * meaning it won't cause any extra recalculations. If more than one focusAsync is called during one frame,\r\n * only the latest called focusAsync element will actually be focused\r\n * @param element - The element to focus\r\n */\r\nexport function focusAsync(element: HTMLElement | { focus: () => void } | undefined | null): void {\r\n  if (element) {\r\n    // An element was already queued to be focused, so replace that one with the new element\r\n    if (targetToFocusOnNextRepaint) {\r\n      targetToFocusOnNextRepaint = element;\r\n      return;\r\n    }\r\n\r\n    targetToFocusOnNextRepaint = element;\r\n\r\n    const win = getWindow(element as Element);\r\n\r\n    if (win) {\r\n      // element.focus() is a no-op if the element is no longer in the DOM, meaning this is always safe\r\n      win.requestAnimationFrame(() => {\r\n        targetToFocusOnNextRepaint && targetToFocusOnNextRepaint.focus();\r\n\r\n        // We are done focusing for this frame, so reset the queued focus element\r\n        targetToFocusOnNextRepaint = undefined;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Finds the closest focusable element via an index path from a parent. See\r\n * `getElementIndexPath` for getting an index path from an element to a child.\r\n */\r\nexport function getFocusableByIndexPath(parent: HTMLElement, path: number[]): HTMLElement | undefined {\r\n  let element = parent;\r\n\r\n  for (const index of path) {\r\n    const nextChild = element.children[Math.min(index, element.children.length - 1)] as HTMLElement;\r\n\r\n    if (!nextChild) {\r\n      break;\r\n    }\r\n    element = nextChild;\r\n  }\r\n\r\n  element =\r\n    isElementTabbable(element) && isElementVisible(element)\r\n      ? element\r\n      : getNextElement(parent, element, true) || getPreviousElement(parent, element)!;\r\n\r\n  return element as HTMLElement;\r\n}\r\n\r\n/**\r\n * Finds the element index path from a parent element to a child element.\r\n *\r\n * If you had this node structure: \"A has children [B, C] and C has child D\",\r\n * the index path from A to D would be [1, 0], or `parent.chidren[1].children[0]`.\r\n */\r\nexport function getElementIndexPath(fromElement: HTMLElement, toElement: HTMLElement): number[] {\r\n  const path: number[] = [];\r\n\r\n  while (toElement && fromElement && toElement !== fromElement) {\r\n    const parent = getParent(toElement, true);\r\n\r\n    if (parent === null) {\r\n      return [];\r\n    }\r\n\r\n    path.unshift(Array.prototype.indexOf.call(parent.children, toElement));\r\n    toElement = parent;\r\n  }\r\n\r\n  return path;\r\n}\r\n"]}