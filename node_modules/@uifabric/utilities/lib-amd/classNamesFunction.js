define(["require", "exports", "@uifabric/merge-styles"], function (require, exports, merge_styles_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * Creates a getClassNames function which calls getStyles given the props, and injects them
     * into mergeStyleSets.
     */
    function classNamesFunction() {
        // TODO: memoize.
        var getClassNames = function (styleFunctionOrObject, styleProps) {
            if (styleProps === void 0) { styleProps = {}; }
            // styleSet might be undefined if styleFunctionOrObject is undefined, but getStyles should never
            // ordinarily be undefined (it would hardly make any sense).
            // However, because we usually use `props.styles` as the argument to an invocation of this method, and
            // `props.styles` itself is defined as optional, this avoids the need to use `!` at all invocation points.
            if (styleFunctionOrObject === undefined) {
                return {};
            }
            var styleSet = styleFunctionOrObject && (typeof styleFunctionOrObject === 'function' ? styleFunctionOrObject(styleProps) : styleFunctionOrObject);
            return merge_styles_1.mergeStyleSets(styleSet);
        };
        return getClassNames;
    }
    exports.classNamesFunction = classNamesFunction;
});
//# sourceMappingURL=classNamesFunction.js.map