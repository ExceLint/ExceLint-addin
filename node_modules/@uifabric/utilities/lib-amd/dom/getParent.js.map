{"version":3,"file":"getParent.js","sourceRoot":"../src/","sources":["dom/getParent.ts"],"names":[],"mappings":";;;IACA;;;;;;OAMG;IACH,mBAA0B,KAAkB,EAAE,mBAAmC;QAAnC,oCAAA,EAAA,0BAAmC;QAC/E,OAAO,KAAK,IAAI,CAAC,CAAC,mBAAmB,IAAI,mCAAgB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,IAAK,KAAK,CAAC,UAA0B,CAAC,CAAC,CAAC;IAChI,CAAC;IAFD,8BAEC","sourcesContent":["import { getVirtualParent } from './getVirtualParent';\r\n/**\r\n * Gets the element which is the parent of a given element.\r\n * If `allowVirtuaParents` is `true`, this method prefers the virtual parent over\r\n * real DOM parent when present.\r\n *\r\n * @public\r\n */\r\nexport function getParent(child: HTMLElement, allowVirtualParents: boolean = true): HTMLElement | null {\r\n  return child && ((allowVirtualParents && getVirtualParent(child)) || (child.parentNode && (child.parentNode as HTMLElement)));\r\n}\r\n"]}