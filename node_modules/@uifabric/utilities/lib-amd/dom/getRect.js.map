{"version":3,"file":"getRect.js","sourceRoot":"../src/","sources":["dom/getRect.ts"],"names":[],"mappings":";;;IACA;;;;OAIG;IACH,iBAAwB,OAAoC;QAC1D,IAAI,IAA4B,CAAC;QACjC,IAAI,OAAO,EAAE;YACX,IAAI,OAAO,KAAK,MAAM,EAAE;gBACtB,IAAI,GAAG;oBACL,IAAI,EAAE,CAAC;oBACP,GAAG,EAAE,CAAC;oBACN,KAAK,EAAE,MAAM,CAAC,UAAU;oBACxB,MAAM,EAAE,MAAM,CAAC,WAAW;oBAC1B,KAAK,EAAE,MAAM,CAAC,UAAU;oBACxB,MAAM,EAAE,MAAM,CAAC,WAAW;iBAC3B,CAAC;aACH;iBAAM,IAAK,OAAuB,CAAC,qBAAqB,EAAE;gBACzD,IAAI,GAAI,OAAuB,CAAC,qBAAqB,EAAE,CAAC;aACzD;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAjBD,0BAiBC","sourcesContent":["import { IRectangle } from '../IRectangle';\r\n/**\r\n * Helper to get bounding client rect. Passing in window will get the window size.\r\n *\r\n * @public\r\n */\r\nexport function getRect(element: HTMLElement | Window | null): IRectangle | undefined {\r\n  let rect: IRectangle | undefined;\r\n  if (element) {\r\n    if (element === window) {\r\n      rect = {\r\n        left: 0,\r\n        top: 0,\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n        right: window.innerWidth,\r\n        bottom: window.innerHeight\r\n      };\r\n    } else if ((element as HTMLElement).getBoundingClientRect) {\r\n      rect = (element as HTMLElement).getBoundingClientRect();\r\n    }\r\n  }\r\n  return rect;\r\n}\r\n"]}