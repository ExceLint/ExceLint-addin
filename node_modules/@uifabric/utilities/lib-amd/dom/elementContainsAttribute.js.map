{"version":3,"file":"elementContainsAttribute.js","sourceRoot":"../src/","sources":["dom/elementContainsAttribute.ts"],"names":[],"mappings":";;;IACA;;;;;OAKG;IACH,kCAAyC,OAAoB,EAAE,SAAiB;QAC9E,IAAI,YAAY,GAAG,2CAAoB,CAAC,OAAO,EAAE,UAAC,WAAwB,IAAK,OAAA,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,EAAnC,CAAmC,CAAC,CAAC;QACpH,OAAO,YAAY,IAAI,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IAC9D,CAAC;IAHD,4DAGC","sourcesContent":["import { findElementRecursive } from './findElementRecursive';\r\n/**\r\n * Determines if an element, or any of its ancestors, contain the given attribute\r\n * @param element - element to start searching at\r\n * @param attribute - the attribute to search for\r\n * @returns the value of the first instance found\r\n */\r\nexport function elementContainsAttribute(element: HTMLElement, attribute: string): string | null {\r\n  let elementMatch = findElementRecursive(element, (testElement: HTMLElement) => testElement.hasAttribute(attribute));\r\n  return elementMatch && elementMatch.getAttribute(attribute);\r\n}\r\n"]}