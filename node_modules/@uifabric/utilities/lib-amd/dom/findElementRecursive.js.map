{"version":3,"file":"findElementRecursive.js","sourceRoot":"../src/","sources":["dom/findElementRecursive.ts"],"names":[],"mappings":";;;IACA;;;;;OAKG;IACH,8BAAqC,OAA2B,EAAE,aAAgD;QAChH,IAAI,CAAC,OAAO,IAAI,OAAO,KAAK,QAAQ,CAAC,IAAI,EAAE;YACzC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,oBAAoB,CAAC,qBAAS,CAAC,OAAO,CAAC,EAAE,aAAa,CAAC,CAAC;IACpG,CAAC;IALD,oDAKC","sourcesContent":["import { getParent } from './getParent';\r\n/**\r\n * Finds the first parent element where the matchFunction returns true\r\n * @param element - element to start searching at\r\n * @param matchFunction - the function that determines if the element is a match\r\n * @returns the matched element or null no match was found\r\n */\r\nexport function findElementRecursive(element: HTMLElement | null, matchFunction: (element: HTMLElement) => boolean): HTMLElement | null {\r\n  if (!element || element === document.body) {\r\n    return null;\r\n  }\r\n  return matchFunction(element) ? element : findElementRecursive(getParent(element), matchFunction);\r\n}\r\n"]}