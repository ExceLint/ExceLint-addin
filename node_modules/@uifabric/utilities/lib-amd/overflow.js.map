{"version":3,"file":"overflow.js","sourceRoot":"../src/","sources":["overflow.ts"],"names":[],"mappings":";;;IAAA;;;;;;OAMG;IACH,+BAAsC,OAAoB;QACxD,OAAO,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;IACnD,CAAC;IAFD,sDAEC;IAED;;;;;;OAMG;IACH,6BAAoC,OAAoB;QACtD,OAAO,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;IACrD,CAAC;IAFD,kDAEC;IAED;;;;;;OAMG;IACH,qBAA4B,OAAoB;QAC9C,OAAO,qBAAqB,CAAC,OAAO,CAAC,IAAI,mBAAmB,CAAC,OAAO,CAAC,CAAC;IACxE,CAAC;IAFD,kCAEC","sourcesContent":["/**\r\n * Detects whether an element's content has horizontal overflow\r\n *\r\n * @public\r\n * @param element - Element to check for overflow\r\n * @returns True if element's content overflows\r\n */\r\nexport function hasHorizontalOverflow(element: HTMLElement): boolean {\r\n  return element.clientWidth < element.scrollWidth;\r\n}\r\n\r\n/**\r\n * Detects whether an element's content has vertical overflow\r\n *\r\n * @public\r\n * @param element - Element to check for overflow\r\n * @returns True if element's content overflows\r\n */\r\nexport function hasVerticalOverflow(element: HTMLElement): boolean {\r\n  return element.clientHeight < element.scrollHeight;\r\n}\r\n\r\n/**\r\n * Detects whether an element's content has overflow in any direction\r\n *\r\n * @public\r\n * @param element - Element to check for overflow\r\n * @returns True if element's content overflows\r\n */\r\nexport function hasOverflow(element: HTMLElement): boolean {\r\n  return hasHorizontalOverflow(element) || hasVerticalOverflow(element);\r\n}\r\n"]}