{"version":3,"file":"warnConditionallyRequiredProps.js","sourceRoot":"../src/","sources":["warn/warnConditionallyRequiredProps.ts"],"names":[],"mappings":";;;IACA;;;;;;;;;OASG;IACH,wCACE,aAAqB,EACrB,KAAQ,EACR,aAAuB,EACvB,mBAA2B,EAC3B,SAAkB;QAElB,IAAI,SAAS,KAAK,IAAI,IAAI,OAAO,OAAO,KAAK,WAAW,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;YACjG,KAA+B,UAAa,EAAb,+BAAa,EAAb,2BAAa,EAAb,IAAa;gBAAvC,IAAM,gBAAgB,sBAAA;gBACzB,IAAI,CAAC,CAAC,gBAAgB,IAAI,KAAK,CAAC,EAAE;oBAChC,WAAI,CAAI,aAAa,mBAAc,gBAAgB,4BAAuB,mBAAmB,gBAAa,CAAC,CAAC;iBAC7G;aACF;SACF;IACH,CAAC;IAdD,wEAcC","sourcesContent":["import { warn } from './warn';\r\n/**\r\n * Warns when props are required if a condition is met.\r\n *\r\n * @public\r\n * @param componentName - The name of the component being used.\r\n * @param props - The props passed into the component.\r\n * @param requiredProps - The name of the props that are required when the condition is met.\r\n * @param conditionalPropName - The name of the prop that the condition is based on.\r\n * @param condition - Whether the condition is met.\r\n */\r\nexport function warnConditionallyRequiredProps<P>(\r\n  componentName: string,\r\n  props: P,\r\n  requiredProps: string[],\r\n  conditionalPropName: string,\r\n  condition: boolean\r\n): void {\r\n  if (condition === true && typeof process !== 'undefined' && process.env.NODE_ENV !== 'production') {\r\n    for (const requiredPropName of requiredProps) {\r\n      if (!(requiredPropName in props)) {\r\n        warn(`${componentName} property '${requiredPropName}' is required when '${conditionalPropName}' is used.'`);\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}