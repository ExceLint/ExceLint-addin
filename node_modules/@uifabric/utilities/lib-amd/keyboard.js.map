{"version":3,"file":"keyboard.js","sourceRoot":"../src/","sources":["keyboard.ts"],"names":[],"mappings":";;;IAEA,IAAM,mBAAmB;QACvB,GAAC,mBAAQ,CAAC,EAAE,IAAG,CAAC;QAChB,GAAC,mBAAQ,CAAC,IAAI,IAAG,CAAC;QAClB,GAAC,mBAAQ,CAAC,IAAI,IAAG,CAAC;QAClB,GAAC,mBAAQ,CAAC,KAAK,IAAG,CAAC;QACnB,GAAC,mBAAQ,CAAC,IAAI,IAAG,CAAC;QAClB,GAAC,mBAAQ,CAAC,GAAG,IAAG,CAAC;QACjB,GAAC,mBAAQ,CAAC,GAAG,IAAG,CAAC;QACjB,GAAC,mBAAQ,CAAC,MAAM,IAAG,CAAC;QACpB,GAAC,mBAAQ,CAAC,QAAQ,IAAG,CAAC;WACvB,CAAC;IAEF;;OAEG;IACH,8BAAqC,KAAa;QAChD,OAAO,CAAC,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAFD,oDAEC;IAED;;;;OAIG;IACH,+BAAsC,KAAa;QACjD,mBAAmB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAFD,sDAEC","sourcesContent":["import { KeyCodes } from './KeyCodes';\r\n\r\nconst DirectionalKeyCodes: { [key: number]: number } = {\r\n  [KeyCodes.up]: 1,\r\n  [KeyCodes.down]: 1,\r\n  [KeyCodes.left]: 1,\r\n  [KeyCodes.right]: 1,\r\n  [KeyCodes.home]: 1,\r\n  [KeyCodes.end]: 1,\r\n  [KeyCodes.tab]: 1,\r\n  [KeyCodes.pageUp]: 1,\r\n  [KeyCodes.pageDown]: 1\r\n};\r\n\r\n/**\r\n * Returns true if the keycode is a directional keyboard key.\r\n */\r\nexport function isDirectionalKeyCode(which: number): boolean {\r\n  return !!DirectionalKeyCodes[which];\r\n}\r\n\r\n/**\r\n * Adds a keycode to the list of keys that, when pressed, should cause the focus outlines to be visible.\r\n * This can be used to add global shortcut keys that directionally move from section to section within\r\n * an app or between focus trap zones.\r\n */\r\nexport function addDirectionalKeyCode(which: number): void {\r\n  DirectionalKeyCodes[which] = 1;\r\n}\r\n"]}