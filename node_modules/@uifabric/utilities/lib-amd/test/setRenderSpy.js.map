{"version":3,"file":"setRenderSpy.js","sourceRoot":"../src/","sources":["test/setRenderSpy.ts"],"names":[],"mappings":";;;IAGA;;;;OAIG;IACH,SAAgB,YAAY,CAAC,OAA6B;QACxD,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC;QAC/C,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,GAAG,GAAG,CAAC;QAChC,OAAO,GAAG,CAAC;IACb,CAAC;IAJD,oCAIC","sourcesContent":["import { ReactWrapper } from 'enzyme';\nimport * as sinon from 'sinon';\n\n/**\n * Replaces the enzyme render function with a spy that can be used to count how many\n * times the render function was called in a test.\n * @param wrapper - The wrapper around the component instance for which you want to spy upon\n */\nexport function setRenderSpy(wrapper: ReactWrapper<{}, {}>): sinon.SinonSpy {\n  let spy = sinon.spy(wrapper.instance().render);\n  wrapper.instance().render = spy;\n  return spy;\n}\n"]}