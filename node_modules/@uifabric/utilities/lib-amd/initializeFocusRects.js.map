{"version":3,"file":"initializeFocusRects.js","sourceRoot":"../src/","sources":["initializeFocusRects.ts"],"names":[],"mappings":";;;IAGa,QAAA,uBAAuB,GAAG,2BAA2B,CAAC;IAEnE;;;;;;;;;;;;;OAaG;IACH,8BAAqC,MAAe;QAClD,IAAM,GAAG,GAAG,CAAC,MAAM,IAAI,qBAAS,EAAE,CAAsD,CAAC;QAEzF,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,2BAA2B,EAAE;YAC3C,GAAG,CAAC,2BAA2B,GAAG,IAAI,CAAC;YACvC,GAAG,CAAC,gBAAgB,CAAC,WAAW,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;YACtD,GAAG,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAwB,EAAE,IAAI,CAAC,CAAC;SACjE;IACH,CAAC;IARD,oDAQC;IAED,sBAAsB,EAAc;QAClC,IAAM,GAAG,GAAG,qBAAS,CAAC,EAAE,CAAC,MAAiB,CAAC,CAAC;QAE5C,IAAI,GAAG,EAAE;YACC,IAAA,uCAAS,CAAuB;YAExC,IAAI,SAAS,CAAC,QAAQ,CAAC,+BAAuB,CAAC,EAAE;gBAC/C,SAAS,CAAC,MAAM,CAAC,+BAAuB,CAAC,CAAC;aAC3C;SACF;IACH,CAAC;IAED,oBAAoB,EAAiB;QACnC,IAAM,GAAG,GAAG,qBAAS,CAAC,EAAE,CAAC,MAAiB,CAAC,CAAC;QAE5C,IAAI,GAAG,EAAE;YACC,IAAA,uCAAS,CAAuB;YAExC,IAAI,+BAAoB,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,+BAAuB,CAAC,EAAE;gBAClF,SAAS,CAAC,GAAG,CAAC,+BAAuB,CAAC,CAAC;aACxC;SACF;IACH,CAAC","sourcesContent":["import { getWindow } from './dom/getWindow';\r\nimport { isDirectionalKeyCode } from './keyboard';\r\n\r\nexport const IsFocusVisibleClassName = 'ms-Fabric--isFocusVisible';\r\n\r\n/**\r\n * Initializes the logic which:\r\n *\r\n * 1. Subscribes keydown and mousedown events. (It will only do it once per window,\r\n *    so it's safe to call this method multiple times.)\r\n * 2. When the user presses directional keyboard keys, adds the 'ms-Fabric--isFocusVisible' classname\r\n *    to the document body.\r\n * 3. When the user clicks a mouse button, we remove the classname if it exists.\r\n *\r\n * This logic allows components on the page to conditionally render focus treatments only\r\n * if the global classname exists, which simplifies logic overall.\r\n *\r\n * @param window - the window used to add the event listeners\r\n */\r\nexport function initializeFocusRects(window?: Window): void {\r\n  const win = (window || getWindow()) as Window & { __hasInitializeFocusRects__: boolean };\r\n\r\n  if (win && !win.__hasInitializeFocusRects__) {\r\n    win.__hasInitializeFocusRects__ = true;\r\n    win.addEventListener('mousedown', _onMouseDown, true);\r\n    win.addEventListener('keydown', _onKeyDown as () => void, true);\r\n  }\r\n}\r\n\r\nfunction _onMouseDown(ev: MouseEvent): void {\r\n  const win = getWindow(ev.target as Element);\r\n\r\n  if (win) {\r\n    const { classList } = win.document.body;\r\n\r\n    if (classList.contains(IsFocusVisibleClassName)) {\r\n      classList.remove(IsFocusVisibleClassName);\r\n    }\r\n  }\r\n}\r\n\r\nfunction _onKeyDown(ev: KeyboardEvent): void {\r\n  const win = getWindow(ev.target as Element);\r\n\r\n  if (win) {\r\n    const { classList } = win.document.body;\r\n\r\n    if (isDirectionalKeyCode(ev.which) && !classList.contains(IsFocusVisibleClassName)) {\r\n      classList.add(IsFocusVisibleClassName);\r\n    }\r\n  }\r\n}\r\n"]}