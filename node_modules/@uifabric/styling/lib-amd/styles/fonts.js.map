{"version":3,"file":"fonts.js","sourceRoot":"../src/","sources":["styles/fonts.ts"],"names":[],"mappings":"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","sourcesContent":["import { IRawStyle, IFontWeight } from '@uifabric/merge-styles';\r\nimport { IFontStyles } from '../interfaces/index';\r\n\r\n// Fallback fonts, if specified system or web fonts are unavailable.\r\nconst FontFamilyFallbacks = `'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif`;\r\n\r\n// Font face names to be registered.\r\nexport namespace LocalizedFontNames {\r\n  export const Arabic = 'Segoe UI Web (Arabic)';\r\n  export const Cyrillic = 'Segoe UI Web (Cyrillic)';\r\n  export const EastEuropean = 'Segoe UI Web (East European)';\r\n  export const Greek = 'Segoe UI Web (Greek)';\r\n  export const Hebrew = 'Segoe UI Web (Hebrew)';\r\n  export const Thai = 'Leelawadee UI Web';\r\n  export const Vietnamese = 'Segoe UI Web (Vietnamese)';\r\n  export const WestEuropean = 'Segoe UI Web (West European)';\r\n  export const Selawik = 'Selawik Web';\r\n}\r\n\r\n// Font families with fallbacks, for the general regions.\r\nexport namespace LocalizedFontFamilies {\r\n  export const Arabic = `'${LocalizedFontNames.Arabic}'`;\r\n  export const ChineseSimplified = `'Microsoft Yahei UI', Verdana, Simsun`;\r\n  export const ChineseTraditional = `'Microsoft Jhenghei UI', Pmingliu`;\r\n  export const Cyrillic = `'${LocalizedFontNames.Cyrillic}'`;\r\n  export const EastEuropean = `'${LocalizedFontNames.EastEuropean}'`;\r\n  export const Greek = `'${LocalizedFontNames.Greek}'`;\r\n  export const Hebrew = `'${LocalizedFontNames.Hebrew}'`;\r\n  export const Hindi = `'Nirmala UI'`;\r\n  export const Japanese = `'Yu Gothic UI', 'Meiryo UI', Meiryo, 'MS Pgothic', Osaka`;\r\n  export const Korean = `'Malgun Gothic', Gulim`;\r\n  export const Selawik = `'${LocalizedFontNames.Selawik}'`;\r\n  export const Thai = `'Leelawadee UI Web', 'Kmer UI'`;\r\n  export const Vietnamese = `'${LocalizedFontNames.Vietnamese}'`;\r\n  export const WestEuropean = `'${LocalizedFontNames.WestEuropean}'`;\r\n}\r\n\r\n// By default, we favor system fonts for the default.\r\n// All localized fonts use a web font and never use the system font.\r\nconst defaultFontFamily = `'Segoe UI', '${LocalizedFontNames.WestEuropean}'`;\r\n\r\n// Mapping of language prefix to to font family.\r\nconst LanguageToFontMap = {\r\n  ar: LocalizedFontFamilies.Arabic,\r\n  bg: LocalizedFontFamilies.Cyrillic,\r\n  cs: LocalizedFontFamilies.EastEuropean,\r\n  el: LocalizedFontFamilies.Greek,\r\n  et: LocalizedFontFamilies.EastEuropean,\r\n  he: LocalizedFontFamilies.Hebrew,\r\n  hi: LocalizedFontFamilies.Hindi,\r\n  hr: LocalizedFontFamilies.EastEuropean,\r\n  hu: LocalizedFontFamilies.EastEuropean,\r\n  ja: LocalizedFontFamilies.Japanese,\r\n  kk: LocalizedFontFamilies.EastEuropean,\r\n  ko: LocalizedFontFamilies.Korean,\r\n  lt: LocalizedFontFamilies.EastEuropean,\r\n  lv: LocalizedFontFamilies.EastEuropean,\r\n  pl: LocalizedFontFamilies.EastEuropean,\r\n  ru: LocalizedFontFamilies.Cyrillic,\r\n  sk: LocalizedFontFamilies.EastEuropean,\r\n  'sr-latn': LocalizedFontFamilies.EastEuropean,\r\n  th: LocalizedFontFamilies.Thai,\r\n  tr: LocalizedFontFamilies.EastEuropean,\r\n  uk: LocalizedFontFamilies.Cyrillic,\r\n  vi: LocalizedFontFamilies.Vietnamese,\r\n  'zh-hans': LocalizedFontFamilies.ChineseSimplified,\r\n  'zh-hant': LocalizedFontFamilies.ChineseTraditional\r\n};\r\n\r\n// Standard font sizes.\r\nexport namespace FontSizes {\r\n  export const mini: string = '10px';\r\n  export const xSmall: string = '11px';\r\n  export const small: string = '12px';\r\n  export const smallPlus: string = '13px';\r\n  export const medium: string = '14px';\r\n  export const mediumPlus: string = '15px';\r\n  export const icon: string = '16px';\r\n  export const large: string = '17px';\r\n  export const xLarge: string = '21px';\r\n  export const xxLarge: string = '28px';\r\n  export const superLarge: string = '42px';\r\n  export const mega: string = '72px';\r\n}\r\n\r\n// Standard font weights.\r\nexport namespace FontWeights {\r\n  export const light: IFontWeight = 100;\r\n  export const semilight: IFontWeight = 300;\r\n  export const regular: IFontWeight = 400;\r\n  export const semibold: IFontWeight = 600;\r\n  export const bold: IFontWeight = 700;\r\n}\r\n\r\n// Standard Icon Sizes.\r\nexport namespace IconFontSizes {\r\n  export const xSmall: string = '10px';\r\n  export const small: string = '12px';\r\n  export const medium: string = '16px';\r\n  export const large: string = '20px';\r\n}\r\n\r\nfunction _fontFamilyWithFallbacks(fontFamily: string): string {\r\n  return `${fontFamily}, ${FontFamilyFallbacks}`;\r\n}\r\n\r\nexport function createFontStyles(localeCode: string | null): IFontStyles {\r\n  const localizedFont = _getLocalizedFontFamily(localeCode);\r\n  let fontFamilyWithFallback = _fontFamilyWithFallbacks(localizedFont);\r\n  let semilightFontFamilyWithFallback = fontFamilyWithFallback;\r\n\r\n  // Chrome has a bug where it does not render Segoe UI Semilight correctly, so we force the webfont to be used in that case\r\n  if (localizedFont === defaultFontFamily) {\r\n    semilightFontFamilyWithFallback = _fontFamilyWithFallbacks(LocalizedFontFamilies.WestEuropean);\r\n  }\r\n\r\n  const fontStyles = {\r\n    tiny: _createFont(FontSizes.mini, FontWeights.semibold, fontFamilyWithFallback),\r\n    xSmall: _createFont(FontSizes.xSmall, FontWeights.regular, fontFamilyWithFallback),\r\n    small: _createFont(FontSizes.small, FontWeights.regular, fontFamilyWithFallback),\r\n    smallPlus: _createFont(FontSizes.smallPlus, FontWeights.regular, fontFamilyWithFallback),\r\n    medium: _createFont(FontSizes.medium, FontWeights.regular, fontFamilyWithFallback),\r\n    mediumPlus: _createFont(FontSizes.mediumPlus, FontWeights.regular, fontFamilyWithFallback),\r\n    large: _createFont(FontSizes.large, FontWeights.semilight, semilightFontFamilyWithFallback),\r\n    xLarge: _createFont(FontSizes.xLarge, FontWeights.light, fontFamilyWithFallback),\r\n    xxLarge: _createFont(FontSizes.xxLarge, FontWeights.light, fontFamilyWithFallback),\r\n    superLarge: _createFont(FontSizes.superLarge, FontWeights.light, fontFamilyWithFallback),\r\n    mega: _createFont(FontSizes.mega, FontWeights.light, fontFamilyWithFallback)\r\n  };\r\n\r\n  return fontStyles;\r\n}\r\n\r\n/**\r\n * If there is a localized font for this language, return that. Returns undefined if there is no localized font for that language.\r\n */\r\nfunction _getLocalizedFontFamily(language: string | null): string {\r\n  for (let lang in LanguageToFontMap) {\r\n    if (LanguageToFontMap.hasOwnProperty(lang) && language && lang.indexOf(language) === 0) {\r\n      // tslint:disable-next-line:no-any\r\n      return (LanguageToFontMap as any)[lang];\r\n    }\r\n  }\r\n\r\n  return defaultFontFamily;\r\n}\r\n\r\nfunction _createFont(size: string, weight: IFontWeight, fontFamily: string): IRawStyle {\r\n  return {\r\n    fontFamily: fontFamily,\r\n    MozOsxFontSmoothing: 'grayscale',\r\n    WebkitFontSmoothing: 'antialiased',\r\n    fontSize: size,\r\n    fontWeight: weight\r\n  };\r\n}\r\n"]}