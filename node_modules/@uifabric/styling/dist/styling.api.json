{
  "kind": "package",
  "name": "@uifabric/styling",
  "summary": [],
  "remarks": [],
  "exports": {
    "buildClassMap": {
      "kind": "function",
      "signature": "export function buildClassMap<T>(styles: T): {\n    [key in keyof T]?: string;\n};",
      "returnValue": {
        "type": "{\n    [key in keyof T]?: string;\n}",
        "description": [
          {
            "kind": "text",
            "text": "Map of property name to class name."
          }
        ]
      },
      "parameters": {
        "styles": {
          "name": "styles",
          "description": [
            {
              "kind": "text",
              "text": "Map of unprocessed styles."
            }
          ],
          "isOptional": false,
          "isSpread": false,
          "type": "T"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Builds a class names object from a given map."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "concatStyleSets": {
      "kind": "function",
      "signature": "export function concatStyleSets(...styleSets: (IStyleSet<any> | false | null | undefined)[]): IConcatenatedStyleSet<any>;",
      "returnValue": {
        "type": "IConcatenatedStyleSet<any>",
        "description": []
      },
      "parameters": {
        "styleSets": {
          "name": "styleSets",
          "description": [
            {
              "kind": "text",
              "text": "One or more stylesets to be merged (each param can also be falsy)."
            }
          ],
          "isOptional": false,
          "isSpread": true,
          "type": "(IStyleSet<any> | false | null | undefined)[]"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Combine a set of styles together (but does not register css classes)."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "createFontStyles": {
      "kind": "function",
      "signature": "export function createFontStyles(localeCode: string | null): IFontStyles;",
      "returnValue": {
        "type": "IFontStyles",
        "description": []
      },
      "parameters": {
        "localeCode": {
          "name": "localeCode",
          "description": [],
          "isOptional": false,
          "isSpread": false,
          "type": "string | null"
        }
      },
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": false
    },
    "createTheme": {
      "kind": "function",
      "signature": "export function createTheme(theme: IPartialTheme, depComments?: boolean): ITheme;",
      "returnValue": {
        "type": "ITheme",
        "description": []
      },
      "parameters": {
        "theme": {
          "name": "theme",
          "description": [
            {
              "kind": "text",
              "text": "Partial theme object."
            }
          ],
          "isOptional": false,
          "isSpread": false,
          "type": "IPartialTheme"
        },
        "depComments": {
          "name": "depComments",
          "description": [
            {
              "kind": "text",
              "text": "Whether to include deprecated tags as comments for deprecated slots."
            }
          ],
          "isOptional": true,
          "isSpread": false,
          "type": "boolean"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Creates a custom theme definition which can be used with the Customizer."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "focusClear": {
      "kind": "function",
      "signature": "export function focusClear(): IRawStyle;",
      "returnValue": {
        "type": "IRawStyle",
        "description": []
      },
      "parameters": {},
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Generates style to clear browser specific focus styles."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "fontFace": {
      "kind": "function",
      "signature": "export function fontFace(font: IFontFace): void;",
      "returnValue": {
        "type": "void",
        "description": []
      },
      "parameters": {
        "font": {
          "name": "font",
          "description": [],
          "isOptional": false,
          "isSpread": false,
          "type": "IFontFace"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Registers a font face."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "FontSizes": {
      "kind": "namespace",
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": false,
      "exports": {
        "icon": {
          "kind": "module variable",
          "signature": "icon: string",
          "type": "string",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "large": {
          "kind": "module variable",
          "signature": "large: string",
          "type": "string",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "medium": {
          "kind": "module variable",
          "signature": "medium: string",
          "type": "string",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "mediumPlus": {
          "kind": "module variable",
          "signature": "mediumPlus: string",
          "type": "string",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "mega": {
          "kind": "module variable",
          "signature": "mega: string",
          "type": "string",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "mini": {
          "kind": "module variable",
          "signature": "mini: string",
          "type": "string",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "small": {
          "kind": "module variable",
          "signature": "small: string",
          "type": "string",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "smallPlus": {
          "kind": "module variable",
          "signature": "smallPlus: string",
          "type": "string",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "superLarge": {
          "kind": "module variable",
          "signature": "superLarge: string",
          "type": "string",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "xLarge": {
          "kind": "module variable",
          "signature": "xLarge: string",
          "type": "string",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "xSmall": {
          "kind": "module variable",
          "signature": "xSmall: string",
          "type": "string",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "xxLarge": {
          "kind": "module variable",
          "signature": "xxLarge: string",
          "type": "string",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "FontWeights": {
      "kind": "namespace",
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": false,
      "exports": {
        "bold": {
          "kind": "module variable",
          "signature": "bold: IFontWeight",
          "type": "IFontWeight",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "light": {
          "kind": "module variable",
          "signature": "light: IFontWeight",
          "type": "IFontWeight",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "regular": {
          "kind": "module variable",
          "signature": "regular: IFontWeight",
          "type": "IFontWeight",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "semibold": {
          "kind": "module variable",
          "signature": "semibold: IFontWeight",
          "type": "IFontWeight",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "semilight": {
          "kind": "module variable",
          "signature": "semilight: IFontWeight",
          "type": "IFontWeight",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "getFadedOverflowStyle": {
      "kind": "function",
      "signature": "export function getFadedOverflowStyle(theme: ITheme, color?: keyof ISemanticColors | keyof IPalette, direction?: 'horizontal' | 'vertical', width?: string | number, height?: string | number): IRawStyle;",
      "returnValue": {
        "type": "IRawStyle",
        "description": [
          {
            "kind": "text",
            "text": "The style object."
          }
        ]
      },
      "parameters": {
        "theme": {
          "name": "theme",
          "description": [
            {
              "kind": "text",
              "text": "The theme object to use."
            }
          ],
          "isOptional": false,
          "isSpread": false,
          "type": "ITheme"
        },
        "color": {
          "name": "color",
          "description": [
            {
              "kind": "text",
              "text": "The background color to fade out to. Accepts only keys of ISemanticColors or IPalette. Defaults to 'bodyBackground'."
            }
          ],
          "isOptional": true,
          "isSpread": false,
          "type": "keyof ISemanticColors | keyof IPalette"
        },
        "direction": {
          "name": "direction",
          "description": [
            {
              "kind": "text",
              "text": "The direction of the overflow. Defaults to horizontal."
            }
          ],
          "isOptional": true,
          "isSpread": false,
          "type": "'horizontal' | 'vertical'"
        },
        "width": {
          "name": "width",
          "description": [
            {
              "kind": "text",
              "text": "The width of the fading overflow. Vertical direction defaults it to 100% vs 20px when horizontal."
            }
          ],
          "isOptional": true,
          "isSpread": false,
          "type": "string | number"
        },
        "height": {
          "name": "height",
          "description": [
            {
              "kind": "text",
              "text": "The Height of the fading overflow. Vertical direction defaults it to 50% vs 100% when horizontal."
            }
          ],
          "isOptional": true,
          "isSpread": false,
          "type": "string | number"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "- Generates a style used to fade out an overflowing content by defining a style for an :after pseudo element. - Apply it to the :after selector for all combination of states the parent of content might have (normal, hover, selected, focus). - Requires the target to have position set to relative and overflow set to hidden."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "getFocusStyle": {
      "kind": "function",
      "signature": "export function getFocusStyle(theme: ITheme, inset?: number, position?: 'relative' | 'absolute', highContrastStyle?: IRawStyle | undefined, borderColor?: string, outlineColor?: string, isFocusedOnly?: boolean): IRawStyle;",
      "returnValue": {
        "type": "IRawStyle",
        "description": [
          {
            "kind": "text",
            "text": "The style object."
          }
        ]
      },
      "parameters": {
        "theme": {
          "name": "theme",
          "description": [
            {
              "kind": "text",
              "text": "The theme object to use."
            }
          ],
          "isOptional": false,
          "isSpread": false,
          "type": "ITheme"
        },
        "inset": {
          "name": "inset",
          "description": [
            {
              "kind": "text",
              "text": "The number of pixels to inset the border."
            }
          ],
          "isOptional": true,
          "isSpread": false,
          "type": "number"
        },
        "position": {
          "name": "position",
          "description": [
            {
              "kind": "text",
              "text": "The positioning applied to the container. Must be 'relative' or 'absolute' so that the focus border can live around it."
            }
          ],
          "isOptional": true,
          "isSpread": false,
          "type": "'relative' | 'absolute'"
        },
        "highContrastStyle": {
          "name": "highContrastStyle",
          "description": [
            {
              "kind": "text",
              "text": "Style for high contrast mode."
            }
          ],
          "isOptional": true,
          "isSpread": false,
          "type": "IRawStyle | undefined"
        },
        "borderColor": {
          "name": "borderColor",
          "description": [
            {
              "kind": "text",
              "text": "Color of the border."
            }
          ],
          "isOptional": true,
          "isSpread": false,
          "type": "string"
        },
        "outlineColor": {
          "name": "outlineColor",
          "description": [
            {
              "kind": "text",
              "text": "Color of the outline."
            }
          ],
          "isOptional": true,
          "isSpread": false,
          "type": "string"
        },
        "isFocusedOnly": {
          "name": "isFocusedOnly",
          "description": [
            {
              "kind": "text",
              "text": "If the styles should apply on focus or not."
            }
          ],
          "isOptional": true,
          "isSpread": false,
          "type": "boolean"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Generates a focus style which can be used to define an :after focus border."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "getGlobalClassNames": {
      "kind": "function",
      "signature": "export function getGlobalClassNames<T>(classNames: GlobalClassNames<T>, theme: ITheme, disableGlobalClassNames?: boolean): Partial<GlobalClassNames<T>>;",
      "returnValue": {
        "type": "Partial<GlobalClassNames<T>>",
        "description": []
      },
      "parameters": {
        "classNames": {
          "name": "classNames",
          "description": [
            {
              "kind": "text",
              "text": "The collection of global class names that apply when the flag is false. Make sure to pass in the same instance on each call to benefit from memoization."
            }
          ],
          "isOptional": false,
          "isSpread": false,
          "type": "GlobalClassNames<T>"
        },
        "theme": {
          "name": "theme",
          "description": [
            {
              "kind": "text",
              "text": "The theme to check the flag on"
            }
          ],
          "isOptional": false,
          "isSpread": false,
          "type": "ITheme"
        },
        "disableGlobalClassNames": {
          "name": "disableGlobalClassNames",
          "description": [
            {
              "kind": "text",
              "text": "Optional. Explicitly opt in/out of disabling global classnames. Defaults to false."
            }
          ],
          "isOptional": true,
          "isSpread": false,
          "type": "boolean"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Checks for the "
        },
        {
          "kind": "code",
          "text": "disableGlobalClassNames",
          "highlighter": "plain"
        },
        {
          "kind": "text",
          "text": " property on the "
        },
        {
          "kind": "code",
          "text": "theme",
          "highlighter": "plain"
        },
        {
          "kind": "text",
          "text": " to determine if it should return "
        },
        {
          "kind": "code",
          "text": "classNames",
          "highlighter": "plain"
        },
        {
          "kind": "text",
          "text": " Note that calls to this function are memoized."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "getIcon": {
      "kind": "function",
      "signature": "export function getIcon(name?: string): IIconRecord | undefined;",
      "returnValue": {
        "type": "IIconRecord | undefined",
        "description": []
      },
      "parameters": {
        "name": {
          "name": "name",
          "description": [
            {
              "kind": "text",
              "text": "Name of icon."
            }
          ],
          "isOptional": true,
          "isSpread": false,
          "type": "string"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Gets an icon definition. If an icon is requested but the subset has yet to be registered, it will get registered immediately."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "getIconClassName": {
      "kind": "function",
      "signature": "export function getIconClassName(name: string): string;",
      "returnValue": {
        "type": "string",
        "description": []
      },
      "parameters": {
        "name": {
          "name": "name",
          "description": [],
          "isOptional": false,
          "isSpread": false,
          "type": "string"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Gets an icon classname. You should be able to add this classname to an I tag with no additional classnames, and render the icon."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "getScreenSelector": {
      "kind": "function",
      "signature": "export function getScreenSelector(min: number, max: number): string;",
      "returnValue": {
        "type": "string",
        "description": []
      },
      "parameters": {
        "min": {
          "name": "min",
          "description": [],
          "isOptional": false,
          "isSpread": false,
          "type": "number"
        },
        "max": {
          "name": "max",
          "description": [],
          "isOptional": false,
          "isSpread": false,
          "type": "number"
        }
      },
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": false
    },
    "getTheme": {
      "kind": "function",
      "signature": "export function getTheme(depComments?: boolean): ITheme;",
      "returnValue": {
        "type": "ITheme",
        "description": []
      },
      "parameters": {
        "depComments": {
          "name": "depComments",
          "description": [
            {
              "kind": "text",
              "text": "Whether to include deprecated tags as comments for deprecated slots."
            }
          ],
          "isOptional": true,
          "isSpread": false,
          "type": "boolean"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Gets the theme object"
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "IAnimationStyles": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "All Fabric standard animations, exposed as json objects referencing predefined keyframes. These objects can be mixed in with other class definitions."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "fadeIn100": {
          "kind": "property",
          "signature": "fadeIn100: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "fadeIn200": {
          "kind": "property",
          "signature": "fadeIn200: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "fadeIn400": {
          "kind": "property",
          "signature": "fadeIn400: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "fadeIn500": {
          "kind": "property",
          "signature": "fadeIn500: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "fadeOut100": {
          "kind": "property",
          "signature": "fadeOut100: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "fadeOut200": {
          "kind": "property",
          "signature": "fadeOut200: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "fadeOut400": {
          "kind": "property",
          "signature": "fadeOut400: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "fadeOut500": {
          "kind": "property",
          "signature": "fadeOut500: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "rotate90deg": {
          "kind": "property",
          "signature": "rotate90deg: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "rotateN90deg": {
          "kind": "property",
          "signature": "rotateN90deg: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "scaleDownIn100": {
          "kind": "property",
          "signature": "scaleDownIn100: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "scaleDownOut98": {
          "kind": "property",
          "signature": "scaleDownOut98: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "scaleUpIn100": {
          "kind": "property",
          "signature": "scaleUpIn100: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "scaleUpOut103": {
          "kind": "property",
          "signature": "scaleUpOut103: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideDownIn10": {
          "kind": "property",
          "signature": "slideDownIn10: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideDownIn20": {
          "kind": "property",
          "signature": "slideDownIn20: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideDownOut10": {
          "kind": "property",
          "signature": "slideDownOut10: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideDownOut20": {
          "kind": "property",
          "signature": "slideDownOut20: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideLeftIn10": {
          "kind": "property",
          "signature": "slideLeftIn10: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideLeftIn20": {
          "kind": "property",
          "signature": "slideLeftIn20: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideLeftIn40": {
          "kind": "property",
          "signature": "slideLeftIn40: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideLeftIn400": {
          "kind": "property",
          "signature": "slideLeftIn400: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideLeftOut10": {
          "kind": "property",
          "signature": "slideLeftOut10: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideLeftOut20": {
          "kind": "property",
          "signature": "slideLeftOut20: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideLeftOut40": {
          "kind": "property",
          "signature": "slideLeftOut40: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideLeftOut400": {
          "kind": "property",
          "signature": "slideLeftOut400: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideRightIn10": {
          "kind": "property",
          "signature": "slideRightIn10: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideRightIn20": {
          "kind": "property",
          "signature": "slideRightIn20: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideRightIn40": {
          "kind": "property",
          "signature": "slideRightIn40: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideRightIn400": {
          "kind": "property",
          "signature": "slideRightIn400: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideRightOut10": {
          "kind": "property",
          "signature": "slideRightOut10: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideRightOut20": {
          "kind": "property",
          "signature": "slideRightOut20: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideRightOut40": {
          "kind": "property",
          "signature": "slideRightOut40: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideRightOut400": {
          "kind": "property",
          "signature": "slideRightOut400: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideUpIn10": {
          "kind": "property",
          "signature": "slideUpIn10: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideUpIn20": {
          "kind": "property",
          "signature": "slideUpIn20: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideUpOut10": {
          "kind": "property",
          "signature": "slideUpOut10: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "slideUpOut20": {
          "kind": "property",
          "signature": "slideUpOut20: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IAnimationVariables": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "durationValue1": {
          "kind": "property",
          "signature": "durationValue1: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "durationValue2": {
          "kind": "property",
          "signature": "durationValue2: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "durationValue3": {
          "kind": "property",
          "signature": "durationValue3: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "durationValue4": {
          "kind": "property",
          "signature": "durationValue4: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "easeFunction1": {
          "kind": "property",
          "signature": "easeFunction1: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "easeFunction2": {
          "kind": "property",
          "signature": "easeFunction2: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IconFontSizes": {
      "kind": "namespace",
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": false,
      "exports": {
        "large": {
          "kind": "module variable",
          "signature": "large: string",
          "type": "string",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "medium": {
          "kind": "module variable",
          "signature": "medium: string",
          "type": "string",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "small": {
          "kind": "module variable",
          "signature": "small: string",
          "type": "string",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "xSmall": {
          "kind": "module variable",
          "signature": "xSmall: string",
          "type": "string",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "IFontFace": {
      "kind": "interface",
      "extends": "IRawFontStyle",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Font face definition."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "fontFeatureSettings": {
          "kind": "property",
          "signature": "fontFeatureSettings?: string;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Feature settings for the font."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "src": {
          "kind": "property",
          "signature": "src?: string;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Specifies the src of the font."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "unicodeRange": {
          "kind": "property",
          "signature": "unicodeRange?: ICSSRule | string;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ICSSRule | string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "unicode-range allows you to set a specific range of characters to be downloaded from a font (embedded using @font-face) and made available for use on the current page."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IFontStyles": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "UI Fabric font set."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "large": {
          "kind": "property",
          "signature": "large: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "medium": {
          "kind": "property",
          "signature": "medium: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "mediumPlus": {
          "kind": "property",
          "signature": "mediumPlus: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "mega": {
          "kind": "property",
          "signature": "mega: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "small": {
          "kind": "property",
          "signature": "small: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "smallPlus": {
          "kind": "property",
          "signature": "smallPlus: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "superLarge": {
          "kind": "property",
          "signature": "superLarge: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "tiny": {
          "kind": "property",
          "signature": "tiny: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "xLarge": {
          "kind": "property",
          "signature": "xLarge: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "xSmall": {
          "kind": "property",
          "signature": "xSmall: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "xxLarge": {
          "kind": "property",
          "signature": "xxLarge: IRawStyle;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IIconOptions": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "disableWarnings": {
          "kind": "property",
          "signature": "disableWarnings: boolean;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "By default, registering the same set of icons will generate a console warning per duplicate icon registered, because this scenario can create unexpected consequences."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Some scenarios include:"
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Icon set was previously registered using a different base url. Icon set was previously registered but a different version was provided. Icons in a previous registered set overlap with a new set."
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "To simply ignore previously registered icons, you can specify to disable warnings. This means that if an icon which was previous registered is registered again, it will be silently ignored. However, consider whether the problems listed above will cause issues."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "warnOnMissingIcons": {
          "kind": "property",
          "signature": "warnOnMissingIcons?: boolean;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [
            {
              "kind": "text",
              "text": "Use 'disableWarnings' instead."
            }
          ],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IIconRecord": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "code": {
          "kind": "property",
          "signature": "code: string | undefined;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string | undefined",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "subset": {
          "kind": "property",
          "signature": "subset: IIconSubsetRecord;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IIconSubsetRecord",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IIconSubset": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "fontFace": {
          "kind": "property",
          "signature": "fontFace?: IFontFace;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IFontFace",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "icons": {
          "kind": "property",
          "signature": "icons:",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "{\n        [key: string]: string | JSX.Element;\n    }",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "style": {
          "kind": "property",
          "signature": "style?: IRawStyle;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IRawStyle",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IPalette": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "UI Fabric color palette."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "accent": {
          "kind": "property",
          "signature": "accent: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for the accent."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "black": {
          "kind": "property",
          "signature": "black: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for the strongest color, which is black in the default theme. This is a very light color in inverted themes."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "blackTranslucent40": {
          "kind": "property",
          "signature": "blackTranslucent40: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for blackTranslucent40."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "blue": {
          "kind": "property",
          "signature": "blue: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for blue."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "blueDark": {
          "kind": "property",
          "signature": "blueDark: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for blueDark."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "blueLight": {
          "kind": "property",
          "signature": "blueLight: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for blueLight."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "blueMid": {
          "kind": "property",
          "signature": "blueMid: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for blueMid."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "green": {
          "kind": "property",
          "signature": "green: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for green."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "greenDark": {
          "kind": "property",
          "signature": "greenDark: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for greenDark."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "greenLight": {
          "kind": "property",
          "signature": "greenLight: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for greenLight."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "magenta": {
          "kind": "property",
          "signature": "magenta: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for magenta."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "magentaDark": {
          "kind": "property",
          "signature": "magentaDark: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for magentaDark."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "magentaLight": {
          "kind": "property",
          "signature": "magentaLight: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for magentaLight."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "neutralDark": {
          "kind": "property",
          "signature": "neutralDark: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for neutralDark."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "neutralLight": {
          "kind": "property",
          "signature": "neutralLight: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for neutralLight."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "neutralLighter": {
          "kind": "property",
          "signature": "neutralLighter: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for neutralLighter."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "neutralLighterAlt": {
          "kind": "property",
          "signature": "neutralLighterAlt: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for neutralLighterAlt."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "neutralPrimary": {
          "kind": "property",
          "signature": "neutralPrimary: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for neutralPrimary."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "neutralPrimaryAlt": {
          "kind": "property",
          "signature": "neutralPrimaryAlt: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for neutralPrimaryAlt."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "neutralQuaternary": {
          "kind": "property",
          "signature": "neutralQuaternary: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for neutralQuaternary."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "neutralQuaternaryAlt": {
          "kind": "property",
          "signature": "neutralQuaternaryAlt: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for neutralQuaternaryAlt."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "neutralSecondary": {
          "kind": "property",
          "signature": "neutralSecondary: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for neutralSecondary."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "neutralSecondaryAlt": {
          "kind": "property",
          "signature": "neutralSecondaryAlt: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for neutralSecondaryAlt."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "neutralTertiary": {
          "kind": "property",
          "signature": "neutralTertiary: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for neutralTertiary."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "neutralTertiaryAlt": {
          "kind": "property",
          "signature": "neutralTertiaryAlt: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for neutralTertiaryAlt."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "orange": {
          "kind": "property",
          "signature": "orange: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for orange."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "orangeLight": {
          "kind": "property",
          "signature": "orangeLight: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for orangeLight."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "orangeLighter": {
          "kind": "property",
          "signature": "orangeLighter: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for orangeLighter."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "purple": {
          "kind": "property",
          "signature": "purple: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for purple."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "purpleDark": {
          "kind": "property",
          "signature": "purpleDark: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for purpleDark."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "purpleLight": {
          "kind": "property",
          "signature": "purpleLight: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for purpleLight."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "red": {
          "kind": "property",
          "signature": "red: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for red."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "redDark": {
          "kind": "property",
          "signature": "redDark: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for redDark."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "teal": {
          "kind": "property",
          "signature": "teal: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for teal."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "tealDark": {
          "kind": "property",
          "signature": "tealDark: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for tealDark."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "tealLight": {
          "kind": "property",
          "signature": "tealLight: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for tealLight."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "themeDark": {
          "kind": "property",
          "signature": "themeDark: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for themeDark."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "themeDarkAlt": {
          "kind": "property",
          "signature": "themeDarkAlt: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for themeDarkAlt."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "themeDarker": {
          "kind": "property",
          "signature": "themeDarker: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for themeDarker."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "themeLight": {
          "kind": "property",
          "signature": "themeLight: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for themeLight."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "themeLighter": {
          "kind": "property",
          "signature": "themeLighter: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for themeLighter."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "themeLighterAlt": {
          "kind": "property",
          "signature": "themeLighterAlt: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for themeLighterAlt."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "themePrimary": {
          "kind": "property",
          "signature": "themePrimary: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for themePrimary."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "themeSecondary": {
          "kind": "property",
          "signature": "themeSecondary: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for themeSecondary."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "themeTertiary": {
          "kind": "property",
          "signature": "themeTertiary: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for themeTertiary."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "white": {
          "kind": "property",
          "signature": "white: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for the softest color, which is white in the default theme. This is a very dark color in dark themes. This is the page background."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "whiteTranslucent40": {
          "kind": "property",
          "signature": "whiteTranslucent40: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for whiteTranslucent40"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "yellow": {
          "kind": "property",
          "signature": "yellow: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for yellow."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "yellowDark": {
          "kind": "property",
          "signature": "yellowDark: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for yellowDark."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "yellowLight": {
          "kind": "property",
          "signature": "yellowLight: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color code for yellowLight."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IRawStyle": {
      "kind": "interface",
      "extends": "IRawStyleBase",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "IStyleObject extends a raw style objects, but allows selectors to be defined under the selectors node."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "displayName": {
          "kind": "property",
          "signature": "displayName?: string;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Display name for the style."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "selectors": {
          "kind": "property",
          "signature": "selectors?:",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "{\n        [key: string]: IStyle;\n    }",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Custom selectors for the style."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IScheme": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "disableGlobalClassNames": {
          "kind": "property",
          "signature": "disableGlobalClassNames: boolean;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "This setting is for a very narrow use case and you probably don't need to worry about, unless you share a environment with others that also use fabric. It is used for disabling global styles on fabric components. This will prevent global overrides that might have been set by other fabric users from applying to your components. When you set this setting to "
            },
            {
              "kind": "code",
              "text": "true",
              "highlighter": "plain"
            },
            {
              "kind": "text",
              "text": " on your theme the components in the subtree of your Customizer will not get the global styles applied to them."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "effects": {
          "kind": "property",
          "signature": "effects: IEffects;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IEffects",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "fonts": {
          "kind": "property",
          "signature": "fonts: IFontStyles;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IFontStyles",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "isInverted": {
          "kind": "property",
          "signature": "isInverted: boolean;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "palette": {
          "kind": "property",
          "signature": "palette: IPalette;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IPalette",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "semanticColors": {
          "kind": "property",
          "signature": "semanticColors: ISemanticColors;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ISemanticColors",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "ISemanticColors": {
      "kind": "interface",
      "extends": "ISemanticTextColors",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "The collection of all semantic slots for colors used in themes."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "Note: text colors are defined in ISemanticTextColors.ts."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "## Naming Convention"
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "The name of a semantic slot can quickly tell you how it’s meant to be used. It generally follows this format:"
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "[category name][element name][checked state][hovered/pressed/disabled state] [category name] – The “family” that this slot belongs to. [element name] – The name of the thing being targeted, such as the background or border. [checked state] – Whether the thing is checked. We assume things are unchecked by default, so no need to specify the unchecked state. (We used “checked” to refer to anything that is on, selected, toggled, highlighted, emphasized, etc.) [hovered/pressed/disabled state] – One of these states, if applicable. Each of these states are mutually exclusive. Pressed styles overwrite hovered styles, and disabled elements cannot be hovered or pressed."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "## Base Slots"
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "A basic set of slots that provide many default body styles, such as text, subtext, disabled colors, and so on. If a category doesn't provide the slot you're looking for, use one from this category. For example, the placeholder text on a text input field has no corresponding slot in its category, so you'd use the bodySubtextColor from this category."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "## Invariants"
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "When color has meaning, we do not want to change the color much theme to theme. For example, we will always want errors to be some shade of red, but we will need to tweak the exact shade so it's legible depending on whether it's an inverted theme or not. Invariant colors should almost never be changed by the theme, the defaults should suffice."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "## Input Controls"
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "This category contains input components commonly used to denote state, including radio buttons, check boxes, toggle switches, sliders, progress bars, and more."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "## Buttons"
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "Buttons! And all the flavors thereof."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "## Menus"
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "Any kind of popup menus uses this category."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "## Lists"
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "Lists differ from menus in that they are designed to show infinite amounts of items, often scroll, and have a large and complex interaction surface. This category covers all kinds of lists, whether they're typical one-item-per-row lists (like DetailsList) or ones with a tiled layout."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "accentButtonBackground": {
          "kind": "property",
          "signature": "accentButtonBackground: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Background of an accent button (kicker)"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "blockingBackground": {
          "kind": "property",
          "signature": "blockingBackground: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Background for blocking issues, which is more severe than a warning, but not as bad as an error."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "bodyBackground": {
          "kind": "property",
          "signature": "bodyBackground: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The default color for backgrounds."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "bodyDivider": {
          "kind": "property",
          "signature": "bodyDivider: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Divider lines; e.g. lines that separate sections in a menu, an "
            },
            {
              "kind": "html-tag",
              "token": "<HR>"
            },
            {
              "kind": "text",
              "text": " element."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "bodyFrameBackground": {
          "kind": "property",
          "signature": "bodyFrameBackground: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The color for chrome adjacent to an area with bodyBackground. This can be used to provide visual separation of zones when using stronger colors, when using a divider line is not desired. In most themes, this should match the color of bodyBackground. See also: bodyFrameDivider"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "bodyFrameDivider": {
          "kind": "property",
          "signature": "bodyFrameDivider: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Used as the border between a zone with bodyFrameBackground and a zone with bodyBackground. If bodyBackground and bodyFrameBackground are different, this should be the same color as bodyFrameBackground in order to visually disappear. See also: bodyFrameBackground"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "bodyStandoutBackground": {
          "kind": "property",
          "signature": "bodyStandoutBackground: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The standout color for highlighted content backgrounds. For highlighted content when there is no emphasis, use the neutral variant instead. This should be a shade darker than bodyBackground in light themes, and a shade lighter in inverted themes."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "buttonBackground": {
          "kind": "property",
          "signature": "buttonBackground: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Background of a standard button"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "buttonBackgroundChecked": {
          "kind": "property",
          "signature": "buttonBackgroundChecked: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Background of a checked standard button; e.g. bold/italicize/underline text button in toolbar"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "buttonBackgroundCheckedHovered": {
          "kind": "property",
          "signature": "buttonBackgroundCheckedHovered: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Background of a checked and hovered standard button; e.g. bold/italicize/underline text button in toolbar"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "buttonBackgroundDisabled": {
          "kind": "property",
          "signature": "buttonBackgroundDisabled: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Background of a disabled standard button"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "buttonBackgroundHovered": {
          "kind": "property",
          "signature": "buttonBackgroundHovered: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Background of a hovered standard button"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "buttonBackgroundPressed": {
          "kind": "property",
          "signature": "buttonBackgroundPressed: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Background of a pressed standard button; i.e. currently being clicked by mouse"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "buttonBorder": {
          "kind": "property",
          "signature": "buttonBorder: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Border of a standard button"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "buttonBorderDisabled": {
          "kind": "property",
          "signature": "buttonBorderDisabled: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Border of a disabled standard button"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "defaultStateBackground": {
          "kind": "property",
          "signature": "defaultStateBackground: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Background color for default/empty state graphical elements; eg default icons, empty section that needs user to fill in content, placeholder graphics, empty seats, etc."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "disabledBackground": {
          "kind": "property",
          "signature": "disabledBackground: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The default color for backgrounds of disabled controls; e.g. disabled text field."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "errorBackground": {
          "kind": "property",
          "signature": "errorBackground: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The background for errors, if necessary, or highlighting the section of the page where the error is present."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "focusBorder": {
          "kind": "property",
          "signature": "focusBorder: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The color of the outline around focused controls that don't already have a border; e.g. menu items"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "inputBackground": {
          "kind": "property",
          "signature": "inputBackground: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The background color of an input, e.g. textbox background."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "inputBackgroundChecked": {
          "kind": "property",
          "signature": "inputBackgroundChecked: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The background of a checked control; e.g. checked radio button's dot, checked toggle's background."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "inputBackgroundCheckedHovered": {
          "kind": "property",
          "signature": "inputBackgroundCheckedHovered: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The background of a checked and hovered control; e.g. checked checkbox's background color on hover."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "inputBorder": {
          "kind": "property",
          "signature": "inputBorder: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The border of a large input control in its resting, state; e.g. the box of dropdown."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "inputBorderHovered": {
          "kind": "property",
          "signature": "inputBorderHovered: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The border color of a large hovered input control, such as textbox."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "inputFocusBorderAlt": {
          "kind": "property",
          "signature": "inputFocusBorderAlt: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The alternate focus border color for elements that already have a border; e.g. text field borders on focus."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "inputForegroundChecked": {
          "kind": "property",
          "signature": "inputForegroundChecked: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The foreground of a checked control; e.g. checked checkbox's checkmark color, checked toggle's thumb color, radio button's background color around the dot."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "listBackground": {
          "kind": "property",
          "signature": "listBackground: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The background color for the entire list."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "listHeaderBackgroundHovered": {
          "kind": "property",
          "signature": "listHeaderBackgroundHovered: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The background color for a hovered list header."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "listHeaderBackgroundPressed": {
          "kind": "property",
          "signature": "listHeaderBackgroundPressed: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The background color for a pressed list header."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "listItemBackgroundChecked": {
          "kind": "property",
          "signature": "listItemBackgroundChecked: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The background color of a checked list item."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "listItemBackgroundCheckedHovered": {
          "kind": "property",
          "signature": "listItemBackgroundCheckedHovered: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The background color of a checked and hovered list item."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "listItemBackgroundHovered": {
          "kind": "property",
          "signature": "listItemBackgroundHovered: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The background color of a hovered list item."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "listText": {
          "kind": "property",
          "signature": "listText: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The default text color for list item titles and text in column fields."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "menuBackground": {
          "kind": "property",
          "signature": "menuBackground: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The background of a menu."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "menuDivider": {
          "kind": "property",
          "signature": "menuDivider: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The divider between menu items."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "menuHeader": {
          "kind": "property",
          "signature": "menuHeader: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The headers in menus that denote title of a section."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "menuIcon": {
          "kind": "property",
          "signature": "menuIcon: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The default colors of icons in menus."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "menuItemBackgroundChecked": {
          "kind": "property",
          "signature": "menuItemBackgroundChecked: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [
            {
              "kind": "text",
              "text": "(Checked menu items no longer get a background color.) The background of checked menu item; e.g. a menu item whose submenu is open, a selected dropdown item."
            }
          ],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "menuItemBackgroundHovered": {
          "kind": "property",
          "signature": "menuItemBackgroundHovered: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The background of a hovered menu item."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "menuItemBackgroundPressed": {
          "kind": "property",
          "signature": "menuItemBackgroundPressed: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The background of a pressed menu item."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "menuItemText": {
          "kind": "property",
          "signature": "menuItemText: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The text color of a menu item."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "menuItemTextHovered": {
          "kind": "property",
          "signature": "menuItemTextHovered: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The text color of a hovered menu item."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "primaryButtonBackground": {
          "kind": "property",
          "signature": "primaryButtonBackground: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Background of a primary button"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "primaryButtonBackgroundDisabled": {
          "kind": "property",
          "signature": "primaryButtonBackgroundDisabled: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Background of a disabled primary button"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "primaryButtonBackgroundHovered": {
          "kind": "property",
          "signature": "primaryButtonBackgroundHovered: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Background of a hovered primary button"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "primaryButtonBackgroundPressed": {
          "kind": "property",
          "signature": "primaryButtonBackgroundPressed: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Background of a pressed primary button; i.e. currently being clicked by mouse"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "primaryButtonBorder": {
          "kind": "property",
          "signature": "primaryButtonBorder: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Border of a primary button"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "smallInputBorder": {
          "kind": "property",
          "signature": "smallInputBorder: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The border of a small input control in its resting unchecked state; e.g. the box of an unchecked checkbox."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "successBackground": {
          "kind": "property",
          "signature": "successBackground: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Background for success"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "variantBorder": {
          "kind": "property",
          "signature": "variantBorder: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The color of the border that provides contrast between an element, such as a card, and an emphasized background."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "variantBorderHovered": {
          "kind": "property",
          "signature": "variantBorderHovered: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Hover color of border that provides contrast between an element, such as a card, and an emphasized background."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "warningBackground": {
          "kind": "property",
          "signature": "warningBackground: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Background for warning messages."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "warningHighlight": {
          "kind": "property",
          "signature": "warningHighlight: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Foreground color for warning highlights"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "ISemanticTextColors": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "accentButtonText": {
          "kind": "property",
          "signature": "accentButtonText: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color of text for accent button (kicker)"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "actionLink": {
          "kind": "property",
          "signature": "actionLink: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Neutral colored links and links for action buttons."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "actionLinkHovered": {
          "kind": "property",
          "signature": "actionLinkHovered: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Hover state for neutral colored links and links for action buttons."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "bodySubtext": {
          "kind": "property",
          "signature": "bodySubtext: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "De-emphasized text; e.g. metadata, captions, placeholder text."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "bodyText": {
          "kind": "property",
          "signature": "bodyText: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The default color for text."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "bodyTextChecked": {
          "kind": "property",
          "signature": "bodyTextChecked: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Checked text color, e.g. selected menu item text."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "buttonText": {
          "kind": "property",
          "signature": "buttonText: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color of text in a standard button"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "buttonTextChecked": {
          "kind": "property",
          "signature": "buttonTextChecked: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color of text in a checked standard button"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "buttonTextCheckedHovered": {
          "kind": "property",
          "signature": "buttonTextCheckedHovered: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color of text in a checked and hovered standard button"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "buttonTextDisabled": {
          "kind": "property",
          "signature": "buttonTextDisabled: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color of text in a disabled standard button"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "buttonTextHovered": {
          "kind": "property",
          "signature": "buttonTextHovered: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color of text in a hovered standard button"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "buttonTextPressed": {
          "kind": "property",
          "signature": "buttonTextPressed: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color of text in a pressed standard button; i.e. currently being clicked by mouse"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "disabledBodySubtext": {
          "kind": "property",
          "signature": "disabledBodySubtext: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Disabled de-emphasized text, for use on the default background (bodyBackground)."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "disabledBodyText": {
          "kind": "property",
          "signature": "disabledBodyText: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The default color for disabled text on the default background (bodyBackground)."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "disabledSubtext": {
          "kind": "property",
          "signature": "disabledSubtext: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Disabled de-emphasized text, for use on disabledBackground."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "disabledText": {
          "kind": "property",
          "signature": "disabledText: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The default color for disabled text on top of disabledBackground; e.g. text in a disabled text field, disabled button text."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "errorText": {
          "kind": "property",
          "signature": "errorText: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The default color of error text, used on bodyBackground."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "inputPlaceholderText": {
          "kind": "property",
          "signature": "inputPlaceholderText: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The color of placeholder text."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "inputText": {
          "kind": "property",
          "signature": "inputText: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The color of input text."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "inputTextHovered": {
          "kind": "property",
          "signature": "inputTextHovered: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The color of input text on hover."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "link": {
          "kind": "property",
          "signature": "link: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The color of a link."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "linkHovered": {
          "kind": "property",
          "signature": "linkHovered: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The color of a hovered link. Also used when the link is active."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "listText": {
          "kind": "property",
          "signature": "listText: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The default text color for list item titles and text in column fields."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "listTextColor": {
          "kind": "property",
          "signature": "listTextColor: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [
            {
              "kind": "text",
              "text": "This slot was incorrectly named. Use listText instead."
            }
          ],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "primaryButtonText": {
          "kind": "property",
          "signature": "primaryButtonText: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color of text in a primary button"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "primaryButtonTextDisabled": {
          "kind": "property",
          "signature": "primaryButtonTextDisabled: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color of text in a disabled primary button"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "primaryButtonTextHovered": {
          "kind": "property",
          "signature": "primaryButtonTextHovered: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color of text in a hovered primary button"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "primaryButtonTextPressed": {
          "kind": "property",
          "signature": "primaryButtonTextPressed: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Color of text in a pressed primary button; i.e. currently being clicked by mouse"
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "warningText": {
          "kind": "property",
          "signature": "warningText: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The color of text on errorBackground, warningBackground, blockingBackground, or successBackground."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "IStyleSheetConfig": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Stylesheet config."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "defaultPrefix": {
          "kind": "property",
          "signature": "defaultPrefix?: string;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Default 'displayName' to use for a className."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "injectionMode": {
          "kind": "property",
          "signature": "injectionMode?: InjectionMode;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "InjectionMode",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Injection mode for how rules are inserted."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "namespace": {
          "kind": "property",
          "signature": "namespace?: string;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Default 'namespace' to attach before the className."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        },
        "onInsertRule": {
          "kind": "property",
          "signature": "onInsertRule?: (rule: string) => void;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "(rule: string) => void",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Callback executed when a rule is inserted."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false,
          "isEventProperty": false
        }
      }
    },
    "ITheme": {
      "kind": "interface",
      "extends": "IScheme",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {}
    },
    "keyframes": {
      "kind": "function",
      "signature": "export function keyframes(timeline: {\n    [key: string]: {};\n}): string;",
      "returnValue": {
        "type": "string",
        "description": []
      },
      "parameters": {
        "timeline": {
          "name": "timeline",
          "description": [],
          "isOptional": false,
          "isSpread": false,
          "type": "{\n    [key: string]: {};\n}"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Registers keyframe definitions."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "loadTheme": {
      "kind": "function",
      "signature": "export function loadTheme(theme: IPartialTheme, depComments?: boolean): ITheme;",
      "returnValue": {
        "type": "ITheme",
        "description": []
      },
      "parameters": {
        "theme": {
          "name": "theme",
          "description": [
            {
              "kind": "text",
              "text": "Partial theme object."
            }
          ],
          "isOptional": false,
          "isSpread": false,
          "type": "IPartialTheme"
        },
        "depComments": {
          "name": "depComments",
          "description": [
            {
              "kind": "text",
              "text": "Whether to include deprecated tags as comments for deprecated slots."
            }
          ],
          "isOptional": true,
          "isSpread": false,
          "type": "boolean"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Applies the theme, while filling in missing slots."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "mergeStyles": {
      "kind": "function",
      "signature": "export function mergeStyles(...args: (IStyle | IStyleBaseArray | false | null | undefined)[]): string;",
      "returnValue": {
        "type": "string",
        "description": []
      },
      "parameters": {
        "args": {
          "name": "args",
          "description": [],
          "isOptional": false,
          "isSpread": true,
          "type": "(IStyle | IStyleBaseArray | false | null | undefined)[]"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Concatination helper, which can merge class names together. Skips over falsey values."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "mergeStyleSets": {
      "kind": "function",
      "signature": "export function mergeStyleSets(...styleSets: Array<IStyleSet<any> | undefined | false | null>): IProcessedStyleSet<any>;",
      "returnValue": {
        "type": "IProcessedStyleSet<any>",
        "description": []
      },
      "parameters": {
        "styleSets": {
          "name": "styleSets",
          "description": [
            {
              "kind": "text",
              "text": "One or more style sets to be merged."
            }
          ],
          "isOptional": false,
          "isSpread": true,
          "type": "Array<IStyleSet<any> | undefined | false | null>"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Takes in one or more style set objects, each consisting of a set of areas, each which will produce a class name. Using this is analogous to calling "
        },
        {
          "kind": "code",
          "text": "mergeStyles",
          "highlighter": "plain"
        },
        {
          "kind": "text",
          "text": " for each property in the object, but ensures we maintain the set ordering when multiple style sets are merged."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "registerDefaultFontFaces": {
      "kind": "function",
      "signature": "export function registerDefaultFontFaces(baseUrl: string): void;",
      "returnValue": {
        "type": "void",
        "description": []
      },
      "parameters": {
        "baseUrl": {
          "name": "baseUrl",
          "description": [],
          "isOptional": false,
          "isSpread": false,
          "type": "string"
        }
      },
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": false
    },
    "registerIconAlias": {
      "kind": "function",
      "signature": "export function registerIconAlias(iconName: string, mappedToName: string): void;",
      "returnValue": {
        "type": "void",
        "description": []
      },
      "parameters": {
        "iconName": {
          "name": "iconName",
          "description": [],
          "isOptional": false,
          "isSpread": false,
          "type": "string"
        },
        "mappedToName": {
          "name": "mappedToName",
          "description": [],
          "isOptional": false,
          "isSpread": false,
          "type": "string"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Remaps one icon name to another."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "registerIcons": {
      "kind": "function",
      "signature": "export function registerIcons(iconSubset: IIconSubset, options?: Partial<IIconOptions>): void;",
      "returnValue": {
        "type": "void",
        "description": []
      },
      "parameters": {
        "iconSubset": {
          "name": "iconSubset",
          "description": [
            {
              "kind": "text",
              "text": "the icon subset definition."
            }
          ],
          "isOptional": false,
          "isSpread": false,
          "type": "IIconSubset"
        },
        "options": {
          "name": "options",
          "description": [],
          "isOptional": true,
          "isSpread": false,
          "type": "Partial<IIconOptions>"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Registers a given subset of icons."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "registerOnThemeChangeCallback": {
      "kind": "function",
      "signature": "export function registerOnThemeChangeCallback(callback: (theme: ITheme) => void): void;",
      "returnValue": {
        "type": "void",
        "description": []
      },
      "parameters": {
        "callback": {
          "name": "callback",
          "description": [],
          "isOptional": false,
          "isSpread": false,
          "type": "(theme: ITheme) => void"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Registers a callback that gets called whenever the theme changes. This should only be used when the component cannot automatically get theme changes through its state. This will not register duplicate callbacks."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "removeOnThemeChangeCallback": {
      "kind": "function",
      "signature": "export function removeOnThemeChangeCallback(callback: (theme: ITheme) => void): void;",
      "returnValue": {
        "type": "void",
        "description": []
      },
      "parameters": {
        "callback": {
          "name": "callback",
          "description": [],
          "isOptional": false,
          "isSpread": false,
          "type": "(theme: ITheme) => void"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "See registerOnThemeChangeCallback(). Removes previously registered callbacks."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "setIconOptions": {
      "kind": "function",
      "signature": "export function setIconOptions(options: Partial<IIconOptions>): void;",
      "returnValue": {
        "type": "void",
        "description": []
      },
      "parameters": {
        "options": {
          "name": "options",
          "description": [],
          "isOptional": false,
          "isSpread": false,
          "type": "Partial<IIconOptions>"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Sets the icon options."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "Stylesheet": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Represents the state of styles registered in the page. Abstracts the surface for adding styles to the stylesheet, exposes helpers for reading the styles registered in server rendered scenarios."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "isSealed": false,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(config?: IStyleSheetConfig);",
          "parameters": {
            "config": {
              "name": "config",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "IStyleSheetConfig"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Constructs a new instance of the "
            },
            {
              "kind": "api-link",
              "elements": [
                {
                  "kind": "text",
                  "text": "Stylesheet"
                }
              ],
              "target": {
                "scopeName": "@uifabric",
                "packageName": "styling",
                "exportName": "Stylesheet",
                "memberName": ""
              }
            },
            {
              "kind": "text",
              "text": " class"
            }
          ],
          "remarks": []
        },
        "argsFromClassName": {
          "kind": "method",
          "signature": "argsFromClassName(className: string): IStyle[] | undefined;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "IStyle[] | undefined",
            "description": []
          },
          "parameters": {
            "className": {
              "name": "className",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Gets the arguments associated with a given classname which was previously registered using cacheClassName."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "cacheClassName": {
          "kind": "method",
          "signature": "cacheClassName(className: string, key: string, args: IStyle[], rules: string[]): void;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {
            "className": {
              "name": "className",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "key": {
              "name": "key",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "args": {
              "name": "args",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "IStyle[]"
            },
            "rules": {
              "name": "rules",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string[]"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Used internally to cache information about a class which was registered with the stylesheet."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "classNameFromKey": {
          "kind": "method",
          "signature": "classNameFromKey(key: string): string | undefined;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "string | undefined",
            "description": []
          },
          "parameters": {
            "key": {
              "name": "key",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Gets the appropriate classname given a key which was previously registered using cacheClassName."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "getClassName": {
          "kind": "method",
          "signature": "getClassName(displayName?: string): string;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "string",
            "description": []
          },
          "parameters": {
            "displayName": {
              "name": "displayName",
              "description": [
                {
                  "kind": "text",
                  "text": "Optional value to use as a prefix."
                }
              ],
              "isOptional": true,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Generates a unique classname."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "getInstance": {
          "kind": "method",
          "signature": "static getInstance(): Stylesheet;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": true,
          "returnValue": {
            "type": "Stylesheet",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Gets the singleton instance."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "getRules": {
          "kind": "method",
          "signature": "getRules(includePreservedRules?: boolean): string;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "string",
            "description": []
          },
          "parameters": {
            "includePreservedRules": {
              "name": "includePreservedRules",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "boolean"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Gets all rules registered with the stylesheet; only valid when using InsertionMode.none."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "insertedRulesFromClassName": {
          "kind": "method",
          "signature": "insertedRulesFromClassName(className: string): string[] | undefined;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "string[] | undefined",
            "description": []
          },
          "parameters": {
            "className": {
              "name": "className",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Gets the arguments associated with a given classname which was previously registered using cacheClassName."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "insertRule": {
          "kind": "method",
          "signature": "insertRule(rule: string, preserve?: boolean): void;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {
            "rule": {
              "name": "rule",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "preserve": {
              "name": "preserve",
              "description": [
                {
                  "kind": "text",
                  "text": "Preserves the rule beyond a reset boundary."
                }
              ],
              "isOptional": true,
              "isSpread": false,
              "type": "boolean"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Inserts a css rule into the stylesheet."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "onReset": {
          "kind": "method",
          "signature": "onReset(callback: () => void): void;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {
            "callback": {
              "name": "callback",
              "description": [
                {
                  "kind": "text",
                  "text": "A callback which will be called when the Stylesheet is reset."
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "() => void"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Configures a reset callback."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "reset": {
          "kind": "method",
          "signature": "reset(): void;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Resets the internal state of the stylesheet. Only used in server rendered scenarios where we're using InsertionMode.none."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "resetKeys": {
          "kind": "method",
          "signature": "resetKeys(): void;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        },
        "setConfig": {
          "kind": "method",
          "signature": "setConfig(config?: IStyleSheetConfig): void;",
          "accessModifier": "",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {
            "config": {
              "name": "config",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "IStyleSheetConfig"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Configures the stylesheet."
            }
          ],
          "remarks": [],
          "isBeta": false,
          "isSealed": false,
          "isVirtual": false,
          "isOverride": false
        }
      }
    },
    "unregisterIcons": {
      "kind": "function",
      "signature": "export function unregisterIcons(iconNames: string[]): void;",
      "returnValue": {
        "type": "void",
        "description": []
      },
      "parameters": {
        "iconNames": {
          "name": "iconNames",
          "description": [
            {
              "kind": "text",
              "text": "List of icons to unregister."
            }
          ],
          "isOptional": false,
          "isSpread": false,
          "type": "string[]"
        }
      },
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Unregisters icons by name."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "ZIndexes": {
      "kind": "namespace",
      "deprecatedMessage": [],
      "summary": [],
      "remarks": [],
      "isBeta": false,
      "exports": {
        "Coachmark": {
          "kind": "module variable",
          "signature": "Coachmark: number",
          "type": "number",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "FocusStyle": {
          "kind": "module variable",
          "signature": "FocusStyle: number",
          "type": "number",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "KeytipLayer": {
          "kind": "module variable",
          "signature": "KeytipLayer: number",
          "type": "number",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "Layer": {
          "kind": "module variable",
          "signature": "Layer: number",
          "type": "number",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "Nav": {
          "kind": "module variable",
          "signature": "Nav: number",
          "type": "number",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "ScrollablePane": {
          "kind": "module variable",
          "signature": "ScrollablePane: number",
          "type": "number",
          "value": "",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        }
      }
    }
  }
}
