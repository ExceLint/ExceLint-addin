{"version":3,"file":"dateFormatting.types.js","sourceRoot":"../src/","sources":["dateFormatting/dateFormatting.types.ts"],"names":[],"mappings":"","sourcesContent":["export interface IDateGridStrings {\n  /**\n   * An array of strings for the full names of months.\n   * The array is 0-based, so months[0] should be the full name of January.\n   */\n  months: string[];\n\n  /**\n   * An array of strings for the short names of months.\n   * The array is 0-based, so shortMonths[0] should be the short name of January.\n   */\n  shortMonths: string[];\n\n  /**\n   * An array of strings for the full names of days of the week.\n   * The array is 0-based, so days[0] should be the full name of Sunday.\n   */\n  days: string[];\n\n  /**\n   * An array of strings for the initials of the days of the week.\n   * The array is 0-based, so days[0] should be the initial of Sunday.\n   */\n  shortDays: string[];\n}\n\nexport interface IDateFormatting extends IDateGridStrings {\n  /**\n   * Format the day according to specified function.\n   * Intended use case is localization.\n   */\n  formatDay: (date: Date) => string;\n\n  /**\n   * Format the year according to specified function.\n   * Intended use case is localization.\n   */\n  formatYear: (date: Date) => string;\n\n  /**\n   * Format the month, day and year according to specified function.\n   * Intended use case is localization.\n   */\n  formatMonthDayYear: (date: Date, strings: IDateGridStrings) => string;\n\n  /**\n   * Format the month and year according to specified function.\n   * Intended use case is localization.\n   */\n  formatMonthYear: (date: Date, strings: IDateGridStrings) => string;\n\n  /**\n   * Parse date from string representation into Date type.\n   */\n  parseDate: (date: string) => Date | null;\n}\n\nexport interface ICalendarStrings extends IDateFormatting {\n  /**\n   * Error message to render for TextField if isRequired validation fails.\n   */\n  isRequiredErrorMessage?: string;\n\n  /**\n   * Error message to render for TextField if input date string parsing fails.\n   */\n  invalidInputErrorMessage?: string;\n\n  /**\n   * Error message to render for TextField if date boundary (minDate, maxDate) validation fails.\n   */\n  isOutOfBoundsErrorMessage?: string;\n\n  /**\n   * String to render for button to direct the user to today's date.\n   */\n  goToToday: string;\n\n  /**\n   * Title for button to open the calendar.\n   */\n  openCalendarTitle: string;\n\n  /**\n   * Placeholder string for an unfilled input.\n   */\n  inputPlaceholder: string;\n\n  /**\n   * Aria-label for the \"previous month\" button in day picker.\n   */\n  prevMonthAriaLabel?: string;\n\n  /**\n   * Aria-label for the \"next month\" button in day picker.\n   */\n  nextMonthAriaLabel?: string;\n\n  /**\n   * Aria-label for the \"previous year\" button in month picker.\n   */\n  prevYearAriaLabel?: string;\n\n  /**\n   * Aria-label for the \"next year\" button in month picker.\n   */\n  nextYearAriaLabel?: string;\n\n  /**\n   * Aria-label for the \"previous year range\" button in year picker.\n   */\n  prevYearRangeAriaLabel?: string;\n\n  /**\n   * Aria-label for the \"next year range\" button in year picker.\n   */\n  nextYearRangeAriaLabel?: string;\n\n  /**\n   * Aria-label format string for the header button in the month picker. Should have 1 string param, e.g. \"`{0}`,\n   * select to change the year\". This aria-label will only be applied if the year picker is enabled; otherwise\n   * the label will default to the header string, e.g. \"2019\".\n   */\n  monthPickerHeaderAriaLabel?: string;\n\n  /**\n   * Aria-label format string for the header button in the year picker.\n   * Should have 1 string param, e.g. \"`{0}`, select to change the month\"\n   */\n  yearPickerHeaderAriaLabel?: string;\n\n  /**\n   * Aria-label for the \"close\" button.\n   */\n  closeButtonAriaLabel?: string;\n\n  /**\n   * Aria-label format string for the week number header. Should have 1 string param, e.g. \"week number `{0}`\"\n   */\n  weekNumberFormatString?: string;\n\n  /**\n   * Aria-label format string for the currently selected date. Should have 1 string param, e.g. \"Selected date `{0}`\"\n   */\n  selectedDateFormatString?: string;\n\n  /**\n   * Aria-label format string for today's date. Should have 1 string param, e.g. \"Today's date `{0}`\"\n   */\n  todayDateFormatString?: string;\n\n  /**\n   * Aria-label for input.\"\n   */\n  inputAriaLabel?: string;\n\n  /**\n   * Aria-label format string for restricted input. Should have 2 string params, 0 is minDate and 1 is maxDate\"\n   */\n  inputBoundedFormatString?: string;\n\n  /**\n   * Aria-label format string for restricted input only with minDate. Should have 1 string param, 0 is minDate\"\n   */\n  inputMinBoundedFormatString?: string;\n\n  /**\n   * Aria-label format string for restricted input only with maxDate. Should have 1 string param, 0 is maxDate\"\n   */\n  inputMaxBoundedFormatString?: string;\n}\n"]}