#!/usr/bin/env node
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const commander = require("commander");
const fs = require("fs");
const util = require("./util");
commander
    .arguments('<manifest>')
    .action((manifest) => __awaiter(this, void 0, void 0, function* () {
    if (fs.existsSync(manifest)) {
        process.exitCode = (yield util.validateManifest(manifest)) === 'Error' ? 1 : 0;
        process.exit();
    }
    else {
        console.log('-------------------------------------');
        console.log('Error: Please provide a valid local manifest file path.');
        console.log('-------------------------------------');
        // update node process exit code when file does not exit
        process.exitCode = 1;
        process.exit();
    }
})).parse(process.argv);
//# sourceMappingURL=index.js.map