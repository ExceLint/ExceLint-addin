{"version":3,"file":"Exceptions.js","sourceRoot":"","sources":["../../AutoCollection/Exceptions.ts"],"names":[],"mappings":"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","sourcesContent":["import http = require(\"http\");\n\nimport Contracts = require(\"../Declarations/Contracts\");\nimport Logging = require(\"../Library/Logging\");\nimport TelemetryClient = require(\"../Library/TelemetryClient\");\nimport Sender = require(\"../Library/Sender\");\nimport Queue = require(\"../Library/Channel\");\nimport Util = require(\"../Library/Util\");\n\nclass AutoCollectExceptions {\n\n    public static INSTANCE: AutoCollectExceptions = null;\n    public static UNCAUGHT_EXCEPTION_MONITOR_HANDLER_NAME = \"uncaughtExceptionMonitor\";\n    public static UNCAUGHT_EXCEPTION_HANDLER_NAME = \"uncaughtException\";\n    public static UNHANDLED_REJECTION_HANDLER_NAME = \"unhandledRejection\";\n\n    private static _RETHROW_EXIT_MESSAGE = \"Application Insights Rethrow Exception Handler\";\n    private static _FALLBACK_ERROR_MESSAGE = \"A promise was rejected without providing an error. Application Insights generated this error stack for you.\";\n    private static _canUseUncaughtExceptionMonitor = false;\n    private _exceptionListenerHandle: (reThrow: boolean, error: Error) => void;\n    private _rejectionListenerHandle: (reThrow: boolean, error: Error) => void;\n    private _client: TelemetryClient;\n    private _isInitialized: boolean;\n\n    constructor(client: TelemetryClient) {\n        if (!!AutoCollectExceptions.INSTANCE) {\n            throw new Error(\"Exception tracking should be configured from the applicationInsights object\");\n        }\n\n        AutoCollectExceptions.INSTANCE = this;\n        this._client = client;\n\n        // Only use for 13.7.0+\n        const nodeVer = process.versions.node.split(\".\");\n        AutoCollectExceptions._canUseUncaughtExceptionMonitor = parseInt(nodeVer[0]) > 13 || (parseInt(nodeVer[0]) === 13 && parseInt(nodeVer[1]) >= 7);\n    }\n\n    public isInitialized() {\n        return this._isInitialized;\n    }\n\n    public enable(isEnabled: boolean) {\n        if (isEnabled) {\n            this._isInitialized = true;\n            var self = this;\n            if (!this._exceptionListenerHandle) {\n                // For scenarios like Promise.reject(), an error won't be passed to the handle. Create a placeholder\n                // error for these scenarios.\n                var handle = (reThrow: boolean, name: string, error: Error = new Error(AutoCollectExceptions._FALLBACK_ERROR_MESSAGE)) => {\n                    this._client.trackException({ exception: error });\n                    this._client.flush({ isAppCrashing: true });\n                    // only rethrow when we are the only listener\n                    if (reThrow && name && process.listeners(name).length === 1) {\n                        console.error(error);\n                        process.exit(1);\n                    }\n                };\n\n                if (AutoCollectExceptions._canUseUncaughtExceptionMonitor) {\n                    // Node.js >= 13.7.0, use uncaughtExceptionMonitor. It handles both promises and exceptions\n                    this._exceptionListenerHandle = handle.bind(this, false, undefined); // never rethrows\n                    process.on(AutoCollectExceptions.UNCAUGHT_EXCEPTION_MONITOR_HANDLER_NAME, this._exceptionListenerHandle);\n                } else {\n                    this._exceptionListenerHandle = handle.bind(this, true, AutoCollectExceptions.UNCAUGHT_EXCEPTION_HANDLER_NAME);\n                    this._rejectionListenerHandle = handle.bind(this, false, undefined); // never rethrows\n                    process.on(AutoCollectExceptions.UNCAUGHT_EXCEPTION_HANDLER_NAME, this._exceptionListenerHandle);\n                    process.on(AutoCollectExceptions.UNHANDLED_REJECTION_HANDLER_NAME, this._rejectionListenerHandle);\n                }\n            }\n\n        } else {\n            if (this._exceptionListenerHandle) {\n                if (AutoCollectExceptions._canUseUncaughtExceptionMonitor) {\n                    process.removeListener(AutoCollectExceptions.UNCAUGHT_EXCEPTION_MONITOR_HANDLER_NAME, this._exceptionListenerHandle);\n                } else {\n                    process.removeListener(AutoCollectExceptions.UNCAUGHT_EXCEPTION_HANDLER_NAME, this._exceptionListenerHandle);\n                    process.removeListener(AutoCollectExceptions.UNHANDLED_REJECTION_HANDLER_NAME, this._rejectionListenerHandle);\n                }\n                this._exceptionListenerHandle = undefined;\n                this._rejectionListenerHandle = undefined;\n                delete this._exceptionListenerHandle;\n                delete this._rejectionListenerHandle;\n            }\n        }\n    }\n\n    public dispose() {\n        AutoCollectExceptions.INSTANCE = null;\n        this.enable(false);\n        this._isInitialized = false;\n    }\n}\n\n\n\nexport = AutoCollectExceptions;\n"]}