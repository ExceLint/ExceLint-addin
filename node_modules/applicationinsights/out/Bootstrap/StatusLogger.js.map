{"version":3,"file":"StatusLogger.js","sourceRoot":"","sources":["../../Bootstrap/StatusLogger.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,uBAAyB;AACzB,2BAA6B;AAC7B,uBAAyB;AAEzB,2CAAmD;AAanD;IACI,IAAI,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC;IACpE,IAAI,CAAC;QACD,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC,CAAC;QACvE,EAAE,CAAC,CAAC,WAAW,IAAI,OAAO,WAAW,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC;QAC/B,CAAC;IACL,CAAC;IAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,MAAM,CAAC,SAAS,CAAC;AACrB,CAAC;AAED;IAaI,sBAAmB,OAAwC;QAAxC,wBAAA,EAAA,iBAAwC;QAAxC,YAAO,GAAP,OAAO,CAAiC;IAAG,CAAC;IAExD,gCAAS,GAAhB,UAAiB,IAAoB,EAAE,EAAyB;QAC5D,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,UAAU,IAAI,IAAI,CAAC,OAAO,YAAY,uBAAU,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAnBsB,8BAAiB,GAAW,IAAI,CAAC,IAAI,CAAC,oBAAO,EAAE,QAAQ,CAAC,CAAC;IACzD,8BAAiB,GAAW,YAAU,EAAE,CAAC,QAAQ,EAAE,SAAI,OAAO,CAAC,GAAG,UAAO,CAAC;IAC1E,2BAAc,GAAmB;QACpD,4BAA4B,EAAE,KAAK;QACnC,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,SAAS;QACf,OAAO,EAAE,SAAS;QAClB,UAAU,EAAE,kBAAkB,EAAE;QAChC,WAAW,EAAE,EAAE,CAAC,QAAQ,EAAE;QAC1B,GAAG,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;KAC3B,CAAA;IAUL,mBAAC;CAAA,AArBD,IAqBC;AArBY,oCAAY","sourcesContent":["\"use strict\";\n\nimport * as os from \"os\";\nimport * as path from \"path\";\nimport * as fs from \"fs\";\nimport * as DataModel from \"./DataModel\";\nimport { FileWriter, homedir } from \"./FileWriter\";\n\nexport interface StatusContract {\n    AgentInitializedSuccessfully: boolean;\n    Reason?: string;\n    SDKPresent: boolean;\n    AppType: string;\n    MachineName: string;\n    PID: string;\n    SdkVersion: string;\n    Ikey: string;\n}\n\nfunction readPackageVersion() {\n    let packageJsonPath = path.resolve(__dirname, \"../../package.json\");\n    try {\n        let packageJson = JSON.parse(fs.readFileSync(packageJsonPath, \"utf8\"));\n        if (packageJson && typeof packageJson.version === \"string\") {\n            return packageJson.version;\n        }\n    } catch (e) { }\n    return \"unknown\";\n}\n\nexport class StatusLogger {\n    public static readonly DEFAULT_FILE_PATH: string = path.join(homedir, \"status\");\n    public static readonly DEFAULT_FILE_NAME: string = `status_${os.hostname()}_${process.pid}.json`;\n    public static readonly DEFAULT_STATUS: StatusContract = {\n        AgentInitializedSuccessfully: false,\n        SDKPresent: false,\n        Ikey: \"unknown\",\n        AppType: \"node.js\",\n        SdkVersion: readPackageVersion(),\n        MachineName: os.hostname(),\n        PID: String(process.pid)\n    }\n\n    constructor(public _writer: DataModel.AgentLogger = console) {}\n\n    public logStatus(data: StatusContract, cb?: (err: Error) => void) {\n        if (typeof cb === \"function\" && this._writer instanceof FileWriter) {\n            this._writer.callback = cb;\n        }\n        this._writer.log(data);\n    }\n}\n"]}