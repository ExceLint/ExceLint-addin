{"version":3,"file":"Constants.js","sourceRoot":"","sources":["../../Declarations/Constants.ts"],"names":[],"mappings":"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","sourcesContent":["import Contracts = require(\"./Contracts\")\n\nexport const DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\nexport const DEFAULT_LIVEMETRICS_ENDPOINT = \"https://rt.services.visualstudio.com\";\nexport const DEFAULT_LIVEMETRICS_HOST = \"rt.services.visualstudio.com\";\n\nexport enum QuickPulseCounter {\n    // Memory\n    COMMITTED_BYTES= \"\\\\Memory\\\\Committed Bytes\",\n\n    // CPU\n    PROCESSOR_TIME= \"\\\\Processor(_Total)\\\\% Processor Time\",\n\n    // Request\n    REQUEST_RATE= \"\\\\ApplicationInsights\\\\Requests\\/Sec\",\n    REQUEST_FAILURE_RATE= \"\\\\ApplicationInsights\\\\Requests Failed\\/Sec\",\n    REQUEST_DURATION= \"\\\\ApplicationInsights\\\\Request Duration\",\n\n    // Dependency\n    DEPENDENCY_RATE= \"\\\\ApplicationInsights\\\\Dependency Calls\\/Sec\",\n    DEPENDENCY_FAILURE_RATE= \"\\\\ApplicationInsights\\\\Dependency Calls Failed\\/Sec\",\n    DEPENDENCY_DURATION= \"\\\\ApplicationInsights\\\\Dependency Call Duration\",\n\n    // Exception\n    EXCEPTION_RATE= \"\\\\ApplicationInsights\\\\Exceptions\\/Sec\"\n}\n\nexport enum PerformanceCounter {\n    // Memory\n    PRIVATE_BYTES= \"\\\\Process(??APP_WIN32_PROC??)\\\\Private Bytes\",\n    AVAILABLE_BYTES= \"\\\\Memory\\\\Available Bytes\",\n\n    // CPU\n    PROCESSOR_TIME= \"\\\\Processor(_Total)\\\\% Processor Time\",\n    PROCESS_TIME= \"\\\\Process(??APP_WIN32_PROC??)\\\\% Processor Time\",\n\n    // Requests\n    REQUEST_RATE= \"\\\\ASP.NET Applications(??APP_W3SVC_PROC??)\\\\Requests/Sec\",\n    REQUEST_DURATION= \"\\\\ASP.NET Applications(??APP_W3SVC_PROC??)\\\\Request Execution Time\"\n};\n\n/**\n * Map a PerformanceCounter/QuickPulseCounter to a QuickPulseCounter. If no mapping exists, mapping is *undefined*\n */\nexport const PerformanceToQuickPulseCounter: {[key: string]: QuickPulseCounter} = {\n    [PerformanceCounter.PROCESSOR_TIME]: QuickPulseCounter.PROCESSOR_TIME,\n    [PerformanceCounter.REQUEST_RATE]: QuickPulseCounter.REQUEST_RATE,\n    [PerformanceCounter.REQUEST_DURATION]: QuickPulseCounter.REQUEST_DURATION,\n\n    // Remap quick pulse only counters\n    [QuickPulseCounter.COMMITTED_BYTES]: QuickPulseCounter.COMMITTED_BYTES,\n    [QuickPulseCounter.REQUEST_FAILURE_RATE]: QuickPulseCounter.REQUEST_FAILURE_RATE,\n    [QuickPulseCounter.DEPENDENCY_RATE]: QuickPulseCounter.DEPENDENCY_RATE,\n    [QuickPulseCounter.DEPENDENCY_FAILURE_RATE]: QuickPulseCounter.DEPENDENCY_FAILURE_RATE,\n    [QuickPulseCounter.DEPENDENCY_DURATION]: QuickPulseCounter.DEPENDENCY_DURATION,\n    [QuickPulseCounter.EXCEPTION_RATE]: QuickPulseCounter.EXCEPTION_RATE\n};\n\n// Note: Explicitly define these types instead of using enum due to\n// potential 'export enum' issues with typescript < 2.0.\nexport type QuickPulseDocumentType = \"Event\" | \"Exception\" | \"Trace\" | \"Metric\" | \"Request\" | \"RemoteDependency\" | \"Availability\" | \"PageView\";\nexport type QuickPulseType =\n    | \"EventTelemetryDocument\"\n    | \"ExceptionTelemetryDocument\"\n    | \"TraceTelemetryDocument\"\n    | \"MetricTelemetryDocument\"\n    | \"RequestTelemetryDocument\"\n    | \"DependencyTelemetryDocument\"\n    | \"AvailabilityTelemetryDocument\"\n    | \"PageViewTelemetryDocument\";\n\nexport const QuickPulseDocumentType: {[key in Contracts.TelemetryTypeKeys]: QuickPulseDocumentType} = {\n    Event: \"Event\",\n    Exception: \"Exception\",\n    Trace: \"Trace\",\n    Metric: \"Metric\",\n    Request: \"Request\",\n    Dependency: \"RemoteDependency\",\n    Availability: \"Availability\",\n    PageView: \"PageView\",\n};\n\nexport const QuickPulseType: {[key in Contracts.TelemetryTypeKeys]: QuickPulseType} = {\n    Event: \"EventTelemetryDocument\",\n    Exception: \"ExceptionTelemetryDocument\",\n    Trace: \"TraceTelemetryDocument\",\n    Metric: \"MetricTelemetryDocument\",\n    Request: \"RequestTelemetryDocument\",\n    Dependency: \"DependencyTelemetryDocument\",\n    Availability: \"AvailabilityTelemetryDocument\",\n    PageView: \"PageViewTelemetryDocument\",\n};\n\nexport const TelemetryTypeStringToQuickPulseType: {[key in Contracts.TelemetryTypeValues]: QuickPulseType} = {\n    EventData: QuickPulseType.Event,\n    ExceptionData: QuickPulseType.Exception,\n    MessageData: QuickPulseType.Trace,\n    MetricData: QuickPulseType.Metric,\n    RequestData: QuickPulseType.Request,\n    RemoteDependencyData: QuickPulseType.Dependency,\n    AvailabilityData: QuickPulseType.Availability,\n    PageViewData: QuickPulseType.PageView\n};\n\nexport const TelemetryTypeStringToQuickPulseDocumentType: {[key in Contracts.TelemetryTypeValues]: QuickPulseDocumentType} = {\n    EventData: QuickPulseDocumentType.Event,\n    ExceptionData: QuickPulseDocumentType.Exception,\n    MessageData: QuickPulseDocumentType.Trace,\n    MetricData: QuickPulseDocumentType.Metric,\n    RequestData: QuickPulseDocumentType.Request,\n    RemoteDependencyData: QuickPulseDocumentType.Dependency,\n    AvailabilityData: QuickPulseDocumentType.Availability,\n    PageViewData: QuickPulseDocumentType.PageView\n};\n\n// OpenTelemetry Span Attributes\nexport const SpanAttribute = {\n    // HTTP\n    HttpHost: \"http.host\",\n    HttpMethod: \"http.method\",\n    HttpPort: \"http.port\",\n    HttpStatusCode: \"http.status_code\",\n    HttpUrl: \"http.url\",\n    HttpUserAgent: \"http.user_agent\",\n\n    // GRPC\n    GrpcMethod: \"grpc.method\",\n    GrpcService: \"rpc.service\", // rpc not grpc\n};\n\nexport const DependencyTypeName = {\n    Grpc: \"GRPC\",\n    Http: \"HTTP\",\n    InProc: \"InProc\",\n}\n\nexport const HeartBeatMetricName = \"HeartBeat\";"]}