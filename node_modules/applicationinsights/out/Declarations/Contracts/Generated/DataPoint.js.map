{"version":3,"file":"DataPoint.js","sourceRoot":"","sources":["../../../../Declarations/Contracts/Generated/DataPoint.ts"],"names":[],"mappings":";AAAA,8BAA8B;AAC9B,+CAAkD;AAClD,YAAY,CAAC;AAET;;GAEG;AACH;IAsCI;QAEI,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,WAAW,CAAC;IAC1C,CAAC;IACL,gBAAC;AAAD,CAAC,AA1CD,IA0CC;AACL,iBAAS,SAAS,CAAC","sourcesContent":["// THIS FILE WAS AUTOGENERATED\nimport DataPointType = require('./DataPointType');\n\"use strict\";\n    \n    /**\n     * Metric data single measurement.\n     */\n    class DataPoint\n    {\n        \n        /**\n         * Name of the metric.\n         */\n        public name: string;\n        \n        /**\n         * Metric type. Single measurement or the aggregated value.\n         */\n        public kind: DataPointType;\n        \n        /**\n         * Single value for measurement. Sum of individual measurements for the aggregation.\n         */\n        public value: number;\n        \n        /**\n         * Metric weight of the aggregated metric. Should not be set for a measurement.\n         */\n        public count: number;\n        \n        /**\n         * Minimum value of the aggregated metric. Should not be set for a measurement.\n         */\n        public min: number;\n        \n        /**\n         * Maximum value of the aggregated metric. Should not be set for a measurement.\n         */\n        public max: number;\n        \n        /**\n         * Standard deviation of the aggregated metric. Should not be set for a measurement.\n         */\n        public stdDev: number;\n        \n        constructor()\n        {\n            this.kind = DataPointType.Measurement;\n        }\n    }\nexport = DataPoint;\n"]}