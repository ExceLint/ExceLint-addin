{"version":3,"file":"FocusTrapZone.types.js","sourceRoot":"../src/","sources":["components/FocusTrapZone/FocusTrapZone.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\r\nimport { IRefObject } from '../../Utilities';\r\n\r\nexport interface IFocusTrapZone {\r\n  /**\r\n   * Sets focus to a descendant in the Trap Zone.\r\n   * See firstFocusableSelector and focusPreviouslyFocusedInnerElement for details.\r\n   */\r\n  focus: () => void;\r\n}\r\n\r\nexport interface IFocusTrapZoneProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  /**\r\n   * Optional callback to access the IFocusTrapZone interface. Use this instead of ref for accessing\r\n   * the public methods and properties of the component.\r\n   */\r\n  componentRef?: IRefObject<IFocusTrapZone>;\r\n\r\n  /**\r\n   * Sets the HTMLElement to focus on when exiting the FocusTrapZone.\r\n   * @defaultvalue The element.target that triggered the FTZ.\r\n   */\r\n  elementToFocusOnDismiss?: HTMLElement;\r\n\r\n  /**\r\n   * Sets the aria-labelledby attribute.\r\n   */\r\n  ariaLabelledBy?: string;\r\n\r\n  /**\r\n   * Indicates if this Trap Zone will allow clicks outside the FocusTrapZone\r\n   * @defaultvalue false\r\n   */\r\n  isClickableOutsideFocusTrap?: boolean;\r\n\r\n  /**\r\n   * Indicates if this Trap Zone will ignore keeping track of HTMLElement that activated the Zone.\r\n   * @defaultvalue false\r\n   */\r\n  ignoreExternalFocusing?: boolean;\r\n\r\n  /**\r\n   * Indicates whether focus trap zone should force focus inside the focus trap zone\r\n   * @defaultvalue true\r\n   */\r\n  forceFocusInsideTrap?: boolean;\r\n\r\n  /**\r\n   * Indicates the selector for first focusable item.  Only applies if focusPreviouslyFocusedInnerElement == false.\r\n   */\r\n  firstFocusableSelector?: string | (() => string);\r\n\r\n  /**\r\n   * Do not put focus onto first element when render focus trap zone\r\n   * @defaultvalue false\r\n   */\r\n  disableFirstFocus?: boolean;\r\n\r\n  /**\r\n   * Specifies the algorithm used to determine which descendant element to focus when focus() is called.\r\n   * If false, the first focusable descendant, filtered by the firstFocusableSelector property if present, is chosen.\r\n   * If true, the element that was focused when the Trap Zone last had a focused descendant is chosen.\r\n   * If it has never had a focused descendant before, behavior falls back to the first focused descendant.\r\n   * @defaultvalue false\r\n   */\r\n  focusPreviouslyFocusedInnerElement?: boolean;\r\n}\r\n"]}