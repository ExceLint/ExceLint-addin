{"version":3,"file":"FocusTrapZone.Nested.Example.js","sourceRoot":"../src/","sources":["components/FocusTrapZone/examples/FocusTrapZone.Nested.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\n\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { FocusTrapZone } from 'office-ui-fabric-react/lib/FocusTrapZone';\r\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\r\n\r\ninterface IFocusTrapComponentProps {\r\n  zoneNumber: number;\r\n  isActive: boolean;\r\n  setIsActive: (zoneNumber: number, isActive: boolean) => void;\r\n}\r\n\r\nclass FocusTrapComponent extends React.Component<IFocusTrapComponentProps> {\r\n  public render() {\r\n    const { isActive, zoneNumber, children } = this.props;\r\n    const contents = (\r\n      <Stack\r\n        horizontal={zoneNumber === 2}\r\n        horizontalAlign=\"start\"\r\n        tokens={{ childrenGap: 10 }}\r\n        styles={{\r\n          root: { border: `2px solid ${isActive ? '#ababab' : 'transparent'}`, padding: 10 }\r\n        }}\r\n      >\r\n        <Toggle\r\n          defaultChecked={isActive}\r\n          onChange={this._onFocusTrapZoneToggleChanged}\r\n          label={'Enable trap zone ' + zoneNumber}\r\n          onText=\"On (toggle to exit)\"\r\n          offText=\"Off\"\r\n          styles={{\r\n            // Set a width on these toggles in the horizontal zone to prevent jumping when enabled\r\n            root: zoneNumber >= 2 && zoneNumber <= 4 && { width: 200 }\r\n          }}\r\n        />\r\n        <DefaultButton onClick={this._onStringButtonClicked} text={`Zone ${zoneNumber} button`} />\r\n        {children}\r\n      </Stack>\r\n    );\r\n\r\n    if (this.props.isActive) {\r\n      return <FocusTrapZone forceFocusInsideTrap={false}>{contents}</FocusTrapZone>;\r\n    }\r\n    return contents;\r\n  }\r\n\r\n  private _onStringButtonClicked = (): void => {\r\n    alert(`Button ${this.props.zoneNumber} clicked`);\r\n  };\r\n\r\n  private _onFocusTrapZoneToggleChanged = (ev: React.MouseEvent<HTMLElement>, isChecked: boolean): void => {\r\n    this.props.setIsActive(this.props.zoneNumber, isChecked);\r\n  };\r\n}\r\n\r\nexport interface IFocusTrapZoneNestedExampleState {\r\n  activeStates: { [key: number]: boolean };\r\n}\r\n\r\nexport class FocusTrapZoneNestedExample extends React.Component<{}, IFocusTrapZoneNestedExampleState> {\r\n  public state: IFocusTrapZoneNestedExampleState = { activeStates: {} };\r\n\r\n  public render() {\r\n    const { activeStates } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <DefaultButton onClick={this._randomize} styles={{ root: { marginBottom: 10 } }}>\r\n          Randomize\r\n        </DefaultButton>\r\n\r\n        <FocusTrapComponent zoneNumber={1} isActive={!!activeStates[1]} setIsActive={this._setIsActive}>\r\n          <FocusTrapComponent zoneNumber={2} isActive={!!activeStates[2]} setIsActive={this._setIsActive}>\r\n            <FocusTrapComponent zoneNumber={3} isActive={!!activeStates[3]} setIsActive={this._setIsActive} />\r\n            <FocusTrapComponent zoneNumber={4} isActive={!!activeStates[4]} setIsActive={this._setIsActive} />\r\n          </FocusTrapComponent>\r\n          <FocusTrapComponent zoneNumber={5} isActive={!!activeStates[5]} setIsActive={this._setIsActive} />\r\n        </FocusTrapComponent>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _setIsActive = (zoneNumber: number, isActive: boolean): void => {\r\n    const { activeStates } = this.state;\r\n    this.setState({ activeStates: { ...activeStates, [zoneNumber]: isActive } });\r\n  };\r\n\r\n  private _randomize = (): void => {\r\n    const activeStates: IFocusTrapZoneNestedExampleState['activeStates'] = {};\r\n    [1, 2, 3, 4, 5].forEach(zoneNumber => {\r\n      activeStates[zoneNumber] = Math.random() >= 0.5;\r\n    });\r\n    this.setState({ activeStates });\r\n  };\r\n}\r\n"]}