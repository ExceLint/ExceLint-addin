{"version":3,"file":"BaseFloatingPicker.js","sourceRoot":"../src/","sources":["components/FloatingPicker/BaseFloatingPicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport * as stylesImport from './BaseFloatingPicker.scss';\r\nimport { BaseComponent, css, KeyCodes } from '../../Utilities';\r\nimport { Callout, DirectionalHint } from '../../Callout';\r\nimport { IBaseFloatingPicker, IBaseFloatingPickerProps } from './BaseFloatingPicker.types';\r\nimport { ISuggestionModel } from '../../Pickers';\r\nimport { ISuggestionsControlProps } from './Suggestions/Suggestions.types';\r\nimport { SuggestionsControl } from './Suggestions/SuggestionsControl';\r\nimport { SuggestionsStore } from './Suggestions/SuggestionsStore';\r\n// tslint:disable-next-line:no-any\r\nconst styles: any = stylesImport;\r\n\r\nexport interface IBaseFloatingPickerState {\r\n  queryString: string;\r\n  suggestionsVisible?: boolean;\r\n  didBind: boolean;\r\n}\r\n\r\nexport class BaseFloatingPicker<T, P extends IBaseFloatingPickerProps<T>> extends BaseComponent<P, IBaseFloatingPickerState>\r\n  implements IBaseFloatingPicker {\r\n  protected selection: Selection;\r\n\r\n  protected root = React.createRef<HTMLDivElement>();\r\n  protected suggestionStore: SuggestionsStore<T>;\r\n  protected suggestionsControl: React.RefObject<SuggestionsControl<T>> = React.createRef();\r\n  protected SuggestionsControlOfProperType: new (props: ISuggestionsControlProps<T>) => SuggestionsControl<T> = SuggestionsControl as new (\r\n    props: ISuggestionsControlProps<T>\r\n  ) => SuggestionsControl<T>;\r\n  protected currentPromise: PromiseLike<T[]>;\r\n  protected isComponentMounted: boolean = false;\r\n\r\n  constructor(basePickerProps: P) {\r\n    super(basePickerProps);\r\n\r\n    this.suggestionStore = basePickerProps.suggestionsStore;\r\n    this.state = {\r\n      queryString: '',\r\n      didBind: false\r\n    };\r\n  }\r\n\r\n  public get inputText(): string {\r\n    return this.state.queryString;\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public get suggestions(): any[] {\r\n    return this.suggestionStore.suggestions;\r\n  }\r\n\r\n  public forceResolveSuggestion(): void {\r\n    if (this.suggestionsControl.current && this.suggestionsControl.current.hasSuggestionSelected()) {\r\n      this.completeSuggestion();\r\n    } else {\r\n      this._onValidateInput();\r\n    }\r\n  }\r\n\r\n  public get currentSelectedSuggestionIndex(): number {\r\n    return this.suggestionsControl.current ? this.suggestionsControl.current.currentSuggestionIndex : -1;\r\n  }\r\n\r\n  public get isSuggestionsShown(): boolean {\r\n    return this.state.suggestionsVisible === undefined ? false : this.state.suggestionsVisible;\r\n  }\r\n\r\n  public onQueryStringChanged = (queryString: string): void => {\r\n    if (queryString !== this.state.queryString) {\r\n      this.setState({\r\n        queryString: queryString\r\n      });\r\n\r\n      if (this.props.onInputChanged) {\r\n        (this.props.onInputChanged as (filter: string) => void)(queryString);\r\n      }\r\n\r\n      this.updateValue(queryString);\r\n    }\r\n  };\r\n\r\n  public hidePicker = (): void => {\r\n    if (this.props.onSuggestionsHidden && this.isSuggestionsShown) {\r\n      this.props.onSuggestionsHidden();\r\n    }\r\n\r\n    this.setState({\r\n      suggestionsVisible: false\r\n    });\r\n  };\r\n\r\n  public showPicker = (updateValue: boolean = false): void => {\r\n    if (this.props.onSuggestionsShown && !this.isSuggestionsShown) {\r\n      this.props.onSuggestionsShown();\r\n    }\r\n\r\n    this.setState({\r\n      suggestionsVisible: true\r\n    });\r\n\r\n    // Update the suggestions if updateValue == true\r\n    const value = this.props.inputElement ? this.props.inputElement.value : '';\r\n    if (updateValue) {\r\n      this.updateValue(value);\r\n    }\r\n  };\r\n\r\n  public componentDidMount(): void {\r\n    this._bindToInputElement();\r\n    this.isComponentMounted = true;\r\n\r\n    this._onResolveSuggestions = this._async.debounce(this._onResolveSuggestions, this.props.resolveDelay);\r\n  }\r\n\r\n  public componentDidUpdate(): void {\r\n    this._bindToInputElement();\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    this._unbindFromInputElement();\r\n    this.isComponentMounted = false;\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IBaseFloatingPickerProps<T>): void {\r\n    if (newProps.suggestionItems) {\r\n      this.updateSuggestions(newProps.suggestionItems);\r\n    }\r\n  }\r\n\r\n  public completeSuggestion = (): void => {\r\n    if (this.suggestionsControl.current && this.suggestionsControl.current.hasSuggestionSelected()) {\r\n      this.onChange(this.suggestionsControl.current.currentSuggestion!.item);\r\n    }\r\n  };\r\n\r\n  public updateSuggestions(suggestions: T[], forceUpdate: boolean = false): void {\r\n    this.suggestionStore.updateSuggestions(suggestions);\r\n\r\n    if (forceUpdate) {\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { className } = this.props;\r\n    return (\r\n      <div ref={this.root} className={css('ms-BasePicker ms-BaseFloatingPicker', className ? className : '')}>\r\n        {this.renderSuggestions()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  protected renderSuggestions(): JSX.Element | null {\r\n    const TypedSuggestionsControl = this.SuggestionsControlOfProperType;\r\n    return this.state.suggestionsVisible ? (\r\n      <Callout\r\n        className={styles.callout}\r\n        isBeakVisible={false}\r\n        gapSpace={5}\r\n        target={this.props.inputElement}\r\n        onDismiss={this.hidePicker}\r\n        directionalHint={DirectionalHint.bottomLeftEdge}\r\n        directionalHintForRTL={DirectionalHint.bottomRightEdge}\r\n        calloutWidth={this.props.calloutWidth ? this.props.calloutWidth : 0}\r\n      >\r\n        <TypedSuggestionsControl\r\n          onRenderSuggestion={this.props.onRenderSuggestionsItem}\r\n          onSuggestionClick={this.onSuggestionClick}\r\n          onSuggestionRemove={this.onSuggestionRemove}\r\n          suggestions={this.suggestionStore.getSuggestions()}\r\n          componentRef={this.suggestionsControl}\r\n          completeSuggestion={this.completeSuggestion}\r\n          shouldLoopSelection={false}\r\n          {...this.props.pickerSuggestionsProps}\r\n        />\r\n      </Callout>\r\n    ) : null;\r\n  }\r\n\r\n  protected onSelectionChange(): void {\r\n    this.forceUpdate();\r\n  }\r\n\r\n  protected updateValue(updatedValue: string): void {\r\n    if (updatedValue === '') {\r\n      this.updateSuggestionWithZeroState();\r\n    } else {\r\n      this._onResolveSuggestions(updatedValue);\r\n    }\r\n  }\r\n\r\n  protected updateSuggestionWithZeroState(): void {\r\n    if (this.props.onZeroQuerySuggestion) {\r\n      const onEmptyInputFocus = this.props.onZeroQuerySuggestion as (selectedItems?: T[]) => T[] | PromiseLike<T[]>;\r\n      const suggestions: T[] | PromiseLike<T[]> = onEmptyInputFocus(this.props.selectedItems);\r\n      this.updateSuggestionsList(suggestions);\r\n    } else {\r\n      this.hidePicker();\r\n    }\r\n  }\r\n\r\n  protected updateSuggestionsList(suggestions: T[] | PromiseLike<T[]>): void {\r\n    const suggestionsArray: T[] = suggestions as T[];\r\n    const suggestionsPromiseLike: PromiseLike<T[]> = suggestions as PromiseLike<T[]>;\r\n\r\n    // Check to see if the returned value is an array, if it is then just pass it into the next function.\r\n    // If the returned value is not an array then check to see if it's a promise or PromiseLike. If it is then resolve it asynchronously.\r\n    if (Array.isArray(suggestionsArray)) {\r\n      this.updateSuggestions(suggestionsArray, true /*forceUpdate*/);\r\n    } else if (suggestionsPromiseLike && suggestionsPromiseLike.then) {\r\n      // Ensure that the promise will only use the callback if it was the most recent one.\r\n      const promise: PromiseLike<T[]> = (this.currentPromise = suggestionsPromiseLike);\r\n      promise.then((newSuggestions: T[]) => {\r\n        // Only update if the next promise has not yet resolved and\r\n        // the floating picker is still mounted.\r\n        if (promise === this.currentPromise && this.isComponentMounted) {\r\n          this.updateSuggestions(newSuggestions, true /*forceUpdate*/);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  protected onChange(item: T): void {\r\n    if (this.props.onChange) {\r\n      (this.props.onChange as ((items: T) => void))(item);\r\n    }\r\n  }\r\n\r\n  protected onSuggestionClick = (ev: React.MouseEvent<HTMLElement>, item: T, index: number): void => {\r\n    this.onChange(item);\r\n    this._updateSuggestionsVisible(false /*shouldShow*/);\r\n  };\r\n\r\n  protected onSuggestionRemove = (ev: React.MouseEvent<HTMLElement>, item: T, index: number): void => {\r\n    if (this.props.onRemoveSuggestion) {\r\n      (this.props.onRemoveSuggestion as ((item: T) => void))(item);\r\n    }\r\n\r\n    if (this.suggestionsControl.current) {\r\n      this.suggestionsControl.current.removeSuggestion(index);\r\n    }\r\n  };\r\n\r\n  protected onKeyDown = (ev: MouseEvent): void => {\r\n    if (\r\n      !this.state.suggestionsVisible ||\r\n      (this.props.inputElement && !(this.props.inputElement as HTMLElement).contains(ev.target as HTMLElement))\r\n    ) {\r\n      return;\r\n    }\r\n    const keyCode = ev.which;\r\n    switch (keyCode) {\r\n      case KeyCodes.escape:\r\n        this.hidePicker();\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        break;\r\n\r\n      case KeyCodes.tab:\r\n      case KeyCodes.enter:\r\n        if (!ev.shiftKey && !ev.ctrlKey && this.suggestionsControl.current && this.suggestionsControl.current.handleKeyDown(keyCode)) {\r\n          ev.preventDefault();\r\n          ev.stopPropagation();\r\n        } else {\r\n          this._onValidateInput();\r\n        }\r\n        break;\r\n\r\n      case KeyCodes.del:\r\n        if (\r\n          this.props.onRemoveSuggestion &&\r\n          this.suggestionsControl.current &&\r\n          this.suggestionsControl.current.hasSuggestionSelected &&\r\n          this.suggestionsControl.current.currentSuggestion &&\r\n          ev.shiftKey\r\n        ) {\r\n          (this.props.onRemoveSuggestion as ((item: T) => void))(this.suggestionsControl.current.currentSuggestion!.item);\r\n\r\n          this.suggestionsControl.current.removeSuggestion();\r\n          this.forceUpdate();\r\n          ev.stopPropagation();\r\n        }\r\n        break;\r\n\r\n      case KeyCodes.up:\r\n        if (this.suggestionsControl.current && this.suggestionsControl.current.handleKeyDown(keyCode)) {\r\n          ev.preventDefault();\r\n          ev.stopPropagation();\r\n          this._updateActiveDescendant();\r\n        }\r\n        break;\r\n\r\n      case KeyCodes.down:\r\n        if (this.suggestionsControl.current && this.suggestionsControl.current.handleKeyDown(keyCode)) {\r\n          ev.preventDefault();\r\n          ev.stopPropagation();\r\n          this._updateActiveDescendant();\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  private _updateActiveDescendant(): void {\r\n    if (this.props.inputElement && this.suggestionsControl.current && this.suggestionsControl.current.selectedElement) {\r\n      const selectedElId = this.suggestionsControl.current.selectedElement.getAttribute('id');\r\n      if (selectedElId) {\r\n        this.props.inputElement.setAttribute('aria-activedescendant', selectedElId as string);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _onResolveSuggestions(updatedValue: string): void {\r\n    const suggestions: T[] | PromiseLike<T[]> | null = this.props.onResolveSuggestions(updatedValue, this.props.selectedItems);\r\n\r\n    this._updateSuggestionsVisible(true /*shouldShow*/);\r\n    if (suggestions !== null) {\r\n      this.updateSuggestionsList(suggestions);\r\n    }\r\n  }\r\n\r\n  private _onValidateInput = (): void => {\r\n    if (this.state.queryString && this.props.onValidateInput && this.props.createGenericItem) {\r\n      const itemToConvert: ISuggestionModel<T> = (this.props.createGenericItem as ((\r\n        input: string,\r\n        isValid: boolean\r\n      ) => ISuggestionModel<T>))(\r\n        this.state.queryString,\r\n        (this.props.onValidateInput as ((input: string) => boolean))(this.state.queryString)\r\n      );\r\n      const convertedItems = this.suggestionStore.convertSuggestionsToSuggestionItems([itemToConvert]);\r\n      this.onChange(convertedItems[0].item);\r\n    }\r\n  };\r\n\r\n  private _updateSuggestionsVisible(shouldShow: boolean): void {\r\n    if (shouldShow) {\r\n      this.showPicker();\r\n    } else {\r\n      this.hidePicker();\r\n    }\r\n  }\r\n\r\n  private _bindToInputElement(): void {\r\n    if (this.props.inputElement && !this.state.didBind) {\r\n      this.props.inputElement.addEventListener('keydown', this.onKeyDown);\r\n      this.setState({ didBind: true });\r\n    }\r\n  }\r\n\r\n  private _unbindFromInputElement(): void {\r\n    if (this.props.inputElement && this.state.didBind) {\r\n      this.props.inputElement.removeEventListener('keydown', this.onKeyDown);\r\n      this.setState({ didBind: false });\r\n    }\r\n  }\r\n}\r\n"]}