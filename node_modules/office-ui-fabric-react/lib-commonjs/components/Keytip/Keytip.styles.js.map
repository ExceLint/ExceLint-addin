{"version":3,"file":"Keytip.styles.js","sourceRoot":"../src/","sources":["components/Keytip/Keytip.styles.ts"],"names":[],"mappings":";;AAGA,yCAAqE;AAExD,QAAA,SAAS,GAAG,UAAC,KAAwB;IACxC,IAAA,mBAAK,EAAE,yBAAQ,EAAE,uBAAO,CAAW;IAC3C,OAAO;QACL,SAAS,EAAE;YACT;gBACE,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW;aAC3C;YACD,QAAQ,IAAI;gBACV,OAAO,EAAE,GAAG;gBACZ,SAAS;oBACP,GAAC,8BAAoB,IAAG;wBACtB,KAAK,EAAE,UAAU;wBACjB,OAAO,EAAE,CAAC;qBACX;uBACF;aACF;YACD,CAAC,OAAO,IAAI;gBACV,UAAU,EAAE,QAAQ;aACrB;SACF;QACD,IAAI,EAAE;YACJ,KAAK,CAAC,KAAK,CAAC,MAAM;YAClB;gBACE,SAAS,EAAE,QAAQ;gBACnB,WAAW,EAAE,KAAK;gBAClB,YAAY,EAAE,KAAK;gBACnB,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW;gBAC1C,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,YAAY;gBACjC,QAAQ,EAAE,MAAM;gBAChB,UAAU,EAAE,MAAM;gBAClB,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE,cAAc;aACxB;YACD,QAAQ,IAAI;gBACV,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,kBAAkB;aACxC;SACF;KACF,CAAC;;AACJ,CAAC,CAAC;AAEW,QAAA,gBAAgB,GAAG,UAAC,KAAgC;IAC/D,OAAO;QACL,SAAS,EAAE,EAAE;QACb,IAAI,EAAE;YACJ;gBACE,MAAM,EAAE,MAAM;gBACd,SAAS,EAAE,MAAM;aAClB;SACF;QACD,IAAI,EAAE,EAAE;QACR,WAAW,EAAE,EAAE;QACf,WAAW,EAAE;YACX;gBACE,eAAe,EAAE,aAAa;aAC/B;SACF;KACF,CAAC;AACJ,CAAC,CAAC;AAEW,QAAA,sBAAsB,GAAG,UAAC,MAAc;IACnD,OAAO,UAAC,KAAgC;QACtC,OAAO,wBAAc,CAAC,wBAAgB,CAAC,KAAK,CAAC,EAAE;YAC7C,IAAI,EAAE;gBACJ;oBACE,UAAU,EAAE,MAAM,CAAC,CAAC;oBACpB,SAAS,EAAE,MAAM,CAAC,CAAC;iBACpB;aACF;SACF,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { IKeytipStyleProps, IKeytipStyles } from './Keytip.types';\r\nimport { ICalloutContentStyleProps, ICalloutContentStyles } from '../../Callout';\r\nimport { IStyleFunction, IPoint } from '../../Utilities';\r\nimport { mergeStyleSets, HighContrastSelector } from '../../Styling';\r\n\r\nexport const getStyles = (props: IKeytipStyleProps): IKeytipStyles => {\r\n  const { theme, disabled, visible } = props;\r\n  return {\r\n    container: [\r\n      {\r\n        backgroundColor: theme.palette.neutralDark\r\n      },\r\n      disabled && {\r\n        opacity: 0.5,\r\n        selectors: {\r\n          [HighContrastSelector]: {\r\n            color: 'GrayText',\r\n            opacity: 1\r\n          }\r\n        }\r\n      },\r\n      !visible && {\r\n        visibility: 'hidden'\r\n      }\r\n    ],\r\n    root: [\r\n      theme.fonts.medium,\r\n      {\r\n        textAlign: 'center',\r\n        paddingLeft: '3px',\r\n        paddingRight: '3px',\r\n        backgroundColor: theme.palette.neutralDark,\r\n        color: theme.palette.neutralLight,\r\n        minWidth: '11px',\r\n        lineHeight: '17px',\r\n        height: '17px',\r\n        display: 'inline-block'\r\n      },\r\n      disabled && {\r\n        color: theme.palette.neutralTertiaryAlt\r\n      }\r\n    ]\r\n  };\r\n};\r\n\r\nexport const getCalloutStyles = (props: ICalloutContentStyleProps): ICalloutContentStyles => {\r\n  return {\r\n    container: [],\r\n    root: [\r\n      {\r\n        border: 'none',\r\n        boxShadow: 'none'\r\n      }\r\n    ],\r\n    beak: [],\r\n    beakCurtain: [],\r\n    calloutMain: [\r\n      {\r\n        backgroundColor: 'transparent'\r\n      }\r\n    ]\r\n  };\r\n};\r\n\r\nexport const getCalloutOffsetStyles = (offset: IPoint): IStyleFunction<ICalloutContentStyleProps, ICalloutContentStyles> => {\r\n  return (props: ICalloutContentStyleProps): ICalloutContentStyles => {\r\n    return mergeStyleSets(getCalloutStyles(props), {\r\n      root: [\r\n        {\r\n          marginLeft: offset.x,\r\n          marginTop: offset.y\r\n        }\r\n      ]\r\n    });\r\n  };\r\n};\r\n"]}