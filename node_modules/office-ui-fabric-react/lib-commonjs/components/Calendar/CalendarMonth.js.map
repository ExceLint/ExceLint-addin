{"version":3,"file":"CalendarMonth.js","sourceRoot":"../src/","sources":["components/Calendar/CalendarMonth.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { KeyCodes, css, getRTL, IRefObject, initializeComponentRef, format } from '../../Utilities';\nimport { ICalendarStrings, ICalendarIconStrings, ICalendarFormatDateCallbacks } from './Calendar.types';\nimport { FocusZone } from '../../FocusZone';\nimport {\n  addYears,\n  setMonth,\n  getYearStart,\n  getYearEnd,\n  getMonthStart,\n  getMonthEnd,\n  compareDatePart,\n} from '../../utilities/dateMath/DateMath';\nimport { Icon } from '../../Icon';\nimport * as stylesImport from './Calendar.scss';\nimport { CalendarYear, ICalendarYearRange } from './CalendarYear';\nconst styles: any = stylesImport;\nconst MONTHS_PER_ROW: number = 4;\n\nexport interface ICalendarMonth {\n  focus(): void;\n}\n\nexport interface ICalendarMonthProps extends React.ClassAttributes<CalendarMonth> {\n  componentRef?: IRefObject<ICalendarMonth>;\n  navigatedDate: Date;\n  selectedDate: Date;\n  strings: ICalendarStrings;\n  onNavigateDate: (date: Date, focusOnNavigatedDay: boolean) => void;\n  today?: Date;\n  highlightCurrentMonth: boolean;\n  highlightSelectedMonth: boolean;\n  onHeaderSelect?: (focus: boolean) => void;\n  navigationIcons: ICalendarIconStrings;\n  dateTimeFormatter: ICalendarFormatDateCallbacks;\n  minDate?: Date;\n  maxDate?: Date;\n  yearPickerHidden?: boolean;\n}\n\nexport interface ICalendarMonthState {\n  /** State used to show/hide month picker */\n  isYearPickerVisible?: boolean;\n}\n\nexport class CalendarMonth extends React.Component<ICalendarMonthProps, ICalendarMonthState> {\n  /**\n   * @deprecated unused, prefer 'ref' and 'componentRef' of ICalendarMonthProps.\n   */\n  public refs: {\n    [key: string]: React.ReactInstance;\n    navigatedMonth: HTMLElement;\n  };\n\n  private _selectMonthCallbacks: (() => void)[];\n  private _calendarYearRef: CalendarYear;\n  private _navigatedMonthRef: React.RefObject<HTMLButtonElement> = React.createRef<HTMLButtonElement>();\n  private _focusOnUpdate: boolean;\n\n  public constructor(props: ICalendarMonthProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    this._selectMonthCallbacks = [];\n    props.strings.shortMonths.forEach((month, index) => {\n      this._selectMonthCallbacks[index] = this._onSelectMonth.bind(this, index);\n    });\n\n    this._isCurrentMonth = this._isCurrentMonth.bind(this);\n    this._onSelectNextYear = this._onSelectNextYear.bind(this);\n    this._onSelectPrevYear = this._onSelectPrevYear.bind(this);\n    this._onSelectMonth = this._onSelectMonth.bind(this);\n\n    this.state = { isYearPickerVisible: false };\n  }\n\n  public componentDidUpdate(): void {\n    if (this._focusOnUpdate) {\n      this.focus();\n      this._focusOnUpdate = false;\n    }\n  }\n\n  public render(): JSX.Element {\n    const {\n      navigatedDate,\n      selectedDate,\n      strings,\n      today,\n      highlightCurrentMonth,\n      highlightSelectedMonth,\n      navigationIcons,\n      dateTimeFormatter,\n      minDate,\n      maxDate,\n      yearPickerHidden,\n    } = this.props;\n\n    if (this.state.isYearPickerVisible) {\n      // default the year picker to the current navigated date\n      const currentSelectedDate = navigatedDate ? navigatedDate.getFullYear() : undefined;\n      return (\n        <CalendarYear\n          key={'calendarYear_' + (currentSelectedDate && currentSelectedDate.toString())}\n          minYear={minDate ? minDate.getFullYear() : undefined}\n          maxYear={maxDate ? maxDate.getFullYear() : undefined}\n          onSelectYear={this._onSelectYear}\n          navigationIcons={navigationIcons}\n          onHeaderSelect={this._onYearPickerHeaderSelect}\n          selectedYear={currentSelectedDate}\n          onRenderYear={this._onRenderYear}\n          strings={{\n            rangeAriaLabel: this._yearRangeToString,\n            prevRangeAriaLabel: this._yearRangeToPrevDecadeLabel,\n            nextRangeAriaLabel: this._yearRangeToNextDecadeLabel,\n            headerAriaLabelFormatString: strings.yearPickerHeaderAriaLabel,\n          }}\n          ref={this._onCalendarYearRef}\n        />\n      );\n    }\n\n    const rowIndexes = [];\n    for (let i = 0; i < strings.shortMonths.length / MONTHS_PER_ROW; i++) {\n      rowIndexes.push(i);\n    }\n\n    const leftNavigationIcon = navigationIcons.leftNavigation;\n    const rightNavigationIcon = navigationIcons.rightNavigation;\n\n    // determine if previous/next years are in bounds\n    const isPrevYearInBounds = minDate ? compareDatePart(minDate, getYearStart(navigatedDate)) < 0 : true;\n    const isNextYearInBounds = maxDate ? compareDatePart(getYearEnd(navigatedDate), maxDate) < 0 : true;\n\n    const yearString = dateTimeFormatter.formatYear(navigatedDate);\n    const headerAriaLabel = strings.monthPickerHeaderAriaLabel\n      ? format(strings.monthPickerHeaderAriaLabel, yearString)\n      : yearString;\n\n    return (\n      <div className={css('ms-DatePicker-monthPicker', styles.monthPicker)}>\n        <div className={css('ms-DatePicker-header', styles.header)}>\n          {this.props.onHeaderSelect || !yearPickerHidden ? (\n            <div\n              className={css(\n                'ms-DatePicker-currentYear js-showYearPicker',\n                styles.currentYear,\n                styles.headerToggleView,\n              )}\n              onClick={this._onHeaderSelect}\n              onKeyDown={this._onHeaderKeyDown}\n              aria-label={headerAriaLabel}\n              role=\"button\"\n              aria-atomic={true}\n              aria-live=\"polite\"\n              tabIndex={0}\n            >\n              {dateTimeFormatter.formatYear(navigatedDate)}\n            </div>\n          ) : (\n            <div className={css('ms-DatePicker-currentYear js-showYearPicker', styles.currentYear)}>\n              {dateTimeFormatter.formatYear(navigatedDate)}\n            </div>\n          )}\n          <div className={css('ms-DatePicker-yearComponents', styles.yearComponents)}>\n            <div className={css('ms-DatePicker-navContainer', styles.navContainer)}>\n              <button\n                className={css('ms-DatePicker-prevYear js-prevYear', styles.prevYear, {\n                  ['ms-DatePicker-prevYear--disabled ' + styles.prevYearIsDisabled]: !isPrevYearInBounds,\n                })}\n                disabled={!isPrevYearInBounds}\n                onClick={isPrevYearInBounds ? this._onSelectPrevYear : undefined}\n                onKeyDown={isPrevYearInBounds ? this._onSelectPrevYearKeyDown : undefined}\n                title={\n                  strings.prevYearAriaLabel\n                    ? strings.prevYearAriaLabel + ' ' + dateTimeFormatter.formatYear(addYears(navigatedDate, -1))\n                    : undefined\n                }\n                role=\"button\"\n                type=\"button\"\n              >\n                <Icon iconName={getRTL() ? rightNavigationIcon : leftNavigationIcon} />\n              </button>\n              <button\n                className={css('ms-DatePicker-nextYear js-nextYear', styles.nextYear, {\n                  ['ms-DatePicker-nextYear--disabled ' + styles.nextYearIsDisabled]: !isNextYearInBounds,\n                })}\n                disabled={!isNextYearInBounds}\n                onClick={isNextYearInBounds ? this._onSelectNextYear : undefined}\n                onKeyDown={isNextYearInBounds ? this._onSelectNextYearKeyDown : undefined}\n                title={\n                  strings.nextYearAriaLabel\n                    ? strings.nextYearAriaLabel + ' ' + dateTimeFormatter.formatYear(addYears(navigatedDate, 1))\n                    : undefined\n                }\n                role=\"button\"\n                type=\"button\"\n              >\n                <Icon iconName={getRTL() ? leftNavigationIcon : rightNavigationIcon} />\n              </button>\n            </div>\n          </div>\n        </div>\n        <FocusZone>\n          <div className={css('ms-DatePicker-optionGrid', styles.optionGrid)} role=\"grid\" aria-readonly=\"true\">\n            {rowIndexes.map((rowNum: number) => {\n              const monthsForRow = strings.shortMonths.slice(rowNum * MONTHS_PER_ROW, (rowNum + 1) * MONTHS_PER_ROW);\n              return (\n                <div key={'monthRow_' + rowNum} role=\"row\">\n                  {monthsForRow.map((month: string, index: number) => {\n                    const monthIndex = rowNum * MONTHS_PER_ROW + index;\n                    const indexedMonth = setMonth(navigatedDate, monthIndex);\n                    const isCurrentMonth = this._isCurrentMonth(monthIndex, navigatedDate.getFullYear(), today!);\n                    const isNavigatedMonth = navigatedDate.getMonth() === monthIndex;\n                    const isSelectedMonth = selectedDate.getMonth() === monthIndex;\n                    const isSelectedYear = selectedDate.getFullYear() === navigatedDate.getFullYear();\n                    const isInBounds =\n                      (minDate ? compareDatePart(minDate, getMonthEnd(indexedMonth)) < 1 : true) &&\n                      (maxDate ? compareDatePart(getMonthStart(indexedMonth), maxDate) < 1 : true);\n\n                    return (\n                      <button\n                        role={'gridcell'}\n                        className={css('ms-DatePicker-monthOption', styles.monthOption, {\n                          ['ms-DatePicker-day--today ' + styles.monthIsCurrentMonth]:\n                            highlightCurrentMonth && isCurrentMonth!,\n                          ['ms-DatePicker-day--highlighted ' + styles.monthIsHighlighted]:\n                            (highlightCurrentMonth || highlightSelectedMonth) && isSelectedMonth && isSelectedYear,\n                          ['ms-DatePicker-monthOption--disabled ' + styles.monthOptionIsDisabled]: !isInBounds,\n                        })}\n                        disabled={!isInBounds}\n                        key={monthIndex}\n                        onClick={isInBounds ? this._selectMonthCallbacks[monthIndex] : undefined}\n                        onKeyDown={isInBounds ? this._onSelectMonthKeyDown(monthIndex) : undefined}\n                        aria-label={dateTimeFormatter.formatMonthYear(indexedMonth, strings)}\n                        aria-selected={isNavigatedMonth}\n                        data-is-focusable={isInBounds ? true : undefined}\n                        ref={isNavigatedMonth ? this._navigatedMonthRef : undefined}\n                        type=\"button\"\n                      >\n                        {month}\n                      </button>\n                    );\n                  })}\n                </div>\n              );\n            })}\n          </div>\n        </FocusZone>\n      </div>\n    );\n  }\n\n  public focus() {\n    if (this._calendarYearRef) {\n      this._calendarYearRef.focus();\n    } else if (this._navigatedMonthRef.current) {\n      this._navigatedMonthRef.current.tabIndex = 0;\n      this._navigatedMonthRef.current.focus();\n    }\n  }\n\n  private _onCalendarYearRef = (ref: CalendarYear) => {\n    this._calendarYearRef = ref;\n  };\n\n  private _isCurrentMonth(month: number, year: number, today: Date): boolean {\n    return today.getFullYear() === year && today.getMonth() === month;\n  }\n\n  private _onKeyDown = (callback: () => void, ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter) {\n      callback();\n    }\n  };\n\n  private _onSelectYear = (selectedYear: number) => {\n    this._focusOnUpdate = true;\n    const { navigatedDate, onNavigateDate, maxDate, minDate } = this.props;\n    const navYear = navigatedDate.getFullYear();\n    if (navYear !== selectedYear) {\n      let newNavigationDate = new Date(navigatedDate.getTime());\n      newNavigationDate.setFullYear(selectedYear);\n      // for min and max dates, adjust the new navigation date - perhaps this should be\n      // checked on the master navigation date handler (i.e. in Calendar)\n      if (maxDate && newNavigationDate > maxDate) {\n        newNavigationDate = setMonth(newNavigationDate, maxDate.getMonth());\n      } else if (minDate && newNavigationDate < minDate) {\n        newNavigationDate = setMonth(newNavigationDate, minDate.getMonth());\n      }\n      onNavigateDate(newNavigationDate, true);\n    }\n    this.setState({ isYearPickerVisible: false });\n  };\n\n  private _yearToString = (year: number) => {\n    const { navigatedDate, dateTimeFormatter } = this.props;\n    if (dateTimeFormatter) {\n      // create a date based on the current nav date\n      const yearFormattingDate = new Date(navigatedDate.getTime());\n      yearFormattingDate.setFullYear(year);\n      return dateTimeFormatter.formatYear(yearFormattingDate);\n    }\n    return String(year);\n  };\n\n  private _yearRangeToString = (yearRange: ICalendarYearRange) => {\n    return `${this._yearToString(yearRange.fromYear)} - ${this._yearToString(yearRange.toYear)}`;\n  };\n\n  private _yearRangeToNextDecadeLabel = (yearRange: ICalendarYearRange) => {\n    const { strings } = this.props;\n    return strings.nextYearRangeAriaLabel\n      ? `${strings.nextYearRangeAriaLabel} ${this._yearRangeToString(yearRange)}`\n      : '';\n  };\n\n  private _yearRangeToPrevDecadeLabel = (yearRange: ICalendarYearRange) => {\n    const { strings } = this.props;\n    return strings.prevYearRangeAriaLabel\n      ? `${strings.prevYearRangeAriaLabel} ${this._yearRangeToString(yearRange)}`\n      : '';\n  };\n\n  private _onRenderYear = (year: number) => {\n    return this._yearToString(year);\n  };\n\n  private _onSelectNextYear = (): void => {\n    const { navigatedDate, onNavigateDate } = this.props;\n    onNavigateDate(addYears(navigatedDate, 1), false);\n  };\n\n  private _onSelectNextYearKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter) {\n      this._onKeyDown(this._onSelectNextYear, ev);\n    }\n  };\n\n  private _onSelectPrevYear = (): void => {\n    const { navigatedDate, onNavigateDate } = this.props;\n    onNavigateDate(addYears(navigatedDate, -1), false);\n  };\n\n  private _onSelectPrevYearKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter) {\n      this._onKeyDown(this._onSelectPrevYear, ev);\n    }\n  };\n\n  private _onSelectMonthKeyDown = (index: number): ((ev: React.KeyboardEvent<HTMLElement>) => void) => {\n    return (ev: React.KeyboardEvent<HTMLElement>) => this._onKeyDown(() => this._onSelectMonth(index), ev);\n  };\n\n  private _onSelectMonth = (newMonth: number): void => {\n    const { navigatedDate, onNavigateDate, onHeaderSelect } = this.props;\n\n    // If header is clickable the calendars are overlayed, switch back to day picker when month is clicked\n    if (onHeaderSelect) {\n      onHeaderSelect(true);\n    }\n    onNavigateDate(setMonth(navigatedDate, newMonth), true);\n  };\n\n  private _onHeaderSelect = (): void => {\n    const { onHeaderSelect, yearPickerHidden } = this.props;\n    if (!yearPickerHidden) {\n      this._focusOnUpdate = true;\n      this.setState({ isYearPickerVisible: true });\n    } else if (onHeaderSelect) {\n      onHeaderSelect(true);\n    }\n  };\n\n  private _onYearPickerHeaderSelect = (focus: boolean): void => {\n    this._focusOnUpdate = focus;\n    this.setState({ isYearPickerVisible: false });\n  };\n\n  private _onHeaderKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (this._onHeaderSelect && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n      this._onHeaderSelect();\n    }\n  };\n}\n"]}