{"version":3,"file":"Calendar.types.js","sourceRoot":"../src/","sources":["components/Calendar/Calendar.types.ts"],"names":[],"mappings":";;AACA,oEAAkG;AAEzF,oBAFA,sBAAS,CAEA;AAAiB,0BAFf,4BAAe,CAEe;AAA9B,wBAFiB,0BAAa,CAEjB","sourcesContent":["import * as React from 'react';\nimport { DayOfWeek, FirstWeekOfYear, DateRangeType } from '../../utilities/dateValues/DateValues';\nimport { IRefObject, IBaseProps } from '../../Utilities';\nexport { DayOfWeek, DateRangeType, FirstWeekOfYear };\n\n/**\n * {@docCategory Calendar}\n */\nexport interface ICalendar {\n  /** Sets focus to the selected date. */\n  focus: () => void;\n}\n\n/**\n * {@docCategory Calendar}\n */\nexport interface ICalendarProps extends IBaseProps<ICalendar>, React.HTMLAttributes<HTMLElement> {\n  /**\n   * Optional callback to access the ICalendar interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<ICalendar>;\n\n  /**\n   * Optional class name to add to the root element.\n   */\n  className?: string;\n\n  /**\n   * Callback issued when a date is selected\n   * @param date - The date the user selected\n   * @param selectedDateRangeArray - The resultant list of dates that are selected based on the date range type set\n   * for the component.\n   */\n  onSelectDate?: (date: Date, selectedDateRangeArray?: Date[]) => void;\n\n  /**\n   * Callback issued when calendar is closed\n   */\n  onDismiss?: () => void;\n\n  /**\n   * Whether the month picker is shown beside the day picker or hidden.\n   * @defaultvalue true\n   */\n  isMonthPickerVisible?: boolean;\n\n  /**\n   * Whether the day picker is shown beside the month picker or hidden.\n   * @defaultvalue true\n   */\n  isDayPickerVisible?: boolean;\n\n  /**\n   * Show month picker on top of date picker when visible.\n   * @defaultvalue false\n   */\n  showMonthPickerAsOverlay?: boolean;\n\n  /**\n   * Value of today. If null, current time in client machine will be used.\n   */\n  today?: Date;\n\n  /**\n   * Default value of the Calendar, if any\n   */\n  value?: Date;\n\n  /**\n   * The first day of the week for your locale.\n   * @defaultvalue DayOfWeek.Sunday\n   */\n  firstDayOfWeek?: DayOfWeek;\n\n  /**\n   * The date range type indicating how  many days should be selected as the user\n   * selects days\n   * @defaultvalue DateRangeType.Day\n   */\n  dateRangeType?: DateRangeType;\n\n  /**\n   * Whether the month view should automatically navigate to the next or previous date range\n   * depending on the selected date. If this property is set to true and the currently displayed\n   * month is March 2017, if the user clicks on a day outside the month, i.e., April 1st, the\n   * picker will automatically navigate to the month of April.\n   * @defaultvalue false\n   */\n  autoNavigateOnSelection?: boolean;\n\n  /**\n   * Whether the \"Go to today\" link should be shown or not\n   */\n  showGoToToday?: boolean;\n\n  /**\n   * This property has been removed at 0.80.0 in place of the `focus` method, to be removed \\@ 1.0.0.\n   * @deprecated Replaced with the `focus` method.\n   */\n  shouldFocusOnMount?: boolean;\n\n  /**\n   * Localized strings to use in the Calendar\n   */\n  strings: ICalendarStrings | null;\n\n  /**\n   * Whether the month picker should highlight the current month\n   * @defaultvalue false\n   */\n  highlightCurrentMonth?: boolean;\n\n  /**\n   * Whether the month picker should highlight the selected month\n   * @defaultvalue false\n   */\n  highlightSelectedMonth?: boolean;\n\n  /**\n   * Customize navigation icons using ICalendarIconStrings\n   */\n  navigationIcons?: ICalendarIconStrings;\n\n  /**\n   * Whether the calendar should show the week number (weeks 1 to 53) before each week row\n   * @defaultvalue false\n   */\n  showWeekNumbers?: boolean;\n\n  /**\n   * Defines when the first week of the year should start, FirstWeekOfYear.FirstDay,\n   * FirstWeekOfYear.FirstFullWeek or FirstWeekOfYear.FirstFourDayWeek are the possible values\n   * @defaultvalue FirstWeekOfYear.FirstDay\n   */\n  firstWeekOfYear?: FirstWeekOfYear;\n\n  /**\n   * Apply additional formating to dates, for example localized date formatting.\n   */\n  dateTimeFormatter?: ICalendarFormatDateCallbacks;\n\n  /**\n   * If set the Calendar will not allow navigation to or selection of a date earlier than this value.\n   */\n  minDate?: Date;\n\n  /**\n   * If set the Calendar will not allow navigation to or selection of a date later than this value.\n   */\n  maxDate?: Date;\n\n  /**\n   * If set the Calendar will not allow selection of dates in this array.\n   */\n  restrictedDates?: Date[];\n\n  /**\n   * Whether the calendar should show 6 weeks by default.\n   * @defaultvalue false\n   */\n  showSixWeeksByDefault?: boolean;\n\n  /**\n   * The days that are selectable when dateRangeType is WorkWeek.\n   * If dateRangeType is not WorkWeek this property does nothing.\n   * @defaultvalue [Monday,Tuesday,Wednesday,Thursday,Friday]\n   */\n  workWeekDays?: DayOfWeek[];\n\n  /**\n   * When clicking on \"Today\", select the date and close the calendar.\n   * @defaultvalue false\n   */\n  selectDateOnClick?: boolean;\n\n  /**\n   * Whether the close button should be shown or not\n   * @defaultvalue false\n   */\n  showCloseButton?: boolean;\n\n  /**\n   * Allows all dates and buttons to be focused, including disabled ones\n   * @defaultvalue false\n   */\n  allFocusable?: boolean;\n\n  /**\n   * Whether the year picker is enabled\n   * @defaultvalue false\n   */\n  yearPickerHidden?: boolean;\n}\n\n/**\n * {@docCategory Calendar}\n */\nexport interface ICalendarStrings {\n  /**\n   * An array of strings for the full names of months.\n   * The array is 0-based, so months[0] should be the full name of January.\n   */\n  months: string[];\n\n  /**\n   * An array of strings for the short names of months.\n   * The array is 0-based, so shortMonths[0] should be the short name of January.\n   */\n  shortMonths: string[];\n\n  /**\n   * An array of strings for the full names of days of the week.\n   * The array is 0-based, so days[0] should be the full name of Sunday.\n   */\n  days: string[];\n\n  /**\n   * An array of strings for the initials of the days of the week.\n   * The array is 0-based, so days[0] should be the initial of Sunday.\n   */\n  shortDays: string[];\n\n  /**\n   * String to render for button to direct the user to today's date.\n   */\n  goToToday: string;\n\n  /**\n   * Aria-label for the \"previous month\" button.\n   */\n  prevMonthAriaLabel?: string;\n\n  /**\n   * Aria-label for the \"next month\" button.\n   */\n  nextMonthAriaLabel?: string;\n\n  /**\n   * Aria-label for the \"previous year\" button.\n   */\n  prevYearAriaLabel?: string;\n\n  /**\n   * Aria-label for the \"next year\" button.\n   */\n  nextYearAriaLabel?: string;\n\n  /**\n   * Aria-label for the \"previous year range\" button.\n   */\n  prevYearRangeAriaLabel?: string;\n\n  /**\n   * Aria-label for the \"next year range\" button.\n   */\n  nextYearRangeAriaLabel?: string;\n\n  /**\n   * Aria-label for the \"close\" button.\n   */\n  closeButtonAriaLabel?: string;\n\n  /**\n   * Aria-label format string for the week number header. Should have 1 string param e.g. \"week number \\{0\\}\"\n   */\n  weekNumberFormatString?: string;\n\n  /**\n   * Aria-label format string for the header button in the month picker. Should have 1 string param, e.g. \"`{0}`,\n   * select to change the year\". This aria-label will only be applied if the year picker is enabled; otherwise\n   * the label will default to the header string, e.g. \"2019\".\n   */\n  monthPickerHeaderAriaLabel?: string;\n\n  /**\n   * Aria-label format string for the header button in the year picker.\n   * Should have 1 string param, e.g. \"`{0}`, select to change the month\"\n   */\n  yearPickerHeaderAriaLabel?: string;\n}\n\n/**\n * {@docCategory Calendar}\n */\nexport interface ICalendarIconStrings {\n  /**\n   * FabricMDL2Icons name for the left navigation icon.  Previous default: ChevronLeft.\n   * @defaultvalue 'Up'\n   */\n  leftNavigation?: string;\n\n  /**\n   * FabricMDL2Icons name for the right navigation icon.  Previous default: ChevronRight.\n   * @defaultvalue 'Down'\n   */\n  rightNavigation?: string;\n\n  /**\n   * Close icon\n   * @defaultvalue 'CalculatorMultiply'\n   */\n  closeIcon?: string;\n}\n\n/**\n * {@docCategory Calendar}\n */\nexport interface ICalendarFormatDateCallbacks {\n  /**\n   * Callback to apply formatting to mmmm d, yyyy formated dates\n   */\n  formatMonthDayYear: (date: Date, strings?: ICalendarStrings) => string;\n\n  /**\n   * Callback to apply formatting to the month and year in the Day Picker header\n   */\n  formatMonthYear: (date: Date, strings?: ICalendarStrings) => string;\n\n  /**\n   * Callback to apply formatting to the days in the Day Picker calendar\n   */\n  formatDay: (date: Date) => string;\n\n  /**\n   * Callback to apply formatting to the year in the Month Picker header\n   */\n  formatYear: (date: Date) => string;\n}\n"]}