{"version":3,"file":"Slider.Basic.Example.js","sourceRoot":"../src/","sources":["components/Slider/examples/Slider.Basic.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4DAA2D;AAC3D,0DAAuE;AAMvE,+BAA+B;AAC/B;IAAwC,8CAA6C;IAArF;QAAA,qEA6BC;QA5BQ,WAAK,GAA6B,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;;IA4BxD,CAAC;IA1BQ,mCAAM,GAAb;QAAA,iBAyBC;QAxBC,IAAM,WAAW,GAAiB,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;QAEtD,OAAO,CACL,oBAAC,aAAK,IAAC,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;YAC7D,oBAAC,eAAM,IACL,KAAK,EAAC,eAAe,EACrB,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,CAAC,EACN,IAAI,EAAE,CAAC,EACP,YAAY,EAAE,CAAC,EACf,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,UAAC,KAAa,IAAK,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,GAC/C;YACF,oBAAC,eAAM,IAAC,KAAK,EAAC,kBAAkB,EAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,YAAY,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,GAAI;YACpH,oBAAC,eAAM,IACL,KAAK,EAAC,oBAAoB,EAC1B,GAAG,EAAE,EAAE,EACP,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,QAAQ,EAAE,UAAC,KAAa,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,OAAA,EAAE,CAAC,EAAxB,CAAwB,EACrD,SAAS,EAAE,IAAI,GACf;YACF,oBAAC,eAAM,IAAC,KAAK,EAAC,8BAA8B,EAAC,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,UAAC,KAAa,IAAK,OAAG,KAAK,MAAG,EAAX,CAAW,EAAE,SAAS,EAAE,IAAI,GAAI,CACjH,CACT,CAAC;IACJ,CAAC;IACH,yBAAC;AAAD,CAAC,AA7BD,CAAwC,KAAK,CAAC,SAAS,GA6BtD;AA7BY,gDAAkB","sourcesContent":["import * as React from 'react';\r\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\r\nimport { IStackTokens, Stack } from 'office-ui-fabric-react/lib/Stack';\r\n\r\nexport interface ISliderBasicExampleState {\r\n  value: number;\r\n}\r\n\r\n// tslint:disable:jsx-no-lambda\r\nexport class SliderBasicExample extends React.Component<{}, ISliderBasicExampleState> {\r\n  public state: ISliderBasicExampleState = { value: 0 };\r\n\r\n  public render(): JSX.Element {\r\n    const stackTokens: IStackTokens = { childrenGap: 20 };\r\n\r\n    return (\r\n      <Stack tokens={stackTokens} styles={{ root: { maxWidth: 300 } }}>\r\n        <Slider\r\n          label=\"Basic example\"\r\n          min={1}\r\n          max={5}\r\n          step={1}\r\n          defaultValue={2}\r\n          showValue={true}\r\n          onChange={(value: number) => console.log(value)}\r\n        />\r\n        <Slider label=\"Disabled example\" min={50} max={500} step={50} defaultValue={300} showValue={true} disabled={true} />\r\n        <Slider\r\n          label=\"Controlled example\"\r\n          max={10}\r\n          value={this.state.value}\r\n          onChange={(value: number) => this.setState({ value })}\r\n          showValue={true}\r\n        />\r\n        <Slider label=\"Example with formatted value\" max={100} valueFormat={(value: number) => `${value}%`} showValue={true} />\r\n      </Stack>\r\n    );\r\n  }\r\n}\r\n"]}