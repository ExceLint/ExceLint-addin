{"version":3,"file":"Dialog.Basic.Example.js","sourceRoot":"../src/","sources":["components/Dialog/examples/Dialog.Basic.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4DAAqF;AACrF,4DAAiF;AACjF,kEAA6D;AAC7D,8DAAqF;AAErF,IAAM,gBAAgB,GAAG,qBAAW,CAAC,4BAAkB,CAAC,CAAC;AAMzD;IAAwC,8CAA6C;IAArF;QAAA,qEAmDC;QAlDQ,WAAK,GAA6B;YACvC,UAAU,EAAE,IAAI;SACjB,CAAC;QACF,6DAA6D;QAC7D,wFAAwF;QAChF,cAAQ,GAAW,iBAAK,CAAC,aAAa,CAAC,CAAC;QACxC,gBAAU,GAAW,iBAAK,CAAC,cAAc,CAAC,CAAC;QAqC3C,iBAAW,GAAG;YACpB,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;QACvC,CAAC,CAAC;QAEM,kBAAY,GAAG;YACrB,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QACtC,CAAC,CAAC;;IACJ,CAAC;IA1CQ,mCAAM,GAAb;QACE,OAAO,CACL;YACE,oBAAC,sBAAa,IAAC,aAAa,EAAC,yBAAyB,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,EAAC,aAAa,GAAG;YACvG,+BAAO,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,gBAAgB,sBAE7C;YACR,+BAAO,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,gBAAgB,4BAE/C;YAER,oBAAC,eAAM,IACL,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EAC7B,SAAS,EAAE,IAAI,CAAC,YAAY,EAC5B,kBAAkB,EAAE;oBAClB,IAAI,EAAE,mBAAU,CAAC,MAAM;oBACvB,KAAK,EAAE,qBAAqB;oBAC5B,OAAO,EAAE,4GAA4G;iBACtH,EACD,UAAU,EAAE;oBACV,WAAW,EAAE,IAAI,CAAC,QAAQ;oBAC1B,cAAc,EAAE,IAAI,CAAC,UAAU;oBAC/B,UAAU,EAAE,KAAK;oBACjB,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;iBACpC;gBAED,oBAAC,qBAAY;oBACX,oBAAC,sBAAa,IAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAC,MAAM,GAAG;oBACzD,oBAAC,sBAAa,IAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAC,QAAQ,GAAG,CAC9C,CACR,CACL,CACP,CAAC;IACJ,CAAC;IASH,yBAAC;AAAD,CAAC,AAnDD,CAAwC,KAAK,CAAC,SAAS,GAmDtD;AAnDY,gDAAkB","sourcesContent":["import * as React from 'react';\r\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { getId } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { hiddenContentStyle, mergeStyles } from 'office-ui-fabric-react/lib/Styling';\r\n\r\nconst screenReaderOnly = mergeStyles(hiddenContentStyle);\r\n\r\nexport interface IDialogBasicExampleState {\r\n  hideDialog: boolean;\r\n}\r\n\r\nexport class DialogBasicExample extends React.Component<{}, IDialogBasicExampleState> {\r\n  public state: IDialogBasicExampleState = {\r\n    hideDialog: true\r\n  };\r\n  // Use getId() to ensure that the IDs are unique on the page.\r\n  // (It's also okay to use plain strings without getId() and manually ensure uniqueness.)\r\n  private _labelId: string = getId('dialogLabel');\r\n  private _subTextId: string = getId('subTextLabel');\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <DefaultButton secondaryText=\"Opens the Sample Dialog\" onClick={this._showDialog} text=\"Open Dialog\" />\r\n        <label id={this._labelId} className={screenReaderOnly}>\r\n          My sample Label\r\n        </label>\r\n        <label id={this._subTextId} className={screenReaderOnly}>\r\n          My Sample description\r\n        </label>\r\n\r\n        <Dialog\r\n          hidden={this.state.hideDialog}\r\n          onDismiss={this._closeDialog}\r\n          dialogContentProps={{\r\n            type: DialogType.normal,\r\n            title: 'All emails together',\r\n            subText: 'Your Inbox has changed. No longer does it include favorites, it is a singular destination for your emails.'\r\n          }}\r\n          modalProps={{\r\n            titleAriaId: this._labelId,\r\n            subtitleAriaId: this._subTextId,\r\n            isBlocking: false,\r\n            styles: { main: { maxWidth: 450 } }\r\n          }}\r\n        >\r\n          <DialogFooter>\r\n            <PrimaryButton onClick={this._closeDialog} text=\"Save\" />\r\n            <DefaultButton onClick={this._closeDialog} text=\"Cancel\" />\r\n          </DialogFooter>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _showDialog = (): void => {\r\n    this.setState({ hideDialog: false });\r\n  };\r\n\r\n  private _closeDialog = (): void => {\r\n    this.setState({ hideDialog: true });\r\n  };\r\n}\r\n"]}