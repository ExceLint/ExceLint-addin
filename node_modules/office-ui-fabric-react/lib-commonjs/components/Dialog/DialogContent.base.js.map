{"version":3,"file":"DialogContent.base.js","sourceRoot":"../src/","sources":["components/Dialog/DialogContent.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, classNamesFunction } from '../../Utilities';\r\nimport { DialogType, IDialogContentProps, IDialogContentStyleProps, IDialogContentStyles } from './DialogContent.types';\r\nimport { IconButton } from '../../Button';\r\nimport { DialogFooter } from './DialogFooter';\r\nimport { IDialogFooterProps } from './DialogFooter.types';\r\nimport { withResponsiveMode } from '../../utilities/decorators/withResponsiveMode';\r\n\r\nconst getClassNames = classNamesFunction<IDialogContentStyleProps, IDialogContentStyles>();\r\n\r\nconst DialogFooterType = (<DialogFooter /> as React.ReactElement<IDialogFooterProps>).type;\r\n\r\n@withResponsiveMode\r\nexport class DialogContentBase extends BaseComponent<IDialogContentProps, {}> {\r\n  public static defaultProps: IDialogContentProps = {\r\n    showCloseButton: false,\r\n    className: '',\r\n    topButtonsProps: [],\r\n    closeButtonAriaLabel: 'Close'\r\n  };\r\n\r\n  constructor(props: IDialogContentProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      showCloseButton,\r\n      className,\r\n      closeButtonAriaLabel,\r\n      onDismiss,\r\n      subTextId,\r\n      subText,\r\n      titleId,\r\n      title,\r\n      type,\r\n      styles,\r\n      theme\r\n    } = this.props;\r\n\r\n    const classNames = getClassNames(styles!, {\r\n      theme: theme!,\r\n      className,\r\n      isLargeHeader: type === DialogType.largeHeader,\r\n      isClose: type === DialogType.close\r\n    });\r\n\r\n    const groupings = this._groupChildren();\r\n    let subTextContent;\r\n    if (subText) {\r\n      subTextContent = (\r\n        <p className={classNames.subText} id={subTextId}>\r\n          {subText}\r\n        </p>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className={classNames.content}>\r\n        <div className={classNames.header}>\r\n          <p className={classNames.title} id={titleId} role=\"heading\" aria-level={2}>\r\n            {title}\r\n          </p>\r\n          <div className={classNames.topButton}>\r\n            {this.props.topButtonsProps!.map((props, index) => (\r\n              <IconButton key={props.uniqueId || index} {...props} />\r\n            ))}\r\n            {(type === DialogType.close || (showCloseButton && type !== DialogType.largeHeader)) && (\r\n              <IconButton\r\n                className={classNames.button}\r\n                iconProps={{ iconName: 'Cancel' }}\r\n                ariaLabel={closeButtonAriaLabel}\r\n                onClick={onDismiss as any}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className={classNames.inner}>\r\n          <div className={classNames.innerContent}>\r\n            {subTextContent}\r\n            {groupings.contents}\r\n          </div>\r\n          {groupings.footers}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // @TODO - typing the footers as an array of DialogFooter is difficult because\r\n  // casing \"child as DialogFooter\" causes a problem because\r\n  // \"Neither type 'ReactElement<any>' nor type 'DialogFooter' is assignable to the other.\"\r\n  private _groupChildren(): { footers: any[]; contents: any[] } {\r\n    const groupings: { footers: any[]; contents: any[] } = {\r\n      footers: [],\r\n      contents: []\r\n    };\r\n\r\n    React.Children.map(this.props.children, child => {\r\n      if (typeof child === 'object' && child !== null && child.type === DialogFooterType) {\r\n        groupings.footers.push(child);\r\n      } else {\r\n        groupings.contents.push(child);\r\n      }\r\n    });\r\n\r\n    return groupings;\r\n  }\r\n}\r\n"]}