{"version":3,"file":"DocumentCard.types.js","sourceRoot":"../src/","sources":["components/DocumentCard/DocumentCard.types.ts"],"names":[],"mappings":";;AAwEA,IAAY,gBASX;AATD,WAAY,gBAAgB;IAC1B;;OAEG;IACH,2DAAU,CAAA;IACV;;OAEG;IACH,6DAAW,CAAA;AACb,CAAC,EATW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAS3B","sourcesContent":["import * as React from 'react';\r\nimport { IStyle, ITheme } from '../../Styling';\r\nimport { IBaseProps, IRefObject, IStyleFunctionOrObject } from '../../Utilities';\r\n\r\nexport interface IDocumentCard {\r\n  /**\r\n   * Sets focus to the DocumentCard.\r\n   */\r\n  focus: () => void;\r\n}\r\n\r\nexport interface IDocumentCardProps extends IBaseProps<IDocumentCard>, React.HTMLAttributes<HTMLDivElement> {\r\n  /**\r\n   * Optional callback to access the IDocumentCard interface. Use this instead of ref for accessing\r\n   * the public methods and properties of the component.\r\n   */\r\n  componentRef?: IRefObject<IDocumentCard>;\r\n\r\n  /**\r\n   * The type of DocumentCard to display.\r\n   * @defaultvalue DocumentCardType.normal\r\n   */\r\n  type?: DocumentCardType;\r\n\r\n  /**\r\n   * Function to call when the card is clicked or keyboard Enter/Space is pushed.\r\n   */\r\n  onClick?: (ev?: React.SyntheticEvent<HTMLElement>) => void;\r\n\r\n  /**\r\n   * A URL to navigate to when the card is clicked. If a function has also been provided,\r\n   * it will be used instead of the URL.\r\n   */\r\n  onClickHref?: string;\r\n\r\n  /**\r\n   * Aria role assigned to the documentCard (Eg. button, link).\r\n   * Use this to override the default assignment.\r\n   * @defaultvalue When `onClick` is provided, default role will be 'button'. When `onClickHref` is provided, default role will be 'link'.\r\n   */\r\n  role?: string;\r\n\r\n  /**\r\n   * Hex color value of the line below the card, which should correspond to the document type.\r\n   * This should only be supplied when using the 'compact' card layout.\r\n   *\r\n   * Deprecated at v4.17.1, to be removed at \\>= v5.0.0.\r\n   * @deprecated To be removed at v5.0.0.\r\n   */\r\n  accentColor?: string;\r\n\r\n  /**\r\n   * Child components to render within the card.\r\n   */\r\n  children?: React.ReactNode;\r\n\r\n  /**\r\n   * Call to provide customized styling that will layer on top of the variant rules\r\n   */\r\n  styles?: IStyleFunctionOrObject<IDocumentCardStyleProps, IDocumentCardStyles>;\r\n\r\n  /**\r\n   * Theme provided by HOC.\r\n   */\r\n  theme?: ITheme;\r\n\r\n  /**\r\n   * Optional override class name\r\n   */\r\n  className?: string;\r\n}\r\n\r\nexport enum DocumentCardType {\r\n  /**\r\n   * Standard DocumentCard.\r\n   */\r\n  normal = 0,\r\n  /**\r\n   * Compact layout. Displays the preview beside the details, rather than above.\r\n   */\r\n  compact = 1\r\n}\r\n\r\nexport interface IDocumentCardStyleProps {\r\n  /**\r\n   * Accept theme prop.\r\n   */\r\n  theme: ITheme;\r\n\r\n  /**\r\n   * Optional override class name\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * True when the card has a click action.\r\n   */\r\n  actionable?: boolean;\r\n\r\n  /**\r\n   * Compact variant of the card.\r\n   */\r\n  compact?: boolean;\r\n}\r\n\r\nexport interface IDocumentCardStyles {\r\n  root: IStyle;\r\n}\r\n"]}