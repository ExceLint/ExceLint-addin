"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var DocumentCard_Basic_Example_1 = require("./examples/DocumentCard.Basic.Example");
var DocumentCard_Complete_Example_1 = require("./examples/DocumentCard.Complete.Example");
var DocumentCard_Compact_Example_1 = require("./examples/DocumentCard.Compact.Example");
var DocumentCard_checklist_1 = require("./DocumentCard.checklist");
var DocumentCardBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/examples/DocumentCard.Basic.Example.tsx');
var DocumentCardCompleteExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/examples/DocumentCard.Complete.Example.tsx');
var DocumentCardCompactExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/examples/DocumentCard.Compact.Example.tsx');
exports.DocumentCardPageProps = {
    title: 'DocumentCard',
    componentName: 'DocumentCard',
    componentUrl: 'https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/DocumentCard',
    componentStatus: DocumentCard_checklist_1.DocumentCardStatus,
    examples: [
        {
            title: 'Default DocumentCard',
            code: DocumentCardBasicExampleCode,
            view: (React.createElement(React.Fragment, null,
                React.createElement("p", null, "The default configuration for a card represents a single file, with space to denote the last significant event and the person involved."),
                React.createElement(DocumentCard_Basic_Example_1.DocumentCardBasicExample, null)))
        },
        {
            title: 'DocumentCard with multiple items, commands, and views',
            code: DocumentCardCompleteExampleCode,
            view: (React.createElement(React.Fragment, null,
                React.createElement("p", null, "This example shows a couple of optional abilities, including being able to have a card represent multiple items, being able to expose up to three relevant commands, and showing the number of views in the bottom right corner."),
                React.createElement("p", null, "Also show a card with Logo, text preview and status that is used for Conversation card."),
                React.createElement(DocumentCard_Complete_Example_1.DocumentCardCompleteExample, null)))
        },
        {
            title: 'DocumentCard with compact layout ',
            code: DocumentCardCompactExampleCode,
            view: (React.createElement(React.Fragment, null,
                React.createElement("p", null, "When showing a card on a mobile device or a similarly narrow layout, you may choose this Compact layout which helps the filename remain scannable while giving roomy space for a preview thumbnail."),
                React.createElement(DocumentCard_Compact_Example_1.DocumentCardCompactExample, null)))
        }
    ],
    propertiesTablesSources: [require('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/DocumentCard.types.ts')],
    overview: require('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/docs/DocumentCardOverview.md'),
    bestPractices: '',
    dos: require('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/docs/DocumentCardDos.md'),
    donts: require('!raw-loader!office-ui-fabric-react/src/components/DocumentCard/docs/DocumentCardDonts.md'),
    isHeaderVisible: true,
    isFeedbackVisible: true
};
//# sourceMappingURL=DocumentCard.doc.js.map