{"version":3,"file":"Stack.Horizontal.Wrap.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Horizontal.Wrap.Example.tsx"],"names":[],"mappings":";;;AAAA,WAAW;AACX,6BAA+B;AAC/B,4DAA2D;AAC3D,kCAAiC;AACjC,8DAAoF;AAMpF;IAAgD,sDAAkC;IAChF,oCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAIb;QAiDO,oBAAc,GAAG,UAAC,KAAa;YACrC,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;QACvC,CAAC,CAAC;QAtDA,KAAI,CAAC,KAAK,GAAG;YACX,UAAU,EAAE,GAAG;SAChB,CAAC;;IACJ,CAAC;IAEM,2CAAM,GAAb;QACE,IAAM,MAAM,GAAG,wBAAc,CAAC;YAC5B,IAAI,EAAE;gBACJ,UAAU,EAAE,wBAAc,CAAC,aAAa;gBACxC,KAAK,EAAK,IAAI,CAAC,KAAK,CAAC,UAAU,MAAG;gBAClC,SAAS,EAAE;oBACT,QAAQ,EAAE;wBACR,KAAK,EAAE,EAAE;wBACT,MAAM,EAAE,EAAE;wBACV,OAAO,EAAE,MAAM;wBACf,UAAU,EAAE,QAAQ;wBACpB,cAAc,EAAE,QAAQ;wBACxB,UAAU,EAAE,wBAAc,CAAC,YAAY;wBACvC,KAAK,EAAE,wBAAc,CAAC,KAAK;qBAC5B;iBACF;aACF;SACF,CAAC,CAAC;QAEH,OAAO,CACL,oBAAC,aAAK,IAAC,GAAG,EAAE,EAAE;YACZ,oBAAC,eAAM,IACL,KAAK,EAAC,wEAAwE,EAC9E,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,CAAC,EACP,YAAY,EAAE,GAAG,EACjB,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,cAAc,GAC7B;YAEF,oBAAC,aAAK,IAAC,UAAU,QAAC,IAAI,QAAC,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,IAAI;gBACpD,sCAAc;gBACd,sCAAc;gBACd,sCAAc;gBACd,sCAAc;gBACd,sCAAc;gBACd,sCAAc;gBACd,sCAAc;gBACd,sCAAc;gBACd,sCAAc;gBACd,uCAAe,CACT,CACF,CACT,CAAC;IACJ,CAAC;IAKH,iCAAC;AAAD,CAAC,AA1DD,CAAgD,KAAK,CAAC,SAAS,GA0D9D;AA1DY,gEAA0B","sourcesContent":["// @codepen\r\nimport * as React from 'react';\r\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\r\nimport { Stack } from '../Stack';\r\nimport { mergeStyleSets, DefaultPalette } from 'office-ui-fabric-react/lib/Styling';\r\n\r\nexport interface IExampleState {\r\n  stackWidth: number;\r\n}\r\n\r\nexport class HorizontalStackWrapExample extends React.Component<{}, IExampleState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      stackWidth: 100\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const styles = mergeStyleSets({\r\n      root: {\r\n        background: DefaultPalette.themeTertiary,\r\n        width: `${this.state.stackWidth}%`,\r\n        selectors: {\r\n          '& span': {\r\n            width: 50,\r\n            height: 50,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            background: DefaultPalette.themePrimary,\r\n            color: DefaultPalette.white\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    return (\r\n      <Stack gap={10}>\r\n        <Slider\r\n          label=\"Change the stack width to see how child items wrap onto multiple rows:\"\r\n          min={1}\r\n          max={100}\r\n          step={1}\r\n          defaultValue={100}\r\n          showValue={true}\r\n          onChange={this._onWidthChange}\r\n        />\r\n\r\n        <Stack horizontal wrap gap={30} className={styles.root}>\r\n          <span>1</span>\r\n          <span>2</span>\r\n          <span>3</span>\r\n          <span>4</span>\r\n          <span>5</span>\r\n          <span>6</span>\r\n          <span>7</span>\r\n          <span>8</span>\r\n          <span>9</span>\r\n          <span>10</span>\r\n        </Stack>\r\n      </Stack>\r\n    );\r\n  }\r\n\r\n  private _onWidthChange = (value: number): void => {\r\n    this.setState({ stackWidth: value });\r\n  };\r\n}\r\n"]}