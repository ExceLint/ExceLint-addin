{"version":3,"file":"Stack.Vertical.WrapNested.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Vertical.WrapNested.Example.tsx"],"names":[],"mappings":";;;AAAA,WAAW;AACX,6BAA+B;AAC/B,4DAA2D;AAC3D,kCAAiC;AACjC,8DAA+F;AAM/F;IAAoD,0DAAkC;IACpF,wCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAIb;QAiHO,qBAAe,GAAG,UAAC,KAAa;YACtC,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;QACxC,CAAC,CAAC;QAtHA,KAAI,CAAC,KAAK,GAAG;YACX,WAAW,EAAE,GAAG;SACjB,CAAC;;IACJ,CAAC;IAEM,+CAAM,GAAb;QACE,IAAM,UAAU,GAAG;YACjB,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,EAAE;YACV,OAAO,EAAE,MAAM;YACf,UAAU,EAAE,QAAQ;YACpB,cAAc,EAAE,QAAQ;YACxB,KAAK,EAAE,wBAAc,CAAC,KAAK;SACX,CAAC;QAEX,IAAA,oCAAW,CAAgB;QAEnC,IAAM,MAAM,GAAG,wBAAc,CAAC;YAC5B,IAAI,EAAE;gBACJ,UAAU,EAAE,wBAAc,CAAC,aAAa;gBACxC,MAAM,EAAE,WAAW;aACpB;YAED,QAAQ,EAAE;gBACR,UAAU,EAAE,wBAAc,CAAC,eAAe;gBAC1C,SAAS,EAAE;oBACT,QAAQ,uBACH,UAAU,IACb,UAAU,EAAE,wBAAc,CAAC,YAAY,GACxC;iBACF;aACF;YAED,QAAQ,EAAE;gBACR,UAAU,EAAE,wBAAc,CAAC,gBAAgB;gBAC3C,SAAS,EAAE;oBACT,QAAQ,uBACH,UAAU,IACb,UAAU,EAAE,wBAAc,CAAC,SAAS,GACrC;iBACF;aACF;YAED,UAAU,EAAE;gBACV,UAAU,EAAE,wBAAc,CAAC,cAAc;gBACzC,SAAS,EAAE;oBACT,QAAQ,uBACH,UAAU,IACb,UAAU,EAAE,wBAAc,CAAC,WAAW,GACvC;iBACF;aACF;SACF,CAAC,CAAC;QAEH,OAAO,CACL,oBAAC,aAAK,IAAC,GAAG,EAAE,EAAE;YACZ,oBAAC,eAAM,IACL,KAAK,EAAC,4EAA4E,EAClF,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,CAAC,EACP,YAAY,EAAE,GAAG,EACjB,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,eAAe,GAC9B;YAEF,oBAAC,aAAK,IAAC,IAAI,QAAC,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC,IAAI;gBAC9C,oBAAC,aAAK,IAAC,IAAI,QAAC,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC,QAAQ;oBAClD,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,sCAAc,CACR;gBAER,oBAAC,aAAK,IAAC,IAAI,QAAC,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC,QAAQ;oBAClD,sCAAc;oBACd,sCAAc;oBACd,sCAAc,CACR;gBAER,oBAAC,aAAK,IAAC,IAAI,QAAC,SAAS,EAAE,MAAM,CAAC,UAAU;oBACtC,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,uCAAe,CACT,CACF;YAER;gBACE,uCAAY,CACP;YACP,+JAEO;YACP,0IAAkH;YAClH,2KAGO;YACP,kGAA0E;YAC1E,sKAEO,CACD,CACT,CAAC;IACJ,CAAC;IAKH,qCAAC;AAAD,CAAC,AA1HD,CAAoD,KAAK,CAAC,SAAS,GA0HlE;AA1HY,wEAA8B","sourcesContent":["// @codepen\r\nimport * as React from 'react';\r\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\r\nimport { Stack } from '../Stack';\r\nimport { mergeStyleSets, IStyleSet, DefaultPalette } from 'office-ui-fabric-react/lib/Styling';\r\n\r\nexport interface IExampleState {\r\n  stackHeight: number;\r\n}\r\n\r\nexport class VerticalStackWrapNestedExample extends React.Component<{}, IExampleState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      stackHeight: 420\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const textStyles = {\r\n      width: 50,\r\n      height: 50,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      color: DefaultPalette.white\r\n    } as IStyleSet<{}>;\r\n\r\n    const { stackHeight } = this.state;\r\n\r\n    const styles = mergeStyleSets({\r\n      root: {\r\n        background: DefaultPalette.themeTertiary,\r\n        height: stackHeight\r\n      },\r\n\r\n      stackOne: {\r\n        background: DefaultPalette.neutralTertiary,\r\n        selectors: {\r\n          '& span': {\r\n            ...textStyles,\r\n            background: DefaultPalette.themePrimary\r\n          }\r\n        }\r\n      },\r\n\r\n      stackTwo: {\r\n        background: DefaultPalette.neutralSecondary,\r\n        selectors: {\r\n          '& span': {\r\n            ...textStyles,\r\n            background: DefaultPalette.themeDark\r\n          }\r\n        }\r\n      },\r\n\r\n      stackThree: {\r\n        background: DefaultPalette.neutralPrimary,\r\n        selectors: {\r\n          '& span': {\r\n            ...textStyles,\r\n            background: DefaultPalette.themeDarker\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    return (\r\n      <Stack gap={10}>\r\n        <Slider\r\n          label=\"Change the stack height to see how child items wrap onto multiple columns:\"\r\n          min={1}\r\n          max={420}\r\n          step={1}\r\n          defaultValue={420}\r\n          showValue={true}\r\n          onChange={this._onHeightChange}\r\n        />\r\n\r\n        <Stack wrap gap={'30 40'} className={styles.root}>\r\n          <Stack wrap gap={'10 30'} className={styles.stackOne}>\r\n            <span>1</span>\r\n            <span>2</span>\r\n            <span>3</span>\r\n            <span>4</span>\r\n            <span>5</span>\r\n            <span>6</span>\r\n            <span>7</span>\r\n          </Stack>\r\n\r\n          <Stack wrap gap={'20 50'} className={styles.stackTwo}>\r\n            <span>1</span>\r\n            <span>2</span>\r\n            <span>3</span>\r\n          </Stack>\r\n\r\n          <Stack wrap className={styles.stackThree}>\r\n            <span>1</span>\r\n            <span>2</span>\r\n            <span>3</span>\r\n            <span>4</span>\r\n            <span>5</span>\r\n            <span>6</span>\r\n            <span>7</span>\r\n            <span>8</span>\r\n            <span>9</span>\r\n            <span>10</span>\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <span>\r\n          <b>Note:</b>\r\n        </span>\r\n        <span>\r\n          Support for nested wrapping of vertical flex-boxes is scarce across browsers, especially in the way they handle overflows.\r\n        </span>\r\n        <span>Most browsers don't scale the width of the flex-box when the inner items overflow and wrap around it.</span>\r\n        <span>\r\n          The one exception to this case being Microsoft Edge that handles it correctly (though this might go soon with the switch to\r\n          Chromium).\r\n        </span>\r\n        <span>There are ways in which we could have gone around this issue.</span>\r\n        <span>\r\n          However, we have chosen to adhere to the flex-box spec so that we have the correct implementation if support comes down the line.\r\n        </span>\r\n      </Stack>\r\n    );\r\n  }\r\n\r\n  private _onHeightChange = (value: number): void => {\r\n    this.setState({ stackHeight: value });\r\n  };\r\n}\r\n"]}