"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
// @codepen
var React = require("react");
var Slider_1 = require("office-ui-fabric-react/lib/Slider");
var Stack_1 = require("../Stack");
var Styling_1 = require("office-ui-fabric-react/lib/Styling");
var HorizontalStackWrapNestedExample = /** @class */ (function (_super) {
    tslib_1.__extends(HorizontalStackWrapNestedExample, _super);
    function HorizontalStackWrapNestedExample(props) {
        var _this = _super.call(this, props) || this;
        _this._onWidthChange = function (value) {
            _this.setState({ stackWidth: value });
        };
        _this.state = {
            stackWidth: 100
        };
        return _this;
    }
    HorizontalStackWrapNestedExample.prototype.render = function () {
        var textStyles = {
            width: 50,
            height: 50,
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            color: Styling_1.DefaultPalette.white
        };
        var styles = Styling_1.mergeStyleSets({
            root: {
                background: Styling_1.DefaultPalette.themeTertiary,
                width: this.state.stackWidth + "%"
            },
            stackOne: {
                background: Styling_1.DefaultPalette.neutralTertiary,
                selectors: {
                    '& span': tslib_1.__assign({}, textStyles, { background: Styling_1.DefaultPalette.themePrimary })
                }
            },
            stackTwo: {
                background: Styling_1.DefaultPalette.neutralSecondary,
                selectors: {
                    '& span': tslib_1.__assign({}, textStyles, { background: Styling_1.DefaultPalette.themeDark })
                }
            },
            stackThree: {
                background: Styling_1.DefaultPalette.neutralPrimary,
                selectors: {
                    '& span': tslib_1.__assign({}, textStyles, { background: Styling_1.DefaultPalette.themeDarker })
                }
            }
        });
        return (React.createElement(Stack_1.Stack, { gap: 10 },
            React.createElement(Slider_1.Slider, { label: "Change the stack width to see how child items wrap onto multiple rows:", min: 1, max: 100, step: 1, defaultValue: 100, showValue: true, onChange: this._onWidthChange }),
            React.createElement(Stack_1.Stack, { horizontal: true, wrap: true, gap: '30 40', className: styles.root },
                React.createElement(Stack_1.Stack, { horizontal: true, wrap: true, gap: '10 30', className: styles.stackOne },
                    React.createElement("span", null, "1"),
                    React.createElement("span", null, "2"),
                    React.createElement("span", null, "3"),
                    React.createElement("span", null, "4"),
                    React.createElement("span", null, "5"),
                    React.createElement("span", null, "6"),
                    React.createElement("span", null, "7")),
                React.createElement(Stack_1.Stack, { horizontal: true, wrap: true, gap: '20 50', className: styles.stackTwo },
                    React.createElement("span", null, "1"),
                    React.createElement("span", null, "2"),
                    React.createElement("span", null, "3")),
                React.createElement(Stack_1.Stack, { horizontal: true, wrap: true, className: styles.stackThree },
                    React.createElement("span", null, "1"),
                    React.createElement("span", null, "2"),
                    React.createElement("span", null, "3"),
                    React.createElement("span", null, "4"),
                    React.createElement("span", null, "5"),
                    React.createElement("span", null, "6"),
                    React.createElement("span", null, "7"),
                    React.createElement("span", null, "8"),
                    React.createElement("span", null, "9"),
                    React.createElement("span", null, "10")))));
    };
    return HorizontalStackWrapNestedExample;
}(React.Component));
exports.HorizontalStackWrapNestedExample = HorizontalStackWrapNestedExample;
//# sourceMappingURL=Stack.Horizontal.WrapNested.Example.js.map