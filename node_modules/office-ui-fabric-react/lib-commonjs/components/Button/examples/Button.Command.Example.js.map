{"version":3,"file":"Button.Command.Example.js","sourceRoot":"../src/","sources":["components/Button/examples/Button.Command.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4DAAgF;AAChF,0DAAyD;AACzD,kEAA+E;AAC/E,6EAAoH;AAEpH;IAA0C,gDAAiC;IAA3E;;IA6DA,CAAC;IA5DQ,qCAAM,GAAb;QACQ,IAAA,eAAkC,EAAhC,sBAAQ,EAAE,oBAAO,CAAgB;QAEzC,IAAM,aAAa,GAAG,8BAAkB,EAA4D,CAAC;QACrG,IAAM,UAAU,GAAG,aAAa,CAAC,uCAAS,EAAE,EAAE,CAAC,CAAC;QAEhD,OAAO,CACL,6BAAK,SAAS,EAAE,eAAG,CAAC,UAAU,CAAC,KAAK,CAAC;YACnC;gBACE,oBAAC,aAAK,6CAA2C;gBACjD,oBAAC,sBAAa,0BACO,MAAM,EACzB,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,EAChB,SAAS,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAC9B,IAAI,EAAC,gBAAgB,EACrB,SAAS,EAAE;wBACT,KAAK,EAAE;4BACL;gCACE,GAAG,EAAE,cAAc;gCACnB,IAAI,EAAE,eAAe;gCACrB,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE;6BAChC;4BACD;gCACE,GAAG,EAAE,eAAe;gCACpB,IAAI,EAAE,gBAAgB;gCACtB,SAAS,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE;6BACpC;yBACF;qBACF,GACD,CACE;YACN;gBACE,oBAAC,aAAK,mDAAiD;gBACvD,oBAAC,sBAAa,0BACO,MAAM,EACzB,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,EAChB,SAAS,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAC9B,IAAI,EAAC,gBAAgB,EACrB,SAAS,EAAE;wBACT,kBAAkB,EAAE,KAAK;wBACzB,KAAK,EAAE;4BACL;gCACE,GAAG,EAAE,cAAc;gCACnB,IAAI,EAAE,eAAe;gCACrB,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE;6BAChC;4BACD;gCACE,GAAG,EAAE,eAAe;gCACpB,IAAI,EAAE,gBAAgB;gCACtB,SAAS,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE;6BACpC;yBACF;qBACF,GACD,CACE,CACF,CACP,CAAC;IACJ,CAAC;IACH,2BAAC;AAAD,CAAC,AA7DD,CAA0C,KAAK,CAAC,SAAS,GA6DxD;AA7DY,oDAAoB","sourcesContent":["import * as React from 'react';\r\nimport { CommandButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { css, classNamesFunction } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { getStyles, IButtonBasicExampleStyleProps, IButtonBasicExampleStyles } from './Button.Basic.Example.styles';\r\n\r\nexport class ButtonCommandExample extends React.Component<IButtonProps, {}> {\r\n  public render(): JSX.Element {\r\n    const { disabled, checked } = this.props;\r\n\r\n    const getClassNames = classNamesFunction<IButtonBasicExampleStyleProps, IButtonBasicExampleStyles>();\r\n    const classNames = getClassNames(getStyles, {});\r\n\r\n    return (\r\n      <div className={css(classNames.twoup)}>\r\n        <div>\r\n          <Label>CommandButton that focuses on menu</Label>\r\n          <CommandButton\r\n            data-automation-id=\"test\"\r\n            disabled={disabled}\r\n            checked={checked}\r\n            iconProps={{ iconName: 'Add' }}\r\n            text=\"Create account\"\r\n            menuProps={{\r\n              items: [\r\n                {\r\n                  key: 'emailMessage',\r\n                  text: 'Email message',\r\n                  iconProps: { iconName: 'Mail' }\r\n                },\r\n                {\r\n                  key: 'calendarEvent',\r\n                  text: 'Calendar event',\r\n                  iconProps: { iconName: 'Calendar' }\r\n                }\r\n              ]\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Label>CommandButton that doesn't focus on menu</Label>\r\n          <CommandButton\r\n            data-automation-id=\"test\"\r\n            disabled={disabled}\r\n            checked={checked}\r\n            iconProps={{ iconName: 'Add' }}\r\n            text=\"Create account\"\r\n            menuProps={{\r\n              shouldFocusOnMount: false,\r\n              items: [\r\n                {\r\n                  key: 'emailMessage',\r\n                  text: 'Email message',\r\n                  iconProps: { iconName: 'Mail' }\r\n                },\r\n                {\r\n                  key: 'calendarEvent',\r\n                  text: 'Calendar event',\r\n                  iconProps: { iconName: 'Calendar' }\r\n                }\r\n              ]\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}