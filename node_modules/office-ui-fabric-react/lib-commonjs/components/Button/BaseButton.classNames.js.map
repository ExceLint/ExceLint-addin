{"version":3,"file":"BaseButton.classNames.js","sourceRoot":"../src/","sources":["components/Button/BaseButton.classNames.ts"],"names":[],"mappings":"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","sourcesContent":["import { memoizeFunction } from '../../Utilities';\r\nimport { ITheme, mergeStyleSets } from '../../Styling';\r\nimport { IButtonStyles } from './Button.types';\r\nimport { getGlobalClassNames } from '../../Styling';\r\n\r\nexport interface IButtonClassNames {\r\n  root?: string;\r\n  flexContainer?: string;\r\n  textContainer?: string;\r\n  icon?: string;\r\n  label?: string;\r\n  menuIcon?: string;\r\n  description?: string;\r\n  screenReaderText?: string;\r\n}\r\n\r\nexport const ButtonGlobalClassNames = {\r\n  msButton: 'ms-Button',\r\n  msButtonIcon: 'ms-Button-icon',\r\n  msButtonMenuIcon: 'ms-Button-menuIcon',\r\n  msButtonLabel: 'ms-Button-label',\r\n  msButtonDescription: 'ms-Button-description',\r\n  msButtonScreenReaderText: 'ms-Button-screenReaderText',\r\n  msButtonFlexContainer: 'ms-Button-flexContainer',\r\n  msButtonTextContainer: 'ms-Button-textContainer'\r\n};\r\n\r\nexport const getBaseButtonClassNames = memoizeFunction(\r\n  (\r\n    theme: ITheme,\r\n    styles: IButtonStyles,\r\n    className: string,\r\n    variantClassName: string,\r\n    iconClassName: string | undefined,\r\n    menuIconClassName: string | undefined,\r\n    disabled: boolean,\r\n    checked: boolean,\r\n    expanded: boolean,\r\n    isSplit: boolean | undefined\r\n  ): IButtonClassNames => {\r\n    const classNames = getGlobalClassNames(ButtonGlobalClassNames, theme || {});\r\n\r\n    const isExpanded = expanded && !isSplit;\r\n    return mergeStyleSets({\r\n      root: [\r\n        classNames.msButton,\r\n        styles.root,\r\n        variantClassName,\r\n        checked && ['is-checked', styles.rootChecked],\r\n        isExpanded && [\r\n          'is-expanded',\r\n          styles.rootExpanded,\r\n          {\r\n            selectors: {\r\n              [`:hover .${classNames.msButtonIcon}`]: styles.iconExpandedHovered,\r\n              // menuIcon falls back to rootExpandedHovered to support original behavior\r\n              [`:hover .${classNames.msButtonMenuIcon}`]: styles.menuIconExpandedHovered || styles.rootExpandedHovered,\r\n              ':hover': styles.rootExpandedHovered\r\n            }\r\n          }\r\n        ],\r\n        disabled && ['is-disabled', styles.rootDisabled],\r\n        !disabled &&\r\n          !isExpanded &&\r\n          !checked && {\r\n            selectors: {\r\n              ':hover': styles.rootHovered,\r\n              [`:hover .${classNames.msButtonLabel}`]: styles.labelHovered,\r\n              [`:hover .${classNames.msButtonIcon}`]: styles.iconHovered,\r\n              [`:hover .${classNames.msButtonDescription}`]: styles.descriptionHovered,\r\n              [`:hover .${classNames.msButtonMenuIcon}`]: styles.menuIconHovered,\r\n              ':focus': styles.rootFocused,\r\n              ':active': styles.rootPressed,\r\n              [`:active .${classNames.msButtonIcon}`]: styles.iconPressed,\r\n              [`:active .${classNames.msButtonDescription}`]: styles.descriptionPressed,\r\n              [`:active .${classNames.msButtonMenuIcon}`]: styles.menuIconPressed\r\n            }\r\n          },\r\n        disabled && checked && [styles.rootCheckedDisabled],\r\n        !disabled &&\r\n          checked && {\r\n            selectors: {\r\n              ':hover': styles.rootCheckedHovered,\r\n              ':active': styles.rootCheckedPressed\r\n            }\r\n          },\r\n        className\r\n      ],\r\n      flexContainer: [classNames.msButtonFlexContainer, styles.flexContainer],\r\n      textContainer: [classNames.msButtonTextContainer, styles.textContainer],\r\n      icon: [\r\n        classNames.msButtonIcon,\r\n        iconClassName,\r\n        styles.icon,\r\n        isExpanded && styles.iconExpanded,\r\n        checked && styles.iconChecked,\r\n        disabled && styles.iconDisabled\r\n      ],\r\n      label: [classNames.msButtonLabel, styles.label, checked && styles.labelChecked, disabled && styles.labelDisabled],\r\n      menuIcon: [\r\n        classNames.msButtonMenuIcon,\r\n        menuIconClassName,\r\n        styles.menuIcon,\r\n        checked && styles.menuIconChecked,\r\n        disabled && styles.menuIconDisabled,\r\n        !disabled &&\r\n          !isExpanded &&\r\n          !checked && {\r\n            selectors: {\r\n              ':hover': styles.menuIconHovered,\r\n              ':active': styles.menuIconPressed\r\n            }\r\n          },\r\n        isExpanded && ['is-expanded', styles.menuIconExpanded]\r\n      ],\r\n      description: [\r\n        classNames.msButtonDescription,\r\n        styles.description,\r\n        checked && styles.descriptionChecked,\r\n        disabled && styles.descriptionDisabled\r\n      ],\r\n      screenReaderText: [classNames.msButtonScreenReaderText, styles.screenReaderText]\r\n    });\r\n  }\r\n);\r\n"]}