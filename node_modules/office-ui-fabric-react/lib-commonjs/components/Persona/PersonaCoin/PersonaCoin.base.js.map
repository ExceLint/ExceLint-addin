{"version":3,"file":"PersonaCoin.base.js","sourceRoot":"../src/","sources":["components/Persona/PersonaCoin/PersonaCoin.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, classNamesFunction, divProperties, getInitials, getNativeProps, getRTL } from '../../../Utilities';\r\nimport { mergeStyles } from '../../../Styling';\r\nimport { PersonaPresence } from '../PersonaPresence/index';\r\nimport { Icon } from '../../../Icon';\r\nimport { Image, ImageFit, ImageLoadState } from '../../../Image';\r\nimport {\r\n  IPersonaCoinProps,\r\n  IPersonaCoinStyleProps,\r\n  IPersonaCoinStyles,\r\n  IPersonaPresenceProps,\r\n  PersonaPresence as PersonaPresenceEnum,\r\n  PersonaSize\r\n} from '../Persona.types';\r\nimport { initialsColorPropToColorCode } from '../PersonaInitialsColor';\r\nimport { sizeToPixels } from '../PersonaConsts';\r\n\r\nconst getClassNames = classNamesFunction<IPersonaCoinStyleProps, IPersonaCoinStyles>();\r\n\r\nexport interface IPersonaState {\r\n  isImageLoaded?: boolean;\r\n  isImageError?: boolean;\r\n}\r\n\r\n/**\r\n * PersonaCoin with no default styles.\r\n * [Use the `getStyles` API to add your own styles.](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Styling)\r\n */\r\nexport class PersonaCoinBase extends BaseComponent<IPersonaCoinProps, IPersonaState> {\r\n  public static defaultProps: IPersonaCoinProps = {\r\n    size: PersonaSize.size48,\r\n    presence: PersonaPresenceEnum.none,\r\n    imageAlt: ''\r\n  };\r\n\r\n  constructor(props: IPersonaCoinProps) {\r\n    super(props);\r\n\r\n    this._warnDeprecations({ primaryText: 'text' });\r\n\r\n    this.state = {\r\n      isImageLoaded: false,\r\n      isImageError: false\r\n    };\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: IPersonaCoinProps): void {\r\n    if (nextProps.imageUrl !== this.props.imageUrl) {\r\n      this.setState({\r\n        isImageLoaded: false,\r\n        isImageError: false\r\n      });\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element | null {\r\n    const {\r\n      className,\r\n      coinProps,\r\n      showUnknownPersonaCoin,\r\n      coinSize,\r\n      styles,\r\n      imageUrl,\r\n      onRenderCoin = this._onRenderCoin,\r\n      onRenderInitials = this._onRenderInitials,\r\n      presence,\r\n      showInitialsUntilImageLoads,\r\n      theme\r\n    } = this.props;\r\n\r\n    const size = this.props.size as PersonaSize;\r\n    const divProps = getNativeProps(this.props, divProperties);\r\n    const divCoinProps = getNativeProps(coinProps || {}, divProperties);\r\n    const coinSizeStyle = coinSize ? { width: coinSize, height: coinSize } : undefined;\r\n    const hideImage = showUnknownPersonaCoin;\r\n\r\n    const personaPresenceProps: IPersonaPresenceProps = {\r\n      coinSize,\r\n      presence,\r\n      size,\r\n      theme\r\n    };\r\n\r\n    // Use getStyles from props, or fall back to getStyles from styles file.\r\n    const classNames = getClassNames(styles, {\r\n      theme: theme!,\r\n      className: coinProps && coinProps.className ? coinProps.className : className,\r\n      size,\r\n      coinSize,\r\n      showUnknownPersonaCoin\r\n    });\r\n\r\n    const shouldRenderInitials = Boolean(\r\n      !this.state.isImageLoaded && ((showInitialsUntilImageLoads && imageUrl) || !imageUrl || this.state.isImageError || hideImage)\r\n    );\r\n\r\n    return (\r\n      <div {...divProps} className={classNames.coin}>\r\n        {// Render PersonaCoin if size is not size10\r\n        size !== PersonaSize.size10 && size !== PersonaSize.tiny ? (\r\n          <div {...divCoinProps} className={classNames.imageArea} style={coinSizeStyle}>\r\n            {shouldRenderInitials && (\r\n              <div\r\n                className={mergeStyles(\r\n                  classNames.initials,\r\n                  !showUnknownPersonaCoin && { backgroundColor: initialsColorPropToColorCode(this.props) }\r\n                )}\r\n                style={coinSizeStyle}\r\n                aria-hidden=\"true\"\r\n              >\r\n                {onRenderInitials(this.props, this._onRenderInitials)}\r\n              </div>\r\n            )}\r\n            {!hideImage && onRenderCoin(this.props, this._onRenderCoin)}\r\n            <PersonaPresence {...personaPresenceProps} />\r\n          </div>\r\n        ) : // Otherwise, render just PersonaPresence.\r\n        this.props.presence ? (\r\n          <PersonaPresence {...personaPresenceProps} />\r\n        ) : (\r\n          // Just render Contact Icon if there isn't a Presence prop.\r\n          <Icon iconName=\"Contact\" className={classNames.size10WithoutPresenceIcon} />\r\n        )}\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderCoin = (props: IPersonaCoinProps): JSX.Element | null => {\r\n    const { coinSize, styles, imageUrl, imageAlt, imageShouldFadeIn, imageShouldStartVisible, theme, showUnknownPersonaCoin } = this.props;\r\n\r\n    // Render the Image component only if an image URL is provided\r\n    if (!imageUrl) {\r\n      return null;\r\n    }\r\n\r\n    const size = this.props.size as PersonaSize;\r\n\r\n    const classNames = getClassNames(styles, {\r\n      theme: theme!,\r\n      size,\r\n      showUnknownPersonaCoin\r\n    });\r\n\r\n    const dimension = coinSize || sizeToPixels[size];\r\n\r\n    return (\r\n      <Image\r\n        className={classNames.image}\r\n        imageFit={ImageFit.cover}\r\n        src={imageUrl}\r\n        width={dimension}\r\n        height={dimension}\r\n        alt={imageAlt}\r\n        shouldFadeIn={imageShouldFadeIn}\r\n        shouldStartVisible={imageShouldStartVisible}\r\n        onLoadingStateChange={this._onPhotoLoadingStateChange}\r\n      />\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Deprecation helper for getting text.\r\n   */\r\n  private _getText(): string {\r\n    return this.props.text || this.props.primaryText || '';\r\n  }\r\n\r\n  private _onRenderInitials = (props: IPersonaCoinProps): JSX.Element => {\r\n    let { imageInitials } = props;\r\n    const { allowPhoneInitials, showUnknownPersonaCoin } = props;\r\n\r\n    if (showUnknownPersonaCoin) {\r\n      return <Icon iconName=\"Help\" />;\r\n    }\r\n\r\n    const isRTL = getRTL();\r\n\r\n    imageInitials = imageInitials || getInitials(this._getText(), isRTL, allowPhoneInitials);\r\n\r\n    return imageInitials !== '' ? <span>{imageInitials}</span> : <Icon iconName=\"Contact\" />;\r\n  };\r\n\r\n  private _onPhotoLoadingStateChange = (loadState: ImageLoadState) => {\r\n    this.setState({\r\n      isImageLoaded: loadState === ImageLoadState.loaded,\r\n      isImageError: loadState === ImageLoadState.error\r\n    });\r\n\r\n    this.props.onPhotoLoadingStateChange && this.props.onPhotoLoadingStateChange(loadState);\r\n  };\r\n}\r\n"]}