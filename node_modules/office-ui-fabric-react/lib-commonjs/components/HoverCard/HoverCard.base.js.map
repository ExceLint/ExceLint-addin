{"version":3,"file":"HoverCard.base.js","sourceRoot":"../src/","sources":["components/HoverCard/HoverCard.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\n\r\nimport { BaseComponent, divProperties, getNativeProps, getId, KeyCodes, getDocument, createRef, classNamesFunction } from '../../Utilities';\r\nimport { IHoverCardProps, IHoverCardStyles, IHoverCardStyleProps, OpenCardMode, HoverCardType, IHoverCard } from './HoverCard.types';\r\nimport { ExpandingCard } from './ExpandingCard';\r\nimport { ExpandingCardMode, IExpandingCardProps } from './ExpandingCard.types';\r\nimport { PlainCard } from './PlainCard/PlainCard';\r\nimport { IPlainCardProps } from './PlainCard/PlainCard.types';\r\n\r\nconst getClassNames = classNamesFunction<IHoverCardStyleProps, IHoverCardStyles>();\r\n\r\nexport interface IHoverCardState {\r\n  isHoverCardVisible?: boolean;\r\n  mode?: ExpandingCardMode;\r\n  openMode?: OpenCardMode;\r\n}\r\n\r\nexport class HoverCardBase extends BaseComponent<IHoverCardProps, IHoverCardState> implements IHoverCard {\r\n  public static defaultProps = {\r\n    cardOpenDelay: 500,\r\n    cardDismissDelay: 100,\r\n    expandedCardOpenDelay: 1500,\r\n    instantOpenOnClick: false,\r\n    setInitialFocus: false,\r\n    openHotKey: KeyCodes.c as KeyCodes,\r\n    type: HoverCardType.expanding\r\n  };\r\n\r\n  // The wrapping div that gets the hover events\r\n  private _hoverCard = createRef<HTMLDivElement>();\r\n  private _dismissTimerId: number;\r\n  private _openTimerId: number;\r\n  private _currentMouseTarget: EventTarget | null;\r\n\r\n  private _nativeDismissEvent: (ev?: any) => void;\r\n  private _childDismissEvent: (ev?: any) => void;\r\n\r\n  private _classNames: { [key in keyof IHoverCardStyles]: string };\r\n\r\n  // Constructor\r\n  constructor(props: IHoverCardProps) {\r\n    super(props);\r\n\r\n    this._nativeDismissEvent = this._cardDismiss.bind(this, true);\r\n    this._childDismissEvent = this._cardDismiss.bind(this, false);\r\n\r\n    this.state = {\r\n      isHoverCardVisible: false,\r\n      mode: ExpandingCardMode.compact,\r\n      openMode: OpenCardMode.hover\r\n    };\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this._setEventListeners();\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IHoverCardProps, prevState: IHoverCardState) {\r\n    if (prevProps.target !== this.props.target) {\r\n      this._events.off();\r\n      this._setEventListeners();\r\n    }\r\n\r\n    if (prevState.isHoverCardVisible !== this.state.isHoverCardVisible) {\r\n      if (this.state.isHoverCardVisible) {\r\n        this._async.setTimeout(() => {\r\n          this.setState(\r\n            {\r\n              mode: ExpandingCardMode.expanded\r\n            },\r\n            () => {\r\n              this.props.onCardExpand && this.props.onCardExpand();\r\n            }\r\n          );\r\n        }, this.props.expandedCardOpenDelay!);\r\n        this.props.onCardVisible && this.props.onCardVisible();\r\n      } else {\r\n        this.setState({\r\n          mode: ExpandingCardMode.compact\r\n        });\r\n        this.props.onCardHide && this.props.onCardHide();\r\n      }\r\n    }\r\n  }\r\n\r\n  public dismiss = (withTimeOut?: boolean): void => {\r\n    this._async.clearTimeout(this._openTimerId);\r\n    this._async.clearTimeout(this._dismissTimerId);\r\n    if (!withTimeOut) {\r\n      this._setDismissedState();\r\n    } else {\r\n      this._dismissTimerId = this._async.setTimeout(() => {\r\n        this._setDismissedState();\r\n      }, this.props.cardDismissDelay!);\r\n    }\r\n  };\r\n\r\n  // Render\r\n  public render(): JSX.Element {\r\n    const {\r\n      expandingCardProps,\r\n      children,\r\n      id,\r\n      setAriaDescribedBy = true,\r\n      styles: customStyles,\r\n      theme,\r\n      className,\r\n      type,\r\n      plainCardProps,\r\n      trapFocus,\r\n      setInitialFocus\r\n    } = this.props;\r\n    const { isHoverCardVisible, mode, openMode } = this.state;\r\n    const hoverCardId = id || getId('hoverCard');\r\n\r\n    this._classNames = getClassNames(customStyles, {\r\n      theme: theme!,\r\n      className\r\n    });\r\n\r\n    // Common props for both card types.\r\n    const commonCardProps = {\r\n      ...getNativeProps(this.props, divProperties),\r\n      id: hoverCardId,\r\n      trapFocus: !!trapFocus,\r\n      firstFocus: setInitialFocus || openMode === OpenCardMode.hotKey,\r\n      targetElement: this._getTargetElement(),\r\n      onEnter: this._cardOpen,\r\n      onLeave: this._childDismissEvent\r\n    };\r\n\r\n    const finalExpandedCardProps: IExpandingCardProps = { ...expandingCardProps, ...commonCardProps, mode };\r\n    const finalPlainCardProps: IPlainCardProps = { ...plainCardProps, ...commonCardProps };\r\n\r\n    return (\r\n      <div\r\n        className={this._classNames.host}\r\n        ref={this._hoverCard}\r\n        aria-describedby={setAriaDescribedBy && isHoverCardVisible ? hoverCardId : undefined}\r\n        data-is-focusable={!Boolean(this.props.target)}\r\n      >\r\n        {children}\r\n        {isHoverCardVisible &&\r\n          (type === HoverCardType.expanding ? <ExpandingCard {...finalExpandedCardProps} /> : <PlainCard {...finalPlainCardProps} />)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _getTargetElement(): HTMLElement | undefined {\r\n    const { target } = this.props;\r\n\r\n    switch (typeof target) {\r\n      case 'string':\r\n        return getDocument()!.querySelector(target as string) as HTMLElement;\r\n\r\n      case 'object':\r\n        return target as HTMLElement;\r\n\r\n      default:\r\n        return this._hoverCard.current || undefined;\r\n    }\r\n  }\r\n\r\n  private _shouldBlockHoverCard(): boolean {\r\n    return !!(this.props.shouldBlockHoverCard && this.props.shouldBlockHoverCard());\r\n  }\r\n\r\n  // Show HoverCard\r\n  private _cardOpen = (ev: MouseEvent): void => {\r\n    if (this._shouldBlockHoverCard() || (ev.type === 'keydown' && !(ev.which === this.props.openHotKey))) {\r\n      return;\r\n    }\r\n    this._async.clearTimeout(this._dismissTimerId);\r\n    if (ev.type === 'mouseenter') {\r\n      this._currentMouseTarget = ev.currentTarget;\r\n    }\r\n\r\n    this._executeCardOpen(ev);\r\n  };\r\n\r\n  private _executeCardOpen = (ev: MouseEvent): void => {\r\n    this._async.clearTimeout(this._openTimerId);\r\n    this._openTimerId = this._async.setTimeout(() => {\r\n      this.setState((prevState: IHoverCardState) => {\r\n        if (!prevState.isHoverCardVisible) {\r\n          return {\r\n            isHoverCardVisible: true,\r\n            mode: ExpandingCardMode.compact,\r\n            openMode: ev.type === 'keydown' ? OpenCardMode.hotKey : OpenCardMode.hover\r\n          };\r\n        }\r\n\r\n        return prevState;\r\n      });\r\n    }, this.props.cardOpenDelay!);\r\n  };\r\n\r\n  /**\r\n   * Hide HoverCard\r\n   * How we dismiss the card depends on where the callback is coming from.\r\n   * This is provided by the `isNativeEvent` argument.\r\n   *  true: Event is coming from event listeners set up in componentDidMount.\r\n   *  false: Event is coming from the `onLeave` prop from the HoverCard component.\r\n   */\r\n  private _cardDismiss = (isNativeEvent: boolean, ev: MouseEvent | React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\r\n    if (isNativeEvent) {\r\n      // We expect these to be MouseEvents, If not, return.\r\n      if (!(ev instanceof MouseEvent)) {\r\n        return;\r\n      }\r\n\r\n      if (ev.type === 'keydown' && ev.which !== KeyCodes.escape) {\r\n        return;\r\n      }\r\n\r\n      // Dismiss if not sticky and currentTarget is the same element that mouse last entered\r\n      if (!this.props.sticky && (this._currentMouseTarget === ev.currentTarget || ev.which === KeyCodes.escape)) {\r\n        this.dismiss(true);\r\n      }\r\n    } else {\r\n      // If this is a mouseleave event and the component is sticky, do not dismiss.\r\n      if (this.props.sticky && !(ev instanceof MouseEvent) && ev.nativeEvent instanceof MouseEvent && ev.type === 'mouseleave') {\r\n        return;\r\n      }\r\n\r\n      this.dismiss(true);\r\n    }\r\n  };\r\n\r\n  private _setDismissedState = () => {\r\n    this.setState({\r\n      isHoverCardVisible: false,\r\n      mode: ExpandingCardMode.compact,\r\n      openMode: OpenCardMode.hover\r\n    });\r\n  };\r\n\r\n  private _instantOpenAsExpanded = (ev: React.MouseEvent<HTMLDivElement>): void => {\r\n    this._async.clearTimeout(this._dismissTimerId);\r\n\r\n    this.setState((prevState: IHoverCardState) => {\r\n      if (!prevState.isHoverCardVisible) {\r\n        return {\r\n          isHoverCardVisible: true,\r\n          mode: ExpandingCardMode.expanded\r\n        };\r\n      }\r\n\r\n      return prevState;\r\n    });\r\n  };\r\n\r\n  private _setEventListeners = (): void => {\r\n    const { trapFocus, instantOpenOnClick } = this.props;\r\n    const target = this._getTargetElement();\r\n    const nativeEventDismiss = this._nativeDismissEvent;\r\n\r\n    this._events.on(target, 'mouseenter', this._cardOpen);\r\n    this._events.on(target, 'mouseleave', nativeEventDismiss);\r\n    if (trapFocus) {\r\n      this._events.on(target, 'keydown', this._cardOpen);\r\n    } else {\r\n      this._events.on(target, 'focus', this._cardOpen);\r\n      this._events.on(target, 'blur', nativeEventDismiss);\r\n    }\r\n    if (instantOpenOnClick) {\r\n      this._events.on(target, 'click', this._instantOpenAsExpanded);\r\n    } else {\r\n      this._events.on(target, 'mousedown', nativeEventDismiss);\r\n      this._events.on(target, 'keydown', nativeEventDismiss);\r\n    }\r\n  };\r\n}\r\n"]}