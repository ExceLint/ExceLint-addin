{"version":3,"file":"FacepileButton.styles.js","sourceRoot":"../src/","sources":["components/Facepile/FacepileButton.styles.ts"],"names":[],"mappings":";;;AAAA,yCAAwD;AACxD,6CAAkD;AAElD,iEAA+E;AAElE,QAAA,SAAS,GAAG,2BAAe,CACtC,UAAC,KAAa,EAAE,SAAkB,EAAE,YAA4B;IAC9D,IAAM,gBAAgB,GAAkB,6BAAmB,CAAC,KAAK,CAAC,CAAC;IAEnE,IAAM,kBAAkB,GAAG,yBAAe,CAAC,gBAAgB,EAAE,YAAY,CAAE,CAAC;IAE5E,OAAO,sCACF,kBAAkB,KACrB,IAAI,EAAE,CAAC,gBAAgB,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,YAAY,IAAI,YAAY,CAAC,IAAI,CAAC,GAC/E,CAAC;AACrB,CAAC,CACF,CAAC","sourcesContent":["import { ITheme, concatStyleSets } from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nimport { IButtonStyles } from '../../Button';\nimport { getStyles as getBaseButtonStyles } from '../Button/BaseButton.styles';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, className?: string, customStyles?: IButtonStyles): IButtonStyles => {\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n\n    const customButtonStyles = concatStyleSets(baseButtonStyles, customStyles)!;\n\n    return {\n      ...customButtonStyles,\n      root: [baseButtonStyles.root, className, theme.fonts.medium, customStyles && customStyles.root],\n    } as IButtonStyles;\n  },\n);\n"]}