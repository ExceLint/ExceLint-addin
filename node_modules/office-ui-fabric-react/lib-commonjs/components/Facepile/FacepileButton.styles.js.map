{"version":3,"file":"FacepileButton.styles.js","sourceRoot":"../src/","sources":["components/Facepile/FacepileButton.styles.ts"],"names":[],"mappings":";;;AAAA,yCAAwD;AACxD,6CAAkD;AAElD,iEAA+E;AAElE,QAAA,SAAS,GAAG,2BAAe,CACtC,UAAC,KAAa,EAAE,SAAkB,EAAE,YAA4B;IAC9D,IAAM,gBAAgB,GAAkB,6BAAmB,CAAC,KAAK,CAAC,CAAC;IAEnE,IAAM,kBAAkB,GAAG,yBAAe,CAAC,gBAAgB,EAAE,YAAY,CAAE,CAAC;IAE5E,OAAO,qBACF,kBAAkB,IACrB,IAAI,EAAE,CAAC,gBAAgB,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,YAAY,IAAI,YAAY,CAAC,IAAI,CAAC,GAC/E,CAAC;AACrB,CAAC,CACF,CAAC","sourcesContent":["import { ITheme, concatStyleSets } from '../../Styling';\r\nimport { memoizeFunction } from '../../Utilities';\r\nimport { IButtonStyles } from '../../Button';\r\nimport { getStyles as getBaseButtonStyles } from '../Button/BaseButton.styles';\r\n\r\nexport const getStyles = memoizeFunction(\r\n  (theme: ITheme, className?: string, customStyles?: IButtonStyles): IButtonStyles => {\r\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\r\n\r\n    const customButtonStyles = concatStyleSets(baseButtonStyles, customStyles)!;\r\n\r\n    return {\r\n      ...customButtonStyles,\r\n      root: [baseButtonStyles.root, className, theme.fonts.medium, customStyles && customStyles.root]\r\n    } as IButtonStyles;\r\n  }\r\n);\r\n"]}