{"version":3,"file":"OverflowSet.Custom.Example.js","sourceRoot":"../src/","sources":["components/OverflowSet/examples/OverflowSet.Custom.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { CommandBarButton, IButtonStyles } from 'office-ui-fabric-react/lib/Button';\r\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\r\nimport { IOverflowSetItemProps, OverflowSet } from 'office-ui-fabric-react/lib/OverflowSet';\r\n\r\nconst noOp = () => undefined;\r\n\r\nexport class OverflowSetCustomExample extends React.PureComponent {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <OverflowSet\r\n        items={[\r\n          {\r\n            key: 'search',\r\n            onRender: () => {\r\n              return <SearchBox placeholder=\"Search\" styles={{ root: { marginBottom: 0, width: 200 } }} />;\r\n            }\r\n          },\r\n          {\r\n            key: 'newItem',\r\n            name: 'New',\r\n            icon: 'Add',\r\n            ariaLabel: 'New. Use left and right arrow keys to navigate',\r\n            onClick: noOp,\r\n            subMenuProps: {\r\n              items: [\r\n                {\r\n                  key: 'emailMessage',\r\n                  name: 'Email message',\r\n                  icon: 'Mail'\r\n                },\r\n                {\r\n                  key: 'calendarEvent',\r\n                  name: 'Calendar event',\r\n                  icon: 'Calendar'\r\n                }\r\n              ]\r\n            }\r\n          },\r\n          {\r\n            key: 'upload',\r\n            name: 'Upload',\r\n            icon: 'Upload',\r\n            onClick: noOp\r\n          },\r\n          {\r\n            key: 'share',\r\n            name: 'Share',\r\n            icon: 'Share',\r\n            onClick: noOp\r\n          }\r\n        ]}\r\n        overflowItems={[\r\n          {\r\n            key: 'newItem',\r\n            name: 'Add',\r\n            icon: 'Add',\r\n            ariaLabel: 'New. Use left and right arrow keys to navigate',\r\n            onClick: noOp,\r\n            subMenuProps: {\r\n              items: [\r\n                {\r\n                  key: 'emailMessage',\r\n                  name: 'Email message',\r\n                  icon: 'Mail'\r\n                },\r\n                {\r\n                  key: 'calendarEvent',\r\n                  name: 'Calendar event',\r\n                  icon: 'Calendar'\r\n                }\r\n              ]\r\n            }\r\n          },\r\n          {\r\n            key: 'move',\r\n            name: 'Move to...',\r\n            icon: 'MoveToFolder',\r\n            onClick: noOp\r\n          },\r\n          {\r\n            key: 'copy',\r\n            name: 'Copy to...',\r\n            icon: 'Copy',\r\n            onClick: noOp\r\n          },\r\n          {\r\n            key: 'rename',\r\n            name: 'Rename...',\r\n            icon: 'Edit',\r\n            onClick: noOp\r\n          },\r\n          {\r\n            key: 'disabled',\r\n            name: 'Disabled...',\r\n            icon: 'Cancel',\r\n            disabled: true,\r\n            onClick: noOp\r\n          }\r\n        ]}\r\n        onRenderOverflowButton={this._onRenderOverflowButton}\r\n        onRenderItem={this._onRenderItem}\r\n      />\r\n    );\r\n  }\r\n\r\n  private _onRenderItem = (item: IOverflowSetItemProps): JSX.Element => {\r\n    if (item.onRender) {\r\n      return item.onRender(item);\r\n    }\r\n    return <CommandBarButton iconProps={{ iconName: item.icon }} menuProps={item.subMenuProps} text={item.name} />;\r\n  };\r\n\r\n  private _onRenderOverflowButton = (overflowItems: any[] | undefined): JSX.Element => {\r\n    const buttonStyles: Partial<IButtonStyles> = {\r\n      root: {\r\n        minWidth: 0,\r\n        padding: '0 4px',\r\n        alignSelf: 'stretch',\r\n        height: 'auto'\r\n      }\r\n    };\r\n    return <CommandBarButton styles={buttonStyles} menuIconProps={{ iconName: 'More' }} menuProps={{ items: overflowItems! }} />;\r\n  };\r\n}\r\n"]}