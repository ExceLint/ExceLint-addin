"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Tooltip_types_1 = require("./Tooltip.types");
var Styling_1 = require("../../Styling");
exports.getStyles = function (props) {
    var className = props.className, delay = props.delay, maxWidth = props.maxWidth, theme = props.theme;
    var palette = theme.palette, fonts = theme.fonts;
    return {
        root: [
            'ms-Tooltip',
            theme.fonts.medium,
            Styling_1.AnimationClassNames.fadeIn200,
            {
                background: palette.white,
                padding: '8px',
                animationDelay: '300ms',
                maxWidth: maxWidth
            },
            delay === Tooltip_types_1.TooltipDelay.zero && {
                animationDelay: '0s'
            },
            delay === Tooltip_types_1.TooltipDelay.long && {
                animationDelay: '500ms'
            },
            className
        ],
        content: [
            'ms-Tooltip-content',
            fonts.small,
            {
                color: palette.neutralPrimary,
                wordWrap: 'break-word',
                overflowWrap: 'break-word',
                overflow: 'hidden'
            }
        ],
        subText: [
            'ms-Tooltip-subtext',
            {
                // Using inherit here to avoid unintentional global overrides of the <p> tag.
                fontSize: 'inherit',
                fontWeight: 'inherit',
                color: 'inherit',
                margin: 0
            }
        ]
    };
};
//# sourceMappingURL=Tooltip.styles.js.map