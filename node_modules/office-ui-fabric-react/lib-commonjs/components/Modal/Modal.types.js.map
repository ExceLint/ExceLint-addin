{"version":3,"file":"Modal.types.js","sourceRoot":"../src/","sources":["components/Modal/Modal.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\r\nimport { ModalBase } from './Modal.base';\r\nimport { IWithResponsiveModeState } from '../../utilities/decorators/withResponsiveMode';\r\nimport { IAccessiblePopupProps } from '../../common/IAccessiblePopupProps';\r\nimport { IStyle, ITheme } from '../../Styling';\r\nimport { ILayerProps } from '../../Layer';\r\nimport { IRefObject, IStyleFunctionOrObject } from '../../Utilities';\r\n\r\nexport interface IModal {\r\n  /**\r\n   * Sets focus on the first focusable, or configured, child in focus trap zone\r\n   */\r\n  focus: () => void;\r\n}\r\n\r\nexport interface IModalProps extends React.ClassAttributes<ModalBase>, IWithResponsiveModeState, IAccessiblePopupProps {\r\n  /**\r\n   * Optional callback to access the IDialog interface. Use this instead of ref for accessing\r\n   * the public methods and properties of the component.\r\n   */\r\n  componentRef?: IRefObject<IModal>;\r\n\r\n  /**\r\n   * Call to provide customized styling that will layer on top of the variant rules.\r\n   */\r\n  styles?: IStyleFunctionOrObject<IModalStyleProps, IModalStyles>;\r\n\r\n  /**\r\n   * Theme provided by High-Order Component.\r\n   */\r\n  theme?: ITheme;\r\n\r\n  /**\r\n   * Whether the dialog is displayed.\r\n   * @defaultvalue false\r\n   */\r\n  isOpen?: boolean;\r\n\r\n  /**\r\n   * Whether the overlay is dark themed.\r\n   * @defaultvalue true\r\n   */\r\n  isDarkOverlay?: boolean;\r\n\r\n  /**\r\n   * A callback function for when the Modal is dismissed light dismiss, before the animation completes.\r\n   */\r\n  onDismiss?: (ev?: React.MouseEvent<HTMLButtonElement>) => any;\r\n\r\n  /**\r\n   * A callback function which is called after the Modal is dismissed and the animation is complete.\r\n   */\r\n  onDismissed?: () => any;\r\n\r\n  /**\r\n   * Props to be passed through to Layer\r\n   */\r\n  layerProps?: ILayerProps;\r\n\r\n  /**\r\n   * Whether the dialog can be light dismissed by clicking outside the dialog (on the overlay).\r\n   * @defaultvalue false\r\n   */\r\n  isBlocking?: boolean;\r\n\r\n  /**\r\n   * Whether the dialog should be modeless (e.g. not dismiss when focusing/clicking outside of the dialog).\r\n   * if true: isBlocking is ignored, there will be no overlay (isDarkOverlay is ignored),\r\n   * isClickableOutsideFocusTrap is true, and forceFocusInsideTrap is false\r\n   */\r\n  isModeless?: boolean;\r\n\r\n  /**\r\n   * Optional class name to be added to the root class\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * Optional override for container class\r\n   */\r\n  containerClassName?: string;\r\n\r\n  /**\r\n   * Optional override for scrollable content class\r\n   */\r\n  scrollableContentClassName?: string;\r\n\r\n  /**\r\n   * A callback function for when the Modal content is mounted on the overlay layer\r\n   * @deprecated Use layerProps.onLayerDidMount instead\r\n   */\r\n  onLayerDidMount?: () => void;\r\n\r\n  /**\r\n   * ARIA id for the title of the Modal, if any\r\n   */\r\n  titleAriaId?: string;\r\n\r\n  /**\r\n   * ARIA id for the subtitle of the Modal, if any\r\n   */\r\n  subtitleAriaId?: string;\r\n\r\n  /**\r\n   * Whether the modal should have top offset fixed once opened and expand from the bottom only\r\n   * when the content changes dynamically.\r\n   */\r\n  topOffsetFixed?: boolean;\r\n}\r\n\r\nexport type IModalStyleProps = Required<Pick<IModalProps, 'theme'>> &\r\n  Pick<IModalProps, 'className' | 'containerClassName' | 'scrollableContentClassName' | 'topOffsetFixed' | 'isModeless'> & {\r\n    /** Modal open state. */\r\n    isOpen?: boolean;\r\n    /** Modal visible state. */\r\n    isVisible?: boolean;\r\n    /** Modal has been opened state. */\r\n    hasBeenOpened?: boolean;\r\n    /** Positioning of modal on first render */\r\n    modalRectangleTop?: number;\r\n  };\r\n\r\nexport interface IModalStyles {\r\n  root: IStyle;\r\n  main: IStyle;\r\n  scrollableContent: IStyle;\r\n  layer: IStyle;\r\n}\r\n"]}