{"version":3,"file":"Shimmer.types.js","sourceRoot":"../src/","sources":["components/Shimmer/Shimmer.types.ts"],"names":[],"mappings":";;AAmLA;;GAEG;AACH,IAAY,kBAeX;AAfD,WAAY,kBAAkB;IAC5B;;OAEG;IACH,2DAAQ,CAAA;IAER;;OAEG;IACH,+DAAU,CAAA;IAEV;;OAEG;IACH,yDAAO,CAAA;AACT,CAAC,EAfW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAe7B;AAED;;GAEG;AACH,IAAY,6BAeX;AAfD,WAAY,6BAA6B;IACvC;;OAEG;IACH,kFAAS,CAAA;IAET;;OAEG;IACH,gFAAQ,CAAA;IAER;;OAEG;IACH,sFAAW,CAAA;AACb,CAAC,EAfW,6BAA6B,GAA7B,qCAA6B,KAA7B,qCAA6B,QAexC","sourcesContent":["import * as React from 'react';\r\nimport { IStyle, ITheme } from '../../Styling';\r\nimport { IRefObject, IStyleFunctionOrObject } from '../../Utilities';\r\n\r\nexport interface IShimmer {}\r\n\r\n/**\r\n * Shimmer component props.\r\n */\r\nexport interface IShimmerProps extends React.AllHTMLAttributes<HTMLElement> {\r\n  /**\r\n   * Optional callback to access the IShimmer interface. Use this instead of ref for accessing\r\n   * the public methods and properties of the component.\r\n   */\r\n  componentRef?: IRefObject<IShimmer>;\r\n\r\n  /**\r\n   * Sets the width value of the shimmer wave wrapper.\r\n   * @defaultvalue 100%\r\n   */\r\n  width?: number | string;\r\n\r\n  /**\r\n   * Controls when the shimmer is swapped with actual data through an animated transition.\r\n   * @defaultvalue false\r\n   */\r\n  isDataLoaded?: boolean;\r\n\r\n  /**\r\n   * Elements to render in one line of the Shimmer.\r\n   */\r\n  shimmerElements?: IShimmerElement[];\r\n\r\n  /**\r\n   * Custom elements when necessary to build complex placeholder skeletons.\r\n   */\r\n  customElementsGroup?: React.ReactNode;\r\n\r\n  /**\r\n   * Localized string of the status label for screen reader\r\n   */\r\n  ariaLabel?: string;\r\n\r\n  /**\r\n   * Call to provide customized styling that will layer on top of the variant rules.\r\n   */\r\n  styles?: IStyleFunctionOrObject<IShimmerStyleProps, IShimmerStyles>;\r\n\r\n  /**\r\n   * Additional CSS class(es) to apply to the Shimmer container.\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * Theme provided by High-Order Component.\r\n   */\r\n  theme?: ITheme;\r\n\r\n  /**\r\n   * Defines an object with possible colors to pass for Shimmer customization used on different backgrounds.\r\n   */\r\n  shimmerColors?: IShimmerColors;\r\n}\r\n\r\n/**\r\n * Shimmer Elements Interface representing all common properties between Gap, Circle and Line.\r\n */\r\nexport interface IShimmerElement {\r\n  /**\r\n   * Represents the possible type of the shimmer elements: Gap, Circle, Line.\r\n   * Required for every element you intend to use.\r\n   */\r\n  type: ShimmerElementType;\r\n\r\n  /**\r\n   * Sets the height of the element (ICircle, ILine, IGap) in pixels.\r\n   * Read more details for each specific element.\r\n   */\r\n  height?: number;\r\n\r\n  /**\r\n   * Sets the width value of the element (ILine, IGap) in pixels.\r\n   * Read more details for each specific element.\r\n   */\r\n  width?: number | string;\r\n\r\n  /**\r\n   * Sets vertical alignment of the element (ICircle, ILine).\r\n   * @defaultvalue center\r\n   */\r\n  verticalAlign?: 'top' | 'center' | 'bottom';\r\n}\r\n\r\n/**\r\n * Line element interface\r\n */\r\nexport interface ILine extends IShimmerElement {\r\n  /**\r\n   * Sets the height of the shimmer line in pixels.\r\n   * @defaultvalue 16px\r\n   */\r\n  height?: number;\r\n\r\n  /**\r\n   * Line width value.\r\n   * @defaultvalue 100%\r\n   */\r\n  width?: number | string;\r\n}\r\n\r\n/**\r\n * Circle element interface\r\n */\r\nexport interface ICircle extends IShimmerElement {\r\n  /**\r\n   * Sets the height of the shimmer circle in pixels.\r\n   * Minimum supported 10px.\r\n   * @defaultvalue 24px\r\n   */\r\n  height?: number;\r\n}\r\n\r\n/**\r\n * Gap element interface\r\n */\r\nexport interface IGap extends IShimmerElement {\r\n  /**\r\n   * Sets the height of the shimmer gap in pixels.\r\n   * @defaultvalue 16px\r\n   */\r\n  height?: number;\r\n\r\n  /**\r\n   * Gap width value.\r\n   * @defaultvalue 10px\r\n   */\r\n  width?: number | string;\r\n}\r\n\r\n/**\r\n * Defines props needed to construct styles. This represents the simplified set of immutable things which control the class names.\r\n */\r\nexport interface IShimmerStyleProps {\r\n  /** Boolean flag to trigger fadeIn/fadeOut transition animation when content is loaded. */\r\n  isDataLoaded?: boolean;\r\n\r\n  /** Optional CSS class name for the component attached to the root stylable area. */\r\n  className?: string;\r\n\r\n  /** Theme provided by High-Order Component. */\r\n  theme: ITheme;\r\n\r\n  /** Interval in milliseconds for the adeIn/fadeOut transition animation. */\r\n  transitionAnimationInterval?: number;\r\n\r\n  /** Color to be used as the main background color of Shimmer when not animating. */\r\n  shimmerColor?: string;\r\n\r\n  /** Tip color of the shimmer wave which gradually gets from and to `shimmerColor`. */\r\n  shimmerWaveColor?: string;\r\n}\r\n\r\n/**\r\n * Represents the stylable areas of the control.\r\n */\r\nexport interface IShimmerStyles {\r\n  /** Refers to the root wrapper element. */\r\n  root?: IStyle;\r\n\r\n  /** Refers to wrapper element of the shimmer animation only. */\r\n  shimmerWrapper?: IStyle;\r\n\r\n  /** Refers to wrapper element of the children only. */\r\n  dataWrapper?: IStyle;\r\n\r\n  /** Styles for the hidden helper element to aid with screen readers. */\r\n  screenReaderText?: IStyle;\r\n}\r\n\r\n/**\r\n * Describes the possible types for shimmer elements used.\r\n */\r\nexport enum ShimmerElementType {\r\n  /**\r\n   * Line element type\r\n   */\r\n  line = 1,\r\n\r\n  /**\r\n   * Circle element type\r\n   */\r\n  circle = 2,\r\n\r\n  /**\r\n   * Gap element type\r\n   */\r\n  gap = 3\r\n}\r\n\r\n/**\r\n * Describes the default heights for shimmer elements when omitted in implementation.\r\n */\r\nexport enum ShimmerElementsDefaultHeights {\r\n  /**\r\n   * Default height of the line element when not provided by user: 16px\r\n   */\r\n  line = 16,\r\n\r\n  /**\r\n   * Default height of the gap element when not provided by user: 16px\r\n   */\r\n  gap = 16,\r\n\r\n  /**\r\n   * Default height of the circle element when not provided by user: 24px\r\n   */\r\n  circle = 24\r\n}\r\n\r\n/**\r\n * Interface describing the possible color customizations of Shimmer.\r\n */\r\nexport interface IShimmerColors {\r\n  /**\r\n   * Defines the main background color which is the color you see when the wave is not animating.\r\n   * @defaultvalue theme.palette.neutralLight\r\n   */\r\n  shimmer?: string;\r\n\r\n  /**\r\n   * Defines the tip color of the shimmer wave which gradually gets from and to `shimmer` color.\r\n   * @defaultvalue theme.palette.neutralLighter\r\n   */\r\n  shimmerWave?: string;\r\n\r\n  /**\r\n   * Defines the background color of the space in between and around shimmer elements (borders, gaps and rounded corners).\r\n   * @defaultvalue theme.palette.white\r\n   */\r\n  background?: string;\r\n}\r\n"]}