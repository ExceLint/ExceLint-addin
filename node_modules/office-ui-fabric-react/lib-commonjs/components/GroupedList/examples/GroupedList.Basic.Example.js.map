{"version":3,"file":"GroupedList.Basic.Example.js","sourceRoot":"../src/","sources":["components/GroupedList/examples/GroupedList.Basic.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,iFAA8F;AAE9F,2FAA0F;AAC1F,kEAAiE;AACjE,8EAA+G;AAC/G,4DAA2D;AAE3D,gFAA+G;AAE/G,IAAM,UAAU,GAAG,CAAC,CAAC;AACrB,IAAM,UAAU,GAAG,CAAC,CAAC;AAMrB;IAA6C,mDAA6C;IAMxF,iCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAqBb;QA+BO,mBAAa,GAAG,UAAC,YAAoB,EAAE,IAAkB,EAAE,SAAiB;YAClF,OAAO,CACL,oBAAC,uBAAU,IACT,OAAO,EAAE,KAAI,CAAC,QAAQ,EACtB,iBAAiB,EAAE,YAAY,EAC/B,IAAI,EAAE,IAAI,EACV,SAAS,EAAE,SAAS,EACpB,SAAS,EAAE,KAAI,CAAC,UAAU,EAC1B,aAAa,EAAE,qBAAa,CAAC,QAAQ,EACrC,OAAO,EAAE,KAAI,CAAC,KAAK,CAAC,aAAa,GACjC,CACH,CAAC;QACJ,CAAC,CAAC;QAEM,0BAAoB,GAAG,UAAC,EAAiC,EAAE,OAAgB;YACjF,KAAI,CAAC,QAAQ,CAAC,EAAE,aAAa,EAAE,OAAO,EAAE,CAAC,CAAC;QAC5C,CAAC,CAAC;QAlEA,KAAI,CAAC,MAAM,GAAG,6BAAe,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;QACpE,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aACxC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;aACX,GAAG,CACF,UAAC,GAAW,IAAc,OAAA,CAAC;YACzB,GAAG,EAAE,GAAG;YACR,IAAI,EAAE,GAAG;YACT,SAAS,EAAE,GAAG;YACd,QAAQ,EAAE,GAAG;SACd,CAAC,EALwB,CAKxB,CACH,CAAC;QACJ,KAAI,CAAC,OAAO,GAAG,0BAAY,CAAC,UAAU,EAAE,UAAU,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;QAEnE,KAAI,CAAC,UAAU,GAAG,IAAI,iBAAS,EAAE,CAAC;QAClC,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAEtC,KAAI,CAAC,KAAK,GAAG;YACX,aAAa,EAAE,KAAK;SACrB,CAAC;;IACJ,CAAC;IAEM,wCAAM,GAAb;QACU,IAAA,wCAAa,CAAgB;QAErC,OAAO,CACL;YACE,oBAAC,eAAM,IACL,KAAK,EAAC,qBAAqB,EAC3B,OAAO,EAAE,aAAa,EACtB,QAAQ,EAAE,IAAI,CAAC,oBAAoB,EACnC,MAAM,EAAC,SAAS,EAChB,OAAO,EAAC,QAAQ,EAChB,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,EAAE,GAC1C;YACF,oBAAC,qBAAS;gBACR,oBAAC,qBAAa,IAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,aAAa,EAAE,qBAAa,CAAC,QAAQ;oBAC9E,oBAAC,mBAAW,IACV,KAAK,EAAE,IAAI,CAAC,MAAM,EAClB,YAAY,EAAE,IAAI,CAAC,aAAa,EAChC,SAAS,EAAE,IAAI,CAAC,UAAU,EAC1B,aAAa,EAAE,qBAAa,CAAC,QAAQ,EACrC,MAAM,EAAE,IAAI,CAAC,OAAO,EACpB,OAAO,EAAE,aAAa,GACtB,CACY,CACN,CACR,CACP,CAAC;IACJ,CAAC;IAmBH,8BAAC;AAAD,CAAC,AA5ED,CAA6C,KAAK,CAAC,SAAS,GA4E3D;AA5EY,0DAAuB","sourcesContent":["import * as React from 'react';\r\nimport { GroupedList, IGroup } from 'office-ui-fabric-react/lib/components/GroupedList/index';\r\nimport { IColumn } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { DetailsRow } from 'office-ui-fabric-react/lib/components/DetailsList/DetailsRow';\r\nimport { FocusZone } from 'office-ui-fabric-react/lib/FocusZone';\r\nimport { Selection, SelectionMode, SelectionZone } from 'office-ui-fabric-react/lib/utilities/selection/index';\r\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\r\n\r\nimport { createListItems, createGroups, IExampleItem } from 'office-ui-fabric-react/lib/utilities/exampleData';\r\n\r\nconst groupCount = 3;\r\nconst groupDepth = 3;\r\n\r\nexport interface IGroupedListExampleState {\r\n  isCompactMode?: boolean;\r\n}\r\n\r\nexport class GroupedListBasicExample extends React.Component<{}, IGroupedListExampleState> {\r\n  private _items: IExampleItem[];\r\n  private _columns: IColumn[];\r\n  private _groups: IGroup[];\r\n  private _selection: Selection;\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this._items = createListItems(Math.pow(groupCount, groupDepth + 1));\r\n    this._columns = Object.keys(this._items[0])\r\n      .slice(0, 3)\r\n      .map(\r\n        (key: string): IColumn => ({\r\n          key: key,\r\n          name: key,\r\n          fieldName: key,\r\n          minWidth: 300\r\n        })\r\n      );\r\n    this._groups = createGroups(groupCount, groupDepth, 0, groupCount);\r\n\r\n    this._selection = new Selection();\r\n    this._selection.setItems(this._items);\r\n\r\n    this.state = {\r\n      isCompactMode: false\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { isCompactMode } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Toggle\r\n          label=\"Enable compact mode\"\r\n          checked={isCompactMode}\r\n          onChange={this._onChangeCompactMode}\r\n          onText=\"Compact\"\r\n          offText=\"Normal\"\r\n          styles={{ root: { marginBottom: '20px' } }}\r\n        />\r\n        <FocusZone>\r\n          <SelectionZone selection={this._selection} selectionMode={SelectionMode.multiple}>\r\n            <GroupedList\r\n              items={this._items}\r\n              onRenderCell={this._onRenderCell}\r\n              selection={this._selection}\r\n              selectionMode={SelectionMode.multiple}\r\n              groups={this._groups}\r\n              compact={isCompactMode}\r\n            />\r\n          </SelectionZone>\r\n        </FocusZone>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderCell = (nestingDepth: number, item: IExampleItem, itemIndex: number): JSX.Element => {\r\n    return (\r\n      <DetailsRow\r\n        columns={this._columns}\r\n        groupNestingDepth={nestingDepth}\r\n        item={item}\r\n        itemIndex={itemIndex}\r\n        selection={this._selection}\r\n        selectionMode={SelectionMode.multiple}\r\n        compact={this.state.isCompactMode}\r\n      />\r\n    );\r\n  };\r\n\r\n  private _onChangeCompactMode = (ev: React.MouseEvent<HTMLElement>, checked: boolean): void => {\r\n    this.setState({ isCompactMode: checked });\r\n  };\r\n}\r\n"]}