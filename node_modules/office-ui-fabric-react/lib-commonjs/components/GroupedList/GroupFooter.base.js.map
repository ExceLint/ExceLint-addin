{"version":3,"file":"GroupFooter.base.js","sourceRoot":"../src/","sources":["components/GroupedList/GroupFooter.base.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,6CAAqD;AACrD,6CAA4C;AAE5C,IAAM,aAAa,GAAG,8BAAkB,EAA8C,CAAC;AAE1E,QAAA,eAAe,GAA+C,UAAA,KAAK;IACtE,IAAA,mBAAK,EAAE,6BAAU,EAAE,6BAAU,EAAE,+BAAW,EAAE,qBAAM,EAAE,mBAAK,CAAW;IAC5E,IAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,KAAM,EAAE,CAAC,CAAC;IAE5D,IAAI,KAAK,IAAI,UAAU,EAAE;QACvB,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,IAAI;YAC7B,oBAAC,yBAAW,IAAC,WAAW,EAAE,WAAW,EAAE,KAAK,EAAE,UAAW,GAAI;YAC5D,UAAU,CACP,CACP,CAAC;KACH;IAED,OAAO,IAAI,CAAC;AACd,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction } from '../../Utilities';\nimport { GroupSpacer } from './GroupSpacer';\nimport { IGroupFooterStyleProps, IGroupFooterStyles, IGroupFooterProps } from './GroupFooter.types';\nconst getClassNames = classNamesFunction<IGroupFooterStyleProps, IGroupFooterStyles>();\n\nexport const GroupFooterBase: React.FunctionComponent<IGroupFooterProps> = props => {\n  const { group, groupLevel, footerText, indentWidth, styles, theme } = props;\n  const classNames = getClassNames(styles, { theme: theme! });\n\n  if (group && footerText) {\n    return (\n      <div className={classNames.root}>\n        <GroupSpacer indentWidth={indentWidth} count={groupLevel!} />\n        {footerText}\n      </div>\n    );\n  }\n\n  return null;\n};\n"]}