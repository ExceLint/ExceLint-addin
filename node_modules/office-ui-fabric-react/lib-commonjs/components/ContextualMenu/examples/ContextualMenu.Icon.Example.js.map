{"version":3,"file":"ContextualMenu.Icon.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Icon.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4EAA6G;AAC7G,8DAA6D;AAC7D,4DAAkE;AAClE,wDAAuD;AACvD,2DAA6D;AAE7D,kCAAkC;AAClC,IAAM,MAAM,GAAQ,YAAY,CAAC;AAEjC;IAA+C,qDAA6C;IAC1F,mCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAIb;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,WAAW,EAAE,KAAK;SACnB,CAAC;;IACJ,CAAC;IAEM,0CAAM,GAAb;QAAA,iBAsFC;QArFS,IAAA,oCAAW,CAAgB;QAEnC,OAAO,CACL;YACE,oBAAC,sBAAa,IACZ,IAAI,EAAC,0BAA0B,EAC/B,SAAS,EAAE;oBACT,kBAAkB,EAAE,IAAI;oBACxB,KAAK,EAAE;wBACL;4BACE,GAAG,EAAE,YAAY;4BACjB,IAAI,EAAE,cAAc;4BACpB,YAAY,EAAE,UAAC,KAA+B;gCAC5C,OAAO,CACL,8BAAM,SAAS,EAAE,MAAM,CAAC,aAAa;oCACnC,oBAAC,WAAI,IAAC,QAAQ,EAAE,gBAAgB,EAAE,SAAS,EAAE,MAAM,CAAC,YAAY,GAAI;oCACpE,oBAAC,WAAI,IAAC,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,CAAC,QAAQ,GAAI,CACvD,CACR,CAAC;4BACJ,CAAC;yBACF;wBACD;4BACE,GAAG,EAAE,SAAS;4BACd,SAAS,EAAE;gCACT,QAAQ,EAAE,KAAK;6BAChB;4BACD,IAAI,EAAE,KAAK;yBACZ;wBACD;4BACE,GAAG,EAAE,QAAQ;4BACb,OAAO,EAAE;gCACP,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;4BACvC,CAAC;4BACD,SAAS,EAAE;gCACT,QAAQ,EAAE,QAAQ;gCAClB,KAAK,EAAE;oCACL,KAAK,EAAE,QAAQ;iCAChB;6BACF;4BACD,IAAI,EAAE,0BAA0B;4BAChC,KAAK,EAAE,eAAe;yBACvB;wBACD;4BACE,GAAG,EAAE,WAAW;4BAChB,QAAQ,EAAE,uCAAsB,CAAC,OAAO;yBACzC;wBACD;4BACE,GAAG,EAAE,OAAO;4BACZ,SAAS,EAAE;gCACT,QAAQ,EAAE,OAAO;6BAClB;4BACD,IAAI,EAAE,OAAO;yBACd;wBACD;4BACE,GAAG,EAAE,OAAO;4BACZ,SAAS,EAAE;gCACT,QAAQ,EAAE,OAAO;6BAClB;4BACD,IAAI,EAAE,OAAO;yBACd;wBACD;4BACE,GAAG,EAAE,OAAO;4BACZ,SAAS,EAAE;gCACT,QAAQ,EAAE,uBAAuB;6BAClC;4BACD,IAAI,EAAE,OAAO;yBACd;qBACF;iBACF,GACD;YACD,WAAW,IAAI,CACd,oBAAC,iBAAO,IACN,eAAe,EAAE,IAAI;gBACrB,yCAAyC;gBACzC,SAAS,EAAE,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,EAArC,CAAqC;gBAEtD,oBAAC,sBAAa;gBACZ,yCAAyC;;oBAAzC,yCAAyC;oBACzC,OAAO,EAAE,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,EAArC,CAAqC,EACpD,IAAI,EAAC,aAAa,GAClB,CACM,CACX,CACG,CACP,CAAC;IACJ,CAAC;IACH,gCAAC;AAAD,CAAC,AA/FD,CAA+C,KAAK,CAAC,SAAS,GA+F7D;AA/FY,8DAAyB","sourcesContent":["import * as React from 'react';\r\nimport { ContextualMenuItemType, IContextualMenuItemProps } from 'office-ui-fabric-react/lib/ContextualMenu';\r\nimport { Callout } from 'office-ui-fabric-react/lib/Callout';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport * as stylesImport from './ContextualMenuExample.scss';\r\n\r\n// tslint:disable-next-line:no-any\r\nconst styles: any = stylesImport;\r\n\r\nexport class ContextualMenuIconExample extends React.Component<{}, { showCallout: boolean }> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      showCallout: false\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { showCallout } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <DefaultButton\r\n          text=\"Click for ContextualMenu\"\r\n          menuProps={{\r\n            shouldFocusOnMount: true,\r\n            items: [\r\n              {\r\n                key: 'openInWord',\r\n                text: 'Open in Word',\r\n                onRenderIcon: (props: IContextualMenuItemProps) => {\r\n                  return (\r\n                    <span className={styles.iconContainer}>\r\n                      <Icon iconName={'WordLogoFill16'} className={styles.logoFillIcon} />\r\n                      <Icon iconName={'WordLogo16'} className={styles.logoIcon} />\r\n                    </span>\r\n                  );\r\n                }\r\n              },\r\n              {\r\n                key: 'newItem',\r\n                iconProps: {\r\n                  iconName: 'Add'\r\n                },\r\n                text: 'New'\r\n              },\r\n              {\r\n                key: 'upload',\r\n                onClick: () => {\r\n                  this.setState({ showCallout: true });\r\n                },\r\n                iconProps: {\r\n                  iconName: 'Upload',\r\n                  style: {\r\n                    color: 'salmon'\r\n                  }\r\n                },\r\n                text: 'Upload (Click for popup)',\r\n                title: 'Upload a file'\r\n              },\r\n              {\r\n                key: 'divider_1',\r\n                itemType: ContextualMenuItemType.Divider\r\n              },\r\n              {\r\n                key: 'share',\r\n                iconProps: {\r\n                  iconName: 'Share'\r\n                },\r\n                text: 'Share'\r\n              },\r\n              {\r\n                key: 'print',\r\n                iconProps: {\r\n                  iconName: 'Print'\r\n                },\r\n                text: 'Print'\r\n              },\r\n              {\r\n                key: 'music',\r\n                iconProps: {\r\n                  iconName: 'MusicInCollectionFill'\r\n                },\r\n                text: 'Music'\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n        {showCallout && (\r\n          <Callout\r\n            setInitialFocus={true}\r\n            // tslint:disable-next-line:jsx-no-lambda\r\n            onDismiss={() => this.setState({ showCallout: false })}\r\n          >\r\n            <DefaultButton\r\n              // tslint:disable-next-line:jsx-no-lambda\r\n              onClick={() => this.setState({ showCallout: false })}\r\n              text=\"Hello Popup\"\r\n            />\r\n          </Callout>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}