{"version":3,"file":"ContextualMenuItemWrapper.js","sourceRoot":"../src/","sources":["components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuItemWrapper.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,gDAA4E;AAI5E;IAA+C,qDAAgD;IAC7F,mCAAY,KAAsC;QAAlD,YACE,kBAAM,KAAK,CAAC,SAEb;QAMS,uBAAiB,GAAG,UAAC,EAAiC;YACxD,IAAA,gBAAuC,EAArC,cAAI,EAAE,sCAA+B,CAAC;YAC9C,IAAI,gBAAgB,EAAE;gBACpB,gBAAgB,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,aAA4B,CAAC,CAAC;aAC7D;QACH,CAAC,CAAC;QAEQ,kBAAY,GAAG,UAAC,EAAiC;YACnD,IAAA,gBAAsC,EAApC,cAAI,EAAE,oCAA8B,CAAC;YAC7C,IAAI,eAAe,EAAE;gBACnB,eAAe,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,aAA4B,CAAC,CAAC;aAC5D;QACH,CAAC,CAAC;QAEQ,uBAAiB,GAAG,UAAC,EAAiC;YACxD,IAAA,gBAAuC,EAArC,cAAI,EAAE,sCAA+B,CAAC;YAC9C,IAAI,gBAAgB,EAAE;gBACpB,gBAAgB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;aAC5B;QACH,CAAC,CAAC;QAEQ,oBAAc,GAAG,UAAC,EAAoC;YACxD,IAAA,gBAAoC,EAAlC,cAAI,EAAE,gCAA4B,CAAC;YAC3C,IAAI,aAAa,EAAE;gBACjB,aAAa,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;aACzB;QACH,CAAC,CAAC;QAEQ,sBAAgB,GAAG,UAAC,EAAiC;YACvD,IAAA,gBAAsC,EAApC,cAAI,EAAE,oCAA8B,CAAC;YAC7C,IAAI,eAAe,EAAE;gBACnB,eAAe,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,aAA4B,CAAC,CAAC;aAC5D;QACH,CAAC,CAAC;QAEQ,mBAAa,GAAG,UAAC,IAAyB;YAC1C,IAAA,uCAAY,CAAgB;YACpC,IAAI,YAAY,EAAE;gBAChB,OAAO,YAAY,CAAC,IAAI,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC;QAEQ,uBAAiB,GAAG;YAC5B,OAAO,SAAS,CAAC;QACnB,CAAC,CAAC;QAnDA,kCAAsB,CAAC,KAAI,CAAC,CAAC;;IAC/B,CAAC;IAEM,yDAAqB,GAA5B,UAA6B,QAAyC;QACpE,OAAO,CAAC,0BAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IA+CH,gCAAC;AAAD,CAAC,AAvDD,CAA+C,KAAK,CAAC,SAAS,GAuD7D;AAvDY,8DAAyB","sourcesContent":["import * as React from 'react';\nimport { initializeComponentRef, shallowCompare } from '../../../Utilities';\nimport { IContextualMenuItemWrapperProps } from './ContextualMenuItemWrapper.types';\nimport { IContextualMenuItem } from '../../../ContextualMenu';\n\nexport class ContextualMenuItemWrapper extends React.Component<IContextualMenuItemWrapperProps> {\n  constructor(props: IContextualMenuItemWrapperProps) {\n    super(props);\n    initializeComponentRef(this);\n  }\n\n  public shouldComponentUpdate(newProps: IContextualMenuItemWrapperProps): boolean {\n    return !shallowCompare(newProps, this.props);\n  }\n\n  protected _onItemMouseEnter = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseEnter } = this.props;\n    if (onItemMouseEnter) {\n      onItemMouseEnter(item, ev, ev.currentTarget as HTMLElement);\n    }\n  };\n\n  protected _onItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemClickBase } = this.props;\n    if (onItemClickBase) {\n      onItemClickBase(item, ev, ev.currentTarget as HTMLElement);\n    }\n  };\n\n  protected _onItemMouseLeave = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseLeave } = this.props;\n    if (onItemMouseLeave) {\n      onItemMouseLeave(item, ev);\n    }\n  };\n\n  protected _onItemKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const { item, onItemKeyDown } = this.props;\n    if (onItemKeyDown) {\n      onItemKeyDown(item, ev);\n    }\n  };\n\n  protected _onItemMouseMove = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseMove } = this.props;\n    if (onItemMouseMove) {\n      onItemMouseMove(item, ev, ev.currentTarget as HTMLElement);\n    }\n  };\n\n  protected _getSubMenuId = (item: IContextualMenuItem): string | undefined => {\n    const { getSubMenuId } = this.props;\n    if (getSubMenuId) {\n      return getSubMenuId(item);\n    }\n  };\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return undefined;\n  };\n}\n"]}