{"version":3,"file":"ContextualMenuAnchor.js","sourceRoot":"../src/","sources":["components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuAnchor.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { anchorProperties, getNativeProps } from '../../../Utilities';\r\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\r\nimport { KeytipData } from '../../../KeytipData';\r\nimport { isItemDisabled, hasSubmenu } from '../../../utilities/contextualMenu/index';\r\nimport { ContextualMenuItem } from '../ContextualMenuItem';\r\n\r\nexport class ContextualMenuAnchor extends ContextualMenuItemWrapper {\r\n  private _anchor = React.createRef<HTMLAnchorElement>();\r\n\r\n  public render() {\r\n    const {\r\n      item,\r\n      classNames,\r\n      index,\r\n      focusableElementIndex,\r\n      totalItemCount,\r\n      hasCheckmarks,\r\n      hasIcons,\r\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\r\n      expandedMenuItemKey,\r\n      onItemClick,\r\n      openSubMenu,\r\n      dismissSubMenu,\r\n      dismissMenu\r\n    } = this.props;\r\n\r\n    let anchorRel = item.rel;\r\n    if (item.target && item.target.toLowerCase() === '_blank') {\r\n      anchorRel = anchorRel ? anchorRel : 'nofollow noopener noreferrer'; // Safe default to prevent tabjacking\r\n    }\r\n\r\n    const subMenuId = this._getSubMenuId(item);\r\n    const itemHasSubmenu = hasSubmenu(item);\r\n    const nativeProps = getNativeProps(item, anchorProperties);\r\n    const disabled = isItemDisabled(item);\r\n    const { itemProps } = item;\r\n\r\n    let { keytipProps } = item;\r\n    if (keytipProps && itemHasSubmenu) {\r\n      keytipProps = {\r\n        ...keytipProps,\r\n        hasMenu: true\r\n      };\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <KeytipData keytipProps={item.keytipProps} ariaDescribedBy={(nativeProps as any)['aria-describedby']} disabled={disabled}>\r\n          {(keytipAttributes: any): JSX.Element => (\r\n            <a\r\n              {...nativeProps}\r\n              {...keytipAttributes}\r\n              ref={this._anchor}\r\n              href={item.href}\r\n              target={item.target}\r\n              rel={anchorRel}\r\n              className={classNames.root}\r\n              role=\"menuitem\"\r\n              aria-owns={item.key === expandedMenuItemKey ? subMenuId : undefined}\r\n              aria-haspopup={itemHasSubmenu || undefined}\r\n              aria-expanded={itemHasSubmenu ? item.key === expandedMenuItemKey : undefined}\r\n              aria-posinset={focusableElementIndex + 1}\r\n              aria-setsize={totalItemCount}\r\n              aria-disabled={isItemDisabled(item)}\r\n              style={item.style}\r\n              onClick={this._onItemClick}\r\n              onMouseEnter={this._onItemMouseEnter}\r\n              onMouseLeave={this._onItemMouseLeave}\r\n              onMouseMove={this._onItemMouseMove}\r\n              onKeyDown={itemHasSubmenu ? this._onItemKeyDown : null}\r\n            >\r\n              <ChildrenRenderer\r\n                componentRef={item.componentRef}\r\n                item={item}\r\n                classNames={classNames}\r\n                index={index}\r\n                onCheckmarkClick={hasCheckmarks && onItemClick ? onItemClick : undefined}\r\n                hasIcons={hasIcons}\r\n                openSubMenu={openSubMenu}\r\n                dismissSubMenu={dismissSubMenu}\r\n                dismissMenu={dismissMenu}\r\n                getSubmenuTarget={this._getSubmenuTarget}\r\n                {...itemProps}\r\n              />\r\n            </a>\r\n          )}\r\n        </KeytipData>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\r\n    return this._anchor.current ? this._anchor.current : undefined;\r\n  };\r\n\r\n  protected _onItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\r\n    const { item, onItemClick } = this.props;\r\n    if (onItemClick) {\r\n      onItemClick(item, ev);\r\n    }\r\n  };\r\n}\r\n"]}