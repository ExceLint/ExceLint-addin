{"version":3,"file":"Announced.QuickActions.Example.js","sourceRoot":"../src/","sources":["components/Announced/examples/Announced.QuickActions.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Announced } from '../Announced';\r\nimport {\r\n  DetailsList,\r\n  DetailsListLayoutMode,\r\n  Selection,\r\n  IColumn,\r\n  IDetailsList,\r\n  IDetailsRowProps,\r\n  DetailsRow\r\n} from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\r\nimport { IconButton, PrimaryButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Dialog, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { TextField, ITextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { createRef } from 'office-ui-fabric-react/lib/Utilities';\r\n\r\nconst _items: IAnnouncedQuickActionsExampleItem[] = [];\r\n\r\nconst _columns: IColumn[] = [\r\n  {\r\n    key: 'column1',\r\n    name: 'Name',\r\n    fieldName: 'name',\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n    ariaLabel: 'Operations for name'\r\n  },\r\n  {\r\n    key: 'column2',\r\n    name: 'Modified',\r\n    fieldName: 'modified',\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n    ariaLabel: 'Operations for modified'\r\n  },\r\n  {\r\n    key: 'column3',\r\n    name: 'Modified By',\r\n    fieldName: 'modifiedby',\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n    ariaLabel: 'Operations for modifiedby'\r\n  },\r\n  {\r\n    key: 'column4',\r\n    name: 'File Size',\r\n    fieldName: 'filesize',\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n    ariaLabel: 'Operations for filesize'\r\n  }\r\n];\r\n\r\nconst _names: string[] = [\r\n  'Annie Lindqvist',\r\n  'Aaron Reid',\r\n  'Alex Lundberg',\r\n  'Roko Kolar',\r\n  'Christian Bergqvist',\r\n  'Valentina Lovric',\r\n  'Makenzie Sharett'\r\n];\r\n\r\nconst nullFunction = (): null => null;\r\n\r\nfunction generateRandomDate(): string {\r\n  return new Date(new Date(2010, 0, 1).getTime() + Math.random() * (new Date().getTime() - new Date(2010, 0, 1).getTime())).toDateString();\r\n}\r\n\r\nexport interface IAnnouncedQuickActionsExampleItem {\r\n  key: number;\r\n  name: string;\r\n  modified: string;\r\n  modifiedby: string;\r\n  filesize: string;\r\n}\r\n\r\nexport interface IAnnouncedQuickActionsExampleState {\r\n  items: IAnnouncedQuickActionsExampleItem[];\r\n  selectionDetails: {};\r\n  renameDialogOpen: boolean;\r\n  dialogContent: JSX.Element | undefined;\r\n  announced?: JSX.Element;\r\n}\r\n\r\nexport class AnnouncedQuickActionsExample extends React.Component<{}, IAnnouncedQuickActionsExampleState> {\r\n  private _selection: Selection;\r\n  private _detailsList = createRef<IDetailsList>();\r\n  private _textField = createRef<ITextField>();\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    // Populate with items for demos.\r\n    if (_items.length === 0) {\r\n      for (let i = 0; i < 20; i++) {\r\n        _items.push({\r\n          key: i,\r\n          name: 'Item ' + i,\r\n          modified: generateRandomDate(),\r\n          modifiedby: _names[Math.floor(Math.random() * _names.length)],\r\n          filesize: Math.floor(Math.random() * 30).toString() + ' MB'\r\n        });\r\n      }\r\n    }\r\n\r\n    this._selection = new Selection({\r\n      onSelectionChanged: () => this.setState({ selectionDetails: this._getSelectionDetails() })\r\n    });\r\n\r\n    this._onRenderRow = this._onRenderRow.bind(this);\r\n    this._deleteItem = this._deleteItem.bind(this);\r\n    this._onRenderItemColumn = this._onRenderItemColumn.bind(this);\r\n    this._closeRenameDialog = this._closeRenameDialog.bind(this);\r\n    this._renderAnnounced = this._renderAnnounced.bind(this);\r\n\r\n    this.state = {\r\n      items: _items,\r\n      selectionDetails: this._getSelectionDetails(),\r\n      renameDialogOpen: false,\r\n      dialogContent: undefined,\r\n      announced: undefined\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { items, renameDialogOpen, dialogContent } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {this._renderAnnounced()}\r\n        <MarqueeSelection selection={this._selection}>\r\n          <DetailsList\r\n            componentRef={this._detailsList}\r\n            items={items}\r\n            columns={_columns}\r\n            setKey=\"set\"\r\n            layoutMode={DetailsListLayoutMode.fixedColumns}\r\n            selection={this._selection}\r\n            selectionPreservedOnEmptyClick={true}\r\n            ariaLabelForSelectionColumn=\"Toggle selection\"\r\n            ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n            onRenderItemColumn={this._onRenderItemColumn}\r\n            onRenderRow={this._onRenderRow}\r\n          />\r\n          <Dialog hidden={!renameDialogOpen} onDismiss={this._closeRenameDialog} closeButtonAriaLabel=\"Close\">\r\n            {dialogContent}\r\n          </Dialog>\r\n        </MarqueeSelection>\r\n      </>\r\n    );\r\n  }\r\n\r\n  private _onRenderRow(props: IDetailsRowProps): JSX.Element {\r\n    return <DetailsRow {...props} />;\r\n  }\r\n\r\n  private _onRenderItemColumn(item: any, index: number, column: IColumn) {\r\n    const fieldContent = item[column.fieldName || ''];\r\n\r\n    switch (column.key) {\r\n      case 'column1':\r\n        return (\r\n          <div>\r\n            {fieldContent}\r\n            <IconButton\r\n              iconProps={{ iconName: 'MoreVertical' }}\r\n              role=\"button\"\r\n              aria-haspopup={true}\r\n              aria-label=\"Show actions\"\r\n              onRenderMenuIcon={nullFunction}\r\n              styles={{ root: { float: 'right', height: 'inherit' } }}\r\n              menuProps={{\r\n                items: [\r\n                  {\r\n                    key: 'delete',\r\n                    text: 'Delete',\r\n                    onClick: () => this._deleteItem(index)\r\n                  },\r\n                  {\r\n                    key: 'rename',\r\n                    text: 'Rename',\r\n                    onClick: () => this._renameItem(item, index)\r\n                  }\r\n                ]\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return <span>{fieldContent}</span>;\r\n    }\r\n  }\r\n\r\n  private _renderAnnounced(): JSX.Element | undefined {\r\n    const { announced } = this.state;\r\n    return announced;\r\n  }\r\n\r\n  private _deleteItem(index: number): void {\r\n    const items = this.state.items;\r\n    items.splice(items.indexOf(items[index]), 1);\r\n\r\n    this.setState({\r\n      items: [...items],\r\n      announced: <Announced message={`Item deleted`} />\r\n    });\r\n    return;\r\n  }\r\n\r\n  private _renameItem(item: any, index: number): void {\r\n    this.setState({\r\n      renameDialogOpen: true,\r\n      dialogContent: (\r\n        <>\r\n          <TextField componentRef={this._textField} label=\"Rename\" value={item.name} />\r\n          <DialogFooter>\r\n            <PrimaryButton onClick={this._updateItemName.bind(this, item, index)} text=\"Save\" />\r\n          </DialogFooter>\r\n        </>\r\n      )\r\n    });\r\n    return;\r\n  }\r\n\r\n  private _updateItemName(item: any, index: number): void {\r\n    if (this._textField && this._textField.current) {\r\n      const items = this.state.items;\r\n      items[index].name = this._textField.current.value || items[index].name;\r\n      this.setState({\r\n        renameDialogOpen: false,\r\n        items: [...items],\r\n        announced: <Announced message={`Item renamed`} />\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  private _closeRenameDialog(): void {\r\n    this.setState({\r\n      renameDialogOpen: false\r\n    });\r\n  }\r\n\r\n  private _getSelectionDetails(): string {\r\n    const selectionCount = this._selection.getSelectedCount();\r\n\r\n    switch (selectionCount) {\r\n      case 0:\r\n        return 'No items selected';\r\n      case 1:\r\n        return '1 item selected: ' + (this._selection.getSelection()[0] as any).name;\r\n      default:\r\n        return `${selectionCount} items selected`;\r\n    }\r\n  }\r\n}\r\n"]}