{"version":3,"file":"DetailsRowCheck.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsRowCheck.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAO/B,6CAAkE;AAClE,qCAAoC;AACpC,mEAAqD;AACrD,iDAA4D;AAG5D,IAAM,aAAa,GAAG,8BAAkB,EAAsD,CAAC;AAE/F,IAAM,mBAAmB,GAAmD,UAAA,KAAK;IAE7E,IAAA,oBAAiB,EAAjB,sCAAiB,EACjB,oBAAiB,EAAjB,sCAAiB,EACjB,sBAAmB,EAAnB,wCAAmB,EACnB,mBAAgB,EAAhB,qCAAgB,EAChB,mBAAgB,EAAhB,qCAAgB,EAChB,2BAAS,EACT,qCAAc,EACd,qBAAM,EACN,mBAAK,EACL,uBAAO,EACP,uDAAuB,EACvB,uBAAmB,EAAnB,wCAAmB,EAAE,mCAAmC;IACxD,8MAAc,CACN;IACV,IAAM,qBAAqB,GAAG,YAAY,CAAC,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC,sBAAsB,CAAC;IAEjG,IAAM,gBAAgB,GAAG,uBAAuB;QAC9C,CAAC,CAAC,iCAAqB,CAAC,uBAAuB,EAAE,qBAAqB,CAAC;QACvE,CAAC,CAAC,qBAAqB,CAAC;IAE1B,IAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE;QACvC,KAAK,EAAE,KAAM;QACb,SAAS,WAAA;QACT,QAAQ,UAAA;QACR,WAAW,aAAA;QACX,SAAS,WAAA;QACT,QAAQ,UAAA;QACR,SAAS,WAAA;QACT,OAAO,SAAA;KACR,CAAC,CAAC;IAEH,IAAM,oBAAoB,GAA0B;QAClD,OAAO,EAAE,QAAQ;QACjB,KAAK,OAAA;KACN,CAAC;IAEF,OAAO,SAAS,CAAC,CAAC,CAAC,CACjB,gDACM,WAAW,IACf,IAAI,EAAC,UAAU;QACf,mDAAmD;QACnD,SAAS,EAAE,eAAG,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,kBACnC,QAAQ,2BACC,IAAI,uBACT,iBAAiB,KAElC,gBAAgB,CAAC,oBAAoB,CAAC,CACnC,CACP,CAAC,CAAC,CAAC;IACF,mDAAmD;IACnD,gDAAS,WAAW,IAAE,SAAS,EAAE,eAAG,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,IAAI,CAC5E,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,UAAC,KAAgE;IAC5F,OAAO,oBAAC,aAAK,IAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,SAAS,EAAE,KAAK,CAAC,SAAS,EAAE,YAAY,SAAG,CAAC;AACxG,CAAC,CAAC,CAAC;AAEH,SAAS,sBAAsB,CAAC,aAAoC;IAClE,OAAO,oBAAC,aAAK,IAAC,OAAO,EAAE,aAAa,CAAC,OAAO,GAAI,CAAC;AACnD,CAAC;AAED,SAAS,0BAA0B,CAAC,aAAoC;IACtE,OAAO,oBAAC,SAAS,IAAC,KAAK,EAAE,aAAa,CAAC,KAAK,EAAE,OAAO,EAAE,aAAa,CAAC,OAAO,GAAI,CAAC;AACnF,CAAC;AAEY,QAAA,eAAe,GAAG,kBAAM,CACnC,mBAAmB,EACnB,kCAAS,EACT,SAAS,EACT,EAAE,KAAK,EAAE,iBAAiB,EAAE,EAC5B,IAAI,CACL,CAAC","sourcesContent":["import * as React from 'react';\nimport {\n  IDetailsRowCheckProps,\n  IDetailsCheckboxProps,\n  IDetailsRowCheckStyleProps,\n  IDetailsRowCheckStyles,\n} from './DetailsRowCheck.types';\nimport { css, styled, classNamesFunction } from '../../Utilities';\nimport { Check } from '../../Check';\nimport { getStyles } from './DetailsRowCheck.styles';\nimport { composeRenderFunction } from '@uifabric/utilities';\nimport { ITheme } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IDetailsRowCheckStyleProps, IDetailsRowCheckStyles>();\n\nconst DetailsRowCheckBase: React.FunctionComponent<IDetailsRowCheckProps> = props => {\n  const {\n    isVisible = false,\n    canSelect = false,\n    anySelected = false,\n    selected = false,\n    isHeader = false,\n    className,\n    checkClassName,\n    styles,\n    theme,\n    compact,\n    onRenderDetailsCheckbox,\n    useFastIcons = true, // must be removed from buttonProps\n    ...buttonProps\n  } = props;\n  const defaultCheckboxRender = useFastIcons ? _fastDefaultCheckboxRender : _defaultCheckboxRender;\n\n  const onRenderCheckbox = onRenderDetailsCheckbox\n    ? composeRenderFunction(onRenderDetailsCheckbox, defaultCheckboxRender)\n    : defaultCheckboxRender;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    canSelect,\n    selected,\n    anySelected,\n    className,\n    isHeader,\n    isVisible,\n    compact,\n  });\n\n  const detailsCheckboxProps: IDetailsCheckboxProps = {\n    checked: selected,\n    theme,\n  };\n\n  return canSelect ? (\n    <div\n      {...buttonProps}\n      role=\"checkbox\"\n      // eslint-disable-next-line deprecation/deprecation\n      className={css(classNames.root, classNames.check)}\n      aria-checked={selected}\n      data-selection-toggle={true}\n      data-automationid=\"DetailsRowCheck\"\n    >\n      {onRenderCheckbox(detailsCheckboxProps)}\n    </div>\n  ) : (\n    // eslint-disable-next-line deprecation/deprecation\n    <div {...buttonProps} className={css(classNames.root, classNames.check)} />\n  );\n};\n\nconst FastCheck = React.memo((props: { theme?: ITheme; checked?: boolean; className?: string }) => {\n  return <Check theme={props.theme} checked={props.checked} className={props.className} useFastIcons />;\n});\n\nfunction _defaultCheckboxRender(checkboxProps: IDetailsCheckboxProps) {\n  return <Check checked={checkboxProps.checked} />;\n}\n\nfunction _fastDefaultCheckboxRender(checkboxProps: IDetailsCheckboxProps) {\n  return <FastCheck theme={checkboxProps.theme} checked={checkboxProps.checked} />;\n}\n\nexport const DetailsRowCheck = styled<IDetailsRowCheckProps, IDetailsRowCheckStyleProps, IDetailsRowCheckStyles>(\n  DetailsRowCheckBase,\n  getStyles,\n  undefined,\n  { scope: 'DetailsRowCheck' },\n  true,\n);\n"]}