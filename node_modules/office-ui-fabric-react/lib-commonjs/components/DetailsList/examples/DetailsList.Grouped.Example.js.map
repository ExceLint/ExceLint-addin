{"version":3,"file":"DetailsList.Grouped.Example.js","sourceRoot":"../src/","sources":["components/DetailsList/examples/DetailsList.Grouped.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, IRenderFunction } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { IDetailsList, DetailsList, IColumn, IGroup, IDetailsHeaderProps } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { Toggle, IToggleStyles } from 'office-ui-fabric-react/lib/Toggle';\r\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\r\nimport { DetailsHeader } from '../DetailsHeader';\r\n\r\nconst margin = '0 20px 20px 0';\r\nconst controlWrapperClass = mergeStyles({\r\n  display: 'flex',\r\n  flexWrap: 'wrap'\r\n});\r\nconst toggleStyles: Partial<IToggleStyles> = {\r\n  root: { margin: margin },\r\n  label: { marginLeft: 10 }\r\n};\r\n\r\nexport interface IDetailsListGroupedExampleItem {\r\n  key: string;\r\n  name: string;\r\n  color: string;\r\n}\r\n\r\nexport interface IDetailsListGroupedExampleState {\r\n  items: IDetailsListGroupedExampleItem[];\r\n  groups: IGroup[];\r\n  showItemIndexInView: boolean;\r\n  isCompactMode: boolean;\r\n}\r\nconst _blueGroupIndex = 2;\r\n\r\nexport class DetailsListGroupedExample extends BaseComponent<{}, IDetailsListGroupedExampleState> {\r\n  private _root = React.createRef<IDetailsList>();\r\n  private _columns: IColumn[];\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: [\r\n        { key: 'a', name: 'a', color: 'red' },\r\n        { key: 'b', name: 'b', color: 'red' },\r\n        { key: 'c', name: 'c', color: 'blue' },\r\n        { key: 'd', name: 'd', color: 'blue' },\r\n        { key: 'e', name: 'e', color: 'blue' }\r\n      ],\r\n      // This is based on the definition of items\r\n      groups: [\r\n        { key: 'groupred0', name: 'Color: \"red\"', startIndex: 0, count: 2 },\r\n        { key: 'groupgreen2', name: 'Color: \"green\"', startIndex: 2, count: 0 },\r\n        { key: 'groupblue2', name: 'Color: \"blue\"', startIndex: 2, count: 3 }\r\n      ],\r\n      showItemIndexInView: false,\r\n      isCompactMode: false\r\n    };\r\n\r\n    this._columns = [\r\n      { key: 'name', name: 'Name', fieldName: 'name', minWidth: 100, maxWidth: 200, isResizable: true },\r\n      { key: 'color', name: 'Color', fieldName: 'color', minWidth: 100, maxWidth: 200 }\r\n    ];\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this.state.showItemIndexInView) {\r\n      const itemIndexInView = this._root.current!.getStartItemIndexInView();\r\n      alert('first item index that was in view: ' + itemIndexInView);\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const { items, groups, isCompactMode } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className={controlWrapperClass}>\r\n          <DefaultButton onClick={this._addItem} text=\"Add an item\" styles={{ root: { margin: margin } }} />\r\n          <Toggle label=\"Compact mode\" inlineLabel checked={isCompactMode} onChange={this._onChangeCompactMode} styles={toggleStyles} />\r\n          <Toggle\r\n            label=\"Show index of first item in view when unmounting\"\r\n            inlineLabel\r\n            checked={this.state.showItemIndexInView}\r\n            onChange={this._onShowItemIndexInViewChanged}\r\n            styles={toggleStyles}\r\n          />\r\n        </div>\r\n        <DetailsList\r\n          componentRef={this._root}\r\n          items={items}\r\n          groups={groups}\r\n          columns={this._columns}\r\n          ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n          ariaLabelForSelectionColumn=\"Toggle selection\"\r\n          onRenderDetailsHeader={this._onRenderDetailsHeader}\r\n          groupProps={{\r\n            showEmptyGroups: true\r\n          }}\r\n          onRenderItemColumn={this._onRenderColumn}\r\n          compact={isCompactMode}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _addItem = (): void => {\r\n    const items = this.state.items;\r\n    const groups = [...this.state.groups];\r\n    groups[_blueGroupIndex].count++;\r\n\r\n    this.setState(\r\n      {\r\n        items: items.concat([\r\n          {\r\n            key: 'item-' + items.length,\r\n            name: 'New item ' + items.length,\r\n            color: 'blue'\r\n          }\r\n        ]),\r\n        groups\r\n      },\r\n      () => {\r\n        if (this._root.current) {\r\n          this._root.current.focusIndex(items.length, true);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  private _onRenderDetailsHeader(props: IDetailsHeaderProps, _defaultRender?: IRenderFunction<IDetailsHeaderProps>) {\r\n    return <DetailsHeader {...props} ariaLabelForToggleAllGroupsButton={'Expand collapse groups'} />;\r\n  }\r\n\r\n  private _onRenderColumn(item: IDetailsListGroupedExampleItem, index: number, column: IColumn) {\r\n    const value = item && column && column.fieldName ? item[column.fieldName as keyof IDetailsListGroupedExampleItem] || '' : '';\r\n\r\n    return <div data-is-focusable={true}>{value}</div>;\r\n  }\r\n\r\n  private _onShowItemIndexInViewChanged = (event: React.MouseEvent<HTMLInputElement>, checked: boolean): void => {\r\n    this.setState({ showItemIndexInView: checked });\r\n  };\r\n\r\n  private _onChangeCompactMode = (ev: React.MouseEvent<HTMLElement>, checked: boolean): void => {\r\n    this.setState({ isCompactMode: checked });\r\n  };\r\n}\r\n"]}