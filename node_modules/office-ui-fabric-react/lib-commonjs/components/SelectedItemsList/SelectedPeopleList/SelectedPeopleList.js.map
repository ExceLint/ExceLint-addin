{"version":3,"file":"SelectedPeopleList.js","sourceRoot":"../src/","sources":["components/SelectedItemsList/SelectedPeopleList/SelectedPeopleList.tsx"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable */\r\nimport * as React from 'react';\r\n/* tslint:enable */\r\nimport { BaseSelectedItemsList } from '../BaseSelectedItemsList';\r\nimport { IBaseSelectedItemsListProps, ISelectedItemProps } from '../BaseSelectedItemsList.types';\r\nimport { IPersonaProps } from '../../../Persona';\r\nimport { ExtendedSelectedItem } from './Items/ExtendedSelectedItem';\r\nimport { SelectedItemWithContextMenu } from './Items/SelectedItemWithContextMenu';\r\nimport { IRenderFunction } from '../../../Utilities';\r\nimport { IContextualMenuItem } from '../../../ContextualMenu';\r\nimport { IBaseFloatingPickerProps } from '../../../FloatingPicker';\r\nimport { EditingItem } from './Items/EditingItem';\r\n\r\nexport interface IExtendedPersonaProps extends IPersonaProps {\r\n  key?: React.Key;\r\n  isValid: boolean;\r\n  blockRecipientRemoval?: boolean;\r\n  shouldBlockSelection?: boolean;\r\n  canExpand?: boolean;\r\n  isEditing?: boolean;\r\n}\r\n\r\nexport interface ISelectedPeopleItemProps extends ISelectedItemProps<IExtendedPersonaProps> {\r\n  onExpandItem?: () => void;\r\n  renderPersonaCoin?: IRenderFunction<IPersonaProps>;\r\n  renderPrimaryText?: IRenderFunction<IPersonaProps>;\r\n}\r\n\r\nexport interface ISelectedPeopleProps extends IBaseSelectedItemsListProps<IExtendedPersonaProps> {\r\n  onExpandGroup?: (item: IExtendedPersonaProps) => void;\r\n  removeMenuItemText?: string;\r\n  copyMenuItemText?: string;\r\n  editMenuItemText?: string;\r\n  getEditingItemText?: (item: IExtendedPersonaProps) => string;\r\n  onRenderFloatingPicker?: React.ComponentType<IBaseFloatingPickerProps<IPersonaProps>>;\r\n  floatingPickerProps?: IBaseFloatingPickerProps<IPersonaProps>;\r\n}\r\n\r\nexport class BasePeopleSelectedItemsList extends BaseSelectedItemsList<IExtendedPersonaProps, ISelectedPeopleProps> {}\r\n\r\n/**\r\n * Standard People Picker.\r\n */\r\nexport class SelectedPeopleList extends BasePeopleSelectedItemsList {\r\n  // tslint:disable-next-line:no-any\r\n  public static defaultProps: any = {\r\n    onRenderItem: (props: ISelectedPeopleItemProps) => <ExtendedSelectedItem {...props} />\r\n  };\r\n\r\n  protected renderItems = (): JSX.Element[] => {\r\n    const { items } = this.state;\r\n    // tslint:disable-next-line:no-any\r\n    return items.map((item: IExtendedPersonaProps, index: number) => this._renderItem(item, index));\r\n  };\r\n\r\n  // tslint:disable-next-line:no-any\r\n  private _renderItem(item: IExtendedPersonaProps, index: number): JSX.Element {\r\n    const { removeButtonAriaLabel } = this.props;\r\n    const expandGroup = this.props.onExpandGroup;\r\n    const props = {\r\n      item,\r\n      index,\r\n      key: item.key ? item.key : index,\r\n      selected: this.selection.isIndexSelected(index),\r\n      onRemoveItem: () => this.removeItem(item),\r\n      onItemChange: this.onItemChange,\r\n      removeButtonAriaLabel: removeButtonAriaLabel,\r\n      onCopyItem: (itemToCopy: IExtendedPersonaProps) => this.copyItems([itemToCopy]),\r\n      onExpandItem: expandGroup ? () => expandGroup(item) : undefined,\r\n      menuItems: this._createMenuItems(item)\r\n    };\r\n\r\n    const hasContextMenu = props.menuItems.length > 0;\r\n    if ((item as IExtendedPersonaProps).isEditing && hasContextMenu) {\r\n      return (\r\n        <EditingItem\r\n          {...props}\r\n          onRenderFloatingPicker={this.props.onRenderFloatingPicker}\r\n          floatingPickerProps={this.props.floatingPickerProps}\r\n          onEditingComplete={this._completeEditing}\r\n          getEditingItemText={this.props.getEditingItemText}\r\n        />\r\n      );\r\n    } else {\r\n      // This cast is here because we are guaranteed that onRenderItem is set\r\n      // from static defaultProps\r\n      // TODO: Move this component to composition with required onRenderItem to remove\r\n      // this cast.\r\n      const onRenderItem = this.props.onRenderItem as (props: ISelectedPeopleItemProps) => JSX.Element;\r\n      const renderedItem = onRenderItem(props);\r\n      return hasContextMenu ? (\r\n        <SelectedItemWithContextMenu\r\n          key={props.key}\r\n          renderedItem={renderedItem}\r\n          beginEditing={this._beginEditing}\r\n          menuItems={this._createMenuItems(props.item)}\r\n          item={props.item}\r\n        />\r\n      ) : (\r\n        renderedItem\r\n      );\r\n    }\r\n  }\r\n\r\n  private _beginEditing = (item: IExtendedPersonaProps): void => {\r\n    item.isEditing = true;\r\n    this.forceUpdate();\r\n  };\r\n\r\n  // tslint:disable-next-line:no-any\r\n  private _completeEditing = (oldItem: any, newItem: any): void => {\r\n    oldItem.isEditing = false;\r\n    this.replaceItem(oldItem, newItem);\r\n  };\r\n\r\n  // tslint:disable-next-line:no-any\r\n  private _createMenuItems(item: any): IContextualMenuItem[] {\r\n    const menuItems: IContextualMenuItem[] = [];\r\n\r\n    if (this.props.editMenuItemText && this.props.getEditingItemText) {\r\n      menuItems.push({\r\n        key: 'Edit',\r\n        text: this.props.editMenuItemText,\r\n        onClick: (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) => {\r\n          this._beginEditing(menuItem.data);\r\n        },\r\n        data: item\r\n      });\r\n    }\r\n\r\n    if (this.props.removeMenuItemText) {\r\n      menuItems.push({\r\n        key: 'Remove',\r\n        text: this.props.removeMenuItemText,\r\n        onClick: (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) => {\r\n          this.removeItem(menuItem.data as IExtendedPersonaProps);\r\n        },\r\n        data: item\r\n      });\r\n    }\r\n\r\n    if (this.props.copyMenuItemText) {\r\n      menuItems.push({\r\n        key: 'Copy',\r\n        text: this.props.copyMenuItemText,\r\n        onClick: (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) => {\r\n          if (this.props.onCopyItems) {\r\n            (this.copyItems as (items: IExtendedPersonaProps[]) => void)([menuItem.data] as IExtendedPersonaProps[]);\r\n          }\r\n        },\r\n        data: item\r\n      });\r\n    }\r\n\r\n    return menuItems;\r\n  }\r\n}\r\n"]}