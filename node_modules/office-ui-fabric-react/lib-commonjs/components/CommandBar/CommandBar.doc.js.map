{"version":3,"file":"CommandBar.doc.js","sourceRoot":"../src/","sources":["components/CommandBar/CommandBar.doc.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAG/B,+DAA0D;AAE1D,gFAA6E;AAC7E,sFAAmF;AACnF,0GAA8G;AAC9G,wCAAiE;AAEjE,IAAM,0BAA0B,GAAG,OAAO,CAAC,oGAAoG,CAAW,CAAC;AAE3J,IAAM,6BAA6B,GAAG,OAAO,CAAC,uGAAuG,CAAW,CAAC;AAEjK,IAAM,uCAAuC,GAAG,OAAO,CAAC,iHAAiH,CAAW,CAAC;AAErL,IAAM,wBAAwB,GAAqB;IACjD,KAAK,cAAA;IACL,aAAa,sBAAA;IACb,QAAQ,iBAAA;CACT,CAAC;AAEW,QAAA,mBAAmB,GAAkB;IAChD,KAAK,EAAE,YAAY;IACnB,aAAa,EAAE,YAAY;IAC3B,YAAY,EAAE,2HAA2H;IACzI,eAAe,EAAE,uCAAgB;IACjC,QAAQ,EAAE;QACR;YACE,KAAK,EAAE,wCAAwC;YAC/C,IAAI,EAAE,0BAA0B;YAChC,IAAI,EAAE,oBAAC,iDAAsB,uBAAK,wBAAwB,EAAI;SAC/D;QACD;YACE,KAAK,EAAE,6CAA6C;YACpD,IAAI,EAAE,6BAA6B;YACnC,IAAI,EAAE,oBAAC,uDAAyB,uBAAK,wBAAwB,EAAI;SAClE;QACD;YACE,KAAK,EAAE,gDAAgD;YACvD,IAAI,EAAE,uCAAuC;YAC7C,IAAI,EAAE,oBAAC,kFAA0C,uBAAK,wBAAwB,EAAI;SACnF;KACF;IACD,uBAAuB,EAAE;QACvB,OAAO,CAAS,kFAAkF,CAAC;QACnG,OAAO,CAAS,0FAA0F,CAAC;KAC5G;IACD,QAAQ,EAAE,OAAO,CAAS,yFAAyF,CAAC;IACpH,aAAa,EAAE,EAAE;IACjB,GAAG,EAAE,OAAO,CAAS,oFAAoF,CAAC;IAC1G,KAAK,EAAE,OAAO,CAAS,sFAAsF,CAAC;IAC9G,eAAe,EAAE,IAAI;IACrB,iBAAiB,EAAE,IAAI;CACxB,CAAC","sourcesContent":["import * as React from 'react';\r\n\r\nimport { IDocPageProps } from '../../common/DocPage.types';\r\nimport { CommandBarStatus } from './CommandBar.checklist';\r\nimport { ICommandBarProps } from './CommandBar.types';\r\nimport { CommandBarBasicExample } from './examples/CommandBar.Basic.Example';\r\nimport { CommandBarButtonAsExample } from './examples/CommandBar.ButtonAs.Example';\r\nimport { IndividualCommandBarButtonAsExampleWrapper } from './examples/CommandBar.CommandBarButtonAs.Example';\r\nimport { farItems, items, overflowItems } from './examples/data';\r\n\r\nconst CommandBarBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/examples/CommandBar.Basic.Example.tsx') as string;\r\n\r\nconst CommandBarButtonAsExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/examples/CommandBar.ButtonAs.Example.tsx') as string;\r\n\r\nconst IndividualCommandBarButtonAsExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/examples/CommandBar.CommandBarButtonAs.Example.tsx') as string;\r\n\r\nconst cmdBarParamsTextAndIcons: ICommandBarProps = {\r\n  items,\r\n  overflowItems,\r\n  farItems\r\n};\r\n\r\nexport const CommandBarPageProps: IDocPageProps = {\r\n  title: 'CommandBar',\r\n  componentName: 'CommandBar',\r\n  componentUrl: 'https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/CommandBar',\r\n  componentStatus: CommandBarStatus,\r\n  examples: [\r\n    {\r\n      title: 'CommandBar with overflowing menu items',\r\n      code: CommandBarBasicExampleCode,\r\n      view: <CommandBarBasicExample {...cmdBarParamsTextAndIcons} />\r\n    },\r\n    {\r\n      title: 'CommandBar custom buttons and overflow menu',\r\n      code: CommandBarButtonAsExampleCode,\r\n      view: <CommandBarButtonAsExample {...cmdBarParamsTextAndIcons} />\r\n    },\r\n    {\r\n      title: 'CommandBar with coachmark on individual button',\r\n      code: IndividualCommandBarButtonAsExampleCode,\r\n      view: <IndividualCommandBarButtonAsExampleWrapper {...cmdBarParamsTextAndIcons} />\r\n    }\r\n  ],\r\n  propertiesTablesSources: [\r\n    require<string>('!raw-loader!office-ui-fabric-react/src/components/CommandBar/CommandBar.types.ts'),\r\n    require<string>('!raw-loader!office-ui-fabric-react/src/components/ContextualMenu/ContextualMenu.types.ts')\r\n  ],\r\n  overview: require<string>('!raw-loader!office-ui-fabric-react/src/components/CommandBar/docs/CommandBarOverview.md'),\r\n  bestPractices: '',\r\n  dos: require<string>('!raw-loader!office-ui-fabric-react/src/components/CommandBar/docs/CommandBarDos.md'),\r\n  donts: require<string>('!raw-loader!office-ui-fabric-react/src/components/CommandBar/docs/CommandBarDonts.md'),\r\n  isHeaderVisible: true,\r\n  isFeedbackVisible: true\r\n};\r\n"]}