{"version":3,"file":"GridCell.js","sourceRoot":"../src/","sources":["utilities/grid/GridCell.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,6CAA6C;AAE7C,uCAA6C;AAE7C;IAA8D,oCAAsB;IAApF;QAAA,qEA6FC;QA7CS,cAAQ,GAAG;YACX,IAAA,gBAA6C,EAA3C,oBAAO,EAAE,sBAAQ,EAAE,cAAI,CAAqB;YAEpD,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE;gBACxB,OAAO,CAAC,IAAI,CAAC,CAAC;aACf;QACH,CAAC,CAAC;QAEM,mBAAa,GAAG,UAAC,EAAuC;YACxD,IAAA,gBAA2D,EAAzD,oBAAO,EAAE,sBAAQ,EAAE,cAAI,EAAE,8BAAY,CAAqB;YAElE,IAAM,gBAAgB,GAAG,YAAY,IAAI,YAAY,CAAC,EAAE,CAAC,CAAC;YAE1D,IAAI,CAAC,gBAAgB,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE;gBAC7C,OAAO,CAAC,IAAI,CAAC,CAAC;aACf;QACH,CAAC,CAAC;QAEM,kBAAY,GAAG,UAAC,EAAuC;YACvD,IAAA,gBAA0D,EAAxD,oBAAO,EAAE,sBAAQ,EAAE,cAAI,EAAE,4BAAW,CAAqB;YAEjE,IAAM,eAAe,GAAG,WAAW,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;YAEvD,IAAI,CAAC,eAAe,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE;gBAC5C,OAAO,CAAC,IAAI,CAAC,CAAC;aACf;QACH,CAAC,CAAC;QAEM,mBAAa,GAAG,UAAC,EAAuC;YACxD,IAAA,gBAAqD,EAAnD,oBAAO,EAAE,sBAAQ,EAAE,8BAAY,CAAqB;YAE5D,IAAM,gBAAgB,GAAG,YAAY,IAAI,YAAY,CAAC,EAAE,CAAC,CAAC;YAE1D,IAAI,CAAC,gBAAgB,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE;gBAC7C,OAAO,EAAE,CAAC;aACX;QACH,CAAC,CAAC;QAEM,cAAQ,GAAG;YACX,IAAA,gBAA6C,EAA3C,oBAAO,EAAE,sBAAQ,EAAE,cAAI,CAAqB;YAEpD,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE;gBACxB,OAAO,CAAC,IAAI,CAAC,CAAC;aACf;QACH,CAAC,CAAC;;IACJ,CAAC;IAvFQ,yBAAM,GAAb;QACQ,IAAA,eAaQ,EAZZ,cAAI,EACJ,UAAE,EACF,wBAAS,EACT,cAAI,EACJ,sBAAQ,EACR,sBAAQ,EACR,8BAAY,EACZ,wCAAiB,EACjB,4CAAmB,EACnB,gBAAK,EACL,gBAAK,EACL,gCAAa,CACA;QAEf,OAAO,CACL,oBAAC,sBAAa,IACZ,EAAE,EAAE,EAAE,gBACM,KAAK,uBACE,IAAI,EACvB,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,eAAG,CAAC,SAAS;gBACtB,GAAC,EAAE,GAAG,mBAAmB,IAAG,QAAQ;gBACpC,GAAC,EAAE,GAAG,iBAAiB,IAAG,QAAQ;oBAClC,EACF,OAAO,EAAE,IAAI,CAAC,QAAQ,EACtB,YAAY,EAAE,IAAI,CAAC,aAAa,EAChC,WAAW,EAAE,IAAI,CAAC,YAAY,EAC9B,YAAY,EAAE,IAAI,CAAC,aAAa,EAChC,OAAO,EAAE,IAAI,CAAC,QAAQ,EACtB,IAAI,EAAE,IAAI,mBACK,QAAQ,EACvB,SAAS,EAAE,KAAK,EAChB,KAAK,EAAE,KAAK,EACZ,aAAa,EAAE,aAAa,IAE3B,YAAY,CAAC,IAAI,CAAC,CACL,CACjB,CAAC;;IACJ,CAAC;IA7Ca,qBAAY,GAAG;QAC3B,QAAQ,EAAE,KAAK;QACf,EAAE,EAAE,iBAAK,CAAC,UAAU,CAAC;KACtB,CAAC;IAyFJ,eAAC;CAAA,AA7FD,CAA8D,KAAK,CAAC,SAAS,GA6F5E;AA7FY,4BAAQ","sourcesContent":["import * as React from 'react';\r\nimport { css, getId } from '../../Utilities';\r\nimport { IGridCellProps } from './GridCell.types';\r\nimport { CommandButton } from '../../Button';\r\n\r\nexport class GridCell<T, P extends IGridCellProps<T>> extends React.Component<P, {}> {\r\n  public static defaultProps = {\r\n    disabled: false,\r\n    id: getId('gridCell')\r\n  };\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      item,\r\n      id,\r\n      className,\r\n      role,\r\n      selected,\r\n      disabled,\r\n      onRenderItem,\r\n      cellDisabledStyle,\r\n      cellIsSelectedStyle,\r\n      index,\r\n      label,\r\n      getClassNames\r\n    } = this.props;\r\n\r\n    return (\r\n      <CommandButton\r\n        id={id}\r\n        data-index={index}\r\n        data-is-focusable={true}\r\n        disabled={disabled}\r\n        className={css(className, {\r\n          ['' + cellIsSelectedStyle]: selected,\r\n          ['' + cellDisabledStyle]: disabled\r\n        })}\r\n        onClick={this._onClick}\r\n        onMouseEnter={this._onMouseEnter}\r\n        onMouseMove={this._onMouseMove}\r\n        onMouseLeave={this._onMouseLeave}\r\n        onFocus={this._onFocus}\r\n        role={role}\r\n        aria-selected={selected}\r\n        ariaLabel={label}\r\n        title={label}\r\n        getClassNames={getClassNames}\r\n      >\r\n        {onRenderItem(item)}\r\n      </CommandButton>\r\n    );\r\n  }\r\n\r\n  private _onClick = (): void => {\r\n    const { onClick, disabled, item } = this.props as P;\r\n\r\n    if (onClick && !disabled) {\r\n      onClick(item);\r\n    }\r\n  };\r\n\r\n  private _onMouseEnter = (ev: React.MouseEvent<HTMLButtonElement>): void => {\r\n    const { onHover, disabled, item, onMouseEnter } = this.props as P;\r\n\r\n    const didUpdateOnEnter = onMouseEnter && onMouseEnter(ev);\r\n\r\n    if (!didUpdateOnEnter && onHover && !disabled) {\r\n      onHover(item);\r\n    }\r\n  };\r\n\r\n  private _onMouseMove = (ev: React.MouseEvent<HTMLButtonElement>): void => {\r\n    const { onHover, disabled, item, onMouseMove } = this.props as P;\r\n\r\n    const didUpdateOnMove = onMouseMove && onMouseMove(ev);\r\n\r\n    if (!didUpdateOnMove && onHover && !disabled) {\r\n      onHover(item);\r\n    }\r\n  };\r\n\r\n  private _onMouseLeave = (ev: React.MouseEvent<HTMLButtonElement>): void => {\r\n    const { onHover, disabled, onMouseLeave } = this.props as P;\r\n\r\n    const didUpdateOnLeave = onMouseLeave && onMouseLeave(ev);\r\n\r\n    if (!didUpdateOnLeave && onHover && !disabled) {\r\n      onHover();\r\n    }\r\n  };\r\n\r\n  private _onFocus = (): void => {\r\n    const { onFocus, disabled, item } = this.props as P;\r\n\r\n    if (onFocus && !disabled) {\r\n      onFocus(item);\r\n    }\r\n  };\r\n}\r\n"]}