{"version":3,"file":"getColorFromString.js","sourceRoot":"../src/","sources":["utilities/color/getColorFromString.ts"],"names":[],"mappings":";;;AACA,uCAAsC;AACtC,uDAAsD;AAEtD;;;;;;;GAOG;AACH,SAAgB,kBAAkB,CAAC,UAAkB;IACnD,IAAM,KAAK,GAAG,mBAAQ,CAAC,UAAU,CAAC,CAAC;IAEnC,IAAI,CAAC,KAAK,EAAE;QACV,OAAO;KACR;IAED,6CACK,mCAAgB,CAAC,KAAM,CAAC,KAC3B,GAAG,EAAE,UAAU,IACf;AACJ,CAAC;AAXD,gDAWC","sourcesContent":["import { IColor } from './interfaces';\nimport { cssColor } from './cssColor';\nimport { getColorFromRGBA } from './getColorFromRGBA';\n\n/**\n * Converts a CSS color string to a color object.\n * Note that hex colors *must* be prefixed with # to be considered valid.\n *\n * `inputColor` will be used unmodified as the `str` property of the returned object.\n * Alpha defaults to 100 if not specified in `inputColor`.\n * Returns undefined if the color string is invalid/not recognized.\n */\nexport function getColorFromString(inputColor: string): IColor | undefined {\n  const color = cssColor(inputColor);\n\n  if (!color) {\n    return;\n  }\n\n  return {\n    ...getColorFromRGBA(color!),\n    str: inputColor,\n  };\n}\n"]}