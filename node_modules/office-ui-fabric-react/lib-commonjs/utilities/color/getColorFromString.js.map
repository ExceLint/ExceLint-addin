{"version":3,"file":"getColorFromString.js","sourceRoot":"../src/","sources":["utilities/color/getColorFromString.ts"],"names":[],"mappings":";;;AACA,uCAAsC;AACtC,uDAAsD;AAEtD;;;;;;;GAOG;AACH,4BAAmC,UAAkB;IACnD,IAAM,KAAK,GAAG,mBAAQ,CAAC,UAAU,CAAC,CAAC;IAEnC,IAAI,CAAC,KAAK,EAAE;QACV,OAAO;KACR;IAED,4BACK,mCAAgB,CAAC,KAAM,CAAC,IAC3B,GAAG,EAAE,UAAU,IACf;AACJ,CAAC;AAXD,gDAWC","sourcesContent":["import { IColor } from './interfaces';\r\nimport { cssColor } from './cssColor';\r\nimport { getColorFromRGBA } from './getColorFromRGBA';\r\n\r\n/**\r\n * Converts a CSS color string to a color object.\r\n * Note that hex colors *must* be prefixed with # to be considered valid.\r\n *\r\n * `inputColor` will be used unmodified as the `str` property of the returned object.\r\n * Alpha defaults to 100 if not specified in `inputColor`.\r\n * Returns undefined if the color string is invalid/not recognized.\r\n */\r\nexport function getColorFromString(inputColor: string): IColor | undefined {\r\n  const color = cssColor(inputColor);\r\n\r\n  if (!color) {\r\n    return;\r\n  }\r\n\r\n  return {\r\n    ...getColorFromRGBA(color!),\r\n    str: inputColor\r\n  };\r\n}\r\n"]}