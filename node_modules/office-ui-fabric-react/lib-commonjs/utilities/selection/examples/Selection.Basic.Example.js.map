{"version":3,"file":"Selection.Basic.Example.js","sourceRoot":"../src/","sources":["utilities/selection/examples/Selection.Basic.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\r\nimport { Check } from 'office-ui-fabric-react/lib/Check';\r\nimport { IContextualMenuItem } from 'office-ui-fabric-react/lib/ContextualMenu';\r\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\r\nimport { ISelection, Selection, SelectionMode, SelectionZone } from 'office-ui-fabric-react/lib/Selection';\r\nimport { createListItems, IExampleItem } from 'office-ui-fabric-react/lib/utilities/exampleData';\r\nimport { mergeStyleSets, IRawStyle } from 'office-ui-fabric-react/lib/Styling';\r\nimport { memoizeFunction } from 'office-ui-fabric-react/lib/Utilities';\r\n\r\nconst commonStyles: IRawStyle = {\r\n  display: 'inline-block',\r\n  cursor: 'default',\r\n  boxSizing: 'border-box',\r\n  verticalAlign: 'top',\r\n  background: 'none',\r\n  backgroundColor: 'transparent',\r\n  border: 'none'\r\n};\r\nconst classNames = mergeStyleSets({\r\n  item: {\r\n    selectors: {\r\n      '&:hover': { background: '#eee' }\r\n    }\r\n  },\r\n  // Overwrites the default style for Button\r\n  check: [commonStyles, { padding: '11px 8px' }],\r\n  cell: [\r\n    commonStyles,\r\n    {\r\n      overflow: 'hidden',\r\n      height: 36,\r\n      padding: 8\r\n    }\r\n  ]\r\n});\r\n\r\nconst ITEM_COUNT = 100;\r\n\r\nexport interface ISelectionBasicExampleState {\r\n  items: IExampleItem[];\r\n  selection: ISelection;\r\n  selectionMode: SelectionMode;\r\n  canSelect: 'all' | 'vowels';\r\n}\r\n\r\nexport interface ISelectionItemExampleProps {\r\n  item: IExampleItem;\r\n  itemIndex?: number;\r\n  selection?: ISelection;\r\n  selectionMode?: SelectionMode;\r\n}\r\n\r\n/**\r\n * The SelectionItemExample controls and displays the selection state of a single item\r\n */\r\nexport const SelectionItemExample: React.StatelessComponent<ISelectionItemExampleProps> = (props: ISelectionItemExampleProps) => {\r\n  const { item, itemIndex, selection } = props;\r\n  let isSelected = false;\r\n\r\n  if (selection && itemIndex !== undefined) {\r\n    isSelected = selection.isIndexSelected(itemIndex);\r\n  }\r\n\r\n  return (\r\n    <div className={classNames.item} data-is-focusable={true} data-selection-index={itemIndex}>\r\n      {selection && selection.canSelectItem(item) && selection.mode !== SelectionMode.none && (\r\n        <div className={classNames.check} data-is-focusable={true} data-selection-toggle={true}>\r\n          <Check checked={isSelected} />\r\n        </div>\r\n      )}\r\n      <span className={classNames.cell}>{item.name}</span>\r\n      <a className={classNames.cell} href=\"https://bing.com\" target=\"_blank\">\r\n        Link that avoids selection\r\n      </a>\r\n      <a className={classNames.cell} data-selection-select={true} href=\"https://bing.com\" target=\"_blank\">\r\n        Link that selects first\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * The SelectionBasicExample controls the selection state of all items\r\n */\r\nexport class SelectionBasicExample extends React.Component<{}, ISelectionBasicExampleState> {\r\n  private _hasMounted: boolean;\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this._hasMounted = false;\r\n    // Memoizing this means that given the same parameters, it will return the same array of command objects\r\n    // (performance optimization)\r\n    this._getCommandItems = memoizeFunction(this._getCommandItems);\r\n\r\n    this.state = {\r\n      items: createListItems(ITEM_COUNT),\r\n      selection: new Selection({ onSelectionChanged: this._onSelectionChanged }),\r\n      selectionMode: SelectionMode.multiple,\r\n      canSelect: 'all'\r\n    };\r\n    this.state.selection.setItems(this.state.items, false);\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this._hasMounted = true;\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { items, selection, canSelect } = this.state;\r\n\r\n    return (\r\n      <div className=\"ms-SelectionBasicExample\">\r\n        <CommandBar items={this._getCommandItems(selection.mode, canSelect)} />\r\n        <MarqueeSelection selection={selection} isEnabled={selection.mode === SelectionMode.multiple}>\r\n          <SelectionZone selection={selection} onItemInvoked={this._alertItem}>\r\n            {items.map((item: IExampleItem, index: number) => (\r\n              <SelectionItemExample key={item.key} item={item} itemIndex={index} selection={selection} />\r\n            ))}\r\n          </SelectionZone>\r\n        </MarqueeSelection>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _alertItem = (item: IExampleItem): void => {\r\n    alert('item invoked: ' + item.name);\r\n  };\r\n\r\n  private _onSelectionChanged = (): void => {\r\n    if (this._hasMounted) {\r\n      this.forceUpdate();\r\n    }\r\n  };\r\n\r\n  private _onToggleSelectAll = (): void => {\r\n    const { selection } = this.state;\r\n    selection.toggleAllSelected();\r\n  };\r\n\r\n  private _onSelectionModeChanged = (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem): void => {\r\n    this.setState((previousState: ISelectionBasicExampleState) => {\r\n      const newSelection = new Selection({\r\n        onSelectionChanged: this._onSelectionChanged,\r\n        canSelectItem: previousState.canSelect === 'vowels' ? this._canSelectItem : undefined,\r\n        selectionMode: menuItem.data\r\n      });\r\n      newSelection.setItems(previousState.items, false);\r\n\r\n      return {\r\n        selection: newSelection\r\n      };\r\n    });\r\n  };\r\n\r\n  private _onCanSelectChanged = (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem): void => {\r\n    const canSelectItem = menuItem.data === 'vowels' ? this._canSelectItem : undefined;\r\n\r\n    this.setState((previousState: ISelectionBasicExampleState) => {\r\n      const newSelection = new Selection({\r\n        onSelectionChanged: this._onSelectionChanged,\r\n        canSelectItem: canSelectItem,\r\n        selectionMode: previousState.selection.mode\r\n      });\r\n      newSelection.setItems(previousState.items, false);\r\n      return {\r\n        selection: newSelection,\r\n        canSelect: menuItem.data === 'vowels' ? 'vowels' : 'all'\r\n      };\r\n    });\r\n  };\r\n\r\n  private _canSelectItem = (item: IExampleItem): boolean => {\r\n    return /^[aeiou]/.test(item.name || '');\r\n  };\r\n\r\n  private _getCommandItems = (selectionMode: SelectionMode, canSelect: 'all' | 'vowels'): IContextualMenuItem[] => {\r\n    return [\r\n      {\r\n        key: 'selectionMode',\r\n        text: 'Selection Mode',\r\n        items: [\r\n          {\r\n            key: SelectionMode[SelectionMode.none],\r\n            name: 'None',\r\n            canCheck: true,\r\n            checked: selectionMode === SelectionMode.none,\r\n            onClick: this._onSelectionModeChanged,\r\n            data: SelectionMode.none\r\n          },\r\n          {\r\n            key: SelectionMode[SelectionMode.single],\r\n            name: 'Single select',\r\n            canCheck: true,\r\n            checked: selectionMode === SelectionMode.single,\r\n            onClick: this._onSelectionModeChanged,\r\n            data: SelectionMode.single\r\n          },\r\n          {\r\n            key: SelectionMode[SelectionMode.multiple],\r\n            name: 'Multi select',\r\n            canCheck: true,\r\n            checked: selectionMode === SelectionMode.multiple,\r\n            onClick: this._onSelectionModeChanged,\r\n            data: SelectionMode.multiple\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        key: 'selectAll',\r\n        text: 'Select All',\r\n        iconProps: { iconName: 'CheckMark' },\r\n        onClick: this._onToggleSelectAll\r\n      },\r\n      {\r\n        key: 'allowCanSelect',\r\n        text: 'Choose selectable items',\r\n        items: [\r\n          {\r\n            key: 'all',\r\n            name: 'All items',\r\n            canCheck: true,\r\n            checked: canSelect === 'all',\r\n            onClick: this._onCanSelectChanged,\r\n            data: 'all'\r\n          },\r\n          {\r\n            key: 'a',\r\n            name: 'Names starting with vowels',\r\n            canCheck: true,\r\n            checked: canSelect === 'vowels',\r\n            onClick: this._onCanSelectChanged,\r\n            data: 'vowels'\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n  };\r\n}\r\n"]}