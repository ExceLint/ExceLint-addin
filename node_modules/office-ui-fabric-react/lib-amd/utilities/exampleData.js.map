{"version":3,"file":"exampleData.js","sourceRoot":"../src/","sources":["utilities/exampleData.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable deprecation/deprecation */\n\nimport { IGroup } from '../DetailsList';\n\nconst LOREM_IPSUM = (\n  'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut ' +\n  'labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut ' +\n  'aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore ' +\n  'eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt ' +\n  'mollit anim id est laborum'\n).split(' ');\n\nconst DATA = {\n  color: ['red', 'blue', 'green', 'yellow'],\n  shape: ['circle', 'square', 'triangle'],\n  location: ['Seattle', 'New York', 'Chicago', 'Los Angeles', 'Portland'],\n};\n\n/** @deprecated Use the version from `@uifabric/example-data` instead. */\nexport interface IExampleItem {\n  thumbnail: string;\n  key: string;\n  name: string;\n  description: string;\n  color: string;\n  shape: string;\n  location: string;\n  width: number;\n  height: number;\n}\n\n/** @deprecated Use the version from `@uifabric/example-data` instead. */\nexport function createListItems(count: number, startIndex: number = 0): IExampleItem[] {\n  return [...Array(count)].map((item: number, index: number) => {\n    const size = 150 + Math.round(Math.random() * 100);\n\n    return {\n      thumbnail: `//placehold.it/${size}x${size}`,\n      key: 'item-' + (index + startIndex) + ' ' + lorem(4),\n      name: lorem(5),\n      description: lorem(10 + Math.round(Math.random() * 50)),\n      color: _randWord(DATA.color),\n      shape: _randWord(DATA.shape),\n      location: _randWord(DATA.location),\n      width: size,\n      height: size,\n    };\n  });\n}\n\n/** @deprecated Use the version from `@uifabric/example-data` instead. */\nexport function createGroups(\n  groupCount: number,\n  groupDepth: number,\n  startIndex: number,\n  itemsPerGroup: number,\n  level: number = 0,\n  key: string = '',\n  isCollapsed?: boolean,\n): IGroup[] {\n  if (key !== '') {\n    key = key + '-';\n  }\n  const count = Math.pow(itemsPerGroup, groupDepth);\n  return [...Array(groupCount)].map((value: number, index: number) => {\n    return {\n      count: count,\n      key: 'group' + key + index,\n      name: 'group ' + key + index,\n      startIndex: index * count + startIndex,\n      level: level,\n      isCollapsed: isCollapsed,\n      children:\n        groupDepth > 1\n          ? createGroups(groupCount, groupDepth - 1, index * count + startIndex, itemsPerGroup, level + 1, key + index)\n          : [],\n    };\n  });\n}\n\n/** @deprecated Use the version from `@uifabric/example-data` instead. */\nexport function lorem(wordCount: number): string {\n  return [...Array(wordCount)]\n    .map((item: number, idx: number) => {\n      return LOREM_IPSUM[idx % LOREM_IPSUM.length];\n    })\n    .join(' ');\n}\n\nexport function isGroupable(key: string): boolean {\n  return key === 'color' || key === 'shape' || key === 'location';\n}\n\nfunction _randWord(array: string[]): string {\n  const index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n"]}