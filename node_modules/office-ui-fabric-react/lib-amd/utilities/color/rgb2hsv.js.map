{"version":3,"file":"rgb2hsv.js","sourceRoot":"../src/","sources":["utilities/color/rgb2hsv.ts"],"names":[],"mappings":";;;IAGA,+CAA+C;IAC/C,iBAAwB,CAAS,EAAE,CAAS,EAAE,CAAS;QACrD,IAAI,CAAC,GAAG,GAAG,CAAC;QACZ,IAAI,CAAC,CAAC;QACN,IAAI,CAAC,CAAC;QACN,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,IAAM,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;QAExB,MAAM;QACN,IAAI,KAAK,KAAK,CAAC,EAAE;YACf,CAAC,GAAG,CAAC,CAAC;SACP;aAAM,IAAI,CAAC,KAAK,GAAG,EAAE;YACpB,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;SAC3B;aAAM,IAAI,CAAC,KAAK,GAAG,EAAE;YACpB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;SACzB;aAAM,IAAI,CAAC,KAAK,GAAG,EAAE;YACpB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;SACzB;QAED,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;QAEvB,IAAI,CAAC,GAAG,CAAC,EAAE;YACT,CAAC,IAAI,GAAG,CAAC;SACV;QAED,aAAa;QACb,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;QAEpD,QAAQ;QACR,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,sBAAa,CAAC,GAAG,GAAG,CAAC,CAAC;QAE5C,OAAO,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,CAAC;IACrB,CAAC;IAhCD,0BAgCC","sourcesContent":["import { IHSV } from './interfaces';\r\nimport { MAX_COLOR_RGB } from './consts';\r\n\r\n/** Converts RGB components to an HSV color. */\r\nexport function rgb2hsv(r: number, g: number, b: number): IHSV {\r\n  let h = NaN;\r\n  let s;\r\n  let v;\r\n  const max = Math.max(r, g, b);\r\n  const min = Math.min(r, g, b);\r\n  const delta = max - min;\r\n\r\n  // hue\r\n  if (delta === 0) {\r\n    h = 0;\r\n  } else if (r === max) {\r\n    h = ((g - b) / delta) % 6;\r\n  } else if (g === max) {\r\n    h = (b - r) / delta + 2;\r\n  } else if (b === max) {\r\n    h = (r - g) / delta + 4;\r\n  }\r\n\r\n  h = Math.round(h * 60);\r\n\r\n  if (h < 0) {\r\n    h += 360;\r\n  }\r\n\r\n  // saturation\r\n  s = Math.round((max === 0 ? 0 : delta / max) * 100);\r\n\r\n  // value\r\n  v = Math.round((max / MAX_COLOR_RGB) * 100);\r\n\r\n  return { h, s, v };\r\n}\r\n"]}