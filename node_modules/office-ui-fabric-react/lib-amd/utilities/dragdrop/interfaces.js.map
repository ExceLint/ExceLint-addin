{"version":3,"file":"interfaces.js","sourceRoot":"../src/","sources":["utilities/dragdrop/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\r\nimport { EventGroup } from '../../Utilities';\r\n\r\nexport interface IDragDropHelper {\r\n  subscribe: (\r\n    root: HTMLElement,\r\n    events: EventGroup,\r\n    options: IDragDropOptions\r\n  ) => {\r\n    key: string;\r\n    dispose: () => void;\r\n  };\r\n  unsubscribe: (root: HTMLElement, key: string) => void;\r\n  dispose: () => void;\r\n}\r\n\r\nexport interface IDragDropEvents {\r\n  canDrop?: (dropContext?: IDragDropContext, dragContext?: IDragDropContext) => boolean;\r\n  canDrag?: (item?: any) => boolean;\r\n  onDragEnter?: (item?: any, event?: DragEvent) => string; // return string is the css classes that will be added to the enterring element.\r\n  onDragLeave?: (item?: any, event?: DragEvent) => void;\r\n  onDrop?: (item?: any, event?: DragEvent) => void;\r\n  onDragStart?: (item?: any, itemIndex?: number, selectedItems?: any[], event?: MouseEvent) => void;\r\n  onDragEnd?: (item?: any, event?: DragEvent) => void;\r\n}\r\n\r\nexport interface IDragDropContext {\r\n  data: any;\r\n  index: number;\r\n  isGroup?: boolean;\r\n}\r\n\r\nexport interface IDragDropTarget {\r\n  root: React.ReactInstance;\r\n  options: IDragDropOptions;\r\n  key: string;\r\n}\r\n\r\nexport interface IDragDropOptions {\r\n  key?: string;\r\n  eventMap?: { eventName: string; callback: (context: IDragDropContext, event?: any) => void }[];\r\n  selectionIndex: number;\r\n  context: IDragDropContext;\r\n  updateDropState: (isDropping: boolean, event: DragEvent) => void;\r\n  canDrop?: (dropContext?: IDragDropContext, dragContext?: IDragDropContext) => boolean;\r\n  canDrag?: (item?: any) => boolean;\r\n  onDragStart?: (item?: any, itemIndex?: number, selectedItems?: any[], event?: MouseEvent) => void;\r\n  onDrop?: (item?: any, event?: DragEvent) => void;\r\n  onDragEnd?: (item?: any, event?: DragEvent) => void;\r\n  onDragOver?: (item?: any, event?: DragEvent) => void;\r\n}\r\n\r\nexport interface IDragDropEvent {\r\n  isHandled?: boolean;\r\n}\r\n"]}