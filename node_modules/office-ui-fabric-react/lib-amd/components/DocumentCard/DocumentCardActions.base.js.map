{"version":3,"file":"DocumentCardActions.base.js","sourceRoot":"../src/","sources":["components/DocumentCard/DocumentCardActions.base.tsx"],"names":[],"mappings":";;;IAOA,IAAM,aAAa,GAAG,8BAAkB,EAA8D,CAAC;IAEvG;QAA6C,mDAA6C;QAA1F;;QA+BA,CAAC;QA5BQ,wCAAM,GAAb;YAAA,iBA2BC;YA1BO,IAAA,eAAyD,EAAvD,oBAAO,EAAE,gBAAK,EAAE,kBAAM,EAAE,gBAAK,EAAE,wBAAS,CAAgB;YAEhE,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,MAAO,EAAE;gBACxC,KAAK,EAAE,KAAM;gBACb,SAAS,WAAA;aACV,CAAC,CAAC;YAEH,OAAO,CACL,6BAAK,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;gBAClC,OAAO;oBACN,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,KAAK;wBACxB,OAAO,CACL,6BAAK,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK;4BACjD,oBAAC,mBAAU,uBAAK,MAAM,EAAI,CACtB,CACP,CAAC;oBACJ,CAAC,CAAC;gBAEH,KAAM,GAAG,CAAC,IAAI,CACb,6BAAK,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;oBACpC,oBAAC,WAAI,IAAC,QAAQ,EAAC,MAAM,EAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,GAAI;oBAC9D,KAAK,CACF,CACP,CACG,CACP,CAAC;QACJ,CAAC;QACH,8BAAC;IAAD,CAAC,AA/BD,CAA6C,yBAAa,GA+BzD;IA/BY,0DAAuB","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, classNamesFunction } from '../../Utilities';\r\nimport { Icon } from '../../Icon';\r\nimport { IDocumentCardActionsProps, IDocumentCardActionsStyleProps, IDocumentCardActionsStyles } from './DocumentCardActions.types';\r\nimport { IconButton } from '../../Button';\r\nimport { IProcessedStyleSet } from '../../Styling';\r\n\r\nconst getClassNames = classNamesFunction<IDocumentCardActionsStyleProps, IDocumentCardActionsStyles>();\r\n\r\nexport class DocumentCardActionsBase extends BaseComponent<IDocumentCardActionsProps, any> {\r\n  private _classNames: IProcessedStyleSet<IDocumentCardActionsStyles>;\r\n\r\n  public render(): JSX.Element {\r\n    const { actions, views, styles, theme, className } = this.props;\r\n\r\n    this._classNames = getClassNames(styles!, {\r\n      theme: theme!,\r\n      className\r\n    });\r\n\r\n    return (\r\n      <div className={this._classNames.root}>\r\n        {actions &&\r\n          actions.map((action, index) => {\r\n            return (\r\n              <div className={this._classNames.action} key={index}>\r\n                <IconButton {...action} />\r\n              </div>\r\n            );\r\n          })}\r\n\r\n        {views! > 0 && (\r\n          <div className={this._classNames.views}>\r\n            <Icon iconName=\"View\" className={this._classNames.viewsIcon} />\r\n            {views}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}