{"version":3,"file":"DetailsRowCheck.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsRowCheck.tsx"],"names":[],"mappings":";;;IAUA,IAAM,kBAAkB,GAAG,8BAAkB,EAAkC,CAAC;IAChF,IAAM,aAAa,GAAG,8BAAkB,EAAsD,CAAC;IAE/F,IAAM,mBAAmB,GAAG,UAAC,KAA4B;QAErD,IAAA,oBAAiB,EAAjB,sCAAiB,EACjB,oBAAiB,EAAjB,sCAAiB,EACjB,qBAAkB,EAAlB,uCAAkB,EAClB,sBAAmB,EAAnB,wCAAmB,EACnB,mBAAgB,EAAhB,qCAAgB,EAChB,mBAAgB,EAAhB,qCAAgB,EAChB,2BAAS,EACT,qCAAc,EACd,qBAAM,EACN,mBAAK,EACL,uBAAO,EACP,iLAAc,CACN;QAEV,IAAM,SAAS,GAAG,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,QAAQ,CAAC;QAErD,IAAM,WAAW,GAAG,wBAAc,CAAC,EAAE,KAAK,EAAE,KAAM,EAAE,CAAC,CAAC;QAEtD,IAAM,eAAe,GAAG,kBAAkB,CAAC,WAAW,EAAE;YACtD,KAAK,EAAE,KAAM;SACd,CAAC,CAAC;QAEH,IAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE;YACvC,KAAK,EAAE,KAAM;YACb,SAAS,WAAA;YACT,QAAQ,EAAE,SAAS;YACnB,WAAW,aAAA;YACX,SAAS,WAAA;YACT,QAAQ,UAAA;YACR,SAAS,WAAA;YACT,OAAO,SAAA;SACR,CAAC,CAAC;QAEH,OAAO,SAAS,CAAC,CAAC,CAAC,CACjB,gDACM,WAAW,IACf,IAAI,EAAC,UAAU,EACf,SAAS,EAAE,eAAG,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,kBAC9D,SAAS,2BACA,IAAI,uBACT,iBAAiB;YAEnC,oBAAC,aAAK,IAAC,OAAO,EAAE,SAAS,GAAI,CACzB,CACP,CAAC,CAAC,CAAC,CACF,gDAAS,WAAW,IAAE,SAAS,EAAE,eAAG,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,IAAI,CAC5E,CAAC;IACJ,CAAC,CAAC;IAEW,QAAA,eAAe,GAAG,kBAAM,CACnC,mBAAmB,EACnB,kCAAS,EACT,SAAS,EACT,EAAE,KAAK,EAAE,iBAAiB,EAAE,CAC7B,CAAC","sourcesContent":["import * as React from 'react';\r\nimport { IDetailsRowCheckProps } from './DetailsRowCheck.types';\r\nimport { css, styled } from '../../Utilities';\r\nimport { Check } from '../../Check';\r\nimport { ICheckStyleProps, ICheckStyles } from '../Check/Check.types';\r\nimport { getStyles as getCheckStyles } from '../Check/Check.styles';\r\nimport { getStyles } from './DetailsRowCheck.styles';\r\nimport { IDetailsRowCheckStyleProps, IDetailsRowCheckStyles } from './DetailsRowCheck.types';\r\nimport { classNamesFunction } from '../../Utilities';\r\n\r\nconst getCheckClassNames = classNamesFunction<ICheckStyleProps, ICheckStyles>();\r\nconst getClassNames = classNamesFunction<IDetailsRowCheckStyleProps, IDetailsRowCheckStyles>();\r\n\r\nconst DetailsRowCheckBase = (props: IDetailsRowCheckProps) => {\r\n  const {\r\n    isVisible = false,\r\n    canSelect = false,\r\n    isSelected = false,\r\n    anySelected = false,\r\n    selected = false,\r\n    isHeader = false,\r\n    className,\r\n    checkClassName,\r\n    styles,\r\n    theme,\r\n    compact,\r\n    ...buttonProps\r\n  } = props;\r\n\r\n  const isPressed = props.isSelected || props.selected;\r\n\r\n  const checkStyles = getCheckStyles({ theme: theme! });\r\n\r\n  const checkClassNames = getCheckClassNames(checkStyles, {\r\n    theme: theme!\r\n  });\r\n\r\n  const classNames = getClassNames(styles, {\r\n    theme: theme!,\r\n    canSelect,\r\n    selected: isPressed,\r\n    anySelected,\r\n    className,\r\n    isHeader,\r\n    isVisible,\r\n    compact\r\n  });\r\n\r\n  return canSelect ? (\r\n    <div\r\n      {...buttonProps}\r\n      role=\"checkbox\"\r\n      className={css(classNames.root, classNames.check, checkClassNames.checkHost)}\r\n      aria-checked={isPressed}\r\n      data-selection-toggle={true}\r\n      data-automationid=\"DetailsRowCheck\"\r\n    >\r\n      <Check checked={isPressed} />\r\n    </div>\r\n  ) : (\r\n    <div {...buttonProps} className={css(classNames.root, classNames.check)} />\r\n  );\r\n};\r\n\r\nexport const DetailsRowCheck = styled<IDetailsRowCheckProps, IDetailsRowCheckStyleProps, IDetailsRowCheckStyles>(\r\n  DetailsRowCheckBase,\r\n  getStyles,\r\n  undefined,\r\n  { scope: 'DetailsRowCheck' }\r\n);\r\n"]}