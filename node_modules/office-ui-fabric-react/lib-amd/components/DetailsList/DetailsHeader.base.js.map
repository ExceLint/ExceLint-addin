{"version":3,"file":"DetailsHeader.base.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsHeader.base.tsx"],"names":[],"mappings":";;;IAyBA,IAAM,aAAa,GAAG,8BAAkB,EAAkD,CAAC;IAE3F,IAAM,wBAAwB,GAAG,CAAC,CAAC,CAAC,4EAA4E;IAChH,IAAM,wBAAwB,GAAG,CAAC,CAAC,CAAC,6EAA6E;IAEjH,IAAM,UAAU,GAAc,EAAE,CAAC;IAMjC;QAAuC,6CAA2D;QAqChG,2BAAY,KAA8B;YAA1C,YACE,kBAAM,KAAK,CAAC,SA8Bb;YA5DO,oBAAc,GAAG,KAAK,CAAC,SAAS,EAAc,CAAC;YAE/C,yBAAmB,GAAG,CAAC,CAAC,CAAC;YACzB,sBAAgB,GAAwC,EAAE,CAAC;YAgY3D,2BAAqB,GAAG;gBACtB,IAAA,wBAAoB,EAApB,yCAAoB,CAAgB;gBACpC,IAAA,mDAAkB,CAAgB;gBAC1C,IAAI,KAAK,GAAG,CAAC,CAAC;gBACd,IAAI,OAAO,GAAG,CAAC,CAAC;gBAChB,IAAI,OAAoB,CAAC;gBACzB,IAAM,0BAA0B,GAC9B,kBAAkB,IAAI,kBAAkB,CAAC,0BAA0B,CAAC,CAAC,CAAC,kBAAkB,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1H,IAAM,wBAAwB,GAC5B,kBAAkB,IAAI,kBAAkB,CAAC,wBAAwB,CAAC,CAAC,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEtH,KAAK,IAAI,CAAC,GAAG,0BAA2B,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,wBAAyB,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBACjG,IAAI,KAAI,CAAC,YAAY,EAAE;wBACrB,IAAM,eAAe,GAAG,KAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,kBAAkB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAgB,CAAC;wBACrG,IAAI,eAAe,EAAE;4BACnB,IAAI,CAAC,KAAK,0BAA2B,EAAE;gCACrC,KAAK,GAAG,eAAe,CAAC,UAAU,CAAC;gCACnC,OAAO,GAAG,eAAe,CAAC,UAAU,CAAC;gCACrC,OAAO,GAAG,eAAe,CAAC;6BAC3B;iCAAM;gCACL,IAAM,MAAM,GAAG,CAAC,eAAe,CAAC,UAAU,GAAG,KAAM,CAAC,GAAG,CAAC,CAAC;gCACzD,KAAI,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG;oCAC7B,OAAO,EAAE,KAAK;oCACd,MAAM,EAAE,OAAQ;oCAChB,IAAI,EAAE,MAAM;oCACZ,kBAAkB,EAAE,OAAQ;iCAC7B,CAAC;gCACF,OAAO,GAAG,MAAM,CAAC;gCACjB,OAAO,GAAG,eAAe,CAAC;gCAC1B,KAAK,GAAG,eAAe,CAAC,UAAU,CAAC;gCACnC,IAAI,CAAC,KAAK,OAAO,CAAC,MAAM,GAAG,wBAAyB,EAAE;oCACpD,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG;wCACzB,OAAO,EAAE,KAAK;wCACd,MAAM,EAAE,OAAQ;wCAChB,IAAI,EAAE,eAAe,CAAC,UAAU;wCAChC,kBAAkB,EAAE,OAAO;qCAC5B,CAAC;iCACH;6BACF;yBACF;qBACF;iBACF;YACH,CAAC,CAAC;YAYF;;;eAGG;YACK,+BAAyB,GAAG,UAAC,OAAe;gBAClD,IAAI,KAAI,CAAC,YAAY,EAAE;oBACrB,IAAM,UAAU,GAAG,KAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE,CAAC;oBAC7D,IAAM,aAAa,GAAG,UAAU,CAAC,IAAI,CAAC;oBACtC,IAAM,sBAAsB,GAAG,OAAO,GAAG,aAAa,CAAC;oBACvD,IAAM,oBAAoB,GAAG,KAAI,CAAC,qBAAqB,CAAC;oBACxD,IAAI,KAAI,CAAC,4BAA4B,EAAE,EAAE;wBACvC,IACE,KAAI,CAAC,YAAY,CACf,sBAAsB,EACtB,KAAI,CAAC,gBAAgB,CAAC,oBAAqB,CAAC,CAAC,MAAM,EACnD,KAAI,CAAC,gBAAgB,CAAC,oBAAqB,CAAC,CAAC,IAAI,CAClD,EACD;4BACA,OAAO;yBACR;qBACF;oBACO,IAAA,wBAAoB,EAApB,yCAAoB,CAAgB;oBACpC,IAAA,mDAAkB,CAAgB;oBAC1C,IAAM,0BAA0B,GAC9B,kBAAkB,IAAI,kBAAkB,CAAC,0BAA0B,CAAC,CAAC,CAAC,kBAAkB,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1H,IAAM,wBAAwB,GAC5B,kBAAkB,IAAI,kBAAkB,CAAC,wBAAwB,CAAC,CAAC,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC;oBAEtH,IAAM,YAAY,GAAW,0BAA2B,CAAC;oBACzD,IAAM,eAAe,GAAG,OAAO,CAAC,MAAM,GAAG,wBAAyB,CAAC;oBACnE,IAAI,aAAa,GAAG,CAAC,CAAC,CAAC;oBACvB,IAAI,KAAI,CAAC,SAAS,CAAC,sBAAsB,EAAE,KAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,EAAE;wBACpF,aAAa,GAAG,YAAY,CAAC;qBAC9B;yBAAM,IAAI,KAAI,CAAC,QAAQ,CAAC,sBAAsB,EAAE,KAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,EAAE;wBAC/F,aAAa,GAAG,eAAe,CAAC;qBACjC;yBAAM,IAAI,KAAI,CAAC,4BAA4B,EAAE,EAAE;wBAC9C,IACE,KAAI,CAAC,gBAAgB,CAAC,oBAAqB,GAAG,CAAC,CAAC;4BAChD,KAAI,CAAC,YAAY,CACf,sBAAsB,EACtB,KAAI,CAAC,gBAAgB,CAAC,oBAAqB,GAAG,CAAC,CAAC,CAAC,MAAM,EACvD,KAAI,CAAC,gBAAgB,CAAC,oBAAqB,GAAG,CAAC,CAAC,CAAC,IAAI,CACtD,EACD;4BACA,aAAa,GAAG,oBAAqB,GAAG,CAAC,CAAC;yBAC3C;6BAAM,IACL,KAAI,CAAC,gBAAgB,CAAC,oBAAqB,GAAG,CAAC,CAAC;4BAChD,KAAI,CAAC,YAAY,CACf,sBAAsB,EACtB,KAAI,CAAC,gBAAgB,CAAC,oBAAqB,GAAG,CAAC,CAAC,CAAC,MAAM,EACvD,KAAI,CAAC,gBAAgB,CAAC,oBAAqB,GAAG,CAAC,CAAC,CAAC,IAAI,CACtD,EACD;4BACA,aAAa,GAAG,oBAAqB,GAAG,CAAC,CAAC;yBAC3C;qBACF;oBACD,IAAI,aAAa,KAAK,CAAC,CAAC,EAAE;wBACxB,IAAI,UAAU,GAAG,0BAA2B,CAAC;wBAC7C,IAAI,QAAQ,GAAG,eAAe,CAAC;wBAC/B,OAAO,UAAU,GAAG,QAAQ,EAAE;4BAC5B,IAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,GAAG,UAAW,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC5D,IACE,KAAI,CAAC,YAAY,CAAC,sBAAsB,EAAE,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAC7H;gCACA,aAAa,GAAG,WAAW,CAAC;gCAC5B,MAAM;6BACP;iCAAM,IAAI,KAAI,CAAC,SAAS,CAAC,sBAAsB,EAAE,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,EAAE;gCAC7F,QAAQ,GAAG,WAAW,CAAC;6BACxB;iCAAM,IAAI,KAAI,CAAC,QAAQ,CAAC,sBAAsB,EAAE,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,EAAE;gCAC5F,UAAU,GAAG,WAAW,CAAC;6BAC1B;yBACF;qBACF;oBAED,IAAI,aAAa,KAAK,KAAI,CAAC,mBAAmB,IAAI,aAAa,KAAK,KAAI,CAAC,mBAAmB,GAAG,CAAC,EAAE;wBAChG,IAAI,KAAI,CAAC,4BAA4B,EAAE,EAAE;4BACvC,KAAI,CAAC,eAAe,EAAE,CAAC;yBACxB;qBACF;yBAAM,IAAI,oBAAoB,KAAK,aAAa,IAAI,aAAa,IAAI,CAAC,EAAE;wBACvE,KAAI,CAAC,eAAe,EAAE,CAAC;wBACvB,KAAI,CAAC,sBAAsB,CAAC,KAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,kBAAkB,EAAE,cAAc,CAAC,CAAC;wBACrG,KAAI,CAAC,qBAAqB,GAAG,aAAa,CAAC;qBAC5C;iBACF;YACH,CAAC,CAAC;YAgBM,wBAAkB,GAAG,UAAC,EAAoC;oBAAlC,4BAAW;gBACjC,IAAA,wBAAoB,EAApB,yCAAoB,CAAgB;gBAC5C,IAAM,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;gBAC5B,IAAA,qDAAmB,CAAgB;gBAC3C,IAAM,UAAU,GAAG,KAAI,CAAC,WAAW,CAAC;gBAEpC,OAAO,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAC1B,6BACE,GAAG,EAAK,MAAM,CAAC,GAAG,WAAQ,iBACb,IAAI,EACjB,IAAI,EAAC,QAAQ,uBACM,KAAK,EACxB,OAAO,EAAE,eAAe,sBACN,WAAW,EAC7B,MAAM,EAAE,KAAI,CAAC,YAAY,EACzB,SAAS,EAAE,eAAG,CAAC,UAAU,CAAC,SAAS,EAAE,WAAW,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,UAAU,CAAC,YAAY;wBACzH,GAAC,UAAU,CAAC,cAAc,IAAG,mBAAmB,IAAI,mBAAmB,CAAC,WAAW,KAAK,WAAW;4BACnG,EACF,aAAa,EAAE,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAI,EAAE,WAAW,CAAC,GAC/D,CACH,CAAC,CAAC,CAAC,IAAI,CAAC;;YACX,CAAC,CAAC;YAiCM,kCAA4B,GAAG,UACrC,gBAAmC,EACnC,aAAkD;gBAElD,OAAO,8BAAM,SAAS,EAAE,gBAAgB,CAAC,aAAa,IAAG,gBAAgB,CAAC,QAAQ,CAAQ,CAAC;YAC7F,CAAC,CAAC;YAgBF;;eAEG;YACK,yBAAmB,GAAG;gBACpB,IAAA,iCAAS,CAAgB;gBAEjC,IAAI,SAAS,EAAE;oBACb,SAAS,CAAC,iBAAiB,EAAE,CAAC;iBAC/B;YACH,CAAC,CAAC;YAEM,sBAAgB,GAAG,UAAC,EAAc;gBACxC,IAAM,eAAe,GAAI,EAAE,CAAC,MAAsB,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;gBACpF,IAAM,WAAW,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;gBACpC,IAAA,wBAAoB,EAApB,yCAAoB,CAAgB;gBAE5C,IAAI,eAAe,KAAK,IAAI,IAAI,EAAE,CAAC,MAAM,KAAK,wBAAwB,EAAE;oBACtE,6CAA6C;oBAC7C,OAAO;iBACR;gBAED,KAAI,CAAC,QAAQ,CAAC;oBACZ,mBAAmB,EAAE;wBACnB,WAAW,EAAE,WAAW;wBACxB,cAAc,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC,eAAgB;wBACrD,OAAO,EAAE,EAAE,CAAC,OAAO;qBACpB;iBACF,CAAC,CAAC;gBAEH,EAAE,CAAC,cAAc,EAAE,CAAC;gBACpB,EAAE,CAAC,eAAe,EAAE,CAAC;YACvB,CAAC,CAAC;YAEM,sBAAgB,GAAG,UAAC,EAAiC;gBACrD,IAAA,gBAA8C,EAA5C,4CAAmB,EAAE,sBAAQ,CAAgB;gBAErD,IAAI,mBAAmB,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,OAAO,KAAK,mBAAmB,CAAC,OAAO,EAAE;oBAClF,KAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACnC;YACH,CAAC,CAAC;YAEM,gBAAU,GAAG,UAAC,SAAoB;gBACxC,IAAI,SAAS,EAAE;oBACb,sHAAsH;oBACtH,KAAI,CAAC,YAAY,GAAG,uBAAW,CAAC,SAAS,CAAgB,CAAC;iBAC3D;qBAAM;oBACL,KAAI,CAAC,YAAY,GAAG,SAAS,CAAC;iBAC/B;YACH,CAAC,CAAC;YAEM,oBAAc,GAAG,UAAC,EAAiB;gBACnC,IAAA,gBAA8C,EAA5C,4CAAmB,EAAE,sBAAQ,CAAgB;gBAC/C,IAAA,gBAAsD,EAApD,eAAoB,EAApB,yCAAoB,EAAE,oCAAe,CAAgB;gBAE7D,IAAM,eAAe,GAAI,EAAE,CAAC,MAAsB,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;gBAEpF,IAAI,CAAC,eAAe,IAAI,QAAQ,EAAE;oBAChC,OAAO;iBACR;gBAED,IAAM,WAAW,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;gBAE5C,IAAI,CAAC,mBAAmB,EAAE;oBACxB,IAAI,EAAE,CAAC,KAAK,KAAK,oBAAQ,CAAC,KAAK,EAAE;wBAC/B,KAAI,CAAC,QAAQ,CAAC;4BACZ,mBAAmB,EAAE;gCACnB,WAAW,EAAE,WAAW;gCACxB,cAAc,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC,eAAgB;6BACtD;yBACF,CAAC,CAAC;wBAEH,EAAE,CAAC,cAAc,EAAE,CAAC;wBACpB,EAAE,CAAC,eAAe,EAAE,CAAC;qBACtB;iBACF;qBAAM;oBACL,IAAI,SAAS,SAAoB,CAAC;oBAElC,IAAI,EAAE,CAAC,KAAK,KAAK,oBAAQ,CAAC,KAAK,EAAE;wBAC/B,KAAI,CAAC,QAAQ,CAAC;4BACZ,mBAAmB,EAAE,SAAS;yBAC/B,CAAC,CAAC;wBAEH,EAAE,CAAC,cAAc,EAAE,CAAC;wBACpB,EAAE,CAAC,eAAe,EAAE,CAAC;qBACtB;yBAAM,IAAI,EAAE,CAAC,KAAK,KAAK,oBAAQ,CAAC,IAAI,EAAE;wBACrC,SAAS,GAAG,kBAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC/B;yBAAM,IAAI,EAAE,CAAC,KAAK,KAAK,oBAAQ,CAAC,KAAK,EAAE;wBACtC,SAAS,GAAG,kBAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC/B;oBAED,IAAI,SAAS,EAAE;wBACb,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE;4BAChB,SAAS,IAAI,EAAE,CAAC;yBACjB;wBAED,KAAI,CAAC,QAAQ,CAAC;4BACZ,mBAAmB,uBACd,mBAAmB,IACtB,cAAc,EAAE,mBAAmB,CAAC,cAAc,GAAG,SAAS,GAC/D;yBACF,CAAC,CAAC;wBAEH,IAAI,eAAe,EAAE;4BACnB,eAAe,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,mBAAmB,CAAC,cAAc,GAAG,SAAS,EAAE,WAAW,CAAC,CAAC;yBACpG;wBAED,EAAE,CAAC,cAAc,EAAE,CAAC;wBACpB,EAAE,CAAC,eAAe,EAAE,CAAC;qBACtB;iBACF;YACH,CAAC,CAAC;YAEF;;;;;eAKG;YACK,uBAAiB,GAAG,UAAC,EAAiC;gBAI1D;gBAFA,kGAAkG;gBAClG,sFAAsF;gBACtF,oBAAO,CACF;gBACD,IAAA,gBAA+E,EAA7E,oDAAuB,EAAE,oCAAe,EAAE,eAAoB,EAApB,yCAAoB,CAAgB;gBAC9E,IAAA,qDAAmB,CAAgB;gBAE3C,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,wBAAwB,EAAE;oBACjE,kFAAkF;oBAClF,KAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;oBACzB,OAAO;iBACR;gBAED,IAAI,EAAE,CAAC,OAAO,KAAK,mBAAoB,CAAC,OAAO,EAAE;oBAC/C,IAAI,uBAAuB,EAAE;wBAC3B,uBAAuB,CAAC,OAAO,CAAC,mBAAoB,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,CAAC;qBAC1E;iBACF;gBAED,IAAI,eAAe,EAAE;oBACnB,IAAI,QAAQ,GAAG,EAAE,CAAC,OAAO,GAAG,mBAAoB,CAAC,OAAQ,CAAC;oBAE1D,IAAI,kBAAM,EAAE,EAAE;wBACZ,QAAQ,GAAG,CAAC,QAAQ,CAAC;qBACtB;oBAED,eAAe,CACb,OAAO,CAAC,mBAAoB,CAAC,WAAW,CAAC,EACzC,mBAAoB,CAAC,cAAc,GAAG,QAAQ,EAC9C,mBAAoB,CAAC,WAAW,CACjC,CAAC;iBACH;YACH,CAAC,CAAC;YAEM,kBAAY,GAAG,UAAC,EAAiC;gBAC/C,IAAA,qDAAmB,CAAgB;gBAE3C,IAAI,mBAAmB,EAAE;oBACvB,KAAI,CAAC,QAAQ,CAAC;wBACZ,mBAAmB,EAAE,SAAS;wBAC9B,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC;YAEF;;;;;;eAMG;YACK,qBAAe,GAAG,UAAC,EAAiC;gBACpD,IAAA,gBAA8D,EAA5D,eAAoB,EAApB,yCAAoB,EAAE,oDAAuB,CAAgB;gBAC7D,IAAA,qDAAmB,CAAgB;gBAE3C,KAAI,CAAC,QAAQ,CAAC;oBACZ,mBAAmB,EAAE,SAAS;oBAC9B,QAAQ,EAAE,KAAK;iBAChB,CAAC,CAAC;gBAEH,IAAI,uBAAuB,EAAE;oBAC3B,uBAAuB,CAAC,OAAO,CAAC,mBAAoB,CAAC,WAAW,CAAC,EAAE,KAAK,CAAC,CAAC;iBAC3E;YACH,CAAC,CAAC;YAjwBA,IAAM,kBAAkB,GACtB,KAAK,CAAC,kBAAkB,IAAI,CAAC,KAAK,CAAC,oBAAoB,IAAI,2BAA2B,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC;YACtH,KAAI,CAAC,KAAK,GAAG;gBACX,kBAAkB,oBAAA;gBAClB,mBAAmB,EAAE,SAAS;gBAC9B,iBAAiB,EAAE,KAAI,CAAC,KAAK,CAAC,iBAAiB;gBAC/C,cAAc,EAAE,KAAI,CAAC,KAAK,CAAC,cAAc;gBACzC,aAAa,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,SAAS,IAAI,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,EAAE;aAC9E,CAAC;YAEF,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACjE,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YAC/D,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACvD,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YAC/C,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACvC,KAAI,CAAC,yBAAyB,GAAG,KAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YAC3E,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACjE,KAAI,CAAC,qBAAqB,GAAG,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACnE,KAAI,CAAC,yBAAyB,GAAG,KAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YAC3E,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACvD,KAAI,CAAC,4BAA4B,GAAG,KAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACjF,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YAC7C,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACzD,KAAI,CAAC,gBAAgB,GAAG;gBACtB,WAAW,EAAE,CAAC,CAAC;gBACf,WAAW,EAAE,CAAC,CAAC;aAChB,CAAC;YACF,KAAI,CAAC,GAAG,GAAG,iBAAK,CAAC,QAAQ,CAAC,CAAC;YAC3B,KAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC,CAAC;;QAClC,CAAC;QA7Ca,0CAAwB,GAAtC,UAAuC,QAAiC,EAAE,SAA8B;YACtG,IAAM,kBAAkB,GACtB,QAAQ,CAAC,kBAAkB,IAAI,CAAC,QAAQ,CAAC,oBAAoB,IAAI,2BAA2B,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,CAAC;YACvH,IAAA,8CAAiB,CAAc;YAEvC,IAAM,QAAQ,GAAwB,EAAE,kBAAkB,oBAAA,EAAE,iBAAiB,mBAAA,EAAE,CAAC;YAEhF,IAAI,QAAQ,CAAC,cAAc,KAAK,SAAS,EAAE;gBACzC,QAAQ,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC;aACnD;YAED,OAAO,QAAQ,CAAC;QAClB,CAAC;QAmCM,6CAAiB,GAAxB;YACU,IAAA,gCAAS,CAAgB;YACzB,IAAA,kDAAkB,CAAgB;YAE1C,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,6BAAgB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAEvE,6FAA6F;YAC7F,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,YAAa,EAAE,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAExE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,YAAa,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YAEpE,IAAI,kBAAkB,IAAI,IAAI,CAAC,eAAe,EAAE;gBAC9C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,YAAa,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,yBAAyB,EAAE,CAAC,CAAC;aAC/H;QACH,CAAC;QAEM,8CAAkB,GAAzB,UAA0B,SAAkC;YAClD,IAAA,kDAAkB,CAAgB;YAC1C,IAAI,CAAC,kBAAkB,EAAE;gBACvB,IAAI,IAAI,CAAC,mBAAmB,EAAE;oBAC5B,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;oBACnC,OAAO,IAAI,CAAC,mBAAmB,CAAC;iBACjC;aACF;iBAAM,IAAI,CAAC,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,eAAe,EAAE;gBAC5D,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,YAAa,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,yBAAyB,EAAE,CAAC,CAAC;aAC/H;YAED,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,IAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,IAAI,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,IAAI,CAAC,EAAE;gBACxG,IAAA,sBAAqC,EAArC,iDAAqC,CAAe;gBACpD,IAAA,uBAAoB,EAApB,yCAAoB,CAAgB;gBAC5C,IAAI,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,GAAG,KAAK,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE;oBAC7G,IAAI,CAAC,gBAAgB,GAAG;wBACtB,WAAW,EAAE,CAAC,CAAC;wBACf,WAAW,EAAE,CAAC,CAAC;qBAChB,CAAC;iBACH;aACF;QACH,CAAC;QAEM,gDAAoB,GAA3B;YACE,IAAI,IAAI,CAAC,mBAAmB,EAAE;gBAC5B,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;gBACnC,OAAO,IAAI,CAAC,mBAAmB,CAAC;aACjC;YAED,IAAI,IAAI,CAAC,eAAe,EAAE;gBACxB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;aAChC;QACH,CAAC;QAEM,kCAAM,GAAb;YAAA,iBAkKC;YAjKO,IAAA,eAcQ,EAbZ,eAAoB,EAApB,yCAAoB,EACpB,wBAAS,EACT,wEAAiC,EACjC,gEAA6B,EAC7B,4CAAmB,EACnB,4DAA2B,EAC3B,4BAAW,EACX,sBAAQ,EACR,gCAAa,EACb,4CAAmB,EACnB,mCAA+D,EAA/D,oFAA+D,EAC/D,kBAAM,EACN,gBAAK,CACQ;YACT,IAAA,eAAoH,EAAlH,gCAAa,EAAE,4CAAmB,EAAE,sBAAQ,EAAE,wCAAiB,EAAE,kCAAc,EAAE,0CAAkB,CAAgB;YAC3H,IAAM,YAAY,GAAG,mBAAmB,KAAK,yCAAmB,CAAC,IAAI,CAAC;YACtE,IAAM,gBAAgB,GAAG,mBAAmB,KAAK,yCAAmB,CAAC,MAAM,CAAC;YAE5E,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,kBAAkB,EAAE;gBAC/C,iDAAiD;gBACjD,8EAA8E;gBAC9E,IAAI,CAAC,eAAe,GAAG,IAAI,sBAAc,CAAC;oBACxC,SAAS,EAAE;wBACT,YAAY,EAAE;4BACZ,OAAO;wBACT,CAAC;qBACY;oBACf,oBAAoB,EAAE,IAAI,CAAC,KAAK,CAAC,oBAAoB;iBACtD,CAAC,CAAC;aACJ;YACD,IAAM,0BAA0B,GAC9B,kBAAkB,IAAI,kBAAkB,CAAC,0BAA0B,CAAC,CAAC,CAAC,kBAAkB,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1H,IAAM,wBAAwB,GAC5B,kBAAkB,IAAI,kBAAkB,CAAC,wBAAwB,CAAC,CAAC,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC;YAEtH,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,MAAM,EAAE;gBACvC,KAAK,EAAE,KAAM;gBACb,aAAa,eAAA;gBACb,iBAAiB,EAAE,mBAAmB,KAAK,yCAAmB,CAAC,MAAM;gBACrE,gBAAgB,EAAE,CAAC,CAAC,mBAAmB,IAAI,QAAQ;gBACnD,QAAQ,UAAA;gBACR,cAAc,gBAAA;gBACd,gBAAgB,kBAAA;aACjB,CAAC,CAAC;YAEH,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;YAEpC,IAAM,KAAK,GAAG,kBAAM,EAAE,CAAC;YACvB,OAAO,CACL,oBAAC,qBAAS,IACR,IAAI,EAAC,KAAK,gBACE,SAAS,EACrB,SAAS,EAAE,UAAU,CAAC,IAAI,EAC1B,YAAY,EAAE,IAAI,CAAC,cAAc,EACjC,GAAG,EAAE,IAAI,CAAC,UAAU,EACpB,WAAW,EAAE,IAAI,CAAC,gBAAgB,uBAChB,eAAe,EACjC,KAAK,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,EAClD,SAAS,EAAE,8BAAkB,CAAC,UAAU;gBAEvC,YAAY;oBACX,CAAC,CAAC;wBACE,6BACE,GAAG,EAAC,YAAY,EAChB,SAAS,EAAE,UAAU,CAAC,WAAW,qBACb,IAAI,CAAC,GAAG,WAAQ,EACpC,OAAO,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,SAAS,mBAClD,CAAC,EAChB,IAAI,EAAE,cAAc,IAEnB,2BAA2B,CAC1B;4BACE,aAAa,EAAE,eAAG,CAAC,UAAU,CAAC,YAAY,CAAC;4BAC3C,EAAE,EAAK,IAAI,CAAC,GAAG,kBAAe;4BAC9B,kBAAkB,EAAE,KAAK;4BACzB,OAAO,EAAE,6BAA6B;4BACtC,QAAQ,EAAE,CACR,oBAAC,iCAAe,IACd,EAAE,EAAK,IAAI,CAAC,GAAG,WAAQ,gBACX,2BAA2B,sBAErC,CAAC,gBAAgB;oCACf,CAAC,CAAC,6BAA6B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,2BAA2B;wCACxE,CAAC,CAAI,IAAI,CAAC,GAAG,kBAAe;wCAC5B,CAAC,CAAC,SAAS;oCACb,CAAC,CAAC,2BAA2B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,2BAA2B;wCACxE,CAAC,CAAI,IAAI,CAAC,GAAG,kBAAe;wCAC5B,CAAC,CAAC,SAAS,uBAEI,CAAC,gBAAgB,IAAI,SAAS,EACjD,QAAQ,EAAE,IAAI,EACd,QAAQ,EAAE,aAAa,EACvB,WAAW,EAAE,KAAK,EAClB,SAAS,EAAE,CAAC,gBAAgB,EAC5B,SAAS,EAAE,UAAU,CAAC,KAAK,GAC3B,CACH;yBACF,EACD,IAAI,CAAC,4BAA4B,CAClC,CACG;wBACN,CAAC,IAAI,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC,CAAC,CACxC,6BAA6B,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CACnD,+BAAO,GAAG,EAAC,iBAAiB,EAAC,EAAE,EAAK,IAAI,CAAC,GAAG,kBAAe,EAAE,SAAS,EAAE,UAAU,CAAC,eAAe,IAC/F,6BAA6B,CACxB,CACT,CAAC,CAAC,CAAC,2BAA2B,IAAI,gBAAgB,CAAC,CAAC,CAAC,CACpD,+BAAO,GAAG,EAAC,iBAAiB,EAAC,EAAE,EAAK,IAAI,CAAC,GAAG,kBAAe,EAAE,SAAS,EAAE,UAAU,CAAC,eAAe,IAC/F,2BAA2B,CACtB,CACT,CAAC,CAAC,CAAC,IAAI,CACT,CAAC,CAAC,CAAC,IAAI;qBACT;oBACH,CAAC,CAAC,IAAI;gBACP,iBAAkB,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,qBAAqB,KAAK,mCAAqB,CAAC,OAAO,CAAC,CAAC,CAAC,CAC9F,6BACE,SAAS,EAAE,UAAU,CAAC,mBAAmB,EACzC,OAAO,EAAE,IAAI,CAAC,oBAAoB,uBACf,IAAI,gBACX,iCAAiC,mBAC9B,CAAC,cAAc;oBAE9B,oBAAC,WAAI,IAAC,SAAS,EAAE,UAAU,CAAC,cAAc,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,iBAAiB,GAAI,CAClG,CACP,CAAC,CAAC,CAAC,IAAI;gBACR,oBAAC,yBAAW,IAAC,WAAW,EAAE,WAAW,EAAE,KAAK,EAAE,iBAAkB,GAAG,CAAC,GAAI;gBACvE,OAAO,CAAC,GAAG,CAAC,UAAC,MAAe,EAAE,WAAmB;oBAChD,IAAM,YAAY,GAAG,kBAAkB;wBACrC,CAAC,CAAC,WAAW,IAAI,0BAA0B,IAAI,WAAW,GAAG,OAAO,CAAC,MAAM,GAAG,wBAAwB;wBACtG,CAAC,CAAC,KAAK,CAAC;oBACV,OAAO;wBACL,kBAAkB;4BAChB,CAAC,YAAY,IAAI,WAAW,KAAK,OAAO,CAAC,MAAM,GAAG,wBAAwB,CAAC;4BAC3E,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC;wBACnC,oBAAC,6BAAa,IACZ,MAAM,EAAE,MAAM,EACd,GAAG,EAAE,MAAM,CAAC,GAAG,EACf,WAAW,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,EACjD,QAAQ,EAAE,KAAI,CAAC,GAAG,EAClB,WAAW,EAAE,YAAY,EACzB,cAAc,EAAE,KAAI,CAAC,eAAe,EACpC,cAAc,EAAE,KAAI,CAAC,eAAe,EACpC,aAAa,EAAE,aAAa,EAC5B,mBAAmB,EAAE,mBAAmB;4BACxC,uEAAuE;4BACvE,2BAA2B,EAAE,KAAI,CAAC,KAAK,CAAC,2BAA2B,EACnE,SAAS,EAAE,KAAI,CAAC,gBAAgB,CAAC,WAAW,KAAK,WAAW,EAC5D,cAAc,EAAE,KAAI,CAAC,KAAK,CAAC,cAAc,GACzC;wBACF,KAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC;qBACvC,CAAC;gBACJ,CAAC,CAAC;gBACD,kBAAkB,IAAI,wBAAwB,KAAK,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC;gBAC5F,QAAQ,IAAI,CACX,oBAAC,aAAK;oBACJ,6BAAK,SAAS,EAAE,UAAU,CAAC,aAAa,EAAE,WAAW,EAAE,IAAI,CAAC,iBAAiB,EAAE,SAAS,EAAE,IAAI,CAAC,eAAe,GAAI,CAC5G,CACT,CACS,CACb,CAAC;QACJ,CAAC;QAED,uDAAuD;QAChD,iCAAK,GAAZ;YACE,OAAO,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC;QACrF,CAAC;QAEO,qDAAyB,GAAjC;YACE,IAAM,OAAO,GAAG;gBACd,cAAc,EAAE,CAAC;gBACjB,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE;gBACjC,OAAO,EAAE,cAAM,OAAA,KAAK,EAAL,CAAK;gBACpB,OAAO,EAAE,cAAM,OAAA,IAAI,EAAJ,CAAI;gBACnB,WAAW,EAAE,cAAM,OAAA,SAAS,EAAT,CAAS;gBAC5B,eAAe,EAAE,IAAI,CAAC,oBAAoB;gBAC1C,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,SAAS,EAAE,cAAM,OAAA,SAAS,EAAT,CAAS;gBAC1B,UAAU,EAAE,IAAI,CAAC,WAAW;aAC7B,CAAC;YACF,OAAO,OAAO,CAAC;QACjB,CAAC;QAEO,gDAAoB,GAA5B,UAA6B,QAAiB,EAAE,KAAgB;YAC9D,IAAI,IAAI,CAAC,mBAAmB,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,MAAM,EAAE;gBAC1D,IAAI,CAAC,QAAQ,EAAE;oBACb,IAAI,CAAC,eAAe,EAAE,CAAC;iBACxB;aACF;QACH,CAAC;QAEO,wDAA4B,GAApC;YACE,OAAO,IAAI,CAAC,qBAAqB,IAAI,CAAC,CAAC;QACzC,CAAC;QAEO,uCAAW,GAAnB,UAAoB,IAAS,EAAE,KAAgB;YAC7C,IAAI,IAAI,CAAC,mBAAmB,IAAI,CAAC,EAAE;gBACjC,KAAK,CAAC,eAAe,EAAE,CAAC;gBACxB,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aAC/C;QACH,CAAC;QAEO,mCAAO,GAAf,UAAgB,IAAU,EAAE,KAAiB;YACnC,IAAA,kDAAkB,CAAgB;YAE1C,yEAAyE;YACzE,IAAI,IAAI,CAAC,mBAAmB,IAAI,CAAC,IAAI,KAAK,EAAE;gBAC1C,IAAM,WAAW,GACf,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;gBACtH,IAAM,WAAW,GAAG,IAAI,CAAC,4BAA4B,EAAE,CAAC;gBACxD,KAAK,CAAC,eAAe,EAAE,CAAC;gBACxB,IAAI,WAAW,EAAE;oBACf,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC;oBAC7D,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,WAAW,CAAC;oBAEhD,IAAI,kBAAkB,IAAI,kBAAkB,CAAC,YAAY,EAAE;wBACzD,IAAM,eAAe,GAA2B;4BAC9C,YAAY,EAAE,IAAI,CAAC,mBAAmB;4BACtC,WAAW,EAAE,WAAW;yBACzB,CAAC;wBACF,kBAAkB,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;qBAClD;yBAAM,IAAI,kBAAkB,IAAI,kBAAkB,CAAC,mBAAmB,EAAE;wBACvE,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,mBAAmB,EAAE,WAAW,CAAC,CAAC;qBAC/E;iBACF;aACF;YAED,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,CAAC;QAChC,CAAC;QAED;;WAEG;QACK,mDAAuB,GAA/B;YACQ,IAAA,eAAkD,EAAhD,gCAAa,EAAE,0CAAkB,CAAgB;YAEzD,OAAO,aAAa,KAAK,0BAAa,CAAC,IAAI,IAAI,kBAAkB,KAAK,sCAAkB,CAAC,MAAM,CAAC;QAClG,CAAC;QAEO,2CAAe,GAAvB,UAAwB,KAA4B,EAAE,KAAkB;YAC9D,IAAA,kDAAkB,CAAgB;YAC1C,IAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;YAClC,IAAI,SAAS,IAAI,CAAC,EAAE;gBAClB,4CAA4C;gBAC5C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC;gBAC1F,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC7B,IAAI,kBAAkB,IAAI,kBAAkB,CAAC,iBAAiB,EAAE;oBAC9D,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;iBAC5C;aACF;iBAAM,IAAI,KAAK,IAAI,IAAI,CAAC,mBAAmB,IAAI,CAAC,EAAE;gBACjD,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;gBAC3B,IAAI,kBAAkB,IAAI,kBAAkB,CAAC,eAAe,EAAE;oBAC5D,IAAM,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;oBAC3D,kBAAkB,CAAC,eAAe,CAAC,EAAE,YAAY,EAAE,qBAAqB,EAAE,EAAE,KAAK,CAAC,CAAC;iBACpF;aACF;QACH,CAAC;QAEO,2CAAe,GAAvB;YACE,IAAI,IAAI,CAAC,qBAAqB,IAAI,CAAC,EAAE;gBACnC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC;gBAC1G,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC,CAAC;aACjC;QACH,CAAC;QAEO,kDAAsB,GAA9B,UAA+B,OAAoB,EAAE,eAAuB;YACzE,OAAO,CAAC,UAAU,CAAC,CAAC,CAAiB,CAAC,KAAK,CAAC,OAAO,GAAG,eAAe,CAAC;YACtE,OAAO,CAAC,UAAU,CAAC,CAAC,CAAiB,CAAC,KAAK,CAAC,OAAO,GAAG,eAAe,CAAC;QACzE,CAAC;QA8CO,wCAAY,GAApB,UAAqB,MAAc,EAAE,IAAY,EAAE,KAAa;YAC9D,OAAO,kBAAM,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI,KAAK,CAAC;QAC1F,CAAC;QACO,qCAAS,GAAjB,UAAkB,CAAS,EAAE,CAAS;YACpC,OAAO,kBAAM,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACpC,CAAC;QACO,oCAAQ,GAAhB,UAAiB,CAAS,EAAE,CAAS;YACnC,OAAO,kBAAM,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACpC,CAAC;QAwFO,4CAAgB,GAAxB,UAAyB,KAAiB;YACxC,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE,CAAC;gBAC7D,IACE,KAAK,CAAC,OAAO,GAAG,UAAU,CAAC,IAAI;oBAC/B,KAAK,CAAC,OAAO,GAAG,UAAU,CAAC,KAAK;oBAChC,KAAK,CAAC,OAAO,GAAG,UAAU,CAAC,GAAG;oBAC9B,KAAK,CAAC,OAAO,GAAG,UAAU,CAAC,MAAM,EACjC;oBACA,OAAO,yCAAqB,CAAC,MAAM,CAAC;iBACrC;aACF;QACH,CAAC;QAyBO,gDAAoB,GAA5B,UAA6B,WAAmB;YACtC,IAAA,uBAAoB,EAApB,yCAAoB,CAAgB;YAC5C,IAAM,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;YAC5B,IAAA,wCAAe,CAAY;YACnC,OAAO,eAAe;gBACpB,CAAC,CAAC,eAAe,CAAC,EAAE,MAAM,QAAA,EAAE,WAAW,aAAA,EAAE,EAAE,IAAI,CAAC,kBAAkB,CAAC;gBACnE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,MAAM,QAAA,EAAE,WAAW,aAAA,EAAE,CAAC,CAAC;QACvD,CAAC;QAEO,2CAAe,GAAvB,UAAwB,aAAqB;YAC3C,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;YACpC,OAAO,CACL,6BAAK,GAAG,EAAE,aAAa,EAAE,SAAS,EAAE,UAAU,CAAC,aAAa,EAAE,EAAE,EAAE,oBAAkB,aAAe;gBACjG,oBAAC,WAAI,IACH,GAAG,EAAE,kBAAkB,iBACV,IAAI,uBACE,KAAK,sBACN,aAAa,EAC/B,SAAS,EAAE,UAAU,CAAC,kBAAkB,EACxC,QAAQ,EAAE,eAAe,GACzB;gBACF,6BACE,GAAG,EAAE,iBAAiB,iBACT,IAAI,uBACE,KAAK,sBACN,aAAa,EAC/B,SAAS,EAAE,UAAU,CAAC,iBAAiB,GACvC,CACE,CACP,CAAC;QACJ,CAAC;QAQD;;;;;;WAMG;QACK,+CAAmB,GAA3B,UAA4B,WAAmB,EAAE,EAAiC;YAC1E,IAAA,eAA0D,EAAxD,4CAAmB,EAAE,eAAoB,EAApB,yCAAoB,CAAgB;YACjE,IAAI,mBAAmB,EAAE;gBACvB,mBAAmB,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,CAAC;aACxD;QACH,CAAC;QA4LO,+CAAmB,GAA3B;YACE,IAAM,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;YAErF,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,KAAK,aAAa,EAAE;gBAC9C,IAAI,CAAC,QAAQ,CAAC;oBACZ,aAAa,EAAE,aAAa;iBAC7B,CAAC,CAAC;aACJ;QACH,CAAC;QAEO,gDAAoB,GAA5B;YACU,IAAA,oDAAmB,CAAgB;YAC3C,IAAM,YAAY,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;YAChD,IAAI,CAAC,QAAQ,CAAC;gBACZ,cAAc,EAAE,YAAY;aAC7B,CAAC,CAAC;YACH,IAAI,mBAAmB,EAAE;gBACvB,mBAAmB,CAAC,YAAY,CAAC,CAAC;aACnC;QACH,CAAC;QA5zBa,8BAAY,GAAG;YAC3B,mBAAmB,EAAE,yCAAmB,CAAC,OAAO;YAChD,qBAAqB,EAAE,mCAAqB,CAAC,OAAO;SACrD,CAAC;QA0zBJ,wBAAC;KAAA,AA9zBD,CAAuC,yBAAa,GA8zBnD;IA9zBY,8CAAiB;IAg0B9B,qCAAqC,oBAA2C;QAC9E,4BACK,oBAAoB,IACvB,eAAe,EAAE,SAAS,IAC1B;IACJ,CAAC;IAED,yBAAyB,EAAiC;QACxD,EAAE,CAAC,eAAe,EAAE,CAAC;IACvB,CAAC","sourcesContent":["import * as React from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport { BaseComponent, css, getRTL, getId, KeyCodes, IRenderFunction, IClassNames } from '../../Utilities';\r\nimport {\r\n  IColumn,\r\n  IDetailsHeaderBaseProps,\r\n  IColumnDragDropDetails,\r\n  ColumnDragEndLocation,\r\n  IColumnReorderOptions,\r\n  CheckboxVisibility\r\n} from './DetailsList.types';\r\nimport { IFocusZone, FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { Icon } from '../../Icon';\r\nimport { Layer } from '../../Layer';\r\nimport { GroupSpacer } from '../GroupedList/GroupSpacer';\r\nimport { CollapseAllVisibility } from '../../GroupedList';\r\nimport { DetailsRowCheck } from './DetailsRowCheck';\r\nimport { ITooltipHostProps } from '../../Tooltip';\r\nimport { ISelection, SelectionMode, SELECTION_CHANGE } from '../../utilities/selection/interfaces';\r\nimport { IDragDropOptions, DragDropHelper } from '../../utilities/dragdrop/index';\r\nimport { DetailsColumn, IDetailsColumnProps } from '../../components/DetailsList/DetailsColumn';\r\nimport { SelectAllVisibility, IDropHintDetails, IColumnReorderHeaderProps, IDetailsHeaderState } from './DetailsHeader.types';\r\nimport { IDetailsHeaderStyleProps, IDetailsHeaderStyles } from './DetailsHeader.types';\r\nimport { classNamesFunction } from '../../Utilities';\r\n\r\nconst getClassNames = classNamesFunction<IDetailsHeaderStyleProps, IDetailsHeaderStyles>();\r\n\r\nconst MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\r\nconst MOUSEMOVE_PRIMARY_BUTTON = 1; // for mouse move event we are using ev.buttons property, 1 means left button\r\n\r\nconst NO_COLUMNS: IColumn[] = [];\r\n\r\nexport interface IDetailsHeader {\r\n  focus: () => boolean;\r\n}\r\n\r\nexport class DetailsHeaderBase extends BaseComponent<IDetailsHeaderBaseProps, IDetailsHeaderState> implements IDetailsHeader {\r\n  public static defaultProps = {\r\n    selectAllVisibility: SelectAllVisibility.visible,\r\n    collapseAllVisibility: CollapseAllVisibility.visible\r\n  };\r\n\r\n  private _classNames: IClassNames<IDetailsHeaderStyles>;\r\n  private _rootElement: HTMLElement | undefined;\r\n  private _rootComponent = React.createRef<IFocusZone>();\r\n  private _id: string;\r\n  private _draggedColumnIndex = -1;\r\n  private _dropHintDetails: { [key: number]: IDropHintDetails } = {};\r\n  private _dragDropHelper: DragDropHelper | null;\r\n  private _currentDropHintIndex: number;\r\n  private _subscriptionObject: {\r\n    key: string;\r\n    dispose(): void;\r\n  };\r\n  private _onDropIndexInfo: {\r\n    sourceIndex: number;\r\n    targetIndex: number;\r\n  };\r\n\r\n  public static getDerivedStateFromProps(newProps: IDetailsHeaderBaseProps, prevState: IDetailsHeaderState): IDetailsHeaderState {\r\n    const columnReorderProps: IColumnReorderHeaderProps | undefined =\r\n      newProps.columnReorderProps || (newProps.columnReorderOptions && getLegacyColumnReorderProps(newProps.columnReorderOptions));\r\n    const { groupNestingDepth } = newProps;\r\n\r\n    const newState: IDetailsHeaderState = { columnReorderProps, groupNestingDepth };\r\n\r\n    if (newProps.isAllCollapsed !== undefined) {\r\n      newState.isAllCollapsed = newProps.isAllCollapsed;\r\n    }\r\n\r\n    return newState;\r\n  }\r\n\r\n  constructor(props: IDetailsHeaderBaseProps) {\r\n    super(props);\r\n    const columnReorderProps: IColumnReorderHeaderProps | undefined =\r\n      props.columnReorderProps || (props.columnReorderOptions && getLegacyColumnReorderProps(props.columnReorderOptions));\r\n    this.state = {\r\n      columnReorderProps,\r\n      columnResizeDetails: undefined,\r\n      groupNestingDepth: this.props.groupNestingDepth,\r\n      isAllCollapsed: this.props.isAllCollapsed,\r\n      isAllSelected: !!this.props.selection && this.props.selection.isAllSelected()\r\n    };\r\n\r\n    this._onToggleCollapseAll = this._onToggleCollapseAll.bind(this);\r\n    this._onSelectAllClicked = this._onSelectAllClicked.bind(this);\r\n    this._updateDragInfo = this._updateDragInfo.bind(this);\r\n    this._onDragOver = this._onDragOver.bind(this);\r\n    this._onDrop = this._onDrop.bind(this);\r\n    this._getHeaderDragDropOptions = this._getHeaderDragDropOptions.bind(this);\r\n    this._updateDroppingState = this._updateDroppingState.bind(this);\r\n    this._getDropHintPositions = this._getDropHintPositions.bind(this);\r\n    this._computeDropHintToBeShown = this._computeDropHintToBeShown.bind(this);\r\n    this._resetDropHints = this._resetDropHints.bind(this);\r\n    this._isValidCurrentDropHintIndex = this._isValidCurrentDropHintIndex.bind(this);\r\n    this._onRootRef = this._onRootRef.bind(this);\r\n    this._isEventOnHeader = this._isEventOnHeader.bind(this);\r\n    this._onDropIndexInfo = {\r\n      sourceIndex: -1,\r\n      targetIndex: -1\r\n    };\r\n    this._id = getId('header');\r\n    this._currentDropHintIndex = -1;\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    const { selection } = this.props;\r\n    const { columnReorderProps } = this.state;\r\n\r\n    this._events.on(selection, SELECTION_CHANGE, this._onSelectionChanged);\r\n\r\n    // We need to use native on this to avoid MarqueeSelection from handling the event before us.\r\n    this._events.on(this._rootElement!, 'mousedown', this._onRootMouseDown);\r\n\r\n    this._events.on(this._rootElement!, 'keydown', this._onRootKeyDown);\r\n\r\n    if (columnReorderProps && this._dragDropHelper) {\r\n      this._subscriptionObject = this._dragDropHelper.subscribe(this._rootElement!, this._events, this._getHeaderDragDropOptions());\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IDetailsHeaderBaseProps): void {\r\n    const { columnReorderProps } = this.state;\r\n    if (!columnReorderProps) {\r\n      if (this._subscriptionObject) {\r\n        this._subscriptionObject.dispose();\r\n        delete this._subscriptionObject;\r\n      }\r\n    } else if (!this._subscriptionObject && this._dragDropHelper) {\r\n      this._subscriptionObject = this._dragDropHelper.subscribe(this._rootElement!, this._events, this._getHeaderDragDropOptions());\r\n    }\r\n\r\n    if (this.props !== prevProps && this._onDropIndexInfo.sourceIndex >= 0 && this._onDropIndexInfo.targetIndex >= 0) {\r\n      const { columns: previousColumns = NO_COLUMNS } = prevProps;\r\n      const { columns = NO_COLUMNS } = this.props;\r\n      if (previousColumns[this._onDropIndexInfo.sourceIndex].key === columns[this._onDropIndexInfo.targetIndex].key) {\r\n        this._onDropIndexInfo = {\r\n          sourceIndex: -1,\r\n          targetIndex: -1\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    if (this._subscriptionObject) {\r\n      this._subscriptionObject.dispose();\r\n      delete this._subscriptionObject;\r\n    }\r\n\r\n    if (this._dragDropHelper) {\r\n      this._dragDropHelper.dispose();\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      columns = NO_COLUMNS,\r\n      ariaLabel,\r\n      ariaLabelForToggleAllGroupsButton,\r\n      ariaLabelForSelectAllCheckbox,\r\n      selectAllVisibility,\r\n      ariaLabelForSelectionColumn,\r\n      indentWidth,\r\n      viewport,\r\n      onColumnClick,\r\n      onColumnContextMenu,\r\n      onRenderColumnHeaderTooltip = this._onRenderColumnHeaderTooltip,\r\n      styles,\r\n      theme\r\n    } = this.props;\r\n    const { isAllSelected, columnResizeDetails, isSizing, groupNestingDepth, isAllCollapsed, columnReorderProps } = this.state;\r\n    const showCheckbox = selectAllVisibility !== SelectAllVisibility.none;\r\n    const isCheckboxHidden = selectAllVisibility === SelectAllVisibility.hidden;\r\n\r\n    if (!this._dragDropHelper && columnReorderProps) {\r\n      // TODO Do not assign local fields during render.\r\n      // This behavior needs to be moved to the appropriate React lifecycle methods.\r\n      this._dragDropHelper = new DragDropHelper({\r\n        selection: {\r\n          getSelection: () => {\r\n            return;\r\n          }\r\n        } as ISelection,\r\n        minimumPixelsForDrag: this.props.minimumPixelsForDrag\r\n      });\r\n    }\r\n    const frozenColumnCountFromStart =\r\n      columnReorderProps && columnReorderProps.frozenColumnCountFromStart ? columnReorderProps.frozenColumnCountFromStart : 0;\r\n    const frozenColumnCountFromEnd =\r\n      columnReorderProps && columnReorderProps.frozenColumnCountFromEnd ? columnReorderProps.frozenColumnCountFromEnd : 0;\r\n\r\n    this._classNames = getClassNames(styles, {\r\n      theme: theme!,\r\n      isAllSelected,\r\n      isSelectAllHidden: selectAllVisibility === SelectAllVisibility.hidden,\r\n      isResizingColumn: !!columnResizeDetails && isSizing,\r\n      isSizing,\r\n      isAllCollapsed,\r\n      isCheckboxHidden\r\n    });\r\n\r\n    const classNames = this._classNames;\r\n\r\n    const isRTL = getRTL();\r\n    return (\r\n      <FocusZone\r\n        role=\"row\"\r\n        aria-label={ariaLabel}\r\n        className={classNames.root}\r\n        componentRef={this._rootComponent}\r\n        ref={this._onRootRef}\r\n        onMouseMove={this._onRootMouseMove}\r\n        data-automationid=\"DetailsHeader\"\r\n        style={{ minWidth: viewport ? viewport.width : 0 }}\r\n        direction={FocusZoneDirection.horizontal}\r\n      >\r\n        {showCheckbox\r\n          ? [\r\n              <div\r\n                key=\"__checkbox\"\r\n                className={classNames.cellIsCheck}\r\n                aria-labelledby={`${this._id}-check`}\r\n                onClick={!isCheckboxHidden ? this._onSelectAllClicked : undefined}\r\n                aria-colindex={1}\r\n                role={'columnheader'}\r\n              >\r\n                {onRenderColumnHeaderTooltip(\r\n                  {\r\n                    hostClassName: css(classNames.checkTooltip),\r\n                    id: `${this._id}-checkTooltip`,\r\n                    setAriaDescribedBy: false,\r\n                    content: ariaLabelForSelectAllCheckbox,\r\n                    children: (\r\n                      <DetailsRowCheck\r\n                        id={`${this._id}-check`}\r\n                        aria-label={ariaLabelForSelectionColumn}\r\n                        aria-describedby={\r\n                          !isCheckboxHidden\r\n                            ? ariaLabelForSelectAllCheckbox && !this.props.onRenderColumnHeaderTooltip\r\n                              ? `${this._id}-checkTooltip`\r\n                              : undefined\r\n                            : ariaLabelForSelectionColumn && !this.props.onRenderColumnHeaderTooltip\r\n                            ? `${this._id}-checkTooltip`\r\n                            : undefined\r\n                        }\r\n                        data-is-focusable={!isCheckboxHidden || undefined}\r\n                        isHeader={true}\r\n                        selected={isAllSelected}\r\n                        anySelected={false}\r\n                        canSelect={!isCheckboxHidden}\r\n                        className={classNames.check}\r\n                      />\r\n                    )\r\n                  },\r\n                  this._onRenderColumnHeaderTooltip\r\n                )}\r\n              </div>,\r\n              !this.props.onRenderColumnHeaderTooltip ? (\r\n                ariaLabelForSelectAllCheckbox && !isCheckboxHidden ? (\r\n                  <label key=\"__checkboxLabel\" id={`${this._id}-checkTooltip`} className={classNames.accessibleLabel}>\r\n                    {ariaLabelForSelectAllCheckbox}\r\n                  </label>\r\n                ) : ariaLabelForSelectionColumn && isCheckboxHidden ? (\r\n                  <label key=\"__checkboxLabel\" id={`${this._id}-checkTooltip`} className={classNames.accessibleLabel}>\r\n                    {ariaLabelForSelectionColumn}\r\n                  </label>\r\n                ) : null\r\n              ) : null\r\n            ]\r\n          : null}\r\n        {groupNestingDepth! > 0 && this.props.collapseAllVisibility === CollapseAllVisibility.visible ? (\r\n          <div\r\n            className={classNames.cellIsGroupExpander}\r\n            onClick={this._onToggleCollapseAll}\r\n            data-is-focusable={true}\r\n            aria-label={ariaLabelForToggleAllGroupsButton}\r\n            aria-expanded={!isAllCollapsed}\r\n          >\r\n            <Icon className={classNames.collapseButton} iconName={isRTL ? 'ChevronLeftMed' : 'ChevronRightMed'} />\r\n          </div>\r\n        ) : null}\r\n        <GroupSpacer indentWidth={indentWidth} count={groupNestingDepth! - 1} />\r\n        {columns.map((column: IColumn, columnIndex: number) => {\r\n          const _isDraggable = columnReorderProps\r\n            ? columnIndex >= frozenColumnCountFromStart && columnIndex < columns.length - frozenColumnCountFromEnd\r\n            : false;\r\n          return [\r\n            columnReorderProps &&\r\n              (_isDraggable || columnIndex === columns.length - frozenColumnCountFromEnd) &&\r\n              this._renderDropHint(columnIndex),\r\n            <DetailsColumn\r\n              column={column}\r\n              key={column.key}\r\n              columnIndex={(showCheckbox ? 2 : 1) + columnIndex}\r\n              parentId={this._id}\r\n              isDraggable={_isDraggable}\r\n              updateDragInfo={this._updateDragInfo}\r\n              dragDropHelper={this._dragDropHelper}\r\n              onColumnClick={onColumnClick}\r\n              onColumnContextMenu={onColumnContextMenu}\r\n              // Do not render tooltips by default, but allow for override via props.\r\n              onRenderColumnHeaderTooltip={this.props.onRenderColumnHeaderTooltip}\r\n              isDropped={this._onDropIndexInfo.targetIndex === columnIndex}\r\n              cellStyleProps={this.props.cellStyleProps}\r\n            />,\r\n            this._renderColumnDivider(columnIndex)\r\n          ];\r\n        })}\r\n        {columnReorderProps && frozenColumnCountFromEnd === 0 && this._renderDropHint(columns.length)}\r\n        {isSizing && (\r\n          <Layer>\r\n            <div className={classNames.sizingOverlay} onMouseMove={this._onSizerMouseMove} onMouseUp={this._onSizerMouseUp} />\r\n          </Layer>\r\n        )}\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  /** Set focus to the active thing in the focus area. */\r\n  public focus(): boolean {\r\n    return Boolean(this._rootComponent.current && this._rootComponent.current.focus());\r\n  }\r\n\r\n  private _getHeaderDragDropOptions(): IDragDropOptions {\r\n    const options = {\r\n      selectionIndex: 1,\r\n      context: { data: this, index: 0 },\r\n      canDrag: () => false,\r\n      canDrop: () => true,\r\n      onDragStart: () => undefined,\r\n      updateDropState: this._updateDroppingState,\r\n      onDrop: this._onDrop,\r\n      onDragEnd: () => undefined,\r\n      onDragOver: this._onDragOver\r\n    };\r\n    return options;\r\n  }\r\n\r\n  private _updateDroppingState(newValue: boolean, event: DragEvent): void {\r\n    if (this._draggedColumnIndex >= 0 && event.type !== 'drop') {\r\n      if (!newValue) {\r\n        this._resetDropHints();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _isValidCurrentDropHintIndex() {\r\n    return this._currentDropHintIndex >= 0;\r\n  }\r\n\r\n  private _onDragOver(item: any, event: DragEvent): void {\r\n    if (this._draggedColumnIndex >= 0) {\r\n      event.stopPropagation();\r\n      this._computeDropHintToBeShown(event.clientX);\r\n    }\r\n  }\r\n\r\n  private _onDrop(item?: any, event?: DragEvent): void {\r\n    const { columnReorderProps } = this.state;\r\n\r\n    // Target index will not get changed if draggeditem is after target item.\r\n    if (this._draggedColumnIndex >= 0 && event) {\r\n      const targetIndex =\r\n        this._draggedColumnIndex > this._currentDropHintIndex ? this._currentDropHintIndex : this._currentDropHintIndex - 1;\r\n      const isValidDrop = this._isValidCurrentDropHintIndex();\r\n      event.stopPropagation();\r\n      if (isValidDrop) {\r\n        this._onDropIndexInfo.sourceIndex = this._draggedColumnIndex;\r\n        this._onDropIndexInfo.targetIndex = targetIndex;\r\n\r\n        if (columnReorderProps && columnReorderProps.onColumnDrop) {\r\n          const dragDropDetails: IColumnDragDropDetails = {\r\n            draggedIndex: this._draggedColumnIndex,\r\n            targetIndex: targetIndex\r\n          };\r\n          columnReorderProps.onColumnDrop(dragDropDetails);\r\n        } else if (columnReorderProps && columnReorderProps.handleColumnReorder) {\r\n          columnReorderProps.handleColumnReorder(this._draggedColumnIndex, targetIndex);\r\n        }\r\n      }\r\n    }\r\n\r\n    this._resetDropHints();\r\n    this._dropHintDetails = {};\r\n    this._draggedColumnIndex = -1;\r\n  }\r\n\r\n  /**\r\n   * @returns whether or not the \"Select All\" checkbox column is hidden.\r\n   */\r\n  private _isCheckboxColumnHidden(): boolean {\r\n    const { selectionMode, checkboxVisibility } = this.props;\r\n\r\n    return selectionMode === SelectionMode.none || checkboxVisibility === CheckboxVisibility.hidden;\r\n  }\r\n\r\n  private _updateDragInfo(props: { itemIndex: number }, event?: MouseEvent) {\r\n    const { columnReorderProps } = this.state;\r\n    const itemIndex = props.itemIndex;\r\n    if (itemIndex >= 0) {\r\n      // Column index is set based on the checkbox\r\n      this._draggedColumnIndex = this._isCheckboxColumnHidden() ? itemIndex - 1 : itemIndex - 2;\r\n      this._getDropHintPositions();\r\n      if (columnReorderProps && columnReorderProps.onColumnDragStart) {\r\n        columnReorderProps.onColumnDragStart(true);\r\n      }\r\n    } else if (event && this._draggedColumnIndex >= 0) {\r\n      this._resetDropHints();\r\n      this._draggedColumnIndex = -1;\r\n      this._dropHintDetails = {};\r\n      if (columnReorderProps && columnReorderProps.onColumnDragEnd) {\r\n        const columnDragEndLocation = this._isEventOnHeader(event);\r\n        columnReorderProps.onColumnDragEnd({ dropLocation: columnDragEndLocation }, event);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _resetDropHints(): void {\r\n    if (this._currentDropHintIndex >= 0) {\r\n      this._updateDropHintElement(this._dropHintDetails[this._currentDropHintIndex].dropHintElementRef, 'none');\r\n      this._currentDropHintIndex = -1;\r\n    }\r\n  }\r\n\r\n  private _updateDropHintElement(element: HTMLElement, displayProperty: string) {\r\n    (element.childNodes[1] as HTMLElement).style.display = displayProperty;\r\n    (element.childNodes[0] as HTMLElement).style.display = displayProperty;\r\n  }\r\n\r\n  private _getDropHintPositions = (): void => {\r\n    const { columns = NO_COLUMNS } = this.props;\r\n    const { columnReorderProps } = this.state;\r\n    let prevX = 0;\r\n    let prevMid = 0;\r\n    let prevRef: HTMLElement;\r\n    const frozenColumnCountFromStart =\r\n      columnReorderProps && columnReorderProps.frozenColumnCountFromStart ? columnReorderProps.frozenColumnCountFromStart : 0;\r\n    const frozenColumnCountFromEnd =\r\n      columnReorderProps && columnReorderProps.frozenColumnCountFromEnd ? columnReorderProps.frozenColumnCountFromEnd : 0;\r\n\r\n    for (let i = frozenColumnCountFromStart!; i < columns.length - frozenColumnCountFromEnd! + 1; i++) {\r\n      if (this._rootElement) {\r\n        const dropHintElement = this._rootElement.querySelectorAll('#columnDropHint_' + i)[0] as HTMLElement;\r\n        if (dropHintElement) {\r\n          if (i === frozenColumnCountFromStart!) {\r\n            prevX = dropHintElement.offsetLeft;\r\n            prevMid = dropHintElement.offsetLeft;\r\n            prevRef = dropHintElement;\r\n          } else {\r\n            const newMid = (dropHintElement.offsetLeft + prevX!) / 2;\r\n            this._dropHintDetails[i - 1] = {\r\n              originX: prevX,\r\n              startX: prevMid!,\r\n              endX: newMid,\r\n              dropHintElementRef: prevRef!\r\n            };\r\n            prevMid = newMid;\r\n            prevRef = dropHintElement;\r\n            prevX = dropHintElement.offsetLeft;\r\n            if (i === columns.length - frozenColumnCountFromEnd!) {\r\n              this._dropHintDetails[i] = {\r\n                originX: prevX,\r\n                startX: prevMid!,\r\n                endX: dropHintElement.offsetLeft,\r\n                dropHintElementRef: prevRef\r\n              };\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  private _liesBetween(target: number, left: number, right: number): boolean {\r\n    return getRTL() ? target <= left && target >= right : target >= left && target <= right;\r\n  }\r\n  private _isBefore(a: number, b: number): boolean {\r\n    return getRTL() ? a >= b : a <= b;\r\n  }\r\n  private _isAfter(a: number, b: number): boolean {\r\n    return getRTL() ? a <= b : a >= b;\r\n  }\r\n\r\n  /**\r\n   * Based on the given cursor position, finds the nearest drop hint and updates the state to make it visible\r\n   *\r\n   */\r\n  private _computeDropHintToBeShown = (clientX: number): void => {\r\n    if (this._rootElement) {\r\n      const clientRect = this._rootElement.getBoundingClientRect();\r\n      const headerOriginX = clientRect.left;\r\n      const eventXRelativePosition = clientX - headerOriginX;\r\n      const currentDropHintIndex = this._currentDropHintIndex;\r\n      if (this._isValidCurrentDropHintIndex()) {\r\n        if (\r\n          this._liesBetween(\r\n            eventXRelativePosition,\r\n            this._dropHintDetails[currentDropHintIndex!].startX,\r\n            this._dropHintDetails[currentDropHintIndex!].endX\r\n          )\r\n        ) {\r\n          return;\r\n        }\r\n      }\r\n      const { columns = NO_COLUMNS } = this.props;\r\n      const { columnReorderProps } = this.state;\r\n      const frozenColumnCountFromStart =\r\n        columnReorderProps && columnReorderProps.frozenColumnCountFromStart ? columnReorderProps.frozenColumnCountFromStart : 0;\r\n      const frozenColumnCountFromEnd =\r\n        columnReorderProps && columnReorderProps.frozenColumnCountFromEnd ? columnReorderProps.frozenColumnCountFromEnd : 0;\r\n\r\n      const currentIndex: number = frozenColumnCountFromStart!;\r\n      const lastValidColumn = columns.length - frozenColumnCountFromEnd!;\r\n      let indexToUpdate = -1;\r\n      if (this._isBefore(eventXRelativePosition, this._dropHintDetails[currentIndex].endX)) {\r\n        indexToUpdate = currentIndex;\r\n      } else if (this._isAfter(eventXRelativePosition, this._dropHintDetails[lastValidColumn].startX)) {\r\n        indexToUpdate = lastValidColumn;\r\n      } else if (this._isValidCurrentDropHintIndex()) {\r\n        if (\r\n          this._dropHintDetails[currentDropHintIndex! + 1] &&\r\n          this._liesBetween(\r\n            eventXRelativePosition,\r\n            this._dropHintDetails[currentDropHintIndex! + 1].startX,\r\n            this._dropHintDetails[currentDropHintIndex! + 1].endX\r\n          )\r\n        ) {\r\n          indexToUpdate = currentDropHintIndex! + 1;\r\n        } else if (\r\n          this._dropHintDetails[currentDropHintIndex! - 1] &&\r\n          this._liesBetween(\r\n            eventXRelativePosition,\r\n            this._dropHintDetails[currentDropHintIndex! - 1].startX,\r\n            this._dropHintDetails[currentDropHintIndex! - 1].endX\r\n          )\r\n        ) {\r\n          indexToUpdate = currentDropHintIndex! - 1;\r\n        }\r\n      }\r\n      if (indexToUpdate === -1) {\r\n        let startIndex = frozenColumnCountFromStart!;\r\n        let endIndex = lastValidColumn;\r\n        while (startIndex < endIndex) {\r\n          const middleIndex = Math.ceil((endIndex + startIndex!) / 2);\r\n          if (\r\n            this._liesBetween(eventXRelativePosition, this._dropHintDetails[middleIndex].startX, this._dropHintDetails[middleIndex].endX)\r\n          ) {\r\n            indexToUpdate = middleIndex;\r\n            break;\r\n          } else if (this._isBefore(eventXRelativePosition, this._dropHintDetails[middleIndex].originX)) {\r\n            endIndex = middleIndex;\r\n          } else if (this._isAfter(eventXRelativePosition, this._dropHintDetails[middleIndex].originX)) {\r\n            startIndex = middleIndex;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (indexToUpdate === this._draggedColumnIndex || indexToUpdate === this._draggedColumnIndex + 1) {\r\n        if (this._isValidCurrentDropHintIndex()) {\r\n          this._resetDropHints();\r\n        }\r\n      } else if (currentDropHintIndex !== indexToUpdate && indexToUpdate >= 0) {\r\n        this._resetDropHints();\r\n        this._updateDropHintElement(this._dropHintDetails[indexToUpdate].dropHintElementRef, 'inline-block');\r\n        this._currentDropHintIndex = indexToUpdate;\r\n      }\r\n    }\r\n  };\r\n\r\n  private _isEventOnHeader(event: MouseEvent): ColumnDragEndLocation | undefined {\r\n    if (this._rootElement) {\r\n      const clientRect = this._rootElement.getBoundingClientRect();\r\n      if (\r\n        event.clientX > clientRect.left &&\r\n        event.clientX < clientRect.right &&\r\n        event.clientY > clientRect.top &&\r\n        event.clientY < clientRect.bottom\r\n      ) {\r\n        return ColumnDragEndLocation.header;\r\n      }\r\n    }\r\n  }\r\n\r\n  private _renderColumnSizer = ({ columnIndex }: IDetailsColumnProps): JSX.Element | null => {\r\n    const { columns = NO_COLUMNS } = this.props;\r\n    const column = columns[columnIndex];\r\n    const { columnResizeDetails } = this.state;\r\n    const classNames = this._classNames;\r\n\r\n    return column.isResizable ? (\r\n      <div\r\n        key={`${column.key}_sizer`}\r\n        aria-hidden={true}\r\n        role=\"button\"\r\n        data-is-focusable={false}\r\n        onClick={stopPropagation}\r\n        data-sizer-index={columnIndex}\r\n        onBlur={this._onSizerBlur}\r\n        className={css(classNames.cellSizer, columnIndex < columns.length - 1 ? classNames.cellSizerStart : classNames.cellSizerEnd, {\r\n          [classNames.cellIsResizing]: columnResizeDetails && columnResizeDetails.columnIndex === columnIndex\r\n        })}\r\n        onDoubleClick={this._onSizerDoubleClick.bind(this, columnIndex)}\r\n      />\r\n    ) : null;\r\n  };\r\n\r\n  private _renderColumnDivider(columnIndex: number): JSX.Element | null {\r\n    const { columns = NO_COLUMNS } = this.props;\r\n    const column = columns[columnIndex];\r\n    const { onRenderDivider } = column;\r\n    return onRenderDivider\r\n      ? onRenderDivider({ column, columnIndex }, this._renderColumnSizer)\r\n      : this._renderColumnSizer({ column, columnIndex });\r\n  }\r\n\r\n  private _renderDropHint(dropHintIndex: number): JSX.Element {\r\n    const classNames = this._classNames;\r\n    return (\r\n      <div key={'dropHintKey'} className={classNames.dropHintStyle} id={`columnDropHint_${dropHintIndex}`}>\r\n        <Icon\r\n          key={`dropHintCaretKey`}\r\n          aria-hidden={true}\r\n          data-is-focusable={false}\r\n          data-sizer-index={dropHintIndex}\r\n          className={classNames.dropHintCaretStyle}\r\n          iconName={'CaretUpSolid8'}\r\n        />\r\n        <div\r\n          key={`dropHintLineKey`}\r\n          aria-hidden={true}\r\n          data-is-focusable={false}\r\n          data-sizer-index={dropHintIndex}\r\n          className={classNames.dropHintLineStyle}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  private _onRenderColumnHeaderTooltip = (\r\n    tooltipHostProps: ITooltipHostProps,\r\n    defaultRender?: IRenderFunction<ITooltipHostProps>\r\n  ): JSX.Element => {\r\n    return <span className={tooltipHostProps.hostClassName}>{tooltipHostProps.children}</span>;\r\n  };\r\n\r\n  /**\r\n   * double click on the column sizer will auto ajust column width\r\n   * to fit the longest content among current rendered rows.\r\n   *\r\n   * @param {number} columnIndex (index of the column user double clicked)\r\n   * @param {React.MouseEvent} ev (mouse double click event)\r\n   */\r\n  private _onSizerDoubleClick(columnIndex: number, ev: React.MouseEvent<HTMLElement>): void {\r\n    const { onColumnAutoResized, columns = NO_COLUMNS } = this.props;\r\n    if (onColumnAutoResized) {\r\n      onColumnAutoResized(columns[columnIndex], columnIndex);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the select all toggle is clicked.\r\n   */\r\n  private _onSelectAllClicked = (): void => {\r\n    const { selection } = this.props;\r\n\r\n    if (selection) {\r\n      selection.toggleAllSelected();\r\n    }\r\n  };\r\n\r\n  private _onRootMouseDown = (ev: MouseEvent): void => {\r\n    const columnIndexAttr = (ev.target as HTMLElement).getAttribute('data-sizer-index');\r\n    const columnIndex = Number(columnIndexAttr);\r\n    const { columns = NO_COLUMNS } = this.props;\r\n\r\n    if (columnIndexAttr === null || ev.button !== MOUSEDOWN_PRIMARY_BUTTON) {\r\n      // Ignore anything except the primary button.\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      columnResizeDetails: {\r\n        columnIndex: columnIndex,\r\n        columnMinWidth: columns[columnIndex].calculatedWidth!,\r\n        originX: ev.clientX\r\n      }\r\n    });\r\n\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  };\r\n\r\n  private _onRootMouseMove = (ev: React.MouseEvent<HTMLElement>): void => {\r\n    const { columnResizeDetails, isSizing } = this.state;\r\n\r\n    if (columnResizeDetails && !isSizing && ev.clientX !== columnResizeDetails.originX) {\r\n      this.setState({ isSizing: true });\r\n    }\r\n  };\r\n\r\n  private _onRootRef = (focusZone: FocusZone): void => {\r\n    if (focusZone) {\r\n      // Need to resolve the actual DOM node, not the component. The element itself will be used for drag/drop and focusing.\r\n      this._rootElement = findDOMNode(focusZone) as HTMLElement;\r\n    } else {\r\n      this._rootElement = undefined;\r\n    }\r\n  };\r\n\r\n  private _onRootKeyDown = (ev: KeyboardEvent): void => {\r\n    const { columnResizeDetails, isSizing } = this.state;\r\n    const { columns = NO_COLUMNS, onColumnResized } = this.props;\r\n\r\n    const columnIndexAttr = (ev.target as HTMLElement).getAttribute('data-sizer-index');\r\n\r\n    if (!columnIndexAttr || isSizing) {\r\n      return;\r\n    }\r\n\r\n    const columnIndex = Number(columnIndexAttr);\r\n\r\n    if (!columnResizeDetails) {\r\n      if (ev.which === KeyCodes.enter) {\r\n        this.setState({\r\n          columnResizeDetails: {\r\n            columnIndex: columnIndex,\r\n            columnMinWidth: columns[columnIndex].calculatedWidth!\r\n          }\r\n        });\r\n\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    } else {\r\n      let increment: number | undefined;\r\n\r\n      if (ev.which === KeyCodes.enter) {\r\n        this.setState({\r\n          columnResizeDetails: undefined\r\n        });\r\n\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      } else if (ev.which === KeyCodes.left) {\r\n        increment = getRTL() ? 1 : -1;\r\n      } else if (ev.which === KeyCodes.right) {\r\n        increment = getRTL() ? -1 : 1;\r\n      }\r\n\r\n      if (increment) {\r\n        if (!ev.shiftKey) {\r\n          increment *= 10;\r\n        }\r\n\r\n        this.setState({\r\n          columnResizeDetails: {\r\n            ...columnResizeDetails,\r\n            columnMinWidth: columnResizeDetails.columnMinWidth + increment\r\n          }\r\n        });\r\n\r\n        if (onColumnResized) {\r\n          onColumnResized(columns[columnIndex], columnResizeDetails.columnMinWidth + increment, columnIndex);\r\n        }\r\n\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * mouse move event handler in the header\r\n   * it will set isSizing state to true when user clicked on the sizer and move the mouse.\r\n   *\r\n   * @param ev - mouse move event\r\n   */\r\n  private _onSizerMouseMove = (ev: React.MouseEvent<HTMLElement>): void => {\r\n    const {\r\n      // use buttons property here since ev.button in some edge case is not upding well during the move.\r\n      // but firefox doesn't support it, so we set the default value when it is not defined.\r\n      buttons\r\n    } = ev;\r\n    const { onColumnIsSizingChanged, onColumnResized, columns = NO_COLUMNS } = this.props;\r\n    const { columnResizeDetails } = this.state;\r\n\r\n    if (buttons !== undefined && buttons !== MOUSEMOVE_PRIMARY_BUTTON) {\r\n      // cancel mouse down event and return early when the primary button is not pressed\r\n      this._onSizerMouseUp(ev);\r\n      return;\r\n    }\r\n\r\n    if (ev.clientX !== columnResizeDetails!.originX) {\r\n      if (onColumnIsSizingChanged) {\r\n        onColumnIsSizingChanged(columns[columnResizeDetails!.columnIndex], true);\r\n      }\r\n    }\r\n\r\n    if (onColumnResized) {\r\n      let movement = ev.clientX - columnResizeDetails!.originX!;\r\n\r\n      if (getRTL()) {\r\n        movement = -movement;\r\n      }\r\n\r\n      onColumnResized(\r\n        columns[columnResizeDetails!.columnIndex],\r\n        columnResizeDetails!.columnMinWidth + movement,\r\n        columnResizeDetails!.columnIndex\r\n      );\r\n    }\r\n  };\r\n\r\n  private _onSizerBlur = (ev: React.FocusEvent<HTMLElement>): void => {\r\n    const { columnResizeDetails } = this.state;\r\n\r\n    if (columnResizeDetails) {\r\n      this.setState({\r\n        columnResizeDetails: undefined,\r\n        isSizing: false\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * mouse up event handler in the header\r\n   * clear the resize related state.\r\n   * This is to ensure we can catch double click event\r\n   *\r\n   * @param ev - mouse up event\r\n   */\r\n  private _onSizerMouseUp = (ev: React.MouseEvent<HTMLElement>): void => {\r\n    const { columns = NO_COLUMNS, onColumnIsSizingChanged } = this.props;\r\n    const { columnResizeDetails } = this.state;\r\n\r\n    this.setState({\r\n      columnResizeDetails: undefined,\r\n      isSizing: false\r\n    });\r\n\r\n    if (onColumnIsSizingChanged) {\r\n      onColumnIsSizingChanged(columns[columnResizeDetails!.columnIndex], false);\r\n    }\r\n  };\r\n\r\n  private _onSelectionChanged(): void {\r\n    const isAllSelected = !!this.props.selection && this.props.selection.isAllSelected();\r\n\r\n    if (this.state.isAllSelected !== isAllSelected) {\r\n      this.setState({\r\n        isAllSelected: isAllSelected\r\n      });\r\n    }\r\n  }\r\n\r\n  private _onToggleCollapseAll(): void {\r\n    const { onToggleCollapseAll } = this.props;\r\n    const newCollapsed = !this.state.isAllCollapsed;\r\n    this.setState({\r\n      isAllCollapsed: newCollapsed\r\n    });\r\n    if (onToggleCollapseAll) {\r\n      onToggleCollapseAll(newCollapsed);\r\n    }\r\n  }\r\n}\r\n\r\nfunction getLegacyColumnReorderProps(columnReorderOptions: IColumnReorderOptions): IColumnReorderHeaderProps {\r\n  return {\r\n    ...columnReorderOptions,\r\n    onColumnDragEnd: undefined\r\n  };\r\n}\r\n\r\nfunction stopPropagation(ev: React.MouseEvent<HTMLElement>): void {\r\n  ev.stopPropagation();\r\n}\r\n"]}