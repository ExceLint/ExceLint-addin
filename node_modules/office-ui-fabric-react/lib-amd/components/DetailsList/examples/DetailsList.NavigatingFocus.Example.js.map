{"version":3,"file":"DetailsList.NavigatingFocus.Example.js","sourceRoot":"../src/","sources":["components/DetailsList/examples/DetailsList.NavigatingFocus.Example.tsx"],"names":[],"mappings":";;;IAUA;QAAuD,6DAA4D;QAAnH;YAAA,qEAiDC;YAhDQ,WAAK,GAA4C;gBACtD,KAAK,EAAE,aAAa,CAAC,EAAE,CAAC;gBACxB,GAAG,EAAE,CAAC;aACP,CAAC;YAEM,cAAQ,GAAc;gBAC5B;oBACE,GAAG,EAAE,UAAU;oBACf,IAAI,EAAE,WAAW;oBACjB,QAAQ,EAAE,UAAA,IAAI,IAAI,OAAA;oBAChB,yCAAyC;oBACzC,oBAAC,WAAI,IAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,cAAM,OAAA,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAApB,CAAoB,IACjD,IAAI,CACA,CACR,EALiB,CAKjB;iBACS;gBACZ;oBACE,GAAG,EAAE,MAAM;oBACX,IAAI,EAAE,MAAM;oBACZ,QAAQ,EAAE,UAAA,IAAI,IAAI,OAAA,MAAM,EAAN,CAAM;iBACd;aACb,CAAC;YAmBM,eAAS,GAAG,UAAC,IAAY;gBAC/B,KAAI,CAAC,QAAQ,CAAC;oBACZ,KAAK,EAAE,aAAa,CAAC,IAAI,GAAG,KAAK,CAAC;oBAClC,mBAAmB,EAAE,CAAC;oBACtB,+EAA+E;oBAC/E,GAAG,EAAE,KAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;iBACxB,CAAC,CAAC;YACL,CAAC,CAAC;;QACJ,CAAC;QAzBQ,kDAAM,GAAb;YACE,8EAA8E;YAC9E,oFAAoF;YACpF,oFAAoF;YACpF,OAAO,CACL,oBAAC,yBAAW,IACV,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,EACnB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,OAAO,EAAE,IAAI,CAAC,QAAQ,EACtB,aAAa,EAAE,IAAI,CAAC,SAAS,EAC7B,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,mBAAmB,EACnD,2BAA2B,EAAC,kBAAkB,EAC9C,6BAA6B,EAAC,gCAAgC,GAC9D,CACH,CAAC;QACJ,CAAC;QAUH,wCAAC;IAAD,CAAC,AAjDD,CAAuD,KAAK,CAAC,SAAS,GAiDrE;IAjDY,8EAAiC;IAmD9C,uBAAuB,MAAc;QACnC,OAAO,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,IAAY,IAAK,OAAA,MAAM,GAAG,SAAS,GAAG,IAAI,EAAzB,CAAyB,CAAC,CAAC;IAC5F,CAAC","sourcesContent":["import * as React from 'react';\r\nimport { DetailsList, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\n\r\nexport interface IDetailsListNavigatingFocusExampleState {\r\n  items: string[];\r\n  initialFocusedIndex?: number;\r\n  key: number;\r\n}\r\n\r\nexport class DetailsListNavigatingFocusExample extends React.Component<{}, IDetailsListNavigatingFocusExampleState> {\r\n  public state: IDetailsListNavigatingFocusExampleState = {\r\n    items: generateItems(''),\r\n    key: 0\r\n  };\r\n\r\n  private _columns: IColumn[] = [\r\n    {\r\n      key: 'filepath',\r\n      name: 'File path',\r\n      onRender: item => (\r\n        // tslint:disable-next-line:jsx-no-lambda\r\n        <Link key={item} onClick={() => this._navigate(item)}>\r\n          {item}\r\n        </Link>\r\n      )\r\n    } as IColumn,\r\n    {\r\n      key: 'size',\r\n      name: 'Size',\r\n      onRender: item => '4 KB'\r\n    } as IColumn\r\n  ];\r\n\r\n  public render(): JSX.Element {\r\n    // By default, when the list is re-rendered on navigation or some other event,\r\n    // focus goes to the list container and the user has to tab back into the list body.\r\n    // Setting initialFocusedIndex makes focus go directly to a particular item instead.\r\n    return (\r\n      <DetailsList\r\n        key={this.state.key}\r\n        items={this.state.items}\r\n        columns={this._columns}\r\n        onItemInvoked={this._navigate}\r\n        initialFocusedIndex={this.state.initialFocusedIndex}\r\n        ariaLabelForSelectionColumn=\"Toggle selection\"\r\n        ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n      />\r\n    );\r\n  }\r\n\r\n  private _navigate = (name: string) => {\r\n    this.setState({\r\n      items: generateItems(name + ' / '),\r\n      initialFocusedIndex: 0,\r\n      // Simulate navigation by updating the list's key, which causes it to re-render\r\n      key: this.state.key + 1\r\n    });\r\n  };\r\n}\r\n\r\nfunction generateItems(parent: string): string[] {\r\n  return Array.prototype.map.call('ABCDEFGHI', (name: string) => parent + 'Folder ' + name);\r\n}\r\n"]}