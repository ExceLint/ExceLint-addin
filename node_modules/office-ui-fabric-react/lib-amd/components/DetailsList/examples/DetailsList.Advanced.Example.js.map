{"version":3,"file":"DetailsList.Advanced.Example.js","sourceRoot":"../src/","sources":["components/DetailsList/examples/DetailsList.Advanced.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\r\nimport { IContextualMenuProps, IContextualMenuItem, DirectionalHint, ContextualMenu } from 'office-ui-fabric-react/lib/ContextualMenu';\r\nimport {\r\n  CheckboxVisibility,\r\n  ColumnActionsMode,\r\n  ConstrainMode,\r\n  DetailsList,\r\n  DetailsListLayoutMode,\r\n  IColumn,\r\n  IGroup,\r\n  Selection,\r\n  SelectionMode,\r\n  buildColumns\r\n} from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { createListItems, isGroupable, IExampleItem } from 'office-ui-fabric-react/lib/utilities/exampleData';\r\nimport { IDetailsColumnProps } from 'office-ui-fabric-react/lib/components/DetailsList/DetailsColumn';\r\nimport { memoizeFunction } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { getTheme, mergeStyles, mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\r\n\r\nconst theme = getTheme();\r\nconst classNames = mergeStyleSets({\r\n  headerDivider: {\r\n    display: 'inline-block',\r\n    height: '100%'\r\n  },\r\n  headerDividerBar: {\r\n    display: 'none',\r\n    background: theme.palette.themePrimary,\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    width: '1px',\r\n    zIndex: 5\r\n  },\r\n  linkField: {\r\n    display: 'block',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    maxWidth: '100%'\r\n  }\r\n});\r\nconst rootClass = mergeStyles({\r\n  selectors: {\r\n    [`.${classNames.headerDivider}:hover + .${classNames.headerDividerBar}`]: {\r\n      display: 'inline'\r\n    }\r\n  }\r\n});\r\n\r\nconst DEFAULT_ITEM_LIMIT = 5;\r\nconst PAGING_SIZE = 10;\r\nconst PAGING_DELAY = 2000;\r\nconst ITEMS_COUNT = 5000;\r\n\r\nexport interface IDetailsListAdvancedExampleState {\r\n  canResizeColumns?: boolean;\r\n  checkboxVisibility?: CheckboxVisibility;\r\n  columns: IColumn[];\r\n  constrainMode?: ConstrainMode;\r\n  contextualMenuProps?: IContextualMenuProps;\r\n  groupItemLimit?: number;\r\n  groups?: IGroup[];\r\n  isHeaderVisible?: boolean;\r\n  isLazyLoaded?: boolean;\r\n  isSortedDescending?: boolean;\r\n  items: IExampleItem[];\r\n  layoutMode?: DetailsListLayoutMode;\r\n  selectionMode?: SelectionMode;\r\n  sortedColumnKey?: string;\r\n  selectionCount: number;\r\n}\r\n\r\nexport class DetailsListAdvancedExample extends React.Component<{}, IDetailsListAdvancedExampleState> {\r\n  private _isFetchingItems: boolean;\r\n  private _selection: Selection;\r\n  private _allItems: IExampleItem[];\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this._getCommandItems = memoizeFunction(this._getCommandItems);\r\n\r\n    this._allItems = createListItems(ITEMS_COUNT);\r\n    this._selection = new Selection({\r\n      onSelectionChanged: this._onItemsSelectionChanged\r\n    });\r\n    this._selection.setItems(this._allItems, false);\r\n\r\n    this.state = {\r\n      items: this._allItems,\r\n      selectionCount: 0,\r\n      groups: undefined,\r\n      groupItemLimit: DEFAULT_ITEM_LIMIT,\r\n      layoutMode: DetailsListLayoutMode.justified,\r\n      constrainMode: ConstrainMode.horizontalConstrained,\r\n      selectionMode: SelectionMode.multiple,\r\n      canResizeColumns: true,\r\n      checkboxVisibility: CheckboxVisibility.onHover,\r\n      columns: this._buildColumns(this._allItems, true, this._onColumnClick, '', undefined, undefined, this._onColumnContextMenu),\r\n      contextualMenuProps: undefined,\r\n      sortedColumnKey: 'name',\r\n      isSortedDescending: false,\r\n      isLazyLoaded: false,\r\n      isHeaderVisible: true\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      canResizeColumns,\r\n      checkboxVisibility,\r\n      columns,\r\n      constrainMode,\r\n      contextualMenuProps,\r\n      groupItemLimit,\r\n      groups,\r\n      isHeaderVisible,\r\n      isLazyLoaded,\r\n      items,\r\n      layoutMode,\r\n      selectionMode\r\n    } = this.state;\r\n\r\n    const isGrouped = groups && groups.length > 0;\r\n    const groupProps = {\r\n      getGroupItemLimit: (group: IGroup) => {\r\n        if (group) {\r\n          return group.isShowingAll ? group.count : Math.min(group.count, groupItemLimit as number);\r\n        } else {\r\n          return items.length;\r\n        }\r\n      },\r\n      footerProps: {\r\n        showAllLinkText: 'Show all'\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className={rootClass}>\r\n        <CommandBar\r\n          styles={{ root: { marginBottom: '40px' } }}\r\n          items={this._getCommandItems(\r\n            canResizeColumns,\r\n            checkboxVisibility,\r\n            constrainMode,\r\n            isHeaderVisible,\r\n            isLazyLoaded,\r\n            layoutMode,\r\n            selectionMode\r\n          )}\r\n          farItems={[{ key: 'count', text: `${this.state.selectionCount} selected` }]}\r\n        />\r\n\r\n        {isGrouped ? <TextField label=\"Group item limit\" onChange={this._onItemLimitChanged} /> : null}\r\n\r\n        <DetailsList\r\n          setKey=\"items\"\r\n          items={items}\r\n          selection={this._selection}\r\n          groups={groups}\r\n          columns={columns}\r\n          checkboxVisibility={checkboxVisibility}\r\n          layoutMode={layoutMode}\r\n          isHeaderVisible={isHeaderVisible}\r\n          selectionMode={selectionMode}\r\n          constrainMode={constrainMode}\r\n          groupProps={groupProps}\r\n          enterModalSelectionOnTouch={true}\r\n          onItemInvoked={this._onItemInvoked}\r\n          onItemContextMenu={this._onItemContextMenu}\r\n          selectionZoneProps={{\r\n            selection: this._selection,\r\n            disableAutoSelectOnInputElements: true,\r\n            selectionMode: selectionMode\r\n          }}\r\n          ariaLabelForListHeader=\"Column headers. Click to sort.\"\r\n          ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n          ariaLabelForSelectionColumn=\"Toggle selection\"\r\n          onRenderMissingItem={this._onRenderMissingItem}\r\n        />\r\n\r\n        {contextualMenuProps && <ContextualMenu {...contextualMenuProps} />}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderDivider = (\r\n    columnProps: IDetailsColumnProps,\r\n    defaultRenderer: (props?: IDetailsColumnProps) => JSX.Element | null\r\n  ): JSX.Element => {\r\n    const { columnIndex } = columnProps;\r\n    return (\r\n      <React.Fragment key={`divider-wrapper-${columnIndex}`}>\r\n        <span className={classNames.headerDivider}>{defaultRenderer(columnProps)}</span>\r\n        <span className={classNames.headerDividerBar} />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  private _onDataMiss(index: number): void {\r\n    index = Math.floor(index / PAGING_SIZE) * PAGING_SIZE;\r\n\r\n    if (!this._isFetchingItems) {\r\n      this._isFetchingItems = true;\r\n\r\n      setTimeout(() => {\r\n        this._isFetchingItems = false;\r\n        const itemsCopy = [...this.state.items];\r\n\r\n        itemsCopy.splice(index, PAGING_SIZE).concat(this._allItems.slice(index, index + PAGING_SIZE));\r\n\r\n        this.setState({\r\n          items: itemsCopy\r\n        });\r\n      }, PAGING_DELAY);\r\n    }\r\n  }\r\n\r\n  private _onRenderMissingItem = (index: number): null => {\r\n    this._onDataMiss(index);\r\n    return null;\r\n  };\r\n\r\n  private _onToggleLazyLoad = (): void => {\r\n    let { isLazyLoaded } = this.state;\r\n\r\n    isLazyLoaded = !isLazyLoaded;\r\n\r\n    this.setState({\r\n      isLazyLoaded: isLazyLoaded,\r\n      items: isLazyLoaded ? this._allItems.slice(0, PAGING_SIZE).concat(new Array(ITEMS_COUNT - PAGING_SIZE)) : this._allItems\r\n    });\r\n  };\r\n\r\n  private _onToggleHeaderVisible = (): void => {\r\n    this.setState({ isHeaderVisible: !this.state.isHeaderVisible });\r\n  };\r\n\r\n  private _onToggleResizing = (): void => {\r\n    const { items, sortedColumnKey, isSortedDescending } = this.state;\r\n    let { canResizeColumns } = this.state;\r\n\r\n    canResizeColumns = !canResizeColumns;\r\n\r\n    this.setState({\r\n      canResizeColumns: canResizeColumns,\r\n      columns: this._buildColumns(items, canResizeColumns, this._onColumnClick, sortedColumnKey, isSortedDescending)\r\n    });\r\n  };\r\n\r\n  private _onCheckboxVisibilityChanged = (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem): void => {\r\n    this.setState({ checkboxVisibility: menuItem.data });\r\n  };\r\n\r\n  private _onLayoutChanged = (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem): void => {\r\n    this.setState({ layoutMode: menuItem.data });\r\n  };\r\n\r\n  private _onConstrainModeChanged = (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem): void => {\r\n    this.setState({ constrainMode: menuItem.data });\r\n  };\r\n\r\n  private _onSelectionChanged = (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem): void => {\r\n    this.setState({ selectionMode: menuItem.data });\r\n  };\r\n\r\n  private _onItemLimitChanged = (ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, value: string): void => {\r\n    let newValue = parseInt(value, 10);\r\n    if (isNaN(newValue)) {\r\n      newValue = DEFAULT_ITEM_LIMIT;\r\n    }\r\n    this.setState({ groupItemLimit: newValue });\r\n  };\r\n\r\n  private _getCommandItems = (\r\n    canResizeColumns?: boolean,\r\n    checkboxVisibility?: CheckboxVisibility,\r\n    constrainMode?: ConstrainMode,\r\n    isHeaderVisible?: boolean,\r\n    isLazyLoaded?: boolean,\r\n    layoutMode?: DetailsListLayoutMode,\r\n    selectionMode?: SelectionMode\r\n  ): IContextualMenuItem[] => {\r\n    return [\r\n      {\r\n        key: 'addRow',\r\n        text: 'Insert row',\r\n        iconProps: { iconName: 'Add' },\r\n        onClick: this._onAddRow\r\n      },\r\n      {\r\n        key: 'deleteRow',\r\n        text: 'Delete row',\r\n        iconProps: { iconName: 'Delete' },\r\n        onClick: this._onDeleteRow\r\n      },\r\n      {\r\n        key: 'configure',\r\n        text: 'Configure',\r\n        iconProps: { iconName: 'Settings' },\r\n        subMenuProps: {\r\n          items: [\r\n            {\r\n              key: 'resizing',\r\n              text: 'Allow column resizing',\r\n              canCheck: true,\r\n              checked: canResizeColumns,\r\n              onClick: this._onToggleResizing\r\n            },\r\n            {\r\n              key: 'headerVisible',\r\n              text: 'Is header visible',\r\n              canCheck: true,\r\n              checked: isHeaderVisible,\r\n              onClick: this._onToggleHeaderVisible\r\n            },\r\n            {\r\n              key: 'lazyload',\r\n              text: 'Simulate async loading',\r\n              canCheck: true,\r\n              checked: isLazyLoaded,\r\n              onClick: this._onToggleLazyLoad\r\n            },\r\n            {\r\n              key: 'dash',\r\n              text: '-'\r\n            },\r\n            {\r\n              key: 'checkboxVisibility',\r\n              text: 'Checkbox visibility',\r\n              subMenuProps: {\r\n                items: [\r\n                  {\r\n                    key: 'checkboxVisibility.always',\r\n                    text: 'Always',\r\n                    canCheck: true,\r\n                    isChecked: checkboxVisibility === CheckboxVisibility.always,\r\n                    onClick: this._onCheckboxVisibilityChanged,\r\n                    data: CheckboxVisibility.always\r\n                  },\r\n                  {\r\n                    key: 'checkboxVisibility.onHover',\r\n                    text: 'On hover',\r\n                    canCheck: true,\r\n                    isChecked: checkboxVisibility === CheckboxVisibility.onHover,\r\n                    onClick: this._onCheckboxVisibilityChanged,\r\n                    data: CheckboxVisibility.onHover\r\n                  },\r\n                  {\r\n                    key: 'checkboxVisibility.hidden',\r\n                    text: 'Hidden',\r\n                    canCheck: true,\r\n                    isChecked: checkboxVisibility === CheckboxVisibility.hidden,\r\n                    onClick: this._onCheckboxVisibilityChanged,\r\n                    data: CheckboxVisibility.hidden\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            {\r\n              key: 'layoutMode',\r\n              text: 'Layout mode',\r\n              subMenuProps: {\r\n                items: [\r\n                  {\r\n                    key: DetailsListLayoutMode[DetailsListLayoutMode.fixedColumns],\r\n                    text: 'Fixed columns',\r\n                    canCheck: true,\r\n                    checked: layoutMode === DetailsListLayoutMode.fixedColumns,\r\n                    onClick: this._onLayoutChanged,\r\n                    data: DetailsListLayoutMode.fixedColumns\r\n                  },\r\n                  {\r\n                    key: DetailsListLayoutMode[DetailsListLayoutMode.justified],\r\n                    text: 'Justified columns',\r\n                    canCheck: true,\r\n                    checked: layoutMode === DetailsListLayoutMode.justified,\r\n                    onClick: this._onLayoutChanged,\r\n                    data: DetailsListLayoutMode.justified\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            {\r\n              key: 'selectionMode',\r\n              text: 'Selection mode',\r\n              subMenuProps: {\r\n                items: [\r\n                  {\r\n                    key: SelectionMode[SelectionMode.none],\r\n                    text: 'None',\r\n                    canCheck: true,\r\n                    checked: selectionMode === SelectionMode.none,\r\n                    onClick: this._onSelectionChanged,\r\n                    data: SelectionMode.none\r\n                  },\r\n                  {\r\n                    key: SelectionMode[SelectionMode.single],\r\n                    text: 'Single select',\r\n                    canCheck: true,\r\n                    checked: selectionMode === SelectionMode.single,\r\n                    onClick: this._onSelectionChanged,\r\n                    data: SelectionMode.single\r\n                  },\r\n                  {\r\n                    key: SelectionMode[SelectionMode.multiple],\r\n                    text: 'Multi select',\r\n                    canCheck: true,\r\n                    checked: selectionMode === SelectionMode.multiple,\r\n                    onClick: this._onSelectionChanged,\r\n                    data: SelectionMode.multiple\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            {\r\n              key: 'constrainMode',\r\n              text: 'Constrain mode',\r\n              subMenuProps: {\r\n                items: [\r\n                  {\r\n                    key: ConstrainMode[ConstrainMode.unconstrained],\r\n                    text: 'Unconstrained',\r\n                    canCheck: true,\r\n                    checked: constrainMode === ConstrainMode.unconstrained,\r\n                    onClick: this._onConstrainModeChanged,\r\n                    data: ConstrainMode.unconstrained\r\n                  },\r\n                  {\r\n                    key: ConstrainMode[ConstrainMode.horizontalConstrained],\r\n                    text: 'Horizontal constrained',\r\n                    canCheck: true,\r\n                    checked: constrainMode === ConstrainMode.horizontalConstrained,\r\n                    onClick: this._onConstrainModeChanged,\r\n                    data: ConstrainMode.horizontalConstrained\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    ];\r\n  };\r\n\r\n  private _getContextualMenuProps(ev: React.MouseEvent<HTMLElement>, column: IColumn): IContextualMenuProps {\r\n    const items = [\r\n      {\r\n        key: 'aToZ',\r\n        name: 'A to Z',\r\n        iconProps: { iconName: 'SortUp' },\r\n        canCheck: true,\r\n        checked: column.isSorted && !column.isSortedDescending,\r\n        onClick: () => this._onSortColumn(column.key, false)\r\n      },\r\n      {\r\n        key: 'zToA',\r\n        name: 'Z to A',\r\n        iconProps: { iconName: 'SortDown' },\r\n        canCheck: true,\r\n        checked: column.isSorted && column.isSortedDescending,\r\n        onClick: () => this._onSortColumn(column.key, true)\r\n      }\r\n    ];\r\n    if (isGroupable(column.key)) {\r\n      items.push({\r\n        key: 'groupBy',\r\n        name: 'Group by ' + column.name,\r\n        iconProps: { iconName: 'GroupedDescending' },\r\n        canCheck: true,\r\n        checked: column.isGrouped,\r\n        onClick: () => this._onGroupByColumn(column)\r\n      });\r\n    }\r\n    return {\r\n      items: items,\r\n      target: ev.currentTarget as HTMLElement,\r\n      directionalHint: DirectionalHint.bottomLeftEdge,\r\n      gapSpace: 10,\r\n      isBeakVisible: true,\r\n      onDismiss: this._onContextualMenuDismissed\r\n    };\r\n  }\r\n\r\n  private _onItemInvoked = (item: IExampleItem, index: number): void => {\r\n    console.log('Item invoked', item, index);\r\n  };\r\n\r\n  private _onItemContextMenu = (item: IExampleItem, index: number, ev: MouseEvent): boolean => {\r\n    const contextualMenuProps: IContextualMenuProps = {\r\n      target: ev.target as HTMLElement,\r\n      items: [\r\n        {\r\n          key: 'text',\r\n          name: `${this._selection.getSelectedCount()} selected`\r\n        }\r\n      ],\r\n      onDismiss: () => {\r\n        this.setState({\r\n          contextualMenuProps: undefined\r\n        });\r\n      }\r\n    };\r\n\r\n    if (index > -1) {\r\n      this.setState({\r\n        contextualMenuProps: contextualMenuProps\r\n      });\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  private _onColumnClick = (ev: React.MouseEvent<HTMLElement>, column: IColumn): void => {\r\n    if (column.columnActionsMode !== ColumnActionsMode.disabled) {\r\n      this.setState({\r\n        contextualMenuProps: this._getContextualMenuProps(ev, column)\r\n      });\r\n    }\r\n  };\r\n\r\n  private _onColumnContextMenu = (column: IColumn, ev: React.MouseEvent<HTMLElement>): void => {\r\n    if (column.columnActionsMode !== ColumnActionsMode.disabled) {\r\n      this.setState({\r\n        contextualMenuProps: this._getContextualMenuProps(ev, column)\r\n      });\r\n    }\r\n  };\r\n\r\n  private _onContextualMenuDismissed = (): void => {\r\n    this.setState({\r\n      contextualMenuProps: undefined\r\n    });\r\n  };\r\n\r\n  private _onSortColumn = (columnKey: string, isSortedDescending: boolean): void => {\r\n    const sortedItems = _copyAndSort(this._allItems, columnKey, isSortedDescending);\r\n\r\n    this.setState({\r\n      items: sortedItems,\r\n      groups: undefined,\r\n      columns: this._buildColumns(\r\n        sortedItems,\r\n        true,\r\n        this._onColumnClick,\r\n        columnKey,\r\n        isSortedDescending,\r\n        undefined,\r\n        this._onColumnContextMenu\r\n      ),\r\n      isSortedDescending: isSortedDescending,\r\n      sortedColumnKey: columnKey\r\n    });\r\n  };\r\n\r\n  private _onGroupByColumn = (column: IColumn): void => {\r\n    const { key, isGrouped } = column;\r\n    const { sortedColumnKey, isSortedDescending, groups, items, columns } = this.state;\r\n\r\n    if (isGrouped) {\r\n      // ungroup\r\n      this._onSortColumn(sortedColumnKey!, !!isSortedDescending);\r\n    } else {\r\n      let groupedItems = [];\r\n      let newGroups: IGroup[];\r\n      if (groups) {\r\n        newGroups = [...groups];\r\n        groupedItems = this._groupByKey(newGroups, items, key as keyof IExampleItem);\r\n      } else {\r\n        groupedItems = _copyAndSort(items, key);\r\n        newGroups = this._getGroups(groupedItems, key as keyof IExampleItem);\r\n      }\r\n\r\n      for (const c of columns) {\r\n        if (c.key === key) {\r\n          c.isGrouped = true;\r\n          break;\r\n        }\r\n      }\r\n      this.setState({\r\n        items: groupedItems,\r\n        columns: [...columns],\r\n        groups: newGroups\r\n      });\r\n    }\r\n  };\r\n\r\n  private _groupByKey(groups: IGroup[], items: IExampleItem[], key: keyof IExampleItem): IExampleItem[] {\r\n    let groupedItems: IExampleItem[] = [];\r\n    if (groups) {\r\n      for (const group of groups) {\r\n        if (group.children && group.children.length > 0) {\r\n          const childGroupedItems = this._groupByKey(group.children, items, key);\r\n          groupedItems = groupedItems.concat(childGroupedItems);\r\n        } else {\r\n          const itemsInGroup = items.slice(group.startIndex, group.startIndex + group.count);\r\n          const nextLevelGroupedItems = _copyAndSort(itemsInGroup, key);\r\n          groupedItems = groupedItems.concat(nextLevelGroupedItems);\r\n          group.children = this._getGroups(nextLevelGroupedItems, key, group);\r\n        }\r\n      }\r\n    }\r\n    return groupedItems;\r\n  }\r\n\r\n  private _getGroups(groupedItems: IExampleItem[], key: keyof IExampleItem, parentGroup?: IGroup): IGroup[] {\r\n    const separator = '-';\r\n    const groups = groupedItems.reduce(\r\n      (current: IGroup[], item: IExampleItem, index: number) => {\r\n        const currentGroup = current[current.length - 1];\r\n        const itemColumnValue = item[key];\r\n\r\n        if (!currentGroup || this._getLeafGroupKey(currentGroup.key, separator) !== itemColumnValue) {\r\n          current.push({\r\n            key: (parentGroup ? parentGroup.key + separator : '') + itemColumnValue,\r\n            name: key + ': ' + itemColumnValue,\r\n            startIndex: parentGroup ? parentGroup.startIndex + index : index,\r\n            count: 1,\r\n            level: parentGroup ? parentGroup.level! + 1 : 0\r\n          });\r\n        } else {\r\n          currentGroup.count++;\r\n        }\r\n        return current;\r\n      },\r\n      [] as IGroup[]\r\n    );\r\n\r\n    return groups;\r\n  }\r\n\r\n  private _getLeafGroupKey(key: string, separator: string): string {\r\n    let leafKey = key;\r\n    if (key.indexOf(separator) !== -1) {\r\n      const arrKeys = key.split(separator);\r\n      leafKey = arrKeys[arrKeys.length - 1];\r\n    }\r\n    return leafKey;\r\n  }\r\n\r\n  private _onAddRow = (): void => {\r\n    this.setState({\r\n      items: createListItems(1).concat(this.state.items)\r\n    });\r\n  };\r\n\r\n  private _onDeleteRow = (): void => {\r\n    if (this._selection.getSelectedCount() > 0) {\r\n      this.setState((previousState: IDetailsListAdvancedExampleState) => {\r\n        return {\r\n          items: previousState.items.filter((item, index) => !this._selection.isIndexSelected(index))\r\n        };\r\n      });\r\n    } else {\r\n      this.setState({\r\n        items: this.state.items.slice(1)\r\n      });\r\n    }\r\n  };\r\n\r\n  private _onItemsSelectionChanged = () => {\r\n    this.setState({\r\n      selectionCount: this._selection.getSelectedCount()\r\n    });\r\n  };\r\n\r\n  private _buildColumns(\r\n    items: IExampleItem[],\r\n    canResizeColumns?: boolean,\r\n    onColumnClick?: (ev: React.MouseEvent<HTMLElement>, column: IColumn) => any,\r\n    sortedColumnKey?: string,\r\n    isSortedDescending?: boolean,\r\n    groupedColumnKey?: string,\r\n    onColumnContextMenu?: (column: IColumn, ev: React.MouseEvent<HTMLElement>) => any\r\n  ) {\r\n    const columns = buildColumns(items, canResizeColumns, onColumnClick, sortedColumnKey, isSortedDescending, groupedColumnKey);\r\n\r\n    columns.forEach(column => {\r\n      column.onRenderDivider = this._onRenderDivider;\r\n      column.onColumnContextMenu = onColumnContextMenu;\r\n      column.ariaLabel = `Operations for ${column.name}`;\r\n      if (column.key === 'thumbnail') {\r\n        column.iconName = 'Picture';\r\n        column.isIconOnly = true;\r\n      } else if (column.key === 'description') {\r\n        column.isMultiline = true;\r\n        column.minWidth = 200;\r\n      } else if (column.key === 'name') {\r\n        column.onRender = (item: IExampleItem) => <Link data-selection-invoke={true}>{item.name}</Link>;\r\n      } else if (column.key === 'key') {\r\n        column.columnActionsMode = ColumnActionsMode.disabled;\r\n        column.onRender = (item: IExampleItem) => (\r\n          <Link className={classNames.linkField} href=\"https://microsoft.com\" target=\"_blank\" rel=\"noopener\">\r\n            {item.key}\r\n          </Link>\r\n        );\r\n        column.minWidth = 90;\r\n        column.maxWidth = 90;\r\n      }\r\n    });\r\n\r\n    return columns;\r\n  }\r\n}\r\n\r\nfunction _copyAndSort<T>(items: T[], columnKey: string, isSortedDescending?: boolean): T[] {\r\n  const key = columnKey as keyof T;\r\n  return items.slice(0).sort((a: T, b: T) => ((isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1));\r\n}\r\n"]}