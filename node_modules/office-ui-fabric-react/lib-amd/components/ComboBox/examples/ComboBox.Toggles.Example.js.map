{"version":3,"file":"ComboBox.Toggles.Example.js","sourceRoot":"../src/","sources":["components/ComboBox/examples/ComboBox.Toggles.Example.tsx"],"names":[],"mappings":";;;IAIA,IAAM,eAAe,GAAsB;QACzC,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,eAAe,EAAE,QAAQ,EAAE,oCAA4B,CAAC,MAAM,EAAE;QACxF,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;QAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;QAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;QAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;QAC9B,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE,oCAA4B,CAAC,OAAO,EAAE;QAC7E,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,gBAAgB,EAAE,QAAQ,EAAE,oCAA4B,CAAC,MAAM,EAAE;QACzF,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;QAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE;QAC9C,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;QAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;QAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;QAC9B,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;KAC/B,CAAC;IAEF,IAAM,gBAAgB,GAAG,mBAAW,CAAC;QACnC,OAAO,EAAE,MAAM;QACf,SAAS,EAAE;YACT,OAAO,EAAE,EAAE,WAAW,EAAE,MAAM,EAAE;YAChC,gBAAgB,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE;SACxC;KACF,CAAC,CAAC;IAOH,+BAA+B;IAC/B;QAA4C,kDAAiD;QAA7F;YAAA,qEAkCC;YAjCQ,WAAK,GAAiC;gBAC3C,YAAY,EAAE,KAAK;gBACnB,aAAa,EAAE,IAAI;aACpB,CAAC;;QA8BJ,CAAC;QA5BQ,uCAAM,GAAb;YAAA,iBA2BC;YA1BC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACzB,OAAO,CACL,oBAAC,cAAM,IAAC,SAAS,EAAE,gBAAgB;gBACjC,oBAAC,gBAAQ,IACP,KAAK,EAAC,iDAAiD,EACvD,GAAG,EAAE,EAAE,GAAG,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC,aAAa,CAAC,4CAA4C,EAC/F,aAAa,EAAE,KAAK,CAAC,aAAa,EAClC,YAAY,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAC/C,OAAO,EAAE,eAAe,GACxB;gBACF,oBAAC,cAAM,IACL,KAAK,EAAC,gBAAgB,EACtB,OAAO,EAAE,KAAK,CAAC,aAAa,EAC5B,QAAQ,EAAE,UAAC,EAAiC,EAAE,OAAiB;wBAC7D,KAAI,CAAC,QAAQ,CAAC,EAAE,aAAa,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;oBAC9C,CAAC,GACD;gBACF,oBAAC,cAAM,IACL,KAAK,EAAC,eAAe,EACrB,OAAO,EAAE,KAAK,CAAC,YAAY,EAC3B,QAAQ,EAAE,UAAC,EAAiC,EAAE,OAAiB;wBAC7D,KAAI,CAAC,QAAQ,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;oBAC7C,CAAC,GACD,CACK,CACV,CAAC;QACJ,CAAC;QACH,6BAAC;IAAD,CAAC,AAlCD,CAA4C,KAAK,CAAC,SAAS,GAkC1D;IAlCY,wDAAsB","sourcesContent":["// @codepen\r\nimport * as React from 'react';\r\nimport { ComboBox, Fabric, IComboBoxOption, mergeStyles, SelectableOptionMenuItemType, Toggle } from 'office-ui-fabric-react/lib/index';\r\n\r\nconst INITIAL_OPTIONS: IComboBoxOption[] = [\r\n  { key: 'Header1', text: 'First heading', itemType: SelectableOptionMenuItemType.Header },\r\n  { key: 'A', text: 'Option A' },\r\n  { key: 'B', text: 'Option B' },\r\n  { key: 'C', text: 'Option C' },\r\n  { key: 'D', text: 'Option D' },\r\n  { key: 'divider', text: '-', itemType: SelectableOptionMenuItemType.Divider },\r\n  { key: 'Header2', text: 'Second heading', itemType: SelectableOptionMenuItemType.Header },\r\n  { key: 'E', text: 'Option E' },\r\n  { key: 'F', text: 'Option F', disabled: true },\r\n  { key: 'G', text: 'Option G' },\r\n  { key: 'H', text: 'Option H' },\r\n  { key: 'I', text: 'Option I' },\r\n  { key: 'J', text: 'Option J' }\r\n];\r\n\r\nconst wrapperClassName = mergeStyles({\r\n  display: 'flex',\r\n  selectors: {\r\n    '& > *': { marginRight: '20px' },\r\n    '& .ms-ComboBox': { maxWidth: '300px' }\r\n  }\r\n});\r\n\r\nexport interface IComboBoxTogglesExampleState {\r\n  autoComplete: boolean;\r\n  allowFreeform: boolean;\r\n}\r\n\r\n// tslint:disable:jsx-no-lambda\r\nexport class ComboBoxTogglesExample extends React.Component<{}, IComboBoxTogglesExampleState> {\r\n  public state: IComboBoxTogglesExampleState = {\r\n    autoComplete: false,\r\n    allowFreeform: true\r\n  };\r\n\r\n  public render(): JSX.Element {\r\n    const state = this.state;\r\n    return (\r\n      <Fabric className={wrapperClassName}>\r\n        <ComboBox\r\n          label=\"ComboBox with toggleable freeform/auto-complete\"\r\n          key={'' + state.autoComplete + state.allowFreeform /*key causes re-render when toggles change*/}\r\n          allowFreeform={state.allowFreeform}\r\n          autoComplete={state.autoComplete ? 'on' : 'off'}\r\n          options={INITIAL_OPTIONS}\r\n        />\r\n        <Toggle\r\n          label=\"Allow freeform\"\r\n          checked={state.allowFreeform}\r\n          onChange={(ev: React.MouseEvent<HTMLElement>, checked?: boolean) => {\r\n            this.setState({ allowFreeform: !!checked });\r\n          }}\r\n        />\r\n        <Toggle\r\n          label=\"Auto-complete\"\r\n          checked={state.autoComplete}\r\n          onChange={(ev: React.MouseEvent<HTMLElement>, checked?: boolean) => {\r\n            this.setState({ autoComplete: !!checked });\r\n          }}\r\n        />\r\n      </Fabric>\r\n    );\r\n  }\r\n}\r\n"]}