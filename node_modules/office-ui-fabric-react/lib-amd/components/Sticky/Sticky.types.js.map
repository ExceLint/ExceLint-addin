{"version":3,"file":"Sticky.types.js","sourceRoot":"../src/","sources":["components/Sticky/Sticky.types.ts"],"names":[],"mappings":";;;IAiCA,IAAY,kBAIX;IAJD,WAAY,kBAAkB;QAC5B,2DAAQ,CAAA;QACR,+DAAU,CAAA;QACV,+DAAU,CAAA;IACZ,CAAC,EAJW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAI7B","sourcesContent":["import * as React from 'react';\r\nimport { Sticky } from './Sticky';\r\nimport { IRefObject } from '../../Utilities';\r\n\r\nexport interface IStickyProps extends React.Props<Sticky> {\r\n  /**\r\n   * Gets ref to component interface.\r\n   */\r\n  componentRef?: IRefObject<IStickyProps>;\r\n\r\n  /**\r\n   * Class name to apply to the sticky element if component is sticky.\r\n   */\r\n  stickyClassName?: string;\r\n\r\n  /**\r\n   * color to apply as 'background-color' style for sticky element.\r\n   */\r\n  stickyBackgroundColor?: string;\r\n\r\n  /**\r\n   * Region to render sticky component in.\r\n   * @defaultvalue Both\r\n   */\r\n  stickyPosition?: StickyPositionType;\r\n\r\n  /**\r\n   * If true, then match scrolling position of placeholder element in Sticky.\r\n   * @defaultvalue true\r\n   */\r\n  isScrollSynced?: boolean;\r\n}\r\n\r\nexport enum StickyPositionType {\r\n  Both = 0,\r\n  Header = 1,\r\n  Footer = 2\r\n}\r\n"]}