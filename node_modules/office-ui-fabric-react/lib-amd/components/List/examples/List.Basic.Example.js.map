{"version":3,"file":"List.Basic.Example.js","sourceRoot":"../src/","sources":["components/List/examples/List.Basic.Example.tsx"],"names":[],"mappings":";;;IAoBA;QAAsC,4CAA+D;QACnG,0BAAY,KAA6B;YAAzC,YACE,kBAAM,KAAK,CAAC,SAQb;YANC,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YAEzD,KAAI,CAAC,KAAK,GAAG;gBACX,UAAU,EAAE,EAAE;gBACd,KAAK,EAAE,KAAK,CAAC,KAAK;aACnB,CAAC;;QACJ,CAAC;QAEM,iCAAM,GAAb;YACU,IAAA,gCAAoB,CAAgB;YACpC,IAAA,qBAAU,EAAV,+BAAU,CAAgB;YAClC,IAAM,eAAe,GAAG,KAAK,CAAC,MAAM,KAAK,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAK,KAAK,CAAC,MAAM,YAAO,aAAa,CAAC,MAAM,YAAS,CAAC;YAE3H,OAAO,CACL,oBAAC,qBAAS,IAAC,SAAS,EAAE,8BAAkB,CAAC,QAAQ;gBAC/C,oBAAC,qBAAS,IAAC,KAAK,EAAE,gBAAgB,GAAG,eAAe,EAAE,QAAQ,EAAE,IAAI,CAAC,gBAAgB,GAAI;gBACzF,oBAAC,WAAI,IAAC,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC,aAAa,GAAI,CAC9C,CACb,CAAC;QACJ,CAAC;QAEO,2CAAgB,GAAxB,UAAyB,CAAM,EAAE,IAAY;YACnC,IAAA,wBAAK,CAAgB;YAE7B,IAAI,CAAC,QAAQ,CAAC;gBACZ,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,EAAxD,CAAwD,CAAC,CAAC,CAAC,CAAC,KAAK;aACrG,CAAC,CAAC;QACL,CAAC;QAEO,wCAAa,GAArB,UAAsB,IAAkB,EAAE,KAAyB;YACjE,OAAO,CACL,6BAAK,SAAS,EAAE,MAAM,CAAC,QAAQ,uBAAqB,IAAI;gBACtD,oBAAC,aAAK,IAAC,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,gBAAQ,CAAC,KAAK,GAAI;gBAC5G,6BAAK,SAAS,EAAE,MAAM,CAAC,WAAW;oBAChC,6BAAK,SAAS,EAAE,MAAM,CAAC,QAAQ,IAAG,IAAI,CAAC,IAAI,CAAO;oBAClD,6BAAK,SAAS,EAAE,MAAM,CAAC,SAAS,IAAG,UAAQ,KAAO,CAAO;oBACzD,iCAAM,IAAI,CAAC,WAAW,CAAO,CACzB;gBACN,oBAAC,WAAI,IAAC,SAAS,EAAE,MAAM,CAAC,OAAO,EAAE,QAAQ,EAAE,kBAAM,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,cAAc,GAAI,CACpF,CACP,CAAC;QACJ,CAAC;QACH,uBAAC;IAAD,CAAC,AA/CD,CAAsC,KAAK,CAAC,SAAS,GA+CpD;IA/CY,4CAAgB","sourcesContent":["import * as React from 'react';\r\nimport { getRTL } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { FocusZone, FocusZoneDirection } from 'office-ui-fabric-react/lib/FocusZone';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { List } from 'office-ui-fabric-react/lib/List';\r\nimport * as styles from './List.Basic.Example.scss';\r\n\r\nexport type IExampleItem = { name: string; thumbnail: string; description: string };\r\n\r\nexport interface IListBasicExampleProps {\r\n  items: IExampleItem[];\r\n}\r\n\r\nexport interface IListBasicExampleState {\r\n  filterText?: string;\r\n  items?: IExampleItem[];\r\n}\r\n\r\nexport class ListBasicExample extends React.Component<IListBasicExampleProps, IListBasicExampleState> {\r\n  constructor(props: IListBasicExampleProps) {\r\n    super(props);\r\n\r\n    this._onFilterChanged = this._onFilterChanged.bind(this);\r\n\r\n    this.state = {\r\n      filterText: '',\r\n      items: props.items\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { items: originalItems } = this.props;\r\n    const { items = [] } = this.state;\r\n    const resultCountText = items.length === originalItems.length ? '' : ` (${items.length} of ${originalItems.length} shown)`;\r\n\r\n    return (\r\n      <FocusZone direction={FocusZoneDirection.vertical}>\r\n        <TextField label={'Filter by name' + resultCountText} onChange={this._onFilterChanged} />\r\n        <List items={items} onRenderCell={this._onRenderCell} />\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  private _onFilterChanged(_: any, text: string): void {\r\n    const { items } = this.props;\r\n\r\n    this.setState({\r\n      filterText: text,\r\n      items: text ? items.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) >= 0) : items\r\n    });\r\n  }\r\n\r\n  private _onRenderCell(item: IExampleItem, index: number | undefined): JSX.Element {\r\n    return (\r\n      <div className={styles.itemCell} data-is-focusable={true}>\r\n        <Image className={styles.itemImage} src={item.thumbnail} width={50} height={50} imageFit={ImageFit.cover} />\r\n        <div className={styles.itemContent}>\r\n          <div className={styles.itemName}>{item.name}</div>\r\n          <div className={styles.itemIndex}>{`Item ${index}`}</div>\r\n          <div>{item.description}</div>\r\n        </div>\r\n        <Icon className={styles.chevron} iconName={getRTL() ? 'ChevronLeft' : 'ChevronRight'} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}