{"version":3,"file":"ListPage.js","sourceRoot":"../src/","sources":["components/List/ListPage.tsx"],"names":[],"mappings":";;;IAeA;QAA8B,oCAAoD;QAGhF,kBAAY,KAAqB;YAAjC,YACE,kBAAM,KAAK,CAAC,SAMb;YATO,kBAAY,GAAG,KAAK,CAAC,SAAS,EAAkB,CAAC;YAIvD,KAAI,CAAC,KAAK,GAAG;gBACX,WAAW,EAAE,SAAS;gBACtB,eAAe,EACb,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;aACnI,CAAC;;QACJ,CAAC;QAEM,4CAAyB,GAAhC,UAAiC,QAAwB;YACvD,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,QAAQ,CAAC,OAAO,EAAE;gBAC3C,IAAI,WAAW,GAAoC,SAAS,CAAC;gBAE7D,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;oBACrB,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,OAAQ,CAAC,qBAAqB,EAAE,CAAC;oBAEpE,WAAW,GAAG;wBACZ,MAAM,EAAE,QAAQ,CAAC,MAAM;qBACxB,CAAC;iBACH;gBAED,IAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,aAAA,EAAE,CAAC,CAAC;aAChC;QACH,CAAC;QAEM,yBAAM,GAAb;YACU,IAAA,oCAAW,CAAgB;YAEnC,OAAO,CACL,6BAAK,GAAG,EAAE,IAAI,CAAC,YAAY,EAAE,KAAK,EAAE,WAAW,IAC5C,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,CAC1C,CACP,CAAC;QACJ,CAAC;QAEO,+BAAY,GAApB;YACE,IAAM,KAAK,GAAsB,EAAE,CAAC;YAC9B,IAAA,kCAAU,CAAgB;YAC1B,IAAA,eAA8D,EAA5D,sBAAQ,EAAE,gBAAK,EAAE,oBAA4B,EAA5B,4FAA4B,CAAgB;YAErE,OAAO,UAAU,IAAI,QAAQ,EAAE,UAAU,EAAE,EAAE;gBAC3C,IAAM,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;gBAC/B,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;gBAE3C,KAAK,CAAC,IAAI,CAAC,6BAAK,GAAG,EAAE,GAAG,IAAG,YAAY,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,CAAO,CAAC,CAAC;aAChF;YAED,OAAO,KAAK,CAAC;QACf,CAAC;QACH,eAAC;IAAD,CAAC,AApDD,CAA8B,KAAK,CAAC,aAAa,GAoDhD;IApDY,4BAAQ","sourcesContent":["import * as React from 'react';\r\n\r\nexport interface IListPageProps {\r\n  visible: boolean;\r\n  items: any[];\r\n  startIndex: number;\r\n  endIndex: number;\r\n  onRenderCell?: (item?: any, index?: number, isScrolling?: boolean) => React.ReactNode;\r\n}\r\n\r\nexport interface IListPageStyles {\r\n  hiddenStyle: React.CSSProperties | undefined;\r\n  backgroundColor: string;\r\n}\r\n\r\nexport class ListPage extends React.PureComponent<IListPageProps, IListPageStyles> {\r\n  private _rootElement = React.createRef<HTMLDivElement>();\r\n\r\n  constructor(props: IListPageProps) {\r\n    super(props);\r\n    this.state = {\r\n      hiddenStyle: undefined,\r\n      backgroundColor:\r\n        `rgba(` + Math.floor(255 * Math.random()) + `,` + Math.floor(255 * Math.random()) + `,` + Math.floor(255 * Math.random()) + `1)`\r\n    };\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IListPageProps) {\r\n    if (this.props.visible !== newProps.visible) {\r\n      let hiddenStyle: React.CSSProperties | undefined = undefined;\r\n\r\n      if (!newProps.visible) {\r\n        const rootRect = this._rootElement.current!.getBoundingClientRect();\r\n\r\n        hiddenStyle = {\r\n          height: rootRect.height\r\n        };\r\n      }\r\n\r\n      this.setState({ hiddenStyle });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const { hiddenStyle } = this.state;\r\n\r\n    return (\r\n      <div ref={this._rootElement} style={hiddenStyle}>\r\n        {hiddenStyle ? undefined : this._renderItems()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _renderItems(): React.ReactNode[] {\r\n    const cells: React.ReactNode[] = [];\r\n    let { startIndex } = this.props;\r\n    const { endIndex, items, onRenderCell = () => <div /> } = this.props;\r\n\r\n    for (; startIndex <= endIndex; startIndex++) {\r\n      const item = items[startIndex];\r\n      const key = item.key || String(startIndex);\r\n\r\n      cells.push(<div key={key}>{onRenderCell(items[startIndex], startIndex)}</div>);\r\n    }\r\n\r\n    return cells;\r\n  }\r\n}\r\n"]}