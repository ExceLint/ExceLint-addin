{"version":3,"file":"Panel.HandleDismissTarget.Example.js","sourceRoot":"../src/","sources":["components/Panel/examples/Panel.HandleDismissTarget.Example.tsx"],"names":[],"mappings":";;;IAOA;QAAqD,2DAA0D;QAA/G;YAAA,qEAsDC;YArDQ,WAAK,GAAG;gBACb,SAAS,EAAE,KAAK;aACjB,CAAC;YAqBM,4BAAsB,GAAG;gBAC/B,OAAO,CACL;oBACE,oBAAC,sBAAa,IAAC,OAAO,EAAE,KAAI,CAAC,UAAU,cAAyB,CAC5D,CACP,CAAC;YACJ,CAAC,CAAC;YAEM,gBAAU,GAAG;gBACnB,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;YACrC,CAAC,CAAC;YAEM,gBAAU,GAAG;gBACnB,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;YACtC,CAAC,CAAC;YAEM,gBAAU,GAAG,UAAC,EAAsC;gBAC1D,IAAI,CAAC,EAAE,EAAE;oBACP,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;oBAChC,OAAO;iBACR;gBAED,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;gBACxD,IAAI,EAAE,CAAC,WAAW,CAAC,UAAU,IAAI,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE;oBACrG,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;iBACtC;gBACD,IAAI,EAAE,CAAC,WAAW,CAAC,UAAU,IAAI,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;oBACjG,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;iBACjC;YACH,CAAC,CAAC;;QACJ,CAAC;QAjDQ,gDAAM,GAAb;YACE,OAAO,CACL;gBACE,oBAAC,sBAAa,IAAC,aAAa,EAAC,wBAAwB,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAC,YAAY,GAAG;gBACpG,oBAAC,aAAK,IACJ,UAAU,EAAC,uDAAuD,EAClE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAC5B,IAAI,EAAE,iBAAS,CAAC,cAAc,EAC9B,gBAAgB,EAAE,IAAI,EACtB,SAAS,EAAE,IAAI,CAAC,UAAU,EAC1B,qBAAqB,EAAE,IAAI,CAAC,sBAAsB,EAClD,cAAc,EAAE,IAAI;oBAEpB,uDAA+B,CACzB,CACJ,CACP,CAAC;QACJ,CAAC;QAgCH,sCAAC;IAAD,CAAC,AAtDD,CAAqD,KAAK,CAAC,SAAS,GAsDnE;IAtDY,0EAA+B","sourcesContent":["import { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\r\nimport * as React from 'react';\r\n\r\nexport interface IPanelHandleDismissTargetExampleState {\r\n  showPanel: boolean;\r\n}\r\nexport class PanelHandleDismissTargetExample extends React.Component<{}, IPanelHandleDismissTargetExampleState> {\r\n  public state = {\r\n    showPanel: false\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <DefaultButton secondaryText=\"Opens the Sample Panel\" onClick={this._showPanel} text=\"Open Panel\" />\r\n        <Panel\r\n          headerText=\"Panel - Handle close button clicks or light dismissal\"\r\n          isOpen={this.state.showPanel}\r\n          type={PanelType.smallFixedNear}\r\n          isFooterAtBottom={true}\r\n          onDismiss={this._onDismiss}\r\n          onRenderFooterContent={this._onRenderFooterContent}\r\n          isLightDismiss={true}\r\n        >\r\n          <span>Content goes here.</span>\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderFooterContent = () => {\r\n    return (\r\n      <div>\r\n        <DefaultButton onClick={this._hidePanel}>Dismiss</DefaultButton>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  private _showPanel = (): void => {\r\n    this.setState({ showPanel: true });\r\n  };\r\n\r\n  private _hidePanel = () => {\r\n    this.setState({ showPanel: false });\r\n  };\r\n\r\n  private _onDismiss = (ev?: React.SyntheticEvent<HTMLElement>) => {\r\n    if (!ev) {\r\n      console.log('Panel dismissed.');\r\n      return;\r\n    }\r\n\r\n    console.log('Close button clicked or light dismissed.');\r\n    if (ev.nativeEvent.srcElement && ev.nativeEvent.srcElement.className.indexOf('ms-Button-icon') !== -1) {\r\n      console.log('Close button clicked.');\r\n    }\r\n    if (ev.nativeEvent.srcElement && ev.nativeEvent.srcElement.className.indexOf('ms-Overlay') !== -1) {\r\n      console.log('Light dismissed.');\r\n    }\r\n  };\r\n}\r\n"]}