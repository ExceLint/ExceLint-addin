{"version":3,"file":"GroupSpacer.js","sourceRoot":"../src/","sources":["components/GroupedList/GroupSpacer.tsx"],"names":[],"mappings":";;;IAKA,IAAM,aAAa,GAAG,8BAAkB,EAA8C,CAAC;IAE1E,QAAA,YAAY,GAAG,EAAE,CAAC;IAElB,QAAA,WAAW,GAAG,kBAAM,CAC/B,UAAC,KAAwB;QACf,IAAA,mBAAK,EAAE,qBAAM,EAAE,mBAAK,EAAE,sBAA0B,EAA1B,uDAA0B,CAAW;QACnE,IAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE;YACvC,KAAK,EAAE,KAAM;YACb,KAAK,EAAE,KAAK,GAAG,WAAW;SAC3B,CAAC,CAAC;QAEH,OAAO,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,8BAAM,SAAS,EAAE,UAAU,CAAC,IAAI,GAAI,CAAC,CAAC,CAAC,IAAI,CAAC;IACjE,CAAC,EACD,8BAAS,EACT,SAAS,EACT,EAAE,KAAK,EAAE,aAAa,EAAE,CACzB,CAAC","sourcesContent":["import * as React from 'react';\r\nimport { styled, classNamesFunction } from '../../Utilities';\r\nimport { IGroupSpacerProps, IGroupSpacerStyleProps, IGroupSpacerStyles } from './GroupSpacer.types';\r\nimport { getStyles } from './GroupSpacer.styles';\r\n\r\nconst getClassNames = classNamesFunction<IGroupSpacerStyleProps, IGroupSpacerStyles>();\r\n\r\nexport const SPACER_WIDTH = 32;\r\n\r\nexport const GroupSpacer = styled<IGroupSpacerProps, IGroupSpacerStyleProps, IGroupSpacerStyles>(\r\n  (props: IGroupSpacerProps) => {\r\n    const { count, styles, theme, indentWidth = SPACER_WIDTH } = props;\r\n    const classNames = getClassNames(styles, {\r\n      theme: theme!,\r\n      width: count * indentWidth\r\n    });\r\n\r\n    return count > 0 ? <span className={classNames.root} /> : null;\r\n  },\r\n  getStyles,\r\n  undefined,\r\n  { scope: 'GroupSpacer' }\r\n);\r\n"]}