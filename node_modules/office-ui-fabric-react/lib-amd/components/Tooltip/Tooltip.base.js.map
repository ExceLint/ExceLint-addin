{"version":3,"file":"Tooltip.base.js","sourceRoot":"../src/","sources":["components/Tooltip/Tooltip.base.tsx"],"names":[],"mappings":";;;IAOA,IAAM,aAAa,GAAG,8BAAkB,EAAsC,CAAC;IAE/E;QAAiC,uCAAiC;QAAlE;YAAA,qEAgEC;YAHS,sBAAgB,GAAG,UAAC,KAAoB;gBAC9C,OAAO,2BAAG,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,OAAO,IAAG,KAAK,CAAC,OAAO,CAAK,CAAC;YACrE,CAAC,CAAC;;QACJ,CAAC;QA/CQ,4BAAM,GAAb;YACQ,IAAA,eAYQ,EAXZ,wBAAS,EACT,8BAAY,EACZ,gBAAK,EACL,oCAAe,EACf,gDAAqB,EACrB,kBAAM,EACN,UAAE,EACF,sBAAQ,EACR,uBAAuC,EAAvC,4DAAuC,EACvC,gCAAa,EACb,gBAAK,CACQ;YAEf,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,MAAO,EAAE;gBACxC,KAAK,EAAE,KAAM;gBACb,SAAS,EAAE,SAAS,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,SAAS,CAAC;gBAChE,KAAK,EAAE,KAAM;gBACb,QAAQ,EAAE,QAAS;aACpB,CAAC,CAAC;YAEH,OAAO,CACL,oBAAC,iBAAO,qBACN,MAAM,EAAE,aAAa,EACrB,eAAe,EAAE,eAAe,EAChC,qBAAqB,EAAE,qBAAqB,IACxC,YAAY,EACZ,0BAAc,CAAC,IAAI,CAAC,KAAK,EAAE,yBAAa,EAAE,CAAC,IAAI,CAAC,CAAC,IACrD,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;gBAEhC,6BACE,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EACnC,EAAE,EAAE,EAAE,EACN,IAAI,EAAC,SAAS,EACd,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EACrC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,IAEpC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAC/C,CACE,CACX,CAAC;QACJ,CAAC;QA1DD,+BAA+B;QACjB,wBAAY,GAA2B;YACnD,eAAe,EAAE,iCAAe,CAAC,SAAS;YAC1C,KAAK,EAAE,4BAAY,CAAC,MAAM;YAC1B,QAAQ,EAAE,OAAO;YACjB,YAAY,EAAE;gBACZ,aAAa,EAAE,IAAI;gBACnB,SAAS,EAAE,EAAE;gBACb,QAAQ,EAAE,CAAC;gBACX,eAAe,EAAE,IAAI;gBACrB,UAAU,EAAE,KAAK;aAClB;SACF,CAAC;QAmDJ,kBAAC;KAAA,AAhED,CAAiC,yBAAa,GAgE7C;IAhEY,kCAAW","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, classNamesFunction, divProperties, getNativeProps } from '../../Utilities';\r\nimport { IProcessedStyleSet } from '../../Styling';\r\nimport { ITooltipProps, ITooltipStyleProps, ITooltipStyles, TooltipDelay } from './Tooltip.types';\r\nimport { Callout } from '../../Callout';\r\nimport { DirectionalHint } from '../../common/DirectionalHint';\r\n\r\nconst getClassNames = classNamesFunction<ITooltipStyleProps, ITooltipStyles>();\r\n\r\nexport class TooltipBase extends BaseComponent<ITooltipProps, any> {\r\n  // Specify default props values\r\n  public static defaultProps: Partial<ITooltipProps> = {\r\n    directionalHint: DirectionalHint.topCenter,\r\n    delay: TooltipDelay.medium,\r\n    maxWidth: '364px',\r\n    calloutProps: {\r\n      isBeakVisible: true,\r\n      beakWidth: 16,\r\n      gapSpace: 0,\r\n      setInitialFocus: true,\r\n      doNotLayer: false\r\n    }\r\n  };\r\n\r\n  private _classNames: IProcessedStyleSet<ITooltipStyles>;\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      className,\r\n      calloutProps,\r\n      delay,\r\n      directionalHint,\r\n      directionalHintForRTL,\r\n      styles,\r\n      id,\r\n      maxWidth,\r\n      onRenderContent = this._onRenderContent,\r\n      targetElement,\r\n      theme\r\n    } = this.props;\r\n\r\n    this._classNames = getClassNames(styles!, {\r\n      theme: theme!,\r\n      className: className || (calloutProps && calloutProps.className),\r\n      delay: delay!,\r\n      maxWidth: maxWidth!\r\n    });\r\n\r\n    return (\r\n      <Callout\r\n        target={targetElement}\r\n        directionalHint={directionalHint}\r\n        directionalHintForRTL={directionalHintForRTL}\r\n        {...calloutProps}\r\n        {...getNativeProps(this.props, divProperties, ['id'])} // omitting ID due to it being used in the div below\r\n        className={this._classNames.root}\r\n      >\r\n        <div\r\n          className={this._classNames.content}\r\n          id={id}\r\n          role=\"tooltip\"\r\n          onMouseEnter={this.props.onMouseEnter}\r\n          onMouseLeave={this.props.onMouseLeave}\r\n        >\r\n          {onRenderContent(this.props, this._onRenderContent)}\r\n        </div>\r\n      </Callout>\r\n    );\r\n  }\r\n\r\n  private _onRenderContent = (props: ITooltipProps): JSX.Element => {\r\n    return <p className={this._classNames.subText}>{props.content}</p>;\r\n  };\r\n}\r\n"]}