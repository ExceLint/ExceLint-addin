{"version":3,"file":"TooltipHost.types.js","sourceRoot":"../src/","sources":["components/Tooltip/TooltipHost.types.ts"],"names":[],"mappings":";;;IAoBA,IAAY,mBAMX;IAND,WAAY,mBAAmB;QAC7B,6DAA6D;QAC7D,iEAAM,CAAA;QAEN,iEAAiE;QACjE,6DAAI,CAAA;IACN,CAAC,EANW,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAM9B","sourcesContent":["import * as React from 'react';\r\nimport { TooltipHostBase } from './TooltipHost.base';\r\nimport { TooltipDelay, ITooltipProps } from './Tooltip.types';\r\nimport { ICalloutProps } from '../../Callout';\r\nimport { DirectionalHint } from '../../common/DirectionalHint';\r\nimport { IRefObject, IStyleFunctionOrObject } from '../../Utilities';\r\nimport { IStyle, ITheme } from '../../Styling';\r\n\r\nexport interface ITooltipHost {\r\n  /**\r\n   * Shows the tooltip.\r\n   */\r\n  show: () => void;\r\n\r\n  /**\r\n   * Dismisses the tooltip.\r\n   */\r\n  dismiss: () => void;\r\n}\r\n\r\nexport enum TooltipOverflowMode {\r\n  /** Only show tooltip if parent DOM element is overflowing */\r\n  Parent,\r\n\r\n  /** Only show tooltip if tooltip host's content is overflowing */\r\n  Self\r\n}\r\n\r\n/**\r\n * Tooltip component props.\r\n */\r\nexport interface ITooltipHostProps extends React.HTMLAttributes<HTMLDivElement | TooltipHostBase> {\r\n  /**\r\n   * Optional callback to access the ITooltipHost interface. Use this instead of ref for accessing\r\n   * the public methods and properties of the component.\r\n   */\r\n  componentRef?: IRefObject<ITooltipHost>;\r\n\r\n  /**\r\n   * Additional properties to pass through for Callout, reference detail properties in ICalloutProps\r\n   */\r\n  calloutProps?: ICalloutProps;\r\n\r\n  /**\r\n   * Optionally a number of milliseconds to delay closing the tooltip, so that\r\n   * the user has time to hover over the tooltip and interact with it. Hovering\r\n   * over the tooltip will count as hovering over the host, so that the tooltip\r\n   * will stay open if the user is actively interacting with it.\r\n   */\r\n  closeDelay?: number;\r\n\r\n  /**\r\n   * String to be passed to the tooltip\r\n   */\r\n  content?: string;\r\n\r\n  /**\r\n   * Length of delay\r\n   * @defaultvalue medium\r\n   */\r\n  delay?: TooltipDelay;\r\n\r\n  /**\r\n   * Indicator of how the tooltip should be anchored to its targetElement.\r\n   */\r\n  directionalHint?: DirectionalHint;\r\n\r\n  /**\r\n   * How the element should be positioned in RTL layouts.\r\n   * If not specified, a mirror of `directionalHint` will be used instead\r\n   */\r\n  directionalHintForRTL?: DirectionalHint;\r\n\r\n  /**\r\n   * Optional class name to apply to tooltip host.\r\n   */\r\n  hostClassName?: string;\r\n\r\n  /**\r\n   * Only show if there is overflow. If set, the tooltip hosts observes  and only shows the tooltip if this element has overflow.\r\n   * It also uses the parent as target element for the tooltip.\r\n   */\r\n  overflowMode?: TooltipOverflowMode;\r\n\r\n  /**\r\n   * Whether or not to mark the container as described by the tooltip.\r\n   * If not specified, the caller should mark as element as described by the tooltip id.\r\n   */\r\n  setAriaDescribedBy?: boolean;\r\n\r\n  /**\r\n   * Additional properties to pass through for Tooltip, reference detail properties in ITooltipProps\r\n   */\r\n  tooltipProps?: ITooltipProps;\r\n\r\n  /**\r\n   * Call to provide customized styling that will layer on top of the variant rules.\r\n   */\r\n  styles?: IStyleFunctionOrObject<ITooltipHostStyleProps, ITooltipHostStyles>;\r\n\r\n  /**\r\n   * Theme provided by High-Order Component.\r\n   */\r\n  theme?: ITheme;\r\n\r\n  /**\r\n   * Notifies when tooltip becomes visible or hidden, whatever the trigger was.\r\n   */\r\n  onTooltipToggle?(isTooltipVisible: boolean): void;\r\n}\r\n\r\nexport interface ITooltipHostStyleProps {\r\n  /**\r\n   * Accept theme prop.\r\n   */\r\n  theme: ITheme;\r\n\r\n  /**\r\n   * Accept optional classNames for the host wrapper\r\n   */\r\n  className?: string;\r\n}\r\n\r\nexport interface ITooltipHostStyles {\r\n  /**\r\n   * Style for the host wrapper element.\r\n   */\r\n  root: IStyle;\r\n}\r\n"]}