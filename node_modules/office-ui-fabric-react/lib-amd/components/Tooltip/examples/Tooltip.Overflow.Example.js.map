{"version":3,"file":"Tooltip.Overflow.Example.js","sourceRoot":"../src/","sources":["components/Tooltip/examples/Tooltip.Overflow.Example.tsx"],"names":[],"mappings":";;;IAUA;QAA4C,kDAA+C;QAGzF,gCAAY,KAAU;YAAtB,YACE,kBAAM,KAAK,CAAC,SAMb;YATgB,eAAS,GAAG,iBAAK,CAAC,cAAc,CAAC,CAAC;YAKjD,KAAI,CAAC,KAAK,GAAG;gBACX,QAAQ,EAAE,KAAK;gBACf,gBAAgB,EAAE,KAAK;aACxB,CAAC;;QACJ,CAAC;QAED,+BAA+B;QACxB,uCAAM,GAAb;YAAA,iBAkCC;YAjCC,OAAO,CACL;gBACE,oBAAC,sBAAa,IAAC,OAAO,EAAE,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAjD,CAAiD,8BAAyC;gBAExH,6BACE,KAAK,EAAE;wBACL,SAAS,EAAE,MAAM;qBAClB;oBAED,6BACE,KAAK,EAAE;4BACL,QAAQ,EAAE,QAAQ;4BAClB,YAAY,EAAE,UAAU;4BACxB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS;4BACtD,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM;4BAC7C,MAAM,EAAE,iBAAiB;yBAC1B;wBAED,oBAAC,qBAAW,IACV,OAAO,EAAC,qBAAqB,EAC7B,EAAE,EAAE,IAAI,CAAC,SAAS,EAClB,YAAY,EAAE,6BAAmB,CAAC,MAAM,EACxC,eAAe,EAAE,UAAC,gBAAyB,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,kBAAA,EAAE,CAAC,EAAnC,CAAmC;4BAEnF,iDAAuB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,iMAGxE,CACK,CACV,CACF,CACF,CACP,CAAC;QACJ,CAAC;QACH,6BAAC;IAAD,CAAC,AAhDD,CAA4C,yBAAa,GAgDxD;IAhDY,wDAAsB","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, getId } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { TooltipHost, TooltipOverflowMode } from 'office-ui-fabric-react/lib/Tooltip';\r\n\r\nexport interface ITooltipOverflowExampleState {\r\n  overflow: boolean;\r\n  isTooltipVisible: boolean;\r\n}\r\n\r\nexport class TooltipOverflowExample extends BaseComponent<{}, ITooltipOverflowExampleState> {\r\n  private readonly tooltipId = getId('text-tooltip');\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      overflow: false,\r\n      isTooltipVisible: false\r\n    };\r\n  }\r\n\r\n  // tslint:disable:jsx-no-lambda\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div>\r\n        <DefaultButton onClick={() => this.setState({ overflow: !this.state.overflow })}>Toggle showing overflow</DefaultButton>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: '40px'\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              whiteSpace: this.state.overflow ? 'nowrap' : 'inherit',\r\n              width: this.state.overflow ? '200px' : 'auto',\r\n              border: '1px solid black'\r\n            }}\r\n          >\r\n            <TooltipHost\r\n              content=\"This is the tooltip\"\r\n              id={this.tooltipId}\r\n              overflowMode={TooltipOverflowMode.Parent}\r\n              onTooltipToggle={(isTooltipVisible: boolean) => this.setState({ isTooltipVisible })}\r\n            >\r\n              <span aria-labelledby={this.state.isTooltipVisible ? this.tooltipId : undefined}>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec volutpat lectus ut magna sodales, sit amet accumsan arcu\r\n                accumsan. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n              </span>\r\n            </TooltipHost>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}