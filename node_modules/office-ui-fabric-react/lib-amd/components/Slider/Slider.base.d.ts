/// <reference types="react" />
import * as React from 'react';
import { BaseComponent } from '../../Utilities';
import { ISliderProps, ISlider } from './Slider.types';
export interface ISliderState {
    value?: number;
    renderedValue?: number;
}
/**
 * @deprecated Unused.
 */
export declare enum ValuePosition {
    Previous = 0,
    Next = 1,
}
export declare class SliderBase extends BaseComponent<ISliderProps, ISliderState> implements ISlider {
    static defaultProps: ISliderProps;
    private _sliderLine;
    private _thumb;
    private _id;
    constructor(props: ISliderProps);
    /**
     * Invoked when a component is receiving new props. This method is not called for the initial render.
     */
    componentWillReceiveProps(newProps: ISliderProps): void;
    render(): React.ReactElement<{}>;
    focus(): void;
    readonly value: number | undefined;
    private _getAriaValueText;
    private _getThumbStyle(vertical, thumbOffsetPercent);
    private _onMouseDownOrTouchStart;
    private _onMouseMoveOrTouchMove;
    private _getPosition(event, vertical);
    private _updateValue(value, renderedValue);
    private _onMouseUpOrTouchEnd;
    private _onKeyDown;
}
