{"version":3,"file":"ProgressIndicator.base.js","sourceRoot":"../src/","sources":["components/ProgressIndicator/ProgressIndicator.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { classNamesFunction } from '../../Utilities';\r\nimport { IProgressIndicatorProps, IProgressIndicatorStyleProps, IProgressIndicatorStyles } from './ProgressIndicator.types';\r\n\r\nconst getClassNames = classNamesFunction<IProgressIndicatorStyleProps, IProgressIndicatorStyles>();\r\n\r\n// if the percentComplete is near 0, don't animate it.\r\n// This prevents animations on reset to 0 scenarios\r\nconst ZERO_THRESHOLD = 0.01;\r\n\r\n/**\r\n * ProgressIndicator with no default styles.\r\n * [Use the `styles` API to add your own styles.](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Styling)\r\n */\r\nexport class ProgressIndicatorBase extends React.Component<IProgressIndicatorProps, {}> {\r\n  public static defaultProps = {\r\n    label: '',\r\n    description: '',\r\n    width: 180\r\n  };\r\n\r\n  public render() {\r\n    const {\r\n      barHeight,\r\n      className,\r\n      label = this.props.title, // Fall back to deprecated value.\r\n      description,\r\n      styles,\r\n      theme,\r\n      progressHidden,\r\n      onRenderProgress = this._onRenderProgress\r\n    } = this.props;\r\n\r\n    const percentComplete =\r\n      typeof this.props.percentComplete === 'number' ? Math.min(100, Math.max(0, this.props.percentComplete * 100)) : undefined;\r\n\r\n    const classNames = getClassNames(styles, {\r\n      theme: theme!,\r\n      className,\r\n      barHeight,\r\n      indeterminate: percentComplete === undefined ? true : false\r\n    });\r\n\r\n    return (\r\n      <div className={classNames.root}>\r\n        {label ? <div className={classNames.itemName}>{label}</div> : null}\r\n        {!progressHidden\r\n          ? onRenderProgress(\r\n              {\r\n                ...(this.props as IProgressIndicatorProps),\r\n                percentComplete: percentComplete\r\n              },\r\n              this._onRenderProgress\r\n            )\r\n          : null}\r\n        {description ? <div className={classNames.itemDescription}>{description}</div> : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderProgress = (props: IProgressIndicatorProps): JSX.Element => {\r\n    const { ariaValueText, barHeight, className, styles, theme } = this.props;\r\n\r\n    const percentComplete =\r\n      typeof this.props.percentComplete === 'number' ? Math.min(100, Math.max(0, this.props.percentComplete * 100)) : undefined;\r\n\r\n    const classNames = getClassNames(styles, {\r\n      theme: theme!,\r\n      className,\r\n      barHeight,\r\n      indeterminate: percentComplete === undefined ? true : false\r\n    });\r\n\r\n    const progressBarStyles = {\r\n      width: percentComplete !== undefined ? percentComplete + '%' : undefined,\r\n      transition: percentComplete !== undefined && percentComplete < ZERO_THRESHOLD ? 'none' : undefined\r\n    };\r\n\r\n    const ariaValueMin = percentComplete !== undefined ? 0 : undefined;\r\n    const ariaValueMax = percentComplete !== undefined ? 100 : undefined;\r\n    const ariaValueNow = percentComplete !== undefined ? Math.floor(percentComplete!) : undefined;\r\n\r\n    return (\r\n      <div className={classNames.itemProgress}>\r\n        <div className={classNames.progressTrack} />\r\n        <div\r\n          className={classNames.progressBar}\r\n          style={progressBarStyles}\r\n          role=\"progressbar\"\r\n          aria-valuemin={ariaValueMin}\r\n          aria-valuemax={ariaValueMax}\r\n          aria-valuenow={ariaValueNow}\r\n          aria-valuetext={ariaValueText}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n"]}