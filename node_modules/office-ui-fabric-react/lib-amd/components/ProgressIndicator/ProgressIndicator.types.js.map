{"version":3,"file":"ProgressIndicator.types.js","sourceRoot":"../src/","sources":["components/ProgressIndicator/ProgressIndicator.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\r\nimport { ProgressIndicatorBase } from './ProgressIndicator.base';\r\nimport { IStyle, ITheme } from '../../Styling';\r\nimport { IStyleFunctionOrObject, IRenderFunction } from '../../Utilities';\r\n\r\nexport interface IProgressIndicatorProps extends React.ClassAttributes<ProgressIndicatorBase> {\r\n  /**\r\n   * Call to provide customized styling that will layer on top of the variant rules.\r\n   */\r\n  styles?: IStyleFunctionOrObject<IProgressIndicatorStyleProps, IProgressIndicatorStyles>;\r\n\r\n  /**\r\n   * Theme provided by High-Order Component.\r\n   */\r\n  theme?: ITheme;\r\n\r\n  /**\r\n   * Additional css class to apply to the ProgressIndicator\r\n   * @defaultvalue undefined\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * Label to display above the control. May be a string or React virtual elements.\r\n   */\r\n  label?: React.ReactNode;\r\n\r\n  /**\r\n   * Text describing or supplementing the operation. May be a string or React virtual elements.\r\n   */\r\n  description?: React.ReactNode;\r\n\r\n  /**\r\n   * Percentage of the operation's completeness, numerically between 0 and 1. If this is not set,\r\n   * the indeterminate progress animation will be shown instead.\r\n   */\r\n  percentComplete?: number;\r\n\r\n  /**\r\n   * Whether or not to hide the progress state.\r\n   */\r\n  progressHidden?: boolean;\r\n\r\n  /**\r\n   * A render override for the progress track.\r\n   */\r\n  onRenderProgress?: IRenderFunction<IProgressIndicatorProps>;\r\n\r\n  /**\r\n   * Text alternative of the progress status, used by screen readers for reading the value of the progress.\r\n   */\r\n  ariaValueText?: string;\r\n\r\n  /**\r\n   * Deprecated at v0.43.0, to be removed at \\>= v0.53.0. Use `label` instead.\r\n   * @deprecated Use `label` instead.\r\n   */\r\n  title?: string;\r\n\r\n  /**\r\n   * Height of the ProgressIndicator\r\n   * @defaultvalue 2\r\n   */\r\n  barHeight?: number;\r\n}\r\n\r\nexport interface IProgressIndicatorStyleProps {\r\n  /**\r\n   * Theme provided by High-Order Component.\r\n   */\r\n  theme: ITheme;\r\n\r\n  /**\r\n   * Accept custom classNames\r\n   */\r\n  className?: string;\r\n  indeterminate?: boolean;\r\n  barHeight?: number;\r\n}\r\n\r\nexport interface IProgressIndicatorStyles {\r\n  /**\r\n   * Style for the root element.\r\n   */\r\n  root: IStyle;\r\n  itemName: IStyle;\r\n  itemDescription: IStyle;\r\n  itemProgress: IStyle;\r\n  progressTrack: IStyle;\r\n  progressBar: IStyle;\r\n}\r\n"]}