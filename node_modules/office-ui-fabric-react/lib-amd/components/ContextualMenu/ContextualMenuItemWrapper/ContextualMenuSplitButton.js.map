{"version":3,"file":"ContextualMenuSplitButton.js","sourceRoot":"../src/","sources":["components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuSplitButton.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { assign, buttonProperties, getNativeProps, KeyCodes, mergeAriaAttributeValues } from '../../../Utilities';\r\nimport { ContextualMenuItem } from '../ContextualMenuItem';\r\nimport { IContextualMenuItem } from '../ContextualMenu.types';\r\nimport { IMenuItemClassNames, getSplitButtonVerticalDividerClassNames } from '../ContextualMenu.classNames';\r\nimport { KeytipData } from '../../../KeytipData';\r\nimport { isItemDisabled, hasSubmenu } from '../../../utilities/contextualMenu/index';\r\nimport { VerticalDivider } from '../../../Divider';\r\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\r\n\r\nexport interface IContextualMenuSplitButtonState {}\r\n\r\nconst TouchIdleDelay = 500; /* ms */\r\n\r\nexport class ContextualMenuSplitButton extends ContextualMenuItemWrapper {\r\n  private _splitButton: HTMLDivElement;\r\n  private _lastTouchTimeoutId: number | undefined;\r\n  private _processingTouch: boolean;\r\n\r\n  public componentDidMount() {\r\n    if (this._splitButton && 'onpointerdown' in this._splitButton) {\r\n      this._events.on(this._splitButton, 'pointerdown', this._onPointerDown, true);\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element | null {\r\n    const {\r\n      item,\r\n      classNames,\r\n      index,\r\n      focusableElementIndex,\r\n      totalItemCount,\r\n      hasCheckmarks,\r\n      hasIcons,\r\n      onItemMouseLeave,\r\n      expandedMenuItemKey\r\n    } = this.props;\r\n\r\n    const itemHasSubmenu = hasSubmenu(item);\r\n\r\n    let { keytipProps } = item;\r\n    if (keytipProps) {\r\n      keytipProps = {\r\n        ...keytipProps,\r\n        hasMenu: true\r\n      };\r\n    }\r\n\r\n    return (\r\n      <KeytipData keytipProps={keytipProps} disabled={isItemDisabled(item)}>\r\n        {(keytipAttributes: any): JSX.Element => (\r\n          <div\r\n            data-ktp-target={keytipAttributes['data-ktp-target']}\r\n            ref={(splitButton: HTMLDivElement) => (this._splitButton = splitButton)}\r\n            role={'menuitem'}\r\n            aria-label={item.ariaLabel}\r\n            className={classNames.splitContainer}\r\n            aria-disabled={isItemDisabled(item)}\r\n            aria-expanded={itemHasSubmenu ? item.key === expandedMenuItemKey : undefined}\r\n            aria-haspopup={true}\r\n            aria-describedby={mergeAriaAttributeValues(item.ariaDescription, keytipAttributes['aria-describedby'])}\r\n            aria-checked={item.isChecked || item.checked}\r\n            aria-posinset={focusableElementIndex + 1}\r\n            aria-setsize={totalItemCount}\r\n            onMouseEnter={this._onItemMouseEnterPrimary}\r\n            onMouseLeave={onItemMouseLeave ? onItemMouseLeave.bind(this, { ...item, subMenuProps: null, items: null }) : undefined}\r\n            onMouseMove={this._onItemMouseMovePrimary}\r\n            onKeyDown={this._onItemKeyDown}\r\n            onClick={this._executeItemClick}\r\n            onTouchStart={this._onTouchStart}\r\n            tabIndex={0}\r\n            data-is-focusable={true}\r\n            aria-roledescription={item['aria-roledescription']}\r\n          >\r\n            {this._renderSplitPrimaryButton(item, classNames, index, hasCheckmarks!, hasIcons!)}\r\n            {this._renderSplitDivider(item)}\r\n            {this._renderSplitIconButton(item, classNames, index, keytipAttributes)}\r\n          </div>\r\n        )}\r\n      </KeytipData>\r\n    );\r\n  }\r\n\r\n  protected _onItemKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\r\n    const { item, onItemKeyDown } = this.props;\r\n    if (ev.which === KeyCodes.enter) {\r\n      this._executeItemClick(ev);\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n    } else if (onItemKeyDown) {\r\n      onItemKeyDown(item, ev);\r\n    }\r\n  };\r\n\r\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\r\n    return this._splitButton;\r\n  };\r\n\r\n  private _renderSplitPrimaryButton(\r\n    item: IContextualMenuItem,\r\n    classNames: IMenuItemClassNames,\r\n    index: number,\r\n    hasCheckmarks: boolean,\r\n    hasIcons: boolean\r\n  ) {\r\n    const { contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem, onItemClick } = this.props;\r\n\r\n    const itemProps = {\r\n      key: item.key,\r\n      disabled: isItemDisabled(item) || item.primaryDisabled,\r\n      name: item.name,\r\n      text: item.text || item.name,\r\n      className: classNames.splitPrimary,\r\n      canCheck: item.canCheck,\r\n      isChecked: item.isChecked,\r\n      checked: item.checked,\r\n      iconProps: item.iconProps,\r\n      'data-is-focusable': false,\r\n      'aria-hidden': true\r\n    } as IContextualMenuItem;\r\n\r\n    const { itemProps: itemComponentProps } = item;\r\n\r\n    return (\r\n      <button {...getNativeProps(itemProps, buttonProperties)}>\r\n        <ChildrenRenderer\r\n          data-is-focusable={false}\r\n          item={itemProps}\r\n          classNames={classNames}\r\n          index={index}\r\n          onCheckmarkClick={hasCheckmarks && onItemClick ? onItemClick : undefined}\r\n          hasIcons={hasIcons}\r\n          {...itemComponentProps}\r\n        />\r\n      </button>\r\n    );\r\n  }\r\n\r\n  private _renderSplitDivider(item: IContextualMenuItem) {\r\n    const getDividerClassNames = item.getSplitButtonVerticalDividerClassNames || getSplitButtonVerticalDividerClassNames;\r\n    return <VerticalDivider getClassNames={getDividerClassNames} />;\r\n  }\r\n\r\n  private _renderSplitIconButton(item: IContextualMenuItem, classNames: IMenuItemClassNames, index: number, keytipAttributes: any) {\r\n    const {\r\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\r\n      onItemMouseLeave,\r\n      onItemMouseDown,\r\n      openSubMenu,\r\n      dismissSubMenu,\r\n      dismissMenu\r\n    } = this.props;\r\n\r\n    const itemProps = {\r\n      onClick: this._onIconItemClick,\r\n      disabled: isItemDisabled(item),\r\n      className: classNames.splitMenu,\r\n      subMenuProps: item.subMenuProps,\r\n      submenuIconProps: item.submenuIconProps,\r\n      split: true,\r\n      key: item.key\r\n    } as IContextualMenuItem;\r\n\r\n    const buttonProps = assign({}, getNativeProps(itemProps, buttonProperties), {\r\n      onMouseEnter: this._onItemMouseEnterIcon,\r\n      onMouseLeave: onItemMouseLeave ? onItemMouseLeave.bind(this, item) : undefined,\r\n      onMouseDown: (ev: any) => (onItemMouseDown ? onItemMouseDown(item, ev) : undefined),\r\n      onMouseMove: this._onItemMouseMoveIcon,\r\n      'data-is-focusable': false,\r\n      'data-ktp-execute-target': keytipAttributes['data-ktp-execute-target'],\r\n      'aria-hidden': true\r\n    });\r\n\r\n    const { itemProps: itemComponentProps } = item;\r\n\r\n    return (\r\n      <button {...buttonProps}>\r\n        <ChildrenRenderer\r\n          componentRef={item.componentRef}\r\n          item={itemProps}\r\n          classNames={classNames}\r\n          index={index}\r\n          hasIcons={false}\r\n          openSubMenu={openSubMenu}\r\n          dismissSubMenu={dismissSubMenu}\r\n          dismissMenu={dismissMenu}\r\n          getSubmenuTarget={this._getSubmenuTarget}\r\n          {...itemComponentProps}\r\n        />\r\n      </button>\r\n    );\r\n  }\r\n\r\n  private _onItemMouseEnterPrimary = (ev: React.MouseEvent<HTMLElement>): void => {\r\n    const { item, onItemMouseEnter } = this.props;\r\n    if (onItemMouseEnter) {\r\n      onItemMouseEnter({ ...item, subMenuProps: undefined, items: undefined }, ev, this._splitButton);\r\n    }\r\n  };\r\n\r\n  private _onItemMouseEnterIcon = (ev: React.MouseEvent<HTMLElement>): void => {\r\n    const { item, onItemMouseEnter } = this.props;\r\n    if (onItemMouseEnter) {\r\n      onItemMouseEnter(item, ev, this._splitButton);\r\n    }\r\n  };\r\n\r\n  private _onItemMouseMovePrimary = (ev: React.MouseEvent<HTMLElement>): void => {\r\n    const { item, onItemMouseMove } = this.props;\r\n    if (onItemMouseMove) {\r\n      onItemMouseMove({ ...item, subMenuProps: undefined, items: undefined }, ev, this._splitButton);\r\n    }\r\n  };\r\n\r\n  private _onItemMouseMoveIcon = (ev: React.MouseEvent<HTMLElement>): void => {\r\n    const { item, onItemMouseMove } = this.props;\r\n    if (onItemMouseMove) {\r\n      onItemMouseMove(item, ev, this._splitButton);\r\n    }\r\n  };\r\n\r\n  private _onIconItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\r\n    const { item, onItemClickBase } = this.props;\r\n    if (onItemClickBase) {\r\n      onItemClickBase(item, ev, (this._splitButton ? this._splitButton : ev.currentTarget) as HTMLElement);\r\n    }\r\n  };\r\n\r\n  private _executeItemClick = (ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>): void => {\r\n    const { item, executeItemClick, onItemClick } = this.props;\r\n\r\n    if (item.disabled || item.isDisabled) {\r\n      return;\r\n    }\r\n\r\n    if (this._processingTouch && onItemClick) {\r\n      return onItemClick(item, ev);\r\n    }\r\n\r\n    if (executeItemClick) {\r\n      executeItemClick(item, ev);\r\n    }\r\n  };\r\n\r\n  private _onTouchStart = (ev: React.TouchEvent<HTMLElement>): void => {\r\n    if (this._splitButton && !('onpointerdown' in this._splitButton)) {\r\n      this._handleTouchAndPointerEvent(ev);\r\n    }\r\n  };\r\n\r\n  private _onPointerDown = (ev: PointerEvent): void => {\r\n    if (ev.pointerType === 'touch') {\r\n      this._handleTouchAndPointerEvent(ev);\r\n      ev.preventDefault();\r\n      ev.stopImmediatePropagation();\r\n    }\r\n  };\r\n\r\n  private _handleTouchAndPointerEvent(ev: React.TouchEvent<HTMLElement> | PointerEvent) {\r\n    const { onTap } = this.props;\r\n\r\n    if (onTap) {\r\n      onTap(ev);\r\n    }\r\n    // If we already have an existing timeout from a previous touch/pointer event\r\n    // cancel that timeout so we can set a new one.\r\n    if (this._lastTouchTimeoutId) {\r\n      this._async.clearTimeout(this._lastTouchTimeoutId);\r\n      this._lastTouchTimeoutId = undefined;\r\n    }\r\n    this._processingTouch = true;\r\n    this._lastTouchTimeoutId = this._async.setTimeout(() => {\r\n      this._processingTouch = false;\r\n      this._lastTouchTimeoutId = undefined;\r\n    }, TouchIdleDelay);\r\n  }\r\n}\r\n"]}