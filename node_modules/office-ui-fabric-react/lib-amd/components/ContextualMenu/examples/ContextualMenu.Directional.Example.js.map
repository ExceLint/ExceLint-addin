{"version":3,"file":"ContextualMenu.Directional.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Directional.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\r\nimport { DirectionalHint, ContextualMenuItemType } from 'office-ui-fabric-react/lib/ContextualMenu';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { getRTL } from 'office-ui-fabric-react/lib/Utilities';\r\nimport './ContextualMenuExample.scss';\r\nimport * as exampleStylesImport from '../../../common/_exampleStyles.scss';\r\nconst exampleStyles: any = exampleStylesImport;\r\n\r\nexport interface IContextualMenuDirectionalExampleState {\r\n  directionalHint?: DirectionalHint;\r\n  directionalHintForRTL?: DirectionalHint;\r\n  useDirectionalHintForRtl?: boolean;\r\n  isBeakVisible?: boolean;\r\n  gapSpace?: number;\r\n  beakWidth?: number;\r\n  edgeFixed?: boolean;\r\n}\r\n\r\nconst DIRECTION_OPTIONS = [\r\n  { key: DirectionalHint.topLeftEdge, text: 'Top Left Edge' },\r\n  { key: DirectionalHint.topCenter, text: 'Top Center' },\r\n  { key: DirectionalHint.topRightEdge, text: 'Top Right Edge' },\r\n  { key: DirectionalHint.topAutoEdge, text: 'Top Auto Edge' },\r\n  { key: DirectionalHint.bottomLeftEdge, text: 'Bottom Left Edge' },\r\n  { key: DirectionalHint.bottomCenter, text: 'Bottom Center' },\r\n  { key: DirectionalHint.bottomRightEdge, text: 'Bottom Right Edge' },\r\n  { key: DirectionalHint.bottomAutoEdge, text: 'Bottom Auto Edge' },\r\n  { key: DirectionalHint.leftTopEdge, text: 'Left Top Edge' },\r\n  { key: DirectionalHint.leftCenter, text: 'Left Center' },\r\n  { key: DirectionalHint.leftBottomEdge, text: 'Left Bottom Edge' },\r\n  { key: DirectionalHint.rightTopEdge, text: 'Right Top Edge' },\r\n  { key: DirectionalHint.rightCenter, text: 'Right Center' },\r\n  { key: DirectionalHint.rightBottomEdge, text: 'Right Bottom Edge' }\r\n];\r\n\r\nexport class ContextualMenuDirectionalExample extends React.Component<{}, IContextualMenuDirectionalExampleState> {\r\n  public constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isBeakVisible: false,\r\n      directionalHint: DirectionalHint.bottomLeftEdge,\r\n      directionalHintForRTL: DirectionalHint.bottomLeftEdge,\r\n      useDirectionalHintForRtl: false,\r\n      gapSpace: 0,\r\n      beakWidth: 20,\r\n      edgeFixed: false\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { beakWidth, directionalHint, directionalHintForRTL, edgeFixed, gapSpace, isBeakVisible, useDirectionalHintForRtl } = this.state;\r\n\r\n    return (\r\n      <div className=\"ms-ContextualMenuDirectionalExample\">\r\n        <div className=\"ms-ContextualMenuDirectionalExample-configArea\">\r\n          <Checkbox className={exampleStyles.exampleCheckbox} label=\"Show beak\" checked={isBeakVisible} onChange={this._onShowBeakChange} />\r\n          <Dropdown\r\n            label=\"Directional hint\"\r\n            selectedKey={directionalHint!}\r\n            options={DIRECTION_OPTIONS}\r\n            onChange={this._onDirectionalChanged}\r\n          />\r\n          {getRTL() && <Checkbox label=\"Use RTL directional hint\" checked={useDirectionalHintForRtl} onChange={this._onUseRtlHintChange} />}\r\n          {getRTL() && (\r\n            <Dropdown\r\n              label=\"Directional hint for RTL\"\r\n              selectedKey={directionalHintForRTL!}\r\n              options={DIRECTION_OPTIONS}\r\n              onChange={this._onDirectionalRtlChanged}\r\n              disabled={!useDirectionalHintForRtl}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"ms-ContextualMenuDirectionalExample-buttonArea\">\r\n          <DefaultButton\r\n            text=\"Show context menu\"\r\n            menuProps={{\r\n              isBeakVisible: isBeakVisible,\r\n              directionalHint: directionalHint,\r\n              directionalHintForRTL: useDirectionalHintForRtl ? directionalHintForRTL : undefined,\r\n              gapSpace: gapSpace,\r\n              beakWidth: beakWidth,\r\n              directionalHintFixed: edgeFixed,\r\n              items: [\r\n                {\r\n                  key: 'newItem',\r\n                  text: 'New'\r\n                },\r\n                {\r\n                  key: 'divider_1',\r\n                  itemType: ContextualMenuItemType.Divider\r\n                },\r\n                {\r\n                  key: 'rename',\r\n                  text: 'Rename'\r\n                },\r\n                {\r\n                  key: 'edit',\r\n                  text: 'Edit'\r\n                },\r\n                {\r\n                  key: 'properties',\r\n                  text: 'Properties'\r\n                },\r\n                {\r\n                  key: 'disabled',\r\n                  text: 'Disabled item',\r\n                  disabled: true\r\n                }\r\n              ]\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onShowBeakChange = (event: React.FormEvent<HTMLElement>, isVisible: boolean): void => {\r\n    this.setState({\r\n      isBeakVisible: isVisible\r\n    });\r\n  };\r\n\r\n  private _onUseRtlHintChange = (event: React.FormEvent<HTMLElement>, isVisible: boolean): void => {\r\n    this.setState({\r\n      useDirectionalHintForRtl: isVisible\r\n    });\r\n  };\r\n\r\n  private _onDirectionalChanged = (event: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void => {\r\n    this.setState({\r\n      directionalHint: option.key as DirectionalHint\r\n    });\r\n  };\r\n\r\n  private _onDirectionalRtlChanged = (event: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void => {\r\n    this.setState({\r\n      directionalHintForRTL: option.key as DirectionalHint\r\n    });\r\n  };\r\n}\r\n"]}