{"version":3,"file":"ContextualMenuItem.base.js","sourceRoot":"../src/","sources":["components/ContextualMenu/ContextualMenuItem.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { hasSubmenu, getIsChecked } from '../../utilities/contextualMenu/index';\r\nimport { BaseComponent, getRTL } from '../../Utilities';\r\nimport { Icon } from '../../Icon';\r\nimport { IContextualMenuItemProps } from './ContextualMenuItem.types';\r\n\r\nconst renderItemIcon = (props: IContextualMenuItemProps) => {\r\n  const { item, hasIcons, classNames } = props;\r\n\r\n  const { iconProps } = item;\r\n\r\n  if (!hasIcons) {\r\n    return null;\r\n  }\r\n\r\n  if (item.onRenderIcon) {\r\n    return item.onRenderIcon(props);\r\n  }\r\n\r\n  return <Icon {...iconProps} className={classNames.icon} />;\r\n};\r\n\r\nconst renderCheckMarkIcon = ({ onCheckmarkClick, item, classNames }: IContextualMenuItemProps) => {\r\n  const isItemChecked = getIsChecked(item);\r\n  if (onCheckmarkClick) {\r\n    // Ensures that the item is passed as the first argument to the checkmark click callback.\r\n    const onClick = (e: React.MouseEvent<HTMLElement>) => onCheckmarkClick(item, e);\r\n\r\n    return <Icon iconName={isItemChecked ? 'CheckMark' : ''} className={classNames.checkmarkIcon} onClick={onClick} />;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst renderItemName = ({ item, classNames }: IContextualMenuItemProps) => {\r\n  if (item.text || item.name) {\r\n    return <span className={classNames.label}>{item.text || item.name}</span>;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst renderSecondaryText = ({ item, classNames }: IContextualMenuItemProps) => {\r\n  if (item.secondaryText) {\r\n    return <span className={classNames.secondaryText}>{item.secondaryText}</span>;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst renderSubMenuIcon = ({ item, classNames }: IContextualMenuItemProps) => {\r\n  if (hasSubmenu(item)) {\r\n    return <Icon iconName={getRTL() ? 'ChevronLeft' : 'ChevronRight'} {...item.submenuIconProps} className={classNames.subMenuIcon} />;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport class ContextualMenuItemBase extends BaseComponent<IContextualMenuItemProps, {}> {\r\n  public render() {\r\n    const { item, classNames } = this.props;\r\n\r\n    return (\r\n      <div className={item.split ? classNames.linkContentMenu : classNames.linkContent}>\r\n        {renderCheckMarkIcon(this.props)}\r\n        {renderItemIcon(this.props)}\r\n        {renderItemName(this.props)}\r\n        {renderSecondaryText(this.props)}\r\n        {renderSubMenuIcon(this.props)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public openSubMenu = (): void => {\r\n    const { item, openSubMenu, getSubmenuTarget } = this.props;\r\n    if (getSubmenuTarget) {\r\n      const submenuTarget = getSubmenuTarget();\r\n      if (hasSubmenu(item) && openSubMenu && submenuTarget) {\r\n        openSubMenu(item, submenuTarget);\r\n      }\r\n    }\r\n  };\r\n\r\n  public dismissSubMenu = (): void => {\r\n    const { item, dismissSubMenu } = this.props;\r\n    if (hasSubmenu(item) && dismissSubMenu) {\r\n      dismissSubMenu();\r\n    }\r\n  };\r\n\r\n  public dismissMenu = (dismissAll?: boolean): void => {\r\n    const { dismissMenu } = this.props;\r\n    if (dismissMenu) {\r\n      dismissMenu(undefined /* ev */, dismissAll);\r\n    }\r\n  };\r\n}\r\n"]}