{"version":3,"file":"SelectedItemWithContextMenu.js","sourceRoot":"../src/","sources":["components/SelectedItemsList/SelectedPeopleList/Items/SelectedItemWithContextMenu.tsx"],"names":[],"mappings":";;;IAkBA;QAAiD,uDAAwE;QAGvH,qCAAY,KAAwC;YAApD,YACE,kBAAM,KAAK,CAAC,SAEb;YALS,iBAAW,GAAoC,KAAK,CAAC,SAAS,EAAkB,CAAC;YAwBnF,cAAQ,GAAG,UAAC,EAAiC;gBACnD,EAAE,CAAC,cAAc,EAAE,CAAC;gBACpB,IAAI,KAAI,CAAC,KAAK,CAAC,YAAY,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE;oBACvD,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;iBAC1C;qBAAM;oBACL,KAAI,CAAC,QAAQ,CAAC,EAAE,qBAAqB,EAAE,IAAI,EAAE,CAAC,CAAC;iBAChD;YACH,CAAC,CAAC;YAEM,4BAAsB,GAAG,UAAC,EAAS;gBACzC,KAAI,CAAC,QAAQ,CAAC,EAAE,qBAAqB,EAAE,KAAK,EAAE,CAAC,CAAC;YAClD,CAAC,CAAC;YA/BA,KAAI,CAAC,KAAK,GAAG,EAAE,qBAAqB,EAAE,KAAK,EAAE,CAAC;;QAChD,CAAC;QAEM,4CAAM,GAAb;YACE,OAAO,CACL,6BAAK,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE,aAAa,EAAE,IAAI,CAAC,QAAQ;gBACrD,IAAI,CAAC,KAAK,CAAC,YAAY;gBACvB,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAClC,oBAAC,+BAAc,IACb,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAC3B,kBAAkB,EAAE,IAAI,EACxB,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAChC,SAAS,EAAE,IAAI,CAAC,sBAAsB,EACtC,eAAe,EAAE,gCAAe,CAAC,cAAc,GAC/C,CACH,CAAC,CAAC,CAAC,IAAI,CACJ,CACP,CAAC;QACJ,CAAC;QAcH,kCAAC;IAAD,CAAC,AArCD,CAAiD,yBAAa,GAqC7D;IArCY,kEAA2B","sourcesContent":["/* tslint:disable */\r\nimport * as React from 'react';\r\n/* tslint:enable */\r\nimport { BaseComponent, IBaseProps } from '../../../../Utilities';\r\nimport { IExtendedPersonaProps } from '../SelectedPeopleList';\r\nimport { ContextualMenu, DirectionalHint, IContextualMenuItem } from '../../../../ContextualMenu';\r\n\r\nexport interface IPeoplePickerItemState {\r\n  contextualMenuVisible: boolean;\r\n}\r\n\r\nexport interface ISelectedItemWithContextMenuProps extends IBaseProps {\r\n  renderedItem: JSX.Element;\r\n  beginEditing?: (item: IExtendedPersonaProps) => void;\r\n  menuItems: IContextualMenuItem[];\r\n  item: IExtendedPersonaProps;\r\n}\r\n\r\nexport class SelectedItemWithContextMenu extends BaseComponent<ISelectedItemWithContextMenuProps, IPeoplePickerItemState> {\r\n  protected itemElement: React.RefObject<HTMLDivElement> = React.createRef<HTMLDivElement>();\r\n\r\n  constructor(props: ISelectedItemWithContextMenuProps) {\r\n    super(props);\r\n    this.state = { contextualMenuVisible: false };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div ref={this.itemElement} onContextMenu={this._onClick}>\r\n        {this.props.renderedItem}\r\n        {this.state.contextualMenuVisible ? (\r\n          <ContextualMenu\r\n            items={this.props.menuItems}\r\n            shouldFocusOnMount={true}\r\n            target={this.itemElement.current}\r\n            onDismiss={this._onCloseContextualMenu}\r\n            directionalHint={DirectionalHint.bottomLeftEdge}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onClick = (ev: React.MouseEvent<HTMLElement>): void => {\r\n    ev.preventDefault();\r\n    if (this.props.beginEditing && !this.props.item.isValid) {\r\n      this.props.beginEditing(this.props.item);\r\n    } else {\r\n      this.setState({ contextualMenuVisible: true });\r\n    }\r\n  };\r\n\r\n  private _onCloseContextualMenu = (ev: Event): void => {\r\n    this.setState({ contextualMenuVisible: false });\r\n  };\r\n}\r\n"]}