{"version":3,"file":"SelectedPeopleList.Basic.Example.js","sourceRoot":"../src/","sources":["components/SelectedItemsList/examples/SelectedPeopleList.Basic.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\n\r\nimport { PrimaryButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { people, groupOne, groupTwo } from '../../../ExtendedPicker';\r\nimport { IExtendedPersonaProps, SelectedPeopleList, ISelectedPeopleItemProps } from '../SelectedPeopleList/SelectedPeopleList';\r\nimport { ExtendedSelectedItem } from '../SelectedPeopleList/Items/ExtendedSelectedItem';\r\nimport { Selection } from 'office-ui-fabric-react/lib/Selection';\r\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\r\n\r\nexport interface IPeopleSelectedItemsListExampleState {\r\n  currentSelectedItems: IExtendedPersonaProps[];\r\n  controlledComponent: boolean;\r\n}\r\n\r\nexport class PeopleSelectedItemsListExample extends React.Component<{}, IPeopleSelectedItemsListExampleState> {\r\n  private _selectionList: SelectedPeopleList;\r\n  private index: number;\r\n  private selection: Selection = new Selection({ onSelectionChanged: () => this._onSelectionChange() });\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      controlledComponent: false,\r\n      currentSelectedItems: [people[40]]\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div className={'ms-BasePicker-text'}>\r\n        <Toggle label=\"Controlled component\" defaultChecked={false} onChange={this._toggleControlledComponent} />\r\n        <PrimaryButton text=\"Add another item\" onClick={this._onAddItemButtonClicked} />\r\n        {this._renderExtendedPicker()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _toggleControlledComponent = (ev: React.MouseEvent<HTMLElement>, toggleState: boolean): void => {\r\n    this.setState({ controlledComponent: toggleState });\r\n  };\r\n\r\n  private _renderExtendedPicker(): JSX.Element {\r\n    return (\r\n      <div>\r\n        <SelectedPeopleList\r\n          key={'normal'}\r\n          removeButtonAriaLabel={'Remove'}\r\n          defaultSelectedItems={[people[40]]}\r\n          selectedItems={this.state.controlledComponent ? this.state.currentSelectedItems : undefined}\r\n          componentRef={this._setComponentRef}\r\n          onCopyItems={this._onCopyItems}\r\n          onExpandGroup={this._onExpandItem}\r\n          copyMenuItemText={'Copy'}\r\n          removeMenuItemText={'Remove'}\r\n          selection={this.selection}\r\n          onRenderItem={this._onRenderItem}\r\n          onItemDeleted={this.state.controlledComponent ? this._onItemDeleted : undefined}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderItem = (props: ISelectedPeopleItemProps): JSX.Element => {\r\n    return <ExtendedSelectedItem {...props} />;\r\n  };\r\n\r\n  private _setComponentRef = (component: SelectedPeopleList): void => {\r\n    this._selectionList = component;\r\n  };\r\n\r\n  private _onAddItemButtonClicked = (): void => {\r\n    if (this._selectionList) {\r\n      if (!this.index) {\r\n        this.index = 0;\r\n      }\r\n\r\n      if (this.state.controlledComponent) {\r\n        this.setState({ currentSelectedItems: [...this.state.currentSelectedItems, people[this.index]] });\r\n      } else {\r\n        this._selectionList.addItems([people[this.index]]);\r\n      }\r\n      this.index++;\r\n    }\r\n  };\r\n\r\n  private _onItemDeleted = (item: IExtendedPersonaProps): void => {\r\n    const indexToRemove = this.state.currentSelectedItems.indexOf(item);\r\n    this.setState({\r\n      currentSelectedItems: this.state.currentSelectedItems\r\n        .slice(0, indexToRemove)\r\n        .concat(this.state.currentSelectedItems.slice(indexToRemove + 1))\r\n    });\r\n  };\r\n\r\n  private _onExpandItem = (item: IExtendedPersonaProps): void => {\r\n    if (this.state.controlledComponent) {\r\n      const indexToExpand = this.state.currentSelectedItems.indexOf(item);\r\n      this.setState({\r\n        currentSelectedItems: this.state.currentSelectedItems\r\n          .slice(0, indexToExpand)\r\n          .concat(this._getExpandedGroupItems(item as any))\r\n          .concat(this.state.currentSelectedItems.slice(indexToExpand + 1))\r\n      });\r\n    } else {\r\n      this._selectionList.replaceItem(item, this._getExpandedGroupItems(item as any));\r\n    }\r\n  };\r\n\r\n  private _onSelectionChange(): void {\r\n    this.forceUpdate();\r\n  }\r\n\r\n  private _onCopyItems(items: IExtendedPersonaProps[]): string {\r\n    let copyText = '';\r\n    items.forEach((item: IExtendedPersonaProps, index: number) => {\r\n      copyText += item.text;\r\n\r\n      if (index < items.length - 1) {\r\n        copyText += ', ';\r\n      }\r\n    });\r\n\r\n    return copyText;\r\n  }\r\n\r\n  private _getExpandedGroupItems(item: IExtendedPersonaProps): IExtendedPersonaProps[] {\r\n    switch (item.text) {\r\n      case 'Group One':\r\n        return groupOne;\r\n      case 'Group Two':\r\n        return groupTwo;\r\n      default:\r\n        return [];\r\n    }\r\n  }\r\n}\r\n"]}