{"version":3,"file":"Overlay.Light.Example.js","sourceRoot":"../src/","sources":["components/Overlay/examples/Overlay.Light.Example.tsx"],"names":[],"mappings":";;;IAYA;QAAyC,+CAKxC;QACC,6BAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAGb;YAqBO,yBAAmB,GAAG;gBAC5B,KAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,KAAK,EAAE,CAAC,CAAC;YAC7C,CAAC,CAAC;YAEM,oBAAc,GAAG;gBACvB,KAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,CAAC,KAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC,CAAC;YACpE,CAAC,CAAC;YA5BA,KAAI,CAAC,KAAK,GAAG,EAAE,gBAAgB,EAAE,KAAK,EAAE,CAAC;;QAC3C,CAAC;QAEM,oCAAM,GAAb;YACU,IAAA,8CAAgB,CAAgB;YACxC,IAAM,aAAa,GAAG,8BAAkB,EAA6B,CAAC;YACtE,IAAM,UAAU,GAAG,aAAa,CAAC,kCAAS,EAAE,EAAE,CAAC,CAAC;YAEhD,OAAO,CACL;gBACE,oBAAC,sBAAa,IAAC,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,EAAC,kBAAkB,GAAG;gBACtE,gBAAgB,IAAI,CACnB,oBAAC,iBAAO,IAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB;oBACxC,6BAAK,SAAS,EAAE,UAAU,CAAC,IAAI;wBAC7B,kEAAuC,CACnC,CACE,CACX,CACG,CACP,CAAC;QACJ,CAAC;QASH,0BAAC;IAAD,CAAC,AAtCD,CAAyC,KAAK,CAAC,SAAS,GAsCvD;IAtCY,kDAAmB","sourcesContent":["import * as React from 'react';\r\nimport { IStyleFunction, classNamesFunction } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\n\r\nimport { Overlay } from '../Overlay';\r\n\r\nimport { getStyles, IOverlayExampleStyles } from './Overlay.Example.styles';\r\n\r\nexport interface IOverlayLightExampleProps {\r\n  getStyles?: IStyleFunction<{}, IOverlayExampleStyles>;\r\n}\r\n\r\nexport class OverlayLightExample extends React.Component<\r\n  {},\r\n  {\r\n    isOverlayVisible: boolean;\r\n  }\r\n> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = { isOverlayVisible: false };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { isOverlayVisible } = this.state;\r\n    const getClassNames = classNamesFunction<{}, IOverlayExampleStyles>();\r\n    const classNames = getClassNames(getStyles, {});\r\n\r\n    return (\r\n      <div>\r\n        <DefaultButton onClick={this._toggleOverlay} text=\"Show the overlay\" />\r\n        {isOverlayVisible && (\r\n          <Overlay onClick={this._setVisibilityFalse}>\r\n            <div className={classNames.root}>\r\n              <p>I am content within the overlay.</p>\r\n            </div>\r\n          </Overlay>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _setVisibilityFalse = (): void => {\r\n    this.setState({ isOverlayVisible: false });\r\n  };\r\n\r\n  private _toggleOverlay = (): void => {\r\n    this.setState({ isOverlayVisible: !this.state.isOverlayVisible });\r\n  };\r\n}\r\n"]}