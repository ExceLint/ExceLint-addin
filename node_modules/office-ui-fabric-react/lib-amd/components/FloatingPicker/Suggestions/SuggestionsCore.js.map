{"version":3,"file":"SuggestionsCore.js","sourceRoot":"../src/","sources":["components/FloatingPicker/Suggestions/SuggestionsCore.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, css, autobind } from '../../../Utilities';\r\nimport { ISuggestionItemProps, SuggestionsItem, ISuggestionModel } from '../../../Pickers';\r\nimport { ISuggestionsCoreProps } from './Suggestions.types';\r\nimport * as stylesImport from './SuggestionsCore.scss';\r\n// tslint:disable-next-line:no-any\r\nconst styles: any = stylesImport;\r\n\r\n/**\r\n * Class when used with SuggestionsStore, renders a basic suggestions control\r\n */\r\nexport class SuggestionsCore<T> extends BaseComponent<ISuggestionsCoreProps<T>, {}> {\r\n  public currentIndex: number;\r\n  public currentSuggestion: ISuggestionModel<T> | undefined;\r\n  protected _selectedElement: HTMLDivElement;\r\n  private SuggestionsItemOfProperType: new (props: ISuggestionItemProps<T>) => SuggestionsItem<T> = SuggestionsItem;\r\n\r\n  constructor(suggestionsProps: ISuggestionsCoreProps<T>) {\r\n    super(suggestionsProps);\r\n    this.currentIndex = -1;\r\n  }\r\n\r\n  /**\r\n   * Increments the selected suggestion index\r\n   */\r\n  public nextSuggestion(): boolean {\r\n    const { suggestions } = this.props;\r\n\r\n    if (suggestions && suggestions.length > 0) {\r\n      if (this.currentIndex === -1) {\r\n        this.setSelectedSuggestion(0);\r\n        return true;\r\n      } else if (this.currentIndex < suggestions.length - 1) {\r\n        this.setSelectedSuggestion(this.currentIndex + 1);\r\n        return true;\r\n      } else if (this.props.shouldLoopSelection && this.currentIndex === suggestions.length - 1) {\r\n        this.setSelectedSuggestion(0);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Decrements the selected suggestion index\r\n   */\r\n  public previousSuggestion(): boolean {\r\n    const { suggestions } = this.props;\r\n\r\n    if (suggestions && suggestions.length > 0) {\r\n      if (this.currentIndex === -1) {\r\n        this.setSelectedSuggestion(suggestions.length - 1);\r\n        return true;\r\n      } else if (this.currentIndex > 0) {\r\n        this.setSelectedSuggestion(this.currentIndex - 1);\r\n        return true;\r\n      } else if (this.props.shouldLoopSelection && this.currentIndex === 0) {\r\n        this.setSelectedSuggestion(suggestions.length - 1);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public get selectedElement(): HTMLDivElement | undefined {\r\n    return this._selectedElement;\r\n  }\r\n\r\n  public getCurrentItem(): ISuggestionModel<T> {\r\n    return this.props.suggestions[this.currentIndex];\r\n  }\r\n\r\n  public getSuggestionAtIndex(index: number): ISuggestionModel<T> {\r\n    return this.props.suggestions[index];\r\n  }\r\n\r\n  public hasSuggestionSelected(): boolean {\r\n    return this.currentIndex !== -1 && this.currentIndex < this.props.suggestions.length;\r\n  }\r\n\r\n  public removeSuggestion(index: number): void {\r\n    this.props.suggestions.splice(index, 1);\r\n  }\r\n\r\n  public deselectAllSuggestions(): void {\r\n    if (this.currentIndex > -1 && this.props.suggestions[this.currentIndex]) {\r\n      this.props.suggestions[this.currentIndex].selected = false;\r\n      this.currentIndex = -1;\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  public setSelectedSuggestion(index: number): void {\r\n    const { suggestions } = this.props;\r\n\r\n    if (index > suggestions.length - 1 || index < 0) {\r\n      this.currentIndex = 0;\r\n      this.currentSuggestion!.selected = false;\r\n      this.currentSuggestion = suggestions[0];\r\n      this.currentSuggestion.selected = true;\r\n    } else {\r\n      if (this.currentIndex > -1 && suggestions[this.currentIndex]) {\r\n        suggestions[this.currentIndex].selected = false;\r\n      }\r\n      suggestions[index].selected = true;\r\n      this.currentIndex = index;\r\n      this.currentSuggestion = suggestions[index];\r\n    }\r\n\r\n    this.forceUpdate();\r\n  }\r\n\r\n  public componentDidUpdate(): void {\r\n    this.scrollSelected();\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      onRenderSuggestion,\r\n      suggestionsItemClassName,\r\n      resultsMaximumNumber,\r\n      showRemoveButtons,\r\n      suggestionsContainerAriaLabel\r\n    } = this.props;\r\n    const TypedSuggestionsItem = this.SuggestionsItemOfProperType;\r\n    let { suggestions } = this.props;\r\n\r\n    if (resultsMaximumNumber) {\r\n      suggestions = suggestions.slice(0, resultsMaximumNumber);\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={css('ms-Suggestions-container', styles.suggestionsContainer)}\r\n        id=\"suggestion-list\"\r\n        role=\"list\"\r\n        aria-label={suggestionsContainerAriaLabel}\r\n      >\r\n        {suggestions.map((suggestion: ISuggestionModel<T>, index: number) => (\r\n          <div\r\n            ref={this._resolveRef(suggestion.selected || index === this.currentIndex ? '_selectedElement' : '')}\r\n            // tslint:disable\r\n            key={(suggestion.item as any)['key'] ? (suggestion.item as any)['key'] : index}\r\n            // tslint:enable\r\n            id={'sug-' + index}\r\n            role=\"listitem\"\r\n            aria-label={suggestion.ariaLabel}\r\n          >\r\n            <TypedSuggestionsItem\r\n              id={'sug-item' + index}\r\n              suggestionModel={suggestion}\r\n              // tslint:disable-next-line:no-any\r\n              RenderSuggestion={onRenderSuggestion as any}\r\n              onClick={this._onClickTypedSuggestionsItem(suggestion.item, index)}\r\n              className={suggestionsItemClassName}\r\n              showRemoveButton={showRemoveButtons}\r\n              onRemoveItem={this._onRemoveTypedSuggestionsItem(suggestion.item, index)}\r\n              isSelectedOverride={index === this.currentIndex}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // TODO get the element to scroll into view properly regardless of direction.\r\n  public scrollSelected(): void {\r\n    if (this._selectedElement && this._selectedElement.scrollIntoView !== undefined) {\r\n      this._selectedElement.scrollIntoView(false);\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onClickTypedSuggestionsItem(item: T, index: number): (ev: React.MouseEvent<HTMLElement>) => void {\r\n    return (ev: React.MouseEvent<HTMLElement>): void => {\r\n      this.props.onSuggestionClick(ev, item, index);\r\n    };\r\n  }\r\n\r\n  @autobind\r\n  private _onRemoveTypedSuggestionsItem(item: T, index: number): (ev: React.MouseEvent<HTMLElement>) => void {\r\n    return (ev: React.MouseEvent<HTMLElement>): void => {\r\n      const onSuggestionRemove = this.props.onSuggestionRemove!;\r\n      onSuggestionRemove(ev, item, index);\r\n      ev.stopPropagation();\r\n    };\r\n  }\r\n}\r\n"]}