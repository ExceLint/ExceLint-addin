{"version":3,"file":"FloatingPeoplePicker.Basic.Example.js","sourceRoot":"../src/","sources":["components/FloatingPicker/PeoplePicker/examples/FloatingPeoplePicker.Basic.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\n\r\nimport { IPersonaProps } from 'office-ui-fabric-react/lib/Persona';\r\nimport { SuggestionsStore } from '../../Suggestions/SuggestionsStore';\r\nimport { IBaseFloatingPicker, IBaseFloatingPickerSuggestionProps, FloatingPeoplePicker } from 'office-ui-fabric-react/lib/FloatingPicker';\r\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\r\n// Helper imports to generate data for this particular examples. Not exported by any package.\r\nimport { people, mru } from '../../../ExtendedPicker/examples/PeopleExampleData';\r\n\r\nexport interface IPeoplePickerExampleState {\r\n  currentPicker?: number | string;\r\n  peopleList: IPersonaProps[];\r\n  mostRecentlyUsed: IPersonaProps[];\r\n  currentSelectedItems?: IPersonaProps[];\r\n  searchValue: string;\r\n}\r\n\r\nexport class FloatingPeoplePickerTypesExample extends React.Component<{}, IPeoplePickerExampleState> {\r\n  private _picker: IBaseFloatingPicker;\r\n  private _inputElement: HTMLInputElement;\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      peopleList: people,\r\n      mostRecentlyUsed: mru,\r\n      currentSelectedItems: [],\r\n      searchValue: ''\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div>\r\n        <div style={{ width: 208 }} ref={this._setInputElementRef}>\r\n          <SearchBox\r\n            placeholder={'Search a person'}\r\n            onChange={this._onSearchChange}\r\n            value={this.state.searchValue}\r\n            onFocus={this._onFocus}\r\n          />\r\n        </div>\r\n        {this._renderFloatingPicker()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onFocus = (): void => {\r\n    if (this._picker) {\r\n      this._picker.showPicker();\r\n    }\r\n  };\r\n\r\n  private _setInputElementRef = (ref: HTMLDivElement) => {\r\n    if (ref && ref.getElementsByClassName('ms-SearchBox-field').length > 0) {\r\n      this._inputElement = ref.getElementsByClassName('ms-SearchBox-field')[0] as HTMLInputElement;\r\n    }\r\n  };\r\n\r\n  private _renderFloatingPicker(): JSX.Element {\r\n    const suggestionProps: IBaseFloatingPickerSuggestionProps = {\r\n      footerItemsProps: [\r\n        {\r\n          renderItem: () => {\r\n            return <div>Showing {this._picker.suggestions.length} results</div>;\r\n          },\r\n          shouldShow: () => {\r\n            return this._picker.suggestions.length > 0;\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    return (\r\n      <FloatingPeoplePicker\r\n        suggestionsStore={new SuggestionsStore<IPersonaProps>()}\r\n        onResolveSuggestions={this._onFilterChanged}\r\n        getTextFromItem={this._getTextFromItem}\r\n        pickerSuggestionsProps={suggestionProps}\r\n        key={'normal'}\r\n        onRemoveSuggestion={this._onRemoveSuggestion}\r\n        onValidateInput={this._validateInput}\r\n        componentRef={this._setComponentRef}\r\n        onChange={this._onPickerChange}\r\n        inputElement={this._inputElement}\r\n        resolveDelay={300}\r\n      />\r\n    );\r\n  }\r\n\r\n  private _setComponentRef = (component: IBaseFloatingPicker): void => {\r\n    this._picker = component;\r\n  };\r\n\r\n  private _onSearchChange = (newValue: string): void => {\r\n    if (newValue !== this.state.searchValue) {\r\n      this.setState({ searchValue: newValue });\r\n      this._picker.onQueryStringChanged(newValue);\r\n    }\r\n  };\r\n\r\n  private _onPickerChange = (selectedSuggestion: IPersonaProps): void => {\r\n    this.setState({ searchValue: selectedSuggestion.text ? selectedSuggestion.text : '' });\r\n    this._picker.hidePicker();\r\n  };\r\n\r\n  private _onRemoveSuggestion = (item: IPersonaProps): void => {\r\n    const { peopleList, mostRecentlyUsed: mruState } = this.state;\r\n    const indexPeopleList: number = peopleList.indexOf(item);\r\n    const indexMostRecentlyUsed: number = mruState.indexOf(item);\r\n\r\n    if (indexPeopleList >= 0) {\r\n      const newPeople: IPersonaProps[] = peopleList.slice(0, indexPeopleList).concat(peopleList.slice(indexPeopleList + 1));\r\n      this.setState({ peopleList: newPeople });\r\n    }\r\n\r\n    if (indexMostRecentlyUsed >= 0) {\r\n      const newSuggestedPeople: IPersonaProps[] = mruState\r\n        .slice(0, indexMostRecentlyUsed)\r\n        .concat(mruState.slice(indexMostRecentlyUsed + 1));\r\n      this.setState({ mostRecentlyUsed: newSuggestedPeople });\r\n    }\r\n  };\r\n\r\n  private _onFilterChanged = (filterText: string, currentPersonas: IPersonaProps[]): IPersonaProps[] => {\r\n    if (filterText) {\r\n      let filteredPersonas: IPersonaProps[] = this._filterPersonasByText(filterText);\r\n\r\n      filteredPersonas = this._removeDuplicates(filteredPersonas, currentPersonas);\r\n      return filteredPersonas;\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  private _getTextFromItem(persona: IPersonaProps): string {\r\n    return persona.text as string;\r\n  }\r\n\r\n  private _listContainsPersona(persona: IPersonaProps, personas: IPersonaProps[]): boolean {\r\n    if (!personas || !personas.length || personas.length === 0) {\r\n      return false;\r\n    }\r\n    return personas.filter((item: IPersonaProps) => item.text === persona.text).length > 0;\r\n  }\r\n\r\n  private _filterPersonasByText(filterText: string): IPersonaProps[] {\r\n    return this.state.peopleList.filter((item: IPersonaProps) => this._doesTextStartWith(item.text as string, filterText));\r\n  }\r\n\r\n  private _doesTextStartWith(text: string, filterText: string): boolean {\r\n    return text.toLowerCase().indexOf(filterText.toLowerCase()) === 0;\r\n  }\r\n\r\n  private _removeDuplicates(personas: IPersonaProps[], possibleDupes: IPersonaProps[]): IPersonaProps[] {\r\n    return personas.filter((persona: IPersonaProps) => !this._listContainsPersona(persona, possibleDupes));\r\n  }\r\n\r\n  private _validateInput = (input: string): boolean => {\r\n    if (input.indexOf('@') !== -1) {\r\n      return true;\r\n    } else if (input.length > 1) {\r\n      return false;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n}\r\n"]}