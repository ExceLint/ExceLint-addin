{"version":3,"file":"SelectedItemDefault.js","sourceRoot":"../src/","sources":["components/FloatingPicker/PeoplePicker/PeoplePickerItems/SelectedItemDefault.tsx"],"names":[],"mappings":";;;IAQA,kCAAkC;IAClC,IAAM,MAAM,GAAQ,YAAY,CAAC;IAEpB,QAAA,mBAAmB,GAAmD,UAAC,qBAA6C;QACvH,IAAA,iCAAI,EAAE,iDAAY,EAAE,mCAAK,EAAE,yCAAQ,EAAE,mEAAqB,CAA2B;QAE7F,IAAM,MAAM,GAAG,iBAAK,EAAE,CAAC;QACvB,IAAM,iBAAiB,GAAG,UAAC,UAAoC;YAC7D,OAAO;gBACL,IAAI,UAAU,EAAE;oBACd,UAAU,EAAE,CAAC;iBACd;YACH,CAAC,CAAC;QACJ,CAAC,CAAC;QAEF,OAAO,CACL,6BACE,SAAS,EAAE,eAAG,CACZ,4BAA4B,EAC5B,MAAM,CAAC,gBAAgB,YACrB,GAAC,cAAc,GAAG,MAAM,CAAC,0BAA0B,IAAG,QAAQ,iBAC9D,GAAC,aAAa,GAAG,MAAM,CAAC,eAAe,IAAG,CAAC,IAAI,CAAC,OAAO,MAC1D,uBACkB,IAAI,2BACA,IAAI,0BACL,KAAK,EAC3B,IAAI,EAAE,UAAU,qBACC,sBAAsB,GAAG,MAAM;YAEhD,6BAAK,SAAS,EAAE,eAAG,CAAC,uBAAuB,EAAE,MAAM,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,sBAAsB,GAAG,MAAM;gBACnG,oBAAC,iBAAO,uBAAK,IAAI,IAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,yBAAe,CAAC,IAAI,EAAE,IAAI,EAAE,qBAAW,CAAC,MAAM,IAAI,CACzH;YACN,oBAAC,mBAAU,IACT,OAAO,EAAE,iBAAiB,CAAC,YAAY,CAAC,EACxC,SAAS,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAC9D,SAAS,EAAE,eAAG,CAAC,4BAA4B,EAAE,MAAM,CAAC,YAAY,CAAC,EACjE,SAAS,EAAE,qBAAqB,GAChC,CACE,CACP,CAAC;;IACJ,CAAC,CAAC","sourcesContent":["/* tslint:disable */\r\nimport * as React from 'react';\r\n/* tslint:enable */\r\nimport { css, getId } from '../../../../Utilities';\r\nimport { Persona, PersonaSize, PersonaPresence } from '../../../../Persona';\r\nimport { IPeoplePickerItemProps } from '../../../../ExtendedPicker';\r\nimport { IconButton } from '../../../../Button';\r\nimport * as stylesImport from './PickerItemsDefault.scss';\r\n// tslint:disable-next-line:no-any\r\nconst styles: any = stylesImport;\r\n\r\nexport const SelectedItemDefault: (props: IPeoplePickerItemProps) => JSX.Element = (peoplePickerItemProps: IPeoplePickerItemProps) => {\r\n  const { item, onRemoveItem, index, selected, removeButtonAriaLabel } = peoplePickerItemProps;\r\n\r\n  const itemId = getId();\r\n  const onClickIconButton = (removeItem: (() => void) | undefined): (() => void) => {\r\n    return (): void => {\r\n      if (removeItem) {\r\n        removeItem();\r\n      }\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={css(\r\n        'ms-PickerPersona-container',\r\n        styles.personaContainer,\r\n        { ['is-selected ' + styles.personaContainerIsSelected]: selected },\r\n        { ['is-invalid ' + styles.validationError]: !item.isValid }\r\n      )}\r\n      data-is-focusable={true}\r\n      data-is-sub-focuszone={true}\r\n      data-selection-index={index}\r\n      role={'listitem'}\r\n      aria-labelledby={'selectedItemPersona-' + itemId}\r\n    >\r\n      <div className={css('ms-PickerItem-content', styles.itemContent)} id={'selectedItemPersona-' + itemId}>\r\n        <Persona {...item} presence={item.presence !== undefined ? item.presence : PersonaPresence.none} size={PersonaSize.size28} />\r\n      </div>\r\n      <IconButton\r\n        onClick={onClickIconButton(onRemoveItem)}\r\n        iconProps={{ iconName: 'Cancel', style: { fontSize: '12px' } }}\r\n        className={css('ms-PickerItem-removeButton', styles.removeButton)}\r\n        ariaLabel={removeButtonAriaLabel}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"]}