{"version":3,"file":"BaseFloatingPicker.js","sourceRoot":"../src/","sources":["components/FloatingPicker/BaseFloatingPicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport * as stylesImport from './BaseFloatingPicker.scss';\r\nimport { BaseComponent, css, KeyCodes } from '../../Utilities';\r\nimport { Callout, DirectionalHint } from '../../Callout';\r\nimport { IBaseFloatingPicker, IBaseFloatingPickerProps } from './BaseFloatingPicker.types';\r\nimport { ISuggestionModel } from '../../Pickers';\r\nimport { ISuggestionsControlProps } from './Suggestions/Suggestions.types';\r\nimport { SuggestionsControl } from './Suggestions/SuggestionsControl';\r\nimport { SuggestionsStore } from './Suggestions/SuggestionsStore';\r\n// tslint:disable-next-line:no-any\r\nconst styles: any = stylesImport;\r\n\r\nexport interface IBaseFloatingPickerState {\r\n  queryString: string;\r\n  suggestionsVisible?: boolean;\r\n  didBind: boolean;\r\n}\r\n\r\nexport class BaseFloatingPicker<T, P extends IBaseFloatingPickerProps<T>> extends BaseComponent<P, IBaseFloatingPickerState>\r\n  implements IBaseFloatingPicker {\r\n  protected selection: Selection;\r\n\r\n  protected root = React.createRef<HTMLDivElement>();\r\n  protected suggestionStore: SuggestionsStore<T>;\r\n  protected suggestionsControl: React.RefObject<SuggestionsControl<T>> = React.createRef();\r\n  protected SuggestionsControlOfProperType: new (props: ISuggestionsControlProps<T>) => SuggestionsControl<T> = SuggestionsControl as new (\r\n    props: ISuggestionsControlProps<T>\r\n  ) => SuggestionsControl<T>;\r\n  protected currentPromise: PromiseLike<T[]>;\r\n  protected isComponentMounted: boolean = false;\r\n\r\n  constructor(basePickerProps: P) {\r\n    super(basePickerProps);\r\n\r\n    this.suggestionStore = basePickerProps.suggestionsStore;\r\n    this.state = {\r\n      queryString: '',\r\n      didBind: false\r\n    };\r\n  }\r\n\r\n  public get inputText(): string {\r\n    return this.state.queryString;\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public get suggestions(): any[] {\r\n    return this.suggestionStore.suggestions;\r\n  }\r\n\r\n  public forceResolveSuggestion(): void {\r\n    if (this.suggestionsControl.current && this.suggestionsControl.current.hasSuggestionSelected()) {\r\n      this.completeSuggestion();\r\n    } else {\r\n      this._onValidateInput();\r\n    }\r\n  }\r\n\r\n  public get currentSelectedSuggestionIndex(): number {\r\n    return this.suggestionsControl.current ? this.suggestionsControl.current.currentSuggestionIndex : -1;\r\n  }\r\n\r\n  public get isSuggestionsShown(): boolean {\r\n    return this.state.suggestionsVisible === undefined ? false : this.state.suggestionsVisible;\r\n  }\r\n\r\n  public onQueryStringChanged = (queryString: string): void => {\r\n    if (queryString !== this.state.queryString) {\r\n      this.setState({\r\n        queryString: queryString\r\n      });\r\n\r\n      if (this.props.onInputChanged) {\r\n        (this.props.onInputChanged as (filter: string) => void)(queryString);\r\n      }\r\n\r\n      this.updateValue(queryString);\r\n    }\r\n  };\r\n\r\n  public hidePicker = (): void => {\r\n    if (this.props.onSuggestionsHidden && this.isSuggestionsShown) {\r\n      this.props.onSuggestionsHidden();\r\n    }\r\n\r\n    this.setState({\r\n      suggestionsVisible: false\r\n    });\r\n  };\r\n\r\n  public showPicker = (updateValue: boolean = false): void => {\r\n    if (this.props.onSuggestionsShown && !this.isSuggestionsShown) {\r\n      this.props.onSuggestionsShown();\r\n    }\r\n\r\n    this.setState({\r\n      suggestionsVisible: true\r\n    });\r\n\r\n    // Update the suggestions if updateValue == true\r\n    const value = this.props.inputElement ? this.props.inputElement.value : '';\r\n    if (updateValue) {\r\n      this.updateValue(value);\r\n    }\r\n  };\r\n\r\n  public componentDidMount(): void {\r\n    this._bindToInputElement();\r\n    this.isComponentMounted = true;\r\n\r\n    this._onResolveSuggestions = this._async.debounce(this._onResolveSuggestions, this.props.resolveDelay);\r\n  }\r\n\r\n  public componentDidUpdate(): void {\r\n    this._bindToInputElement();\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    this._unbindFromInputElement();\r\n    this.isComponentMounted = false;\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IBaseFloatingPickerProps<T>): void {\r\n    if (newProps.suggestionItems) {\r\n      this.updateSuggestions(newProps.suggestionItems);\r\n    }\r\n  }\r\n\r\n  public completeSuggestion = (): void => {\r\n    if (this.suggestionsControl.current && this.suggestionsControl.current.hasSuggestionSelected()) {\r\n      this.onChange(this.suggestionsControl.current.currentSuggestion!.item);\r\n    }\r\n  };\r\n\r\n  public updateSuggestions(suggestions: T[], forceUpdate: boolean = false): void {\r\n    this.suggestionStore.updateSuggestions(suggestions);\r\n\r\n    if (forceUpdate) {\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { className } = this.props;\r\n    return (\r\n      <div ref={this.root} className={css('ms-BasePicker ms-BaseFloatingPicker', className ? className : '')}>\r\n        {this.renderSuggestions()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  protected renderSuggestions(): JSX.Element | null {\r\n    const TypedSuggestionsControl = this.SuggestionsControlOfProperType;\r\n    return this.state.suggestionsVisible ? (\r\n      <Callout\r\n        className={styles.callout}\r\n        isBeakVisible={false}\r\n        gapSpace={5}\r\n        target={this.props.inputElement}\r\n        onDismiss={this.hidePicker}\r\n        directionalHint={DirectionalHint.bottomLeftEdge}\r\n        directionalHintForRTL={DirectionalHint.bottomRightEdge}\r\n        calloutWidth={this.props.calloutWidth ? this.props.calloutWidth : 0}\r\n      >\r\n        <TypedSuggestionsControl\r\n          onRenderSuggestion={this.props.onRenderSuggestionsItem}\r\n          onSuggestionClick={this.onSuggestionClick}\r\n          onSuggestionRemove={this.onSuggestionRemove}\r\n          suggestions={this.suggestionStore.getSuggestions()}\r\n          componentRef={this.suggestionsControl}\r\n          completeSuggestion={this.completeSuggestion}\r\n          shouldLoopSelection={false}\r\n          {...this.props.pickerSuggestionsProps}\r\n        />\r\n      </Callout>\r\n    ) : null;\r\n  }\r\n\r\n  protected onSelectionChange(): void {\r\n    this.forceUpdate();\r\n  }\r\n\r\n  protected updateValue(updatedValue: string): void {\r\n    if (updatedValue === '') {\r\n      this.updateSuggestionWithZeroState();\r\n    } else {\r\n      this._onResolveSuggestions(updatedValue);\r\n    }\r\n  }\r\n\r\n  protected updateSuggestionWithZeroState(): void {\r\n    if (this.props.onZeroQuerySuggestion) {\r\n      const onEmptyInputFocus = this.props.onZeroQuerySuggestion as (selectedItems?: T[]) => T[] | PromiseLike<T[]>;\r\n      const suggestions: T[] | PromiseLike<T[]> = onEmptyInputFocus(this.props.selectedItems);\r\n      this.updateSuggestionsList(suggestions);\r\n    } else {\r\n      this.hidePicker();\r\n    }\r\n  }\r\n\r\n  protected updateSuggestionsList(suggestions: T[] | PromiseLike<T[]>): void {\r\n    const suggestionsArray: T[] = suggestions as T[];\r\n    const suggestionsPromiseLike: PromiseLike<T[]> = suggestions as PromiseLike<T[]>;\r\n\r\n    // Check to see if the returned value is an array, if it is then just pass it into the next function.\r\n    // If the returned value is not an array then check to see if it's a promise or PromiseLike. If it is then resolve it asynchronously.\r\n    if (Array.isArray(suggestionsArray)) {\r\n      this.updateSuggestions(suggestionsArray, true /*forceUpdate*/);\r\n    } else if (suggestionsPromiseLike && suggestionsPromiseLike.then) {\r\n      // Ensure that the promise will only use the callback if it was the most recent one.\r\n      const promise: PromiseLike<T[]> = (this.currentPromise = suggestionsPromiseLike);\r\n      promise.then((newSuggestions: T[]) => {\r\n        // Only update if the next promise has not yet resolved and\r\n        // the floating picker is still mounted.\r\n        if (promise === this.currentPromise && this.isComponentMounted) {\r\n          this.updateSuggestions(newSuggestions, true /*forceUpdate*/);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  protected onChange(item: T): void {\r\n    if (this.props.onChange) {\r\n      (this.props.onChange as ((items: T) => void))(item);\r\n    }\r\n  }\r\n\r\n  protected onSuggestionClick = (ev: React.MouseEvent<HTMLElement>, item: T, index: number): void => {\r\n    this.onChange(item);\r\n    this._updateSuggestionsVisible(false /*shouldShow*/);\r\n  };\r\n\r\n  protected onSuggestionRemove = (ev: React.MouseEvent<HTMLElement>, item: T, index: number): void => {\r\n    if (this.props.onRemoveSuggestion) {\r\n      (this.props.onRemoveSuggestion as ((item: T) => void))(item);\r\n    }\r\n\r\n    if (this.suggestionsControl.current) {\r\n      this.suggestionsControl.current.removeSuggestion(index);\r\n    }\r\n  };\r\n\r\n  protected onKeyDown = (ev: MouseEvent): void => {\r\n    if (\r\n      !this.state.suggestionsVisible ||\r\n      (this.props.inputElement && !(this.props.inputElement as HTMLElement).contains(ev.target as HTMLElement))\r\n    ) {\r\n      return;\r\n    }\r\n    const keyCode = ev.which;\r\n    switch (keyCode) {\r\n      case KeyCodes.escape:\r\n        this.hidePicker();\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        break;\r\n\r\n      case KeyCodes.tab:\r\n      case KeyCodes.enter:\r\n        if (!ev.shiftKey && !ev.ctrlKey && this.suggestionsControl.current && this.suggestionsControl.current.handleKeyDown(keyCode)) {\r\n          ev.preventDefault();\r\n          ev.stopPropagation();\r\n        } else {\r\n          this._onValidateInput();\r\n        }\r\n        break;\r\n\r\n      case KeyCodes.del:\r\n        if (\r\n          this.props.onRemoveSuggestion &&\r\n          this.suggestionsControl.current &&\r\n          this.suggestionsControl.current.hasSuggestionSelected &&\r\n          this.suggestionsControl.current.currentSuggestion &&\r\n          ev.shiftKey\r\n        ) {\r\n          (this.props.onRemoveSuggestion as ((item: T) => void))(this.suggestionsControl.current.currentSuggestion!.item);\r\n\r\n          this.suggestionsControl.current.removeSuggestion();\r\n          this.forceUpdate();\r\n          ev.stopPropagation();\r\n        }\r\n        break;\r\n\r\n      case KeyCodes.up:\r\n        if (this.suggestionsControl.current && this.suggestionsControl.current.handleKeyDown(keyCode)) {\r\n          ev.preventDefault();\r\n          ev.stopPropagation();\r\n          this._updateActiveDescendant();\r\n        }\r\n        break;\r\n\r\n      case KeyCodes.down:\r\n        if (this.suggestionsControl.current && this.suggestionsControl.current.handleKeyDown(keyCode)) {\r\n          ev.preventDefault();\r\n          ev.stopPropagation();\r\n          this._updateActiveDescendant();\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  private _updateActiveDescendant(): void {\r\n    if (this.props.inputElement && this.suggestionsControl.current && this.suggestionsControl.current.selectedElement) {\r\n      const selectedElId = this.suggestionsControl.current.selectedElement.getAttribute('id');\r\n      if (selectedElId) {\r\n        this.props.inputElement.setAttribute('aria-activedescendant', selectedElId as string);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _onResolveSuggestions(updatedValue: string): void {\r\n    const suggestions: T[] | PromiseLike<T[]> | null = this.props.onResolveSuggestions(updatedValue, this.props.selectedItems);\r\n\r\n    this._updateSuggestionsVisible(true /*shouldShow*/);\r\n    if (suggestions !== null) {\r\n      this.updateSuggestionsList(suggestions);\r\n    }\r\n  }\r\n\r\n  private _onValidateInput = (): void => {\r\n    if (this.state.queryString && this.props.onValidateInput && this.props.createGenericItem) {\r\n      const itemToConvert: ISuggestionModel<T> = (this.props.createGenericItem as ((\r\n        input: string,\r\n        isValid: boolean\r\n      ) => ISuggestionModel<T>))(\r\n        this.state.queryString,\r\n        (this.props.onValidateInput as ((input: string) => boolean))(this.state.queryString)\r\n      );\r\n      const convertedItems = this.suggestionStore.convertSuggestionsToSuggestionItems([itemToConvert]);\r\n      this.onChange(convertedItems[0].item);\r\n    }\r\n  };\r\n\r\n  private _updateSuggestionsVisible(shouldShow: boolean): void {\r\n    if (shouldShow) {\r\n      this.showPicker();\r\n    } else {\r\n      this.hidePicker();\r\n    }\r\n  }\r\n\r\n  private _bindToInputElement(): void {\r\n    if (this.props.inputElement && !this.state.didBind) {\r\n      this.props.inputElement.addEventListener('keydown', this.onKeyDown);\r\n      this.setState({ didBind: true });\r\n    }\r\n  }\r\n\r\n  private _unbindFromInputElement(): void {\r\n    if (this.props.inputElement && this.state.didBind) {\r\n      this.props.inputElement.removeEventListener('keydown', this.onKeyDown);\r\n      this.setState({ didBind: false });\r\n    }\r\n  }\r\n}\r\n"]}