{"version":3,"file":"ActivityItem.types.js","sourceRoot":"../src/","sources":["components/ActivityItem/ActivityItem.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\r\nimport { IStyle } from '../../Styling';\r\nimport { IRefObject, IRenderFunction } from '../../Utilities';\r\nimport { IPersonaSharedProps } from '../../Persona';\r\n\r\nexport interface IActivityItemProps extends React.AllHTMLAttributes<HTMLElement> {\r\n  /**\r\n   * An element describing the activity that took place. If no activityDescription, activityDescriptionText, or\r\n   * onRenderActivityDescription are included, no description of the activity is shown.\r\n   */\r\n  activityDescription?: React.ReactNode[] | React.ReactNode;\r\n\r\n  /**\r\n   * Text describing the activity that occurred and naming the people involved in it.\r\n   * Deprecated, use `activityDescription` instead.\r\n   * @deprecated Use `activityDescription` instead.\r\n   */\r\n  activityDescriptionText?: string;\r\n\r\n  /**\r\n   * An element containing an icon shown next to the activity item.\r\n   */\r\n  activityIcon?: React.ReactNode;\r\n\r\n  /**\r\n   * If activityIcon is not set, then the persona props in this array will be used as the icon for the this activity item.\r\n   */\r\n  activityPersonas?: Array<IPersonaSharedProps>;\r\n\r\n  /**\r\n   * An element containing the text of comments or \\@mention messages.\r\n   * If no comments, commentText, or onRenderComments are included, no comments are shown.\r\n   */\r\n  comments?: React.ReactNode[] | React.ReactNode;\r\n\r\n  /**\r\n   * Text of comments or \\@mention messages.\r\n   * Deprecated, use `comments` instead.\r\n   * @deprecated Use `comments` instead.\r\n   */\r\n  commentText?: string;\r\n\r\n  /**\r\n   * Gets ref to component interface.\r\n   */\r\n  componentRef?: IRefObject<{}>;\r\n\r\n  /**\r\n   * Indicated if the compact styling should be used.\r\n   */\r\n  isCompact?: boolean;\r\n\r\n  /**\r\n   * A renderer for the description of the current activity.\r\n   */\r\n  onRenderActivityDescription?: IRenderFunction<IActivityItemProps>;\r\n\r\n  /**\r\n   * A renderer that adds the text of a comment below the activity description.\r\n   */\r\n  onRenderComments?: IRenderFunction<IActivityItemProps>;\r\n\r\n  /**\r\n   * A renderer to create the icon next to the activity item.\r\n   */\r\n  onRenderIcon?: IRenderFunction<IActivityItemProps>;\r\n\r\n  /**\r\n   * A renderer adds a time stamp. If not included, timeStamp is shown as plain text below the activity.\r\n   */\r\n  onRenderTimeStamp?: IRenderFunction<IActivityItemProps>;\r\n\r\n  /**\r\n   * Optional styling for the elements within the Activity Item.\r\n   */\r\n  styles?: IActivityItemStyles;\r\n\r\n  /**\r\n   * Element shown as a timestamp on this activity. If not included, no timestamp is shown.\r\n   */\r\n  timeStamp?: string | React.ReactNode[] | React.ReactNode;\r\n\r\n  /**\r\n   * Beacon color one\r\n   */\r\n  beaconColorOne?: string;\r\n\r\n  /**\r\n   * Beacon color two\r\n   */\r\n  beaconColorTwo?: string;\r\n\r\n  /**\r\n   * Enables/Disables the beacon that radiates\r\n   * from the center of the center of the activity icon. Signals an activity has started.\r\n   * @defaultvalue false\r\n   */\r\n  animateBeaconSignal?: boolean;\r\n}\r\n\r\nexport interface IActivityItemStyles {\r\n  /**\r\n   * Styles applied to the root activity item container.\r\n   */\r\n  root?: IStyle;\r\n\r\n  /**\r\n   * Styles applied to the root activity item container.\r\n   */\r\n  pulsingBeacon?: IStyle;\r\n\r\n  /**\r\n   * Styles applied to the main container of the activity's description.\r\n   */\r\n  activityContent?: IStyle;\r\n\r\n  /**\r\n   * Styles applied to the persona of the user that did this activity.\r\n   */\r\n  activityPersona?: IStyle;\r\n\r\n  /**\r\n   * Styles applied to the activity's description.\r\n   */\r\n  activityText?: IStyle;\r\n\r\n  /**\r\n   * Styles applied to the icon indicating the type of the activity. Only shown when personas are unavailable.\r\n   */\r\n  activityTypeIcon?: IStyle;\r\n\r\n  /**\r\n   * Styles applied to the text of comments.\r\n   */\r\n  commentText?: IStyle;\r\n\r\n  /**\r\n   * Styles applied to personas when two users are involved in a single activity.\r\n   */\r\n  doublePersona?: IStyle;\r\n\r\n  /**\r\n   * Styles applied to root in the compact variant.\r\n   */\r\n  isCompactRoot?: IStyle;\r\n\r\n  /**\r\n   * Styles applied to personas and icons in the compact variant.\r\n   */\r\n  isCompactIcon?: IStyle;\r\n\r\n  /**\r\n   * Styles applied to main text container in the compact variant.\r\n   */\r\n  isCompactContent?: IStyle;\r\n\r\n  /**\r\n   * Styles applied to personas in the compact variant.\r\n   */\r\n  isCompactPersona?: IStyle;\r\n\r\n  /**\r\n   * Styles applied to a wrapper around personas in the compact variant.\r\n   */\r\n  isCompactPersonaContainer?: IStyle;\r\n\r\n  /**\r\n   * Styles applied to the container of the persona image or activity type icon.\r\n   */\r\n  personaContainer?: IStyle;\r\n\r\n  /**\r\n   * Styles applied to the timestamp at the end of each activity item.\r\n   */\r\n  timeStamp?: IStyle;\r\n\r\n  /**\r\n   * Styles applied to the timestamp in compact mode.\r\n   * This can occur if a host overrides the render behavior to force the timestamp to render.\r\n   */\r\n  isCompactTimeStamp?: IStyle;\r\n}\r\n"]}