{"version":3,"file":"IconButton.styles.js","sourceRoot":"../src/","sources":["components/Button/IconButton/IconButton.styles.ts"],"names":[],"mappings":";;;IAMa,QAAA,SAAS,GAAG,2BAAe,CACtC,UAAC,KAAa,EAAE,YAA4B;QAC1C,IAAM,gBAAgB,GAAkB,6BAAmB,CAAC,KAAK,CAAC,CAAC;QACnE,IAAM,iBAAiB,GAAkB,8BAAoB,CAAC,KAAK,CAAC,CAAC;QAC7D,IAAA,uBAAO,EAAE,qCAAc,CAAW;QAC1C,IAAM,gBAAgB,GAAkB;YACtC,IAAI,EAAE;gBACJ,OAAO,EAAE,OAAO;gBAChB,KAAK,EAAE,MAAM;gBACb,MAAM,EAAE,MAAM;gBACd,eAAe,EAAE,aAAa;gBAC9B,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,cAAc,CAAC,UAAU;aACjC;YAED,WAAW,EAAE;gBACX,KAAK,EAAE,cAAc,CAAC,iBAAiB;gBACvC,SAAS;oBACP,GAAC,8BAAoB,IAAG;wBACtB,WAAW,EAAE,WAAW;wBACxB,KAAK,EAAE,WAAW;qBACnB;uBACF;aACF;YAED,WAAW,EAAE;gBACX,KAAK,EAAE,OAAO,CAAC,YAAY;aAC5B;YAED,YAAY,EAAE;gBACZ,KAAK,EAAE,OAAO,CAAC,YAAY;aAC5B;YAED,WAAW,EAAE;gBACX,eAAe,EAAE,cAAc,CAAC,uBAAuB;aACxD;YAED,kBAAkB,EAAE;gBAClB,eAAe,EAAE,cAAc,CAAC,uBAAuB;aACxD;YAED,YAAY,EAAE;gBACZ,KAAK,EAAE,cAAc,CAAC,YAAY;aACnC;SACF,CAAC;QAEF,OAAO,yBAAe,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,YAAY,CAAE,CAAC;;IAC/F,CAAC,CACF,CAAC","sourcesContent":["import { IButtonStyles } from '../Button.types';\r\nimport { ITheme, concatStyleSets, HighContrastSelector } from '../../../Styling';\r\nimport { memoizeFunction } from '../../../Utilities';\r\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\r\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\r\n\r\nexport const getStyles = memoizeFunction(\r\n  (theme: ITheme, customStyles?: IButtonStyles): IButtonStyles => {\r\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\r\n    const splitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\r\n    const { palette, semanticColors } = theme;\r\n    const iconButtonStyles: IButtonStyles = {\r\n      root: {\r\n        padding: '0 4px',\r\n        width: '32px',\r\n        height: '32px',\r\n        backgroundColor: 'transparent',\r\n        border: 'none',\r\n        color: semanticColors.actionLink\r\n      },\r\n\r\n      rootHovered: {\r\n        color: semanticColors.actionLinkHovered,\r\n        selectors: {\r\n          [HighContrastSelector]: {\r\n            borderColor: 'Highlight',\r\n            color: 'Highlight'\r\n          }\r\n        }\r\n      },\r\n\r\n      rootPressed: {\r\n        color: palette.themePrimary\r\n      },\r\n\r\n      rootExpanded: {\r\n        color: palette.themePrimary\r\n      },\r\n\r\n      rootChecked: {\r\n        backgroundColor: semanticColors.buttonBackgroundChecked\r\n      },\r\n\r\n      rootCheckedHovered: {\r\n        backgroundColor: semanticColors.buttonBackgroundHovered\r\n      },\r\n\r\n      rootDisabled: {\r\n        color: semanticColors.disabledText\r\n      }\r\n    };\r\n\r\n    return concatStyleSets(baseButtonStyles, iconButtonStyles, splitButtonStyles, customStyles)!;\r\n  }\r\n);\r\n"]}