{"version":3,"file":"BaseButton.js","sourceRoot":"../src/","sources":["components/Button/BaseButton.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  IRenderFunction,\r\n  anchorProperties,\r\n  assign,\r\n  buttonProperties,\r\n  getId,\r\n  getNativeProps,\r\n  KeyCodes,\r\n  css,\r\n  mergeAriaAttributeValues,\r\n  portalContainsElement\r\n} from '../../Utilities';\r\nimport { Icon } from '../../Icon';\r\nimport { DirectionalHint } from '../../common/DirectionalHint';\r\nimport { ContextualMenu, IContextualMenuProps } from '../../ContextualMenu';\r\nimport { IButtonProps, IButton } from './Button.types';\r\nimport { IButtonClassNames, getBaseButtonClassNames } from './BaseButton.classNames';\r\nimport { getClassNames as getBaseSplitButtonClassNames, ISplitButtonClassNames } from './SplitButton/SplitButton.classNames';\r\nimport { KeytipData } from '../../KeytipData';\r\n\r\nexport interface IBaseButtonProps extends IButtonProps {\r\n  baseClassName?: string;\r\n  variantClassName?: string;\r\n}\r\n\r\nexport interface IBaseButtonState {\r\n  menuProps?: IContextualMenuProps | null;\r\n}\r\n\r\nconst TouchIdleDelay = 500; /* ms */\r\n\r\nexport class BaseButton extends BaseComponent<IBaseButtonProps, IBaseButtonState> implements IButton {\r\n  private get _isSplitButton(): boolean {\r\n    return !!this.props.menuProps && !!this.props.onClick && this.props.split === true;\r\n  }\r\n\r\n  private get _isExpanded(): boolean {\r\n    const { menuProps } = this.state;\r\n    if (this.props.persistMenu) {\r\n      return !!menuProps && !menuProps.hidden;\r\n    }\r\n    return !!menuProps;\r\n  }\r\n\r\n  public static defaultProps: Partial<IBaseButtonProps> = {\r\n    baseClassName: 'ms-Button',\r\n    styles: {},\r\n    split: false\r\n  };\r\n\r\n  private _buttonElement = React.createRef<HTMLElement>();\r\n  private _splitButtonContainer = React.createRef<HTMLDivElement>();\r\n  private _labelId: string;\r\n  private _descriptionId: string;\r\n  private _ariaDescriptionId: string;\r\n  private _classNames: IButtonClassNames;\r\n  private _processingTouch: boolean;\r\n  private _lastTouchTimeoutId: number | undefined;\r\n\r\n  constructor(props: IBaseButtonProps, rootClassName: string) {\r\n    super(props);\r\n\r\n    this._warnConditionallyRequiredProps(['menuProps', 'onClick'], 'split', this.props.split!);\r\n\r\n    this._warnDeprecations({\r\n      rootProps: undefined,\r\n      description: 'secondaryText',\r\n      toggled: 'checked'\r\n    });\r\n    this._labelId = getId();\r\n    this._descriptionId = getId();\r\n    this._ariaDescriptionId = getId();\r\n    let menuProps = null;\r\n    if (props.persistMenu && props.menuProps) {\r\n      // Clone props so we don't mutate them.\r\n      menuProps = { ...props.menuProps, hidden: true };\r\n    }\r\n    this.state = {\r\n      menuProps: menuProps\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      ariaDescription,\r\n      ariaLabel,\r\n      ariaHidden,\r\n      className,\r\n      disabled,\r\n      allowDisabledFocus,\r\n      primaryDisabled,\r\n      secondaryText = this.props.description,\r\n      href,\r\n      iconProps,\r\n      menuIconProps,\r\n      styles,\r\n      checked,\r\n      variantClassName,\r\n      theme,\r\n      toggle,\r\n      getClassNames\r\n    } = this.props;\r\n\r\n    // Button is disabled if the whole button (in case of splitbutton is disabled) or if the primary action is disabled\r\n    const isPrimaryButtonDisabled = disabled || primaryDisabled;\r\n\r\n    this._classNames = getClassNames\r\n      ? getClassNames(\r\n          theme!,\r\n          className!,\r\n          variantClassName!,\r\n          iconProps && iconProps.className,\r\n          menuIconProps && menuIconProps.className,\r\n          isPrimaryButtonDisabled!,\r\n          checked!,\r\n          this._isMenuExpanded(),\r\n          this.props.split,\r\n          !!allowDisabledFocus\r\n        )\r\n      : getBaseButtonClassNames(\r\n          theme!,\r\n          styles!,\r\n          className!,\r\n          variantClassName!,\r\n          iconProps && iconProps.className,\r\n          menuIconProps && menuIconProps.className,\r\n          isPrimaryButtonDisabled!,\r\n          checked!,\r\n          this._isMenuExpanded(),\r\n          this.props.split\r\n        );\r\n\r\n    const { _ariaDescriptionId, _labelId, _descriptionId } = this;\r\n    // Anchor tag cannot be disabled hence in disabled state rendering\r\n    // anchor button as normal button\r\n    const renderAsAnchor: boolean = !isPrimaryButtonDisabled && !!href;\r\n    const tag = renderAsAnchor ? 'a' : 'button';\r\n\r\n    const nativeProps = getNativeProps(\r\n      assign(renderAsAnchor ? {} : { type: 'button' }, this.props.rootProps, this.props),\r\n      renderAsAnchor ? anchorProperties : buttonProperties,\r\n      [\r\n        'disabled' // let disabled buttons be focused and styled as disabled.\r\n      ]\r\n    );\r\n\r\n    // Check for ariaLabel passed in via Button props, and fall back to aria-label passed in via native props\r\n    const resolvedAriaLabel = ariaLabel || (nativeProps as any)['aria-label'];\r\n\r\n    // Check for ariaDescription, secondaryText or aria-describedby in the native props to determine source of aria-describedby\r\n    // otherwise default to undefined so property does not appear in output.\r\n    let ariaDescribedBy = undefined;\r\n    if (ariaDescription) {\r\n      ariaDescribedBy = _ariaDescriptionId;\r\n    } else if (secondaryText) {\r\n      ariaDescribedBy = _descriptionId;\r\n    } else if ((nativeProps as any)['aria-describedby']) {\r\n      ariaDescribedBy = (nativeProps as any)['aria-describedby'];\r\n    }\r\n\r\n    // If an explicit ariaLabel is given, use that as the label and we're done.\r\n    // If an explicit aria-labelledby is given, use that and we're done.\r\n    // If any kind of description is given (which will end up as an aria-describedby attribute),\r\n    // set the labelledby element. Otherwise, the button is labeled implicitly by the descendent\r\n    // text on the button (if it exists). Never set both aria-label and aria-labelledby.\r\n    let ariaLabelledBy = undefined;\r\n    if (!resolvedAriaLabel) {\r\n      if ((nativeProps as any)['aria-labelledby']) {\r\n        ariaLabelledBy = (nativeProps as any)['aria-labelledby'];\r\n      } else if (ariaDescribedBy) {\r\n        ariaLabelledBy = this._hasText() ? _labelId : undefined;\r\n      }\r\n    }\r\n\r\n    const dataIsFocusable =\r\n      (this.props as any)['data-is-focusable'] === false || (disabled && !allowDisabledFocus) || this._isSplitButton ? false : true;\r\n\r\n    const buttonProps = assign(nativeProps, {\r\n      className: this._classNames.root,\r\n      ref: this._buttonElement,\r\n      disabled: isPrimaryButtonDisabled && !allowDisabledFocus,\r\n      onKeyDown: this._onKeyDown,\r\n      onKeyPress: this._onKeyPress,\r\n      onKeyUp: this._onKeyUp,\r\n      onMouseDown: this._onMouseDown,\r\n      onMouseUp: this._onMouseUp,\r\n      onClick: this._onClick,\r\n      'aria-label': resolvedAriaLabel,\r\n      'aria-labelledby': ariaLabelledBy,\r\n      'aria-describedby': ariaDescribedBy,\r\n      'aria-disabled': isPrimaryButtonDisabled,\r\n      'data-is-focusable': dataIsFocusable,\r\n      'aria-pressed': toggle ? !!checked : undefined // aria-pressed attribute should only be present for toggle buttons\r\n    });\r\n\r\n    if (ariaHidden) {\r\n      buttonProps['aria-hidden'] = true;\r\n    }\r\n\r\n    if (this._isSplitButton) {\r\n      return this._onRenderSplitButtonContent(tag, buttonProps);\r\n    } else if (this.props.menuProps) {\r\n      assign(buttonProps, {\r\n        'aria-expanded': this._isExpanded,\r\n        'aria-owns': this.state.menuProps ? this._labelId + '-menu' : null,\r\n        'aria-haspopup': true\r\n      });\r\n    }\r\n\r\n    return this._onRenderContent(tag, buttonProps);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    // For split buttons, touching anywhere in the button should drop the dropdown, which should contain the primary action.\r\n    // This gives more hit target space for touch environments. We're setting the onpointerdown here, because React\r\n    // does not support Pointer events yet.\r\n    if (this._isSplitButton && this._splitButtonContainer.current && 'onpointerdown' in this._splitButtonContainer.current) {\r\n      this._events.on(this._splitButtonContainer.current, 'pointerdown', this._onPointerDown, true);\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IBaseButtonProps, prevState: IBaseButtonState) {\r\n    // If Button's menu was closed, run onAfterMenuDismiss. If the menu is being persisted\r\n    // this condition is tested by checking on a change on the menuProps hidden value.\r\n    if (this.props.onAfterMenuDismiss && prevState.menuProps) {\r\n      if (!this.state.menuProps || (this.props.persistMenu && !prevState.menuProps.hidden && this.state.menuProps.hidden)) {\r\n        this.props.onAfterMenuDismiss();\r\n      }\r\n    }\r\n  }\r\n\r\n  public focus(): void {\r\n    if (this._isSplitButton && this._splitButtonContainer.current) {\r\n      this._splitButtonContainer.current.focus();\r\n    } else if (this._buttonElement.current) {\r\n      this._buttonElement.current.focus();\r\n    }\r\n  }\r\n\r\n  public dismissMenu(): void {\r\n    this._dismissMenu();\r\n  }\r\n\r\n  public openMenu(shouldFocusOnContainer?: boolean, shouldFocusOnMount?: boolean): void {\r\n    this._openMenu(shouldFocusOnContainer, shouldFocusOnMount);\r\n  }\r\n\r\n  private _onRenderContent(tag: any, buttonProps: IButtonProps): JSX.Element {\r\n    const props = this.props;\r\n    const Tag = tag;\r\n    const {\r\n      menuIconProps,\r\n      menuProps,\r\n      onRenderIcon = this._onRenderIcon,\r\n      onRenderAriaDescription = this._onRenderAriaDescription,\r\n      onRenderChildren = this._onRenderChildren,\r\n      onRenderMenu = this._onRenderMenu,\r\n      onRenderMenuIcon = this._onRenderMenuIcon,\r\n      disabled\r\n    } = props;\r\n    let { keytipProps } = props;\r\n    if (keytipProps && menuProps) {\r\n      keytipProps = {\r\n        ...keytipProps,\r\n        hasMenu: true\r\n      };\r\n    }\r\n\r\n    const Content = (\r\n      // If we're making a split button, we won't put the keytip here\r\n      <KeytipData\r\n        keytipProps={!this._isSplitButton ? keytipProps : undefined}\r\n        ariaDescribedBy={(buttonProps as any)['aria-describedby']}\r\n        disabled={disabled}\r\n      >\r\n        {(keytipAttributes: any): JSX.Element => (\r\n          <Tag {...buttonProps} {...keytipAttributes}>\r\n            <div className={this._classNames.flexContainer}>\r\n              {onRenderIcon(props, this._onRenderIcon)}\r\n              {this._onRenderTextContents()}\r\n              {onRenderAriaDescription(props, this._onRenderAriaDescription)}\r\n              {onRenderChildren(props, this._onRenderChildren)}\r\n              {!this._isSplitButton &&\r\n                (menuProps || menuIconProps || this.props.onRenderMenuIcon) &&\r\n                onRenderMenuIcon(this.props, this._onRenderMenuIcon)}\r\n              {this.state.menuProps && !this.state.menuProps.doNotLayer && onRenderMenu(menuProps, this._onRenderMenu)}\r\n            </div>\r\n          </Tag>\r\n        )}\r\n      </KeytipData>\r\n    );\r\n\r\n    if (menuProps && menuProps.doNotLayer) {\r\n      return (\r\n        <div style={{ display: 'inline-block' }}>\r\n          {Content}\r\n          {this.state.menuProps && onRenderMenu(menuProps, this._onRenderMenu)}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return Content;\r\n  }\r\n\r\n  private _onRenderIcon = (buttonProps?: IButtonProps, defaultRender?: IRenderFunction<IButtonProps>): JSX.Element | null => {\r\n    const { iconProps } = this.props;\r\n\r\n    if (iconProps) {\r\n      const { className, ...rest } = iconProps;\r\n\r\n      return <Icon className={css(this._classNames.icon, className)} {...rest} />;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  private _onRenderTextContents = (): JSX.Element | (JSX.Element | null)[] => {\r\n    const {\r\n      text,\r\n      children,\r\n      secondaryText = this.props.description,\r\n      onRenderText = this._onRenderText,\r\n      onRenderDescription = this._onRenderDescription\r\n    } = this.props;\r\n\r\n    if (text || typeof children === 'string' || secondaryText) {\r\n      return (\r\n        <div className={this._classNames.textContainer}>\r\n          {onRenderText(this.props, this._onRenderText)}\r\n          {onRenderDescription(this.props, this._onRenderDescription)}\r\n        </div>\r\n      );\r\n    }\r\n    return [onRenderText(this.props, this._onRenderText), onRenderDescription(this.props, this._onRenderDescription)];\r\n  };\r\n\r\n  private _onRenderText = (): JSX.Element | null => {\r\n    let { text } = this.props;\r\n    const { children } = this.props;\r\n\r\n    // For backwards compat, we should continue to take in the text content from children.\r\n    if (text === undefined && typeof children === 'string') {\r\n      text = children;\r\n    }\r\n\r\n    if (this._hasText()) {\r\n      return (\r\n        <div key={this._labelId} className={this._classNames.label} id={this._labelId}>\r\n          {text}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  private _hasText(): boolean {\r\n    // _onRenderTextContents and _onRenderText do not perform the same checks. Below is parity with what _onRenderText used to have\r\n    // before the refactor that introduced this function. _onRenderTextContents does not require props.text to be undefined in order\r\n    // for props.children to be used as a fallback. Purely a code maintainability/reuse issue, but logged as Issue #4979\r\n    return this.props.text !== null && (this.props.text !== undefined || typeof this.props.children === 'string');\r\n  }\r\n\r\n  private _isMenuExpanded(): boolean {\r\n    const { menuProps } = this.state;\r\n    return !!menuProps && !menuProps.hidden;\r\n  }\r\n\r\n  private _onRenderChildren = (): JSX.Element | null => {\r\n    const { children } = this.props;\r\n\r\n    // If children is just a string, either it or the text will be rendered via onRenderLabel\r\n    // If children is another component, it will be rendered after text\r\n    if (typeof children === 'string') {\r\n      return null;\r\n    }\r\n\r\n    return children as any;\r\n  };\r\n\r\n  private _onRenderDescription = (props: IButtonProps) => {\r\n    const { secondaryText = this.props.description } = props;\r\n\r\n    // ms-Button-description is only shown when the button type is compound.\r\n    // In other cases it will not be displayed.\r\n    return secondaryText ? (\r\n      <div key={this._descriptionId} className={this._classNames.description} id={this._descriptionId}>\r\n        {secondaryText}\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  private _onRenderAriaDescription = () => {\r\n    const { ariaDescription } = this.props;\r\n\r\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan,\r\n    // otherwise it will be assigned to descriptionSpan.\r\n    return ariaDescription ? (\r\n      <span className={this._classNames.screenReaderText} id={this._ariaDescriptionId}>\r\n        {ariaDescription}\r\n      </span>\r\n    ) : null;\r\n  };\r\n\r\n  private _onRenderMenuIcon = (props: IButtonProps): JSX.Element | null => {\r\n    const { menuIconProps } = this.props;\r\n\r\n    return <Icon iconName=\"ChevronDown\" {...menuIconProps} className={this._classNames.menuIcon} />;\r\n  };\r\n\r\n  private _onRenderMenu = (menuProps: IContextualMenuProps): JSX.Element => {\r\n    const { onDismiss = this._dismissMenu } = menuProps;\r\n\r\n    const MenuType = this.props.menuAs || (ContextualMenu as React.ReactType<IContextualMenuProps>);\r\n\r\n    // the accessible menu label (accessible name) has a relationship to the button.\r\n    // If the menu props do not specify an explicit value for aria-label or aria-labelledBy,\r\n    // AND the button has text, we'll set the menu aria-labelledBy to the text element id.\r\n    if (!menuProps.ariaLabel && !menuProps.labelElementId && this._hasText()) {\r\n      menuProps = { ...menuProps, labelElementId: this._labelId };\r\n    }\r\n\r\n    return (\r\n      <MenuType\r\n        id={this._labelId + '-menu'}\r\n        directionalHint={DirectionalHint.bottomLeftEdge}\r\n        {...menuProps}\r\n        shouldFocusOnContainer={this.state.menuProps ? this.state.menuProps.shouldFocusOnContainer : undefined}\r\n        shouldFocusOnMount={this.state.menuProps ? this.state.menuProps.shouldFocusOnMount : undefined}\r\n        hidden={this.state.menuProps ? this.state.menuProps.hidden : undefined}\r\n        className={css('ms-BaseButton-menuhost', menuProps.className)}\r\n        target={this._isSplitButton ? this._splitButtonContainer.current : this._buttonElement.current}\r\n        onDismiss={onDismiss}\r\n      />\r\n    );\r\n  };\r\n\r\n  private _dismissMenu = (): void => {\r\n    let menuProps = null;\r\n    if (this.props.persistMenu && this.state.menuProps) {\r\n      // Create a new object to trigger componentDidUpdate\r\n      menuProps = { ...this.state.menuProps, hidden: true };\r\n    }\r\n    this.setState({ menuProps: menuProps });\r\n  };\r\n\r\n  private _openMenu = (shouldFocusOnContainer?: boolean, shouldFocusOnMount: boolean = true): void => {\r\n    if (this.props.menuProps) {\r\n      const menuProps = { ...this.props.menuProps, shouldFocusOnContainer, shouldFocusOnMount };\r\n      if (this.props.persistMenu) {\r\n        menuProps.hidden = false;\r\n      }\r\n      this.setState({ menuProps: menuProps });\r\n    }\r\n  };\r\n\r\n  private _onToggleMenu = (shouldFocusOnContainer: boolean): void => {\r\n    const currentMenuProps = this.state.menuProps;\r\n    let shouldFocusOnMount = true;\r\n    if (this.props.menuProps && this.props.menuProps.shouldFocusOnMount === false) {\r\n      shouldFocusOnMount = false;\r\n    }\r\n    if (this.props.persistMenu) {\r\n      currentMenuProps && currentMenuProps.hidden ? this._openMenu(shouldFocusOnContainer, shouldFocusOnMount) : this._dismissMenu();\r\n    } else {\r\n      currentMenuProps ? this._dismissMenu() : this._openMenu(shouldFocusOnContainer, shouldFocusOnMount);\r\n    }\r\n  };\r\n\r\n  private _onRenderSplitButtonContent(tag: any, buttonProps: IButtonProps): JSX.Element {\r\n    const { styles = {}, disabled, allowDisabledFocus, checked, getSplitButtonClassNames, primaryDisabled, menuProps, toggle } = this.props;\r\n    let { keytipProps } = this.props;\r\n\r\n    const classNames = getSplitButtonClassNames\r\n      ? getSplitButtonClassNames(!!disabled, !!this.state.menuProps, !!checked, !!allowDisabledFocus)\r\n      : styles && getBaseSplitButtonClassNames(styles!, !!disabled, !!this.state.menuProps, !!checked);\r\n\r\n    assign(buttonProps, {\r\n      onClick: undefined,\r\n      tabIndex: -1,\r\n      'data-is-focusable': false\r\n    });\r\n    const ariaDescribedBy = buttonProps.ariaDescription;\r\n\r\n    if (keytipProps && menuProps) {\r\n      keytipProps = {\r\n        ...keytipProps,\r\n        hasMenu: true\r\n      };\r\n    }\r\n\r\n    const containerProps = getNativeProps(buttonProps, [], ['disabled']);\r\n    return (\r\n      <KeytipData keytipProps={keytipProps} disabled={disabled}>\r\n        {(keytipAttributes: any): JSX.Element => (\r\n          <div\r\n            {...containerProps}\r\n            data-ktp-target={keytipAttributes['data-ktp-target']}\r\n            role={'button'}\r\n            aria-disabled={disabled}\r\n            aria-haspopup={true}\r\n            aria-expanded={this._isExpanded}\r\n            aria-pressed={toggle ? !!checked : undefined} // aria-pressed attribute should only be present for toggle buttons\r\n            aria-describedby={mergeAriaAttributeValues(ariaDescribedBy, keytipAttributes['aria-describedby'])}\r\n            className={classNames && classNames.splitButtonContainer}\r\n            onKeyDown={this._onSplitButtonContainerKeyDown}\r\n            onTouchStart={this._onTouchStart}\r\n            ref={this._splitButtonContainer}\r\n            data-is-focusable={true}\r\n            onClick={!disabled && !primaryDisabled ? this._onSplitButtonPrimaryClick : undefined}\r\n            tabIndex={!disabled || allowDisabledFocus ? 0 : undefined}\r\n            aria-roledescription={buttonProps['aria-roledescription']}\r\n            onFocusCapture={this._onSplitContainerFocusCapture}\r\n          >\r\n            <span style={{ display: 'flex' }}>\r\n              {this._onRenderContent(tag, buttonProps)}\r\n              {this._onRenderSplitButtonMenuButton(classNames, keytipAttributes)}\r\n              {this._onRenderSplitButtonDivider(classNames)}\r\n            </span>\r\n          </div>\r\n        )}\r\n      </KeytipData>\r\n    );\r\n  }\r\n\r\n  private _onSplitContainerFocusCapture = (ev: React.FocusEvent<HTMLDivElement>) => {\r\n    const container = this._splitButtonContainer.current;\r\n\r\n    // If the target is coming from the portal we do not need to set focus on the container.\r\n    if (!container || (ev.target && portalContainsElement(ev.target, container))) {\r\n      return;\r\n    }\r\n\r\n    // We should never be able to focus the individual buttons in a split button. Focus\r\n    // should always remain on the container.\r\n    container.focus();\r\n  };\r\n\r\n  private _onSplitButtonPrimaryClick = (ev: React.MouseEvent<HTMLDivElement>) => {\r\n    if (this._isExpanded) {\r\n      this._dismissMenu();\r\n    }\r\n\r\n    if (!this._processingTouch && this.props.onClick) {\r\n      this.props.onClick(ev);\r\n    } else if (this._processingTouch) {\r\n      this._onMenuClick(ev);\r\n    }\r\n  };\r\n\r\n  private _onRenderSplitButtonDivider(classNames: ISplitButtonClassNames | undefined): JSX.Element | null {\r\n    if (classNames && classNames.divider) {\r\n      return <span className={classNames.divider} />;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private _onRenderSplitButtonMenuButton(classNames: ISplitButtonClassNames | undefined, keytipAttributes: any): JSX.Element {\r\n    const { allowDisabledFocus, checked, disabled } = this.props;\r\n    let menuIconProps = this.props.menuIconProps;\r\n\r\n    const { splitButtonAriaLabel } = this.props;\r\n\r\n    if (menuIconProps === undefined) {\r\n      menuIconProps = {\r\n        iconName: 'ChevronDown'\r\n      };\r\n    }\r\n\r\n    const splitButtonProps = {\r\n      styles: classNames,\r\n      checked: checked,\r\n      disabled: disabled,\r\n      allowDisabledFocus: allowDisabledFocus,\r\n      onClick: this._onMenuClick,\r\n      menuProps: undefined,\r\n      iconProps: { ...menuIconProps, className: this._classNames.menuIcon },\r\n      ariaLabel: splitButtonAriaLabel,\r\n      'aria-haspopup': true,\r\n      'aria-expanded': this._isExpanded,\r\n      'data-is-focusable': false\r\n    };\r\n\r\n    // Add data-ktp-execute-target to the split button if the keytip is defined\r\n    return (\r\n      <BaseButton\r\n        {...splitButtonProps}\r\n        data-ktp-execute-target={keytipAttributes['data-ktp-execute-target']}\r\n        onMouseDown={this._onMouseDown}\r\n        tabIndex={-1}\r\n      />\r\n    );\r\n  }\r\n\r\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\r\n    // explicity cancelling event so click won't fire after this\r\n    if (this.props.disabled && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n    } else if (!this.props.disabled) {\r\n      if (this.props.menuProps) {\r\n        this._onMenuKeyDown(ev);\r\n      } else if (this.props.onKeyDown !== undefined) {\r\n        this.props.onKeyDown(ev); // not cancelling event because it's not disabled\r\n      }\r\n    }\r\n  };\r\n\r\n  private _onKeyUp = (ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\r\n    if (!this.props.disabled && this.props.onKeyUp !== undefined) {\r\n      this.props.onKeyUp(ev); // not cancelling event because it's not disabled\r\n    }\r\n  };\r\n\r\n  private _onKeyPress = (ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\r\n    if (!this.props.disabled && this.props.onKeyPress !== undefined) {\r\n      this.props.onKeyPress(ev); // not cancelling event because it's not disabled\r\n    }\r\n  };\r\n\r\n  private _onMouseUp = (ev: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\r\n    if (!this.props.disabled && this.props.onMouseUp !== undefined) {\r\n      this.props.onMouseUp(ev); // not cancelling event because it's not disabled\r\n    }\r\n  };\r\n\r\n  private _onMouseDown = (ev: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\r\n    if (!this.props.disabled && this.props.onMouseDown !== undefined) {\r\n      this.props.onMouseDown(ev); // not cancelling event because it's not disabled\r\n    }\r\n  };\r\n\r\n  private _onClick = (ev: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\r\n    if (!this.props.disabled) {\r\n      if (this.props.menuProps) {\r\n        this._onMenuClick(ev);\r\n      } else if (this.props.onClick !== undefined) {\r\n        this.props.onClick(ev); // not cancelling event because it's not disabled\r\n      }\r\n    }\r\n  };\r\n\r\n  private _onSplitButtonContainerKeyDown = (ev: React.KeyboardEvent<HTMLDivElement>) => {\r\n    if (ev.which === KeyCodes.enter) {\r\n      if (this._buttonElement.current) {\r\n        this._buttonElement.current.click();\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    } else {\r\n      this._onMenuKeyDown(ev);\r\n    }\r\n  };\r\n\r\n  private _onMenuKeyDown = (ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\r\n    if (this.props.disabled) {\r\n      return;\r\n    }\r\n\r\n    if (this.props.onKeyDown) {\r\n      this.props.onKeyDown(ev);\r\n    }\r\n\r\n    const isUp = ev.which === KeyCodes.up;\r\n    const isDown = ev.which === KeyCodes.down;\r\n\r\n    if (!ev.defaultPrevented && this._isValidMenuOpenKey(ev)) {\r\n      const { onMenuClick } = this.props;\r\n      if (onMenuClick) {\r\n        onMenuClick(ev, this);\r\n      }\r\n\r\n      this._onToggleMenu(false);\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n    }\r\n\r\n    if (!(ev.altKey || ev.metaKey) && (isUp || isDown)) {\r\n      this.setState(state => {\r\n        if (state.menuProps && !state.menuProps.shouldFocusOnMount) {\r\n          return { menuProps: { ...state.menuProps, shouldFocusOnMount: true } };\r\n        }\r\n        return state;\r\n      });\r\n\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n    }\r\n  };\r\n\r\n  private _onTouchStart: () => void = () => {\r\n    if (this._isSplitButton && this._splitButtonContainer.current && !('onpointerdown' in this._splitButtonContainer.current)) {\r\n      this._handleTouchAndPointerEvent();\r\n    }\r\n  };\r\n\r\n  private _onPointerDown(ev: PointerEvent) {\r\n    if (ev.pointerType === 'touch') {\r\n      this._handleTouchAndPointerEvent();\r\n\r\n      ev.preventDefault();\r\n      ev.stopImmediatePropagation();\r\n    }\r\n  }\r\n\r\n  private _handleTouchAndPointerEvent() {\r\n    // If we already have an existing timeeout from a previous touch and pointer event\r\n    // cancel that timeout so we can set a nwe one.\r\n    if (this._lastTouchTimeoutId !== undefined) {\r\n      this._async.clearTimeout(this._lastTouchTimeoutId);\r\n      this._lastTouchTimeoutId = undefined;\r\n    }\r\n    this._processingTouch = true;\r\n\r\n    this._lastTouchTimeoutId = this._async.setTimeout(() => {\r\n      this._processingTouch = false;\r\n      this._lastTouchTimeoutId = undefined;\r\n    }, TouchIdleDelay);\r\n  }\r\n\r\n  /**\r\n   * Returns if the user hits a valid keyboard key to open the menu\r\n   * @param ev - the keyboard event\r\n   * @returns True if user clicks on custom trigger key if enabled or alt + down arrow if not. False otherwise.\r\n   */\r\n  private _isValidMenuOpenKey(ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>): boolean {\r\n    if (this.props.menuTriggerKeyCode) {\r\n      return ev.which === this.props.menuTriggerKeyCode;\r\n    } else if (this.props.menuProps) {\r\n      return ev.which === KeyCodes.down && (ev.altKey || ev.metaKey);\r\n    }\r\n\r\n    // Note: When enter is pressed, we will let the event continue to propagate\r\n    // to trigger the onClick event on the button\r\n    return false;\r\n  }\r\n\r\n  private _onMenuClick = (ev: React.MouseEvent<HTMLDivElement | HTMLButtonElement | HTMLAnchorElement>) => {\r\n    const { onMenuClick } = this.props;\r\n    if (onMenuClick) {\r\n      onMenuClick(ev, this);\r\n    }\r\n\r\n    if (!ev.defaultPrevented) {\r\n      // When Edge + Narrator are used together (regardless of if the button is in a form or not), pressing\r\n      // \"Enter\" fires this method and not _onMenuKeyDown. Checking ev.nativeEvent.detail differentiates\r\n      // between a real click event and a keypress event (detail should be the number of mouse clicks).\r\n      // ...Plot twist! For a real click event in IE 11, detail is always 0 (Edge sets it properly to 1).\r\n      // So we also check the pointerType property, which both Edge and IE set to \"mouse\" for real clicks\r\n      // and \"\" for pressing \"Enter\" with Narrator on.\r\n      const shouldFocusOnContainer = ev.nativeEvent.detail !== 0 || (ev.nativeEvent as PointerEvent).pointerType === 'mouse';\r\n      this._onToggleMenu(shouldFocusOnContainer);\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n    }\r\n  };\r\n}\r\n"]}