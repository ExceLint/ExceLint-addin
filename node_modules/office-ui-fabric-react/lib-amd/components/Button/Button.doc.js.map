{"version":3,"file":"Button.doc.js","sourceRoot":"../src/","sources":["components/Button/Button.doc.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { ButtonStatus } from './Button.checklist';\r\nimport { ButtonDefaultExample } from './examples/Button.Default.Example';\r\nimport { ButtonContextualMenuExample } from './examples/Button.ContextualMenu.Example';\r\nimport { ButtonCompoundExample } from './examples/Button.Compound.Example';\r\nimport { ButtonActionExample } from './examples/Button.Action.Example';\r\nimport { ButtonCommandBarExample } from './examples/Button.CommandBar.Example';\r\nimport { ButtonIconExample } from './examples/Button.Icon.Example';\r\nimport { ButtonAnchorExample } from './examples/Button.Anchor.Example';\r\nimport { ButtonScreenReaderExample } from './examples/Button.ScreenReader.Example';\r\nimport { ButtonSplitExample, ButtonSplitCustomExample } from './examples/Button.Split.Example';\r\nimport { ButtonToggleExample } from './examples/Button.Toggle.Example';\r\nimport { IDocPageProps, ChecklistStatus } from '../../common/DocPage.types';\r\nexport { ChecklistStatus };\r\n\r\nconst ButtonDefaultExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Button/examples/Button.Default.Example.tsx') as string;\r\nconst ButtonCompoundExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Button/examples/Button.Compound.Example.tsx') as string;\r\nconst ButtonActionExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Button/examples/Button.Action.Example.tsx') as string;\r\nconst ButtonCommandBarExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Button/examples/Button.CommandBar.Example.tsx') as string;\r\nconst ButtonIconExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Button/examples/Button.Icon.Example.tsx') as string;\r\nconst ButtonAnchorExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Button/examples/Button.Anchor.Example.tsx') as string;\r\nconst ButtonScreenReaderExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Button/examples/Button.ScreenReader.Example.tsx') as string;\r\nconst ButtonContextualMenuExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Button/examples/Button.ContextualMenu.Example.tsx') as string;\r\nconst ButtonSplitExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Button/examples/Button.Split.Example.tsx') as string;\r\nconst ButtonToggleExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Button/examples/Button.Toggle.Example.tsx') as string;\r\n\r\nexport interface IButtonDocPageProps {\r\n  areButtonsDisabled: boolean;\r\n  areButtonsChecked: boolean;\r\n}\r\n\r\n/**\r\n * Exports a function because the documentation of this page requires some interactivity that is passed in here as a prop\r\n * @param props Props that are specific to generating page props for ButtonPage\r\n */\r\nexport const ButtonPageProps = (props: IButtonDocPageProps): IDocPageProps => ({\r\n  title: 'Button',\r\n  componentName: 'ButtonExample',\r\n  componentUrl: 'https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/Button',\r\n  examples: [\r\n    {\r\n      title: 'Default Button',\r\n      code: ButtonDefaultExampleCode,\r\n      view: <ButtonDefaultExample disabled={props.areButtonsDisabled} checked={props.areButtonsChecked} />\r\n    },\r\n    {\r\n      title: 'Compound Button',\r\n      code: ButtonCompoundExampleCode,\r\n      view: <ButtonCompoundExample disabled={props.areButtonsDisabled} checked={props.areButtonsChecked} />\r\n    },\r\n    {\r\n      title: 'Command Bar Button',\r\n      code: ButtonCommandBarExampleCode,\r\n      view: <ButtonCommandBarExample disabled={props.areButtonsDisabled} checked={props.areButtonsChecked} />\r\n    },\r\n    {\r\n      title: 'Split Button',\r\n      code: ButtonSplitExampleCode,\r\n      view: <ButtonSplitExample disabled={props.areButtonsDisabled} checked={props.areButtonsChecked} />\r\n    },\r\n    {\r\n      title: 'Icon Button',\r\n      code: ButtonIconExampleCode,\r\n      view: <ButtonIconExample disabled={props.areButtonsDisabled} checked={props.areButtonsChecked} />\r\n    },\r\n    {\r\n      title: 'Contextual Menu Button',\r\n      code: ButtonContextualMenuExampleCode,\r\n      view: <ButtonContextualMenuExample disabled={props.areButtonsDisabled} checked={props.areButtonsChecked} />\r\n    },\r\n    {\r\n      title: 'Action Button',\r\n      code: ButtonActionExampleCode,\r\n      view: <ButtonActionExample disabled={props.areButtonsDisabled} checked={props.areButtonsChecked} />\r\n    }\r\n  ],\r\n\r\n  implementationExamples: [\r\n    {\r\n      title: 'Button Like Anchor',\r\n      code: ButtonAnchorExampleCode,\r\n      view: <ButtonAnchorExample disabled={props.areButtonsDisabled} checked={props.areButtonsChecked} />\r\n    },\r\n    {\r\n      title: 'Button with Aria Description for Screen Reader',\r\n      code: ButtonScreenReaderExampleCode,\r\n      view: <ButtonScreenReaderExample disabled={props.areButtonsDisabled} checked={props.areButtonsChecked} />\r\n    },\r\n    {\r\n      title: 'Custom Split Button',\r\n      code: ButtonSplitExampleCode,\r\n      view: <ButtonSplitCustomExample disabled={props.areButtonsDisabled} checked={props.areButtonsChecked} />\r\n    },\r\n    {\r\n      title: 'Toggle Button',\r\n      code: ButtonToggleExampleCode,\r\n      view: <ButtonToggleExample disabled={props.areButtonsDisabled} checked={props.areButtonsChecked} />\r\n    }\r\n  ],\r\n\r\n  allowNativeProps: true,\r\n  nativePropsElement: ['a', 'button'],\r\n  propertiesTablesSources: [require<string>('!raw-loader!office-ui-fabric-react/src/components/Button/Button.types.ts')],\r\n  overview: require<string>('!raw-loader!office-ui-fabric-react/src/components/Button/docs/ButtonOverview.md'),\r\n  dos: require<string>('!raw-loader!office-ui-fabric-react/src/components/Button/docs/ButtonDos.md'),\r\n  donts: require<string>('!raw-loader!office-ui-fabric-react/src/components/Button/docs/ButtonDonts.md'),\r\n  isHeaderVisible: true,\r\n  isFeedbackVisible: true,\r\n  componentStatus: ButtonStatus\r\n});\r\n"]}