{"version":3,"file":"Button.js","sourceRoot":"../src/","sources":["components/Button/Button.tsx"],"names":[],"mappings":";;;IASA;;;OAGG;IACH;QAA4B,kCAA+B;QAMzD,gBAAY,KAAmB;YAA/B,YACE,kBAAM,KAAK,CAAC,SAMb;YAZD;;eAEG;YACO,iCAA2B,GAAG,IAAI,CAAC;YAK3C,gBAAI,CACF,2EAA2E;gBACzE,gEAAgE,CACnE,CAAC;;QACJ,CAAC;QAEM,uBAAM,GAAb;YACE,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAEzB,QAAQ,KAAK,CAAC,UAAU,EAAE;gBACxB,KAAK,yBAAU,CAAC,OAAO;oBACrB,OAAO,oBAAC,2BAAY,uBAAK,KAAK,EAAI,CAAC;gBAErC,KAAK,yBAAU,CAAC,QAAQ;oBACtB,OAAO,oBAAC,+BAAc,uBAAK,KAAK,EAAI,CAAC;gBAEvC,KAAK,yBAAU,CAAC,IAAI;oBAClB,OAAO,oBAAC,uBAAU,uBAAK,KAAK,EAAI,CAAC;gBAEnC,KAAK,yBAAU,CAAC,OAAO;oBACrB,OAAO,oBAAC,6BAAa,uBAAK,KAAK,EAAI,CAAC;gBAEtC;oBACE,OAAO,oBAAC,6BAAa,uBAAK,KAAK,EAAI,CAAC;aACvC;QACH,CAAC;QACH,aAAC;IAAD,CAAC,AAnCD,CAA4B,yBAAa,GAmCxC;IAnCY,wBAAM","sourcesContent":["import * as React from 'react';\r\n\r\nimport { BaseComponent, warn } from '../../Utilities';\r\nimport { ButtonType, IButtonProps } from './Button.types';\r\nimport { DefaultButton } from './DefaultButton/DefaultButton';\r\nimport { ActionButton } from './ActionButton/ActionButton';\r\nimport { CompoundButton } from './CompoundButton/CompoundButton';\r\nimport { IconButton } from './IconButton/IconButton';\r\nimport { PrimaryButton } from './PrimaryButton/PrimaryButton';\r\n/**\r\n * This class is deprecated. Use the individual *Button components instead.\r\n * @deprecated Use the individual *Button components instead.\r\n */\r\nexport class Button extends BaseComponent<IButtonProps, {}> {\r\n  /**\r\n   * Set this BaseComponent._skipComponentRefResolution to true, bypassing resolution of componentRef.\r\n   */\r\n  protected _skipComponentRefResolution = true;\r\n\r\n  constructor(props: IButtonProps) {\r\n    super(props);\r\n\r\n    warn(\r\n      `The Button component has been deprecated. Use specific variants instead. ` +\r\n        `(PrimaryButton, DefaultButton, IconButton, ActionButton, etc.)`\r\n    );\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const props = this.props;\r\n\r\n    switch (props.buttonType) {\r\n      case ButtonType.command:\r\n        return <ActionButton {...props} />;\r\n\r\n      case ButtonType.compound:\r\n        return <CompoundButton {...props} />;\r\n\r\n      case ButtonType.icon:\r\n        return <IconButton {...props} />;\r\n\r\n      case ButtonType.primary:\r\n        return <PrimaryButton {...props} />;\r\n\r\n      default:\r\n        return <DefaultButton {...props} />;\r\n    }\r\n  }\r\n}\r\n"]}