{"version":3,"file":"BaseButton.classNames.js","sourceRoot":"../src/","sources":["components/Button/BaseButton.classNames.ts"],"names":[],"mappings":"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","sourcesContent":["import { memoizeFunction } from '../../Utilities';\r\nimport { ITheme, mergeStyleSets } from '../../Styling';\r\nimport { IButtonStyles } from './Button.types';\r\nimport { getGlobalClassNames } from '../../Styling';\r\n\r\nexport interface IButtonClassNames {\r\n  root?: string;\r\n  flexContainer?: string;\r\n  textContainer?: string;\r\n  icon?: string;\r\n  label?: string;\r\n  menuIcon?: string;\r\n  description?: string;\r\n  screenReaderText?: string;\r\n}\r\n\r\nexport const ButtonGlobalClassNames = {\r\n  msButton: 'ms-Button',\r\n  msButtonIcon: 'ms-Button-icon',\r\n  msButtonMenuIcon: 'ms-Button-menuIcon',\r\n  msButtonLabel: 'ms-Button-label',\r\n  msButtonDescription: 'ms-Button-description',\r\n  msButtonScreenReaderText: 'ms-Button-screenReaderText',\r\n  msButtonFlexContainer: 'ms-Button-flexContainer',\r\n  msButtonTextContainer: 'ms-Button-textContainer'\r\n};\r\n\r\nexport const getBaseButtonClassNames = memoizeFunction(\r\n  (\r\n    theme: ITheme,\r\n    styles: IButtonStyles,\r\n    className: string,\r\n    variantClassName: string,\r\n    iconClassName: string | undefined,\r\n    menuIconClassName: string | undefined,\r\n    disabled: boolean,\r\n    checked: boolean,\r\n    expanded: boolean,\r\n    isSplit: boolean | undefined\r\n  ): IButtonClassNames => {\r\n    const classNames = getGlobalClassNames(ButtonGlobalClassNames, theme || {});\r\n\r\n    const isExpanded = expanded && !isSplit;\r\n    return mergeStyleSets({\r\n      root: [\r\n        classNames.msButton,\r\n        styles.root,\r\n        variantClassName,\r\n        checked && ['is-checked', styles.rootChecked],\r\n        isExpanded && [\r\n          'is-expanded',\r\n          styles.rootExpanded,\r\n          {\r\n            selectors: {\r\n              [`:hover .${classNames.msButtonIcon}`]: styles.iconExpandedHovered,\r\n              // menuIcon falls back to rootExpandedHovered to support original behavior\r\n              [`:hover .${classNames.msButtonMenuIcon}`]: styles.menuIconExpandedHovered || styles.rootExpandedHovered,\r\n              ':hover': styles.rootExpandedHovered\r\n            }\r\n          }\r\n        ],\r\n        disabled && ['is-disabled', styles.rootDisabled],\r\n        !disabled &&\r\n          !isExpanded &&\r\n          !checked && {\r\n            selectors: {\r\n              ':hover': styles.rootHovered,\r\n              [`:hover .${classNames.msButtonLabel}`]: styles.labelHovered,\r\n              [`:hover .${classNames.msButtonIcon}`]: styles.iconHovered,\r\n              [`:hover .${classNames.msButtonDescription}`]: styles.descriptionHovered,\r\n              [`:hover .${classNames.msButtonMenuIcon}`]: styles.menuIconHovered,\r\n              ':focus': styles.rootFocused,\r\n              ':active': styles.rootPressed,\r\n              [`:active .${classNames.msButtonIcon}`]: styles.iconPressed,\r\n              [`:active .${classNames.msButtonDescription}`]: styles.descriptionPressed,\r\n              [`:active .${classNames.msButtonMenuIcon}`]: styles.menuIconPressed\r\n            }\r\n          },\r\n        disabled && checked && [styles.rootCheckedDisabled],\r\n        !disabled &&\r\n          checked && {\r\n            selectors: {\r\n              ':hover': styles.rootCheckedHovered,\r\n              ':active': styles.rootCheckedPressed\r\n            }\r\n          },\r\n        className\r\n      ],\r\n      flexContainer: [classNames.msButtonFlexContainer, styles.flexContainer],\r\n      textContainer: [classNames.msButtonTextContainer, styles.textContainer],\r\n      icon: [\r\n        classNames.msButtonIcon,\r\n        iconClassName,\r\n        styles.icon,\r\n        isExpanded && styles.iconExpanded,\r\n        checked && styles.iconChecked,\r\n        disabled && styles.iconDisabled\r\n      ],\r\n      label: [classNames.msButtonLabel, styles.label, checked && styles.labelChecked, disabled && styles.labelDisabled],\r\n      menuIcon: [\r\n        classNames.msButtonMenuIcon,\r\n        menuIconClassName,\r\n        styles.menuIcon,\r\n        checked && styles.menuIconChecked,\r\n        disabled && styles.menuIconDisabled,\r\n        !disabled &&\r\n          !isExpanded &&\r\n          !checked && {\r\n            selectors: {\r\n              ':hover': styles.menuIconHovered,\r\n              ':active': styles.menuIconPressed\r\n            }\r\n          },\r\n        isExpanded && ['is-expanded', styles.menuIconExpanded]\r\n      ],\r\n      description: [\r\n        classNames.msButtonDescription,\r\n        styles.description,\r\n        checked && styles.descriptionChecked,\r\n        disabled && styles.descriptionDisabled\r\n      ],\r\n      screenReaderText: [classNames.msButtonScreenReaderText, styles.screenReaderText]\r\n    });\r\n  }\r\n);\r\n"]}