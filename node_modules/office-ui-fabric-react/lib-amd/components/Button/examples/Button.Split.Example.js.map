{"version":3,"file":"Button.Split.Example.js","sourceRoot":"../src/","sources":["components/Button/examples/Button.Split.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { css, classNamesFunction } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { getStyles, IButtonBasicExampleStyleProps, IButtonBasicExampleStyles } from './Button.Basic.Example.styles';\r\nimport { DefaultButton, IconButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { getCustomSplitButtonStyles } from './Button.Split.Example.styles';\r\n\r\nconst alertClicked = (): void => {\r\n  alert('Clicked');\r\n};\r\n\r\nexport class ButtonSplitExample extends React.Component<IButtonProps> {\r\n  public render(): JSX.Element {\r\n    const { disabled, checked } = this.props;\r\n\r\n    const getClassNames = classNamesFunction<IButtonBasicExampleStyleProps, IButtonBasicExampleStyles>();\r\n    const classNames = getClassNames(getStyles, {});\r\n\r\n    return (\r\n      <div className={css(classNames.twoup)}>\r\n        <div>\r\n          <Label>Standard</Label>\r\n          <DefaultButton\r\n            data-automation-id=\"test\"\r\n            disabled={disabled}\r\n            checked={checked}\r\n            text=\"Create account\"\r\n            onClick={alertClicked}\r\n            split={true}\r\n            splitButtonAriaLabel={'See 2 sample options'}\r\n            aria-roledescription={'split button'}\r\n            style={{ height: '35px' }}\r\n            menuProps={{\r\n              items: [\r\n                {\r\n                  key: 'emailMessage',\r\n                  text: 'Email message',\r\n                  iconProps: { iconName: 'Mail' }\r\n                },\r\n                {\r\n                  key: 'calendarEvent',\r\n                  text: 'Calendar event',\r\n                  iconProps: { iconName: 'Calendar' }\r\n                }\r\n              ]\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Label>Primary</Label>\r\n          <DefaultButton\r\n            primary\r\n            data-automation-id=\"test\"\r\n            disabled={disabled}\r\n            checked={checked}\r\n            text=\"Create account\"\r\n            onClick={alertClicked}\r\n            split={true}\r\n            aria-roledescription={'split button'}\r\n            style={{ height: '35px' }}\r\n            menuProps={{\r\n              items: [\r\n                {\r\n                  key: 'emailMessage',\r\n                  text: 'Email message',\r\n                  iconProps: { iconName: 'Mail' }\r\n                },\r\n                {\r\n                  key: 'calendarEvent',\r\n                  text: 'Calendar event',\r\n                  iconProps: { iconName: 'Calendar' }\r\n                }\r\n              ]\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Label>Primary Action Disabled</Label>\r\n          <DefaultButton\r\n            primary\r\n            data-automation-id=\"test\"\r\n            disabled={disabled}\r\n            primaryDisabled={true}\r\n            checked={checked}\r\n            text=\"Create account\"\r\n            onClick={alertClicked}\r\n            split={true}\r\n            aria-roledescription={'split button'}\r\n            style={{ height: '35px' }}\r\n            menuProps={{\r\n              items: [\r\n                {\r\n                  key: 'emailMessage',\r\n                  text: 'Email message',\r\n                  iconProps: { iconName: 'Mail' }\r\n                },\r\n                {\r\n                  key: 'calendarEvent',\r\n                  text: 'Calendar event',\r\n                  iconProps: { iconName: 'Calendar' }\r\n                }\r\n              ]\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Label>Button Disabled</Label>\r\n          <DefaultButton\r\n            primary\r\n            data-automation-id=\"test\"\r\n            disabled={true}\r\n            allowDisabledFocus={true}\r\n            checked={checked}\r\n            text=\"Create account\"\r\n            onClick={alertClicked}\r\n            onKeyPress={alertClicked}\r\n            onKeyDown={alertClicked}\r\n            onKeyUp={alertClicked}\r\n            onMouseDown={alertClicked}\r\n            onMouseUp={alertClicked}\r\n            split={true}\r\n            aria-roledescription={'split button'}\r\n            style={{ height: '35px' }}\r\n            menuProps={{\r\n              items: [\r\n                {\r\n                  key: 'emailMessage',\r\n                  text: 'Email message',\r\n                  iconProps: { iconName: 'Mail' }\r\n                },\r\n                {\r\n                  key: 'calendarEvent',\r\n                  text: 'Calendar event',\r\n                  iconProps: { iconName: 'Calendar' }\r\n                }\r\n              ]\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class ButtonSplitCustomExample extends React.Component<IButtonProps> {\r\n  public render(): JSX.Element {\r\n    const { disabled, checked } = this.props;\r\n    const customSplitButtonStyles = getCustomSplitButtonStyles();\r\n\r\n    return (\r\n      <div>\r\n        <Label>Split button with icon and custom styles</Label>\r\n        <IconButton\r\n          data-automation-id=\"test\"\r\n          disabled={disabled}\r\n          checked={checked}\r\n          iconProps={{ iconName: 'Upload' }}\r\n          text=\"Create account\"\r\n          onClick={alertClicked}\r\n          split={true}\r\n          aria-roledescription={'split button'}\r\n          styles={customSplitButtonStyles}\r\n          menuProps={{\r\n            items: [\r\n              {\r\n                key: 'emailMessage',\r\n                text: 'Email message',\r\n                iconProps: { iconName: 'Mail' }\r\n              },\r\n              {\r\n                key: 'calendarEvent',\r\n                text: 'Calendar event',\r\n                iconProps: { iconName: 'Calendar' }\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}