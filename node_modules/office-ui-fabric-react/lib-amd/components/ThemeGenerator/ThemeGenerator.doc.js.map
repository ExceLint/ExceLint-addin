{"version":3,"file":"ThemeGenerator.doc.js","sourceRoot":"../src/","sources":["components/ThemeGenerator/ThemeGenerator.doc.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent } from 'office-ui-fabric-react/lib/Utilities';\r\n\r\nimport { loadTheme } from 'office-ui-fabric-react/lib/Styling';\r\nimport { IColor } from 'office-ui-fabric-react/lib/utilities/color/interfaces';\r\nimport { getContrastRatio, isDark } from 'office-ui-fabric-react/lib/utilities/color/shades';\r\n\r\nimport {\r\n  ThemeGenerator,\r\n  themeRulesStandardCreator,\r\n  BaseSlots,\r\n  FabricSlots,\r\n  IThemeSlotRule,\r\n  IThemeRules\r\n} from 'office-ui-fabric-react/lib/ThemeGenerator';\r\n\r\nimport { Callout } from 'office-ui-fabric-react/lib/Callout';\r\nimport { ColorPicker } from 'office-ui-fabric-react/lib/ColorPicker';\r\n\r\nimport { ChoiceGroup } from 'office-ui-fabric-react/lib/ChoiceGroup';\r\nimport { TeachingBubbleBasicExample } from '../../components/TeachingBubble/examples/TeachingBubble.Basic.Example';\r\nimport { TextFieldBasicExample } from '../TextField/examples/TextField.Basic.Example';\r\nimport { ToggleBasicExample } from '../../components/Toggle/examples/Toggle.Basic.Example';\r\nimport { ProgressIndicatorBasicExample } from '../ProgressIndicator/examples/ProgressIndicator.Basic.Example';\r\n\r\nexport interface IThemeGeneratorPageState {\r\n  themeRules: IThemeRules;\r\n  colorPickerSlotRule: IThemeSlotRule | null;\r\n  colorPickerElement: HTMLElement | null;\r\n  colorPickerVisible: boolean;\r\n}\r\n\r\nexport class ThemeGeneratorPage extends BaseComponent<{}, IThemeGeneratorPageState> {\r\n  private _semanticSlotColorChangeTimeout: number;\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    const themeRules = themeRulesStandardCreator();\r\n    ThemeGenerator.insureSlots(themeRules, isDark(themeRules[BaseSlots[BaseSlots.backgroundColor]].color!));\r\n\r\n    this.state = {\r\n      themeRules: themeRules,\r\n      colorPickerSlotRule: null,\r\n      colorPickerElement: null,\r\n      colorPickerVisible: false\r\n    };\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    // remove temp styles\r\n    const root = document.querySelector('.App-content') as HTMLElement;\r\n    if (root) {\r\n      root.style.backgroundColor = '';\r\n      root.style.color = '';\r\n    }\r\n    document.body.style.backgroundColor = '';\r\n    document.body.style.color = '';\r\n\r\n    // and apply the default theme to overwrite any existing custom theme\r\n    loadTheme({});\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { colorPickerVisible, colorPickerSlotRule, colorPickerElement } = this.state;\r\n\r\n    const fabricThemeSlots = [\r\n      this._fabricSlotWidget(FabricSlots.themeDarker),\r\n      this._fabricSlotWidget(FabricSlots.themeDark),\r\n      this._fabricSlotWidget(FabricSlots.themeDarkAlt),\r\n      this._fabricSlotWidget(FabricSlots.themePrimary),\r\n      this._fabricSlotWidget(FabricSlots.themeSecondary),\r\n      this._fabricSlotWidget(FabricSlots.themeTertiary),\r\n      this._fabricSlotWidget(FabricSlots.themeLight),\r\n      this._fabricSlotWidget(FabricSlots.themeLighter),\r\n      this._fabricSlotWidget(FabricSlots.themeLighterAlt)\r\n    ];\r\n    const fabricNeutralForegroundSlots = [\r\n      this._fabricSlotWidget(FabricSlots.black),\r\n      this._fabricSlotWidget(FabricSlots.neutralDark),\r\n      this._fabricSlotWidget(FabricSlots.neutralPrimary),\r\n      this._fabricSlotWidget(FabricSlots.neutralPrimaryAlt),\r\n      this._fabricSlotWidget(FabricSlots.neutralSecondary),\r\n      this._fabricSlotWidget(FabricSlots.neutralTertiary)\r\n    ];\r\n    const fabricNeutralBackgroundSlots = [\r\n      this._fabricSlotWidget(FabricSlots.neutralTertiaryAlt),\r\n      this._fabricSlotWidget(FabricSlots.neutralQuaternary),\r\n      this._fabricSlotWidget(FabricSlots.neutralQuaternaryAlt),\r\n      this._fabricSlotWidget(FabricSlots.neutralLight),\r\n      this._fabricSlotWidget(FabricSlots.neutralLighter),\r\n      this._fabricSlotWidget(FabricSlots.neutralLighterAlt),\r\n      this._fabricSlotWidget(FabricSlots.white)\r\n    ];\r\n\r\n    const stylingUrl = 'https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/styling';\r\n\r\n    return (\r\n      <div className=\"ms-themer\">\r\n        <div className=\"overview\">\r\n          <h2 id=\"Overview\">Overview</h2>\r\n          <p>\r\n            This tool helps you easily create all the shades and slots for a custom theme. The theme can be used by Fabric React's styling\r\n            package, see the{' '}\r\n            <a className={'themeGeneratorPageLink'} href={stylingUrl}>\r\n              documentation\r\n            </a>\r\n            .<br />\r\n            As you modify one of the three base colors, the theme will update automatically based on predefined rules. You can modify each\r\n            individual slot below as well.\r\n          </p>\r\n        </div>\r\n        {/* Hello! You've found hidden functionality for generating a theme from an image. This uses Microsoft's\r\n         * Cognitive Vision API, documented here:\r\n         * https://docs.microsoft.com/en-us/azure/cognitive-services/computer-vision/quickstarts/javascript\r\n         * We use that API to identify the most prominent background and foreground colors, and the accent color,\r\n         * and generate a theme based off of those.\r\n         * Since this API requires a personal subscription key, you'll have to enlist and insert your subscription\r\n         * key in _makeThemeFromImg() @ https://raw.githubusercontent.com/cliffkoh/office-ui-fabric-react/9c95e9b92f8caa1fe5ffb9da769ce0921a5272ed/packages/office-ui-fabric-react/src/components/ThemeGenerator/ThemeGeneratorPage.tsx\r\n         * Then, just uncomment this section. */}\r\n        {/*}\r\n        <div style={ { display: 'flex' } }>\r\n          <div>URL to image:&nbsp;</div>\r\n          <input type='text' id='imageUrl' />\r\n          <button onClick={ this._makeThemeFromImg }>Create theme from image</button>\r\n        </div>\r\n        <div id='imageDescription' />\r\n        <div><img id='imagePreview' style={ { maxHeight: '500px', maxWidth: '800px' } } /></div>\r\n        {*/}\r\n\r\n        {/* the shared popup color picker for slots */}\r\n        {colorPickerVisible && colorPickerSlotRule !== null && colorPickerSlotRule !== undefined && colorPickerElement && (\r\n          <Callout\r\n            key={colorPickerSlotRule.name}\r\n            gapSpace={10}\r\n            target={colorPickerElement}\r\n            setInitialFocus={true}\r\n            onDismiss={this._colorPickerOnDismiss}\r\n          >\r\n            <ColorPicker color={colorPickerSlotRule.color!.str} onChange={this._semanticSlotRuleChanged.bind(this, colorPickerSlotRule)} />\r\n          </Callout>\r\n        )}\r\n\r\n        {/* the three base slots, prominently displayed at the top of the page */}\r\n        <div style={{ display: 'flex' }}>\r\n          {[\r\n            this._baseColorSlotPicker(BaseSlots.primaryColor, 'Primary theme color'),\r\n            this._baseColorSlotPicker(BaseSlots.foregroundColor, 'Body text color'),\r\n            this._baseColorSlotPicker(BaseSlots.backgroundColor, 'Body background color')\r\n          ]}\r\n        </div>\r\n        <br />\r\n\r\n        {this._outputSection()}\r\n        <br />\r\n\r\n        <h2 id=\"Fabric palette\">Fabric palette</h2>\r\n        <p>\r\n          The original Fabric palette slots. These are raw colors with no prescriptive uses. Each one is a shade or tint of a base color.\r\n        </p>\r\n        <div className={'ms-themer-fabricPalette-root'}>\r\n          <div>{fabricThemeSlots}</div>\r\n          <div>\r\n            <p>generally used for text and foregrounds</p>\r\n            {fabricNeutralForegroundSlots}\r\n          </div>\r\n          <div>\r\n            <p>generally used for backgrounds</p>\r\n            {fabricNeutralBackgroundSlots}\r\n          </div>\r\n        </div>\r\n        <br />\r\n\r\n        <h2 id=\"Samples\">Samples</h2>\r\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n          <div className=\"ms-themer-example\">\r\n            <TextFieldBasicExample />\r\n          </div>\r\n          <div className=\"ms-themer-example\">\r\n            <ToggleBasicExample />\r\n            <ChoiceGroup\r\n              options={[\r\n                {\r\n                  key: 'A',\r\n                  text: 'Option A'\r\n                },\r\n                {\r\n                  key: 'B',\r\n                  text: 'Option B',\r\n                  checked: true\r\n                }\r\n              ]}\r\n              label=\"Pick one\"\r\n              required={true}\r\n            />\r\n            <ChoiceGroup\r\n              options={[\r\n                {\r\n                  key: 'C',\r\n                  text: 'Option C',\r\n                  disabled: true\r\n                },\r\n                {\r\n                  key: 'D',\r\n                  text: 'Option D',\r\n                  checked: true,\r\n                  disabled: true\r\n                }\r\n              ]}\r\n              label=\"Pick one\"\r\n              required={true}\r\n            />\r\n          </div>\r\n          <div className=\"ms-themer-example\">\r\n            <TeachingBubbleBasicExample />\r\n            <br />\r\n            <ProgressIndicatorBasicExample />\r\n          </div>\r\n        </div>\r\n\r\n        <h2 id=\"Accessibility\">Accessibility</h2>\r\n        <p>Each pair of colors below should produce legible text and have a minimum contrast ratio of 4.5.</p>\r\n        <table className=\"ms-themer-accessibilityTable\">\r\n          <thead>\r\n            <td>Sample text</td>\r\n            <td>Contrast ratio</td>\r\n            <td>Slot pair</td>\r\n          </thead>\r\n          {this._accessibilityTableBody()}\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _colorPickerOnDismiss = (): void => {\r\n    this.setState({ colorPickerVisible: false });\r\n  };\r\n\r\n  private _semanticSlotRuleChanged = (slotRule: IThemeSlotRule, ev: any, color: IColor): void => {\r\n    if (this._semanticSlotColorChangeTimeout) {\r\n      clearTimeout(this._semanticSlotColorChangeTimeout);\r\n    }\r\n    this._semanticSlotColorChangeTimeout = this._async.setTimeout(() => {\r\n      const { themeRules } = this.state;\r\n\r\n      ThemeGenerator.setSlot(slotRule, color.str, isDark(themeRules[BaseSlots[BaseSlots.backgroundColor]].color!), true, true);\r\n      this.setState({ themeRules: themeRules }, this._makeNewTheme);\r\n    }, 20);\r\n    // 20ms is low enough that you can slowly drag to change color and see that theme,\r\n    // but high enough that quick changes don't get bogged down by a million changes inbetween\r\n  };\r\n\r\n  private _onSwatchClick = (slotRule: IThemeSlotRule, ev: React.MouseEvent<HTMLElement>): void => {\r\n    const { colorPickerSlotRule, colorPickerElement } = this.state;\r\n\r\n    if (\r\n      colorPickerSlotRule !== null &&\r\n      colorPickerSlotRule !== undefined &&\r\n      !!colorPickerElement &&\r\n      colorPickerSlotRule === slotRule &&\r\n      colorPickerElement === ev.target\r\n    ) {\r\n      // same one, close it\r\n      this.setState({ colorPickerVisible: false, colorPickerSlotRule: null, colorPickerElement: null });\r\n    } else {\r\n      // new one, open it\r\n      this.setState({\r\n        colorPickerVisible: true,\r\n        colorPickerSlotRule: slotRule,\r\n        colorPickerElement: ev.target as HTMLElement\r\n      });\r\n    }\r\n  };\r\n\r\n  private _slotWidget = (slotRule: IThemeSlotRule): JSX.Element => {\r\n    return (\r\n      <div key={slotRule.name} className=\"ms-themer-slot\">\r\n        {this._colorSquareSwatchWidget(slotRule)}\r\n        <div>\r\n          <div>{slotRule.name}</div>\r\n          {!slotRule.isCustomized ? <div>Inherits from: {slotRule.inherits!.name}</div> : <div>Customized</div>}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  private _fabricSlotWidget = (fabricSlot: FabricSlots): JSX.Element => {\r\n    return this._slotWidget(this.state.themeRules[FabricSlots[fabricSlot]]);\r\n  };\r\n\r\n  private _colorSquareSwatchWidget(slotRule: IThemeSlotRule): JSX.Element {\r\n    return (\r\n      <div\r\n        key={slotRule.name}\r\n        className=\"ms-themer-swatch\"\r\n        style={{ backgroundColor: slotRule.color!.str }}\r\n        onClick={this._onSwatchClick.bind(this, slotRule)}\r\n      />\r\n    );\r\n  }\r\n\r\n  private _accessibilityRow = (foreground: FabricSlots, background: FabricSlots): JSX.Element => {\r\n    const themeRules = this.state.themeRules;\r\n    const bgc: IColor = themeRules[FabricSlots[background]].color!;\r\n    const fgc: IColor = themeRules[FabricSlots[foreground]].color!;\r\n\r\n    const contrastRatio = getContrastRatio(bgc, fgc);\r\n    let contrastRatioString = String(contrastRatio);\r\n    contrastRatioString = contrastRatioString.substr(0, contrastRatioString.indexOf('.') + 3);\r\n    if (contrastRatio < 4.5) {\r\n      contrastRatioString = '**' + contrastRatioString + '**';\r\n    }\r\n\r\n    return (\r\n      <tr key={String(foreground) + String(background)}>\r\n        <td style={{ backgroundColor: bgc.str, color: fgc.str }}>How vexingly quick daft zebras jump.</td>\r\n        <td>{contrastRatioString}</td>\r\n        <td>{FabricSlots[foreground] + ' + ' + FabricSlots[background]}</td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  private _accessibilityTableBody = (): JSX.Element => {\r\n    const accessibilityRows: JSX.Element[] = [\r\n      this._accessibilityRow(FabricSlots.neutralPrimary, FabricSlots.white), // default\r\n      // primary color also needs to be accessible, this is also strong variant default\r\n      this._accessibilityRow(FabricSlots.white, FabricSlots.themePrimary),\r\n      this._accessibilityRow(FabricSlots.neutralPrimary, FabricSlots.neutralLighter), // neutral variant default\r\n      this._accessibilityRow(FabricSlots.themeDark, FabricSlots.neutralLighter),\r\n      this._accessibilityRow(FabricSlots.neutralPrimary, FabricSlots.themeLighter)\r\n    ]; // neutral variant with primary color\r\n\r\n    // these are the text and primary colors on top of the soft variant, whose bg depends on invertedness of original theme\r\n    if (!isDark(this.state.themeRules[BaseSlots[BaseSlots.backgroundColor]].color!)) {\r\n      // is not inverted\r\n      accessibilityRows.push(\r\n        this._accessibilityRow(FabricSlots.neutralPrimary, FabricSlots.themeLighterAlt),\r\n        this._accessibilityRow(FabricSlots.themeDarkAlt, FabricSlots.themeLighterAlt)\r\n      );\r\n    } else {\r\n      // is inverted\r\n      accessibilityRows.push(\r\n        this._accessibilityRow(FabricSlots.neutralPrimary, FabricSlots.themeLight),\r\n        this._accessibilityRow(FabricSlots.themeDarkAlt, FabricSlots.themeLight)\r\n      );\r\n    }\r\n\r\n    return <tbody>{accessibilityRows}</tbody>;\r\n  };\r\n\r\n  private _outputSection = (): JSX.Element => {\r\n    const themeRules = this.state.themeRules;\r\n\r\n    // strip out the unnecessary shade slots from the final output theme\r\n    const abridgedTheme: IThemeRules = {};\r\n    for (const ruleName in themeRules) {\r\n      if (themeRules.hasOwnProperty(ruleName)) {\r\n        if (\r\n          ruleName.indexOf('ColorShade') === -1 &&\r\n          ruleName !== 'primaryColor' &&\r\n          ruleName !== 'backgroundColor' &&\r\n          ruleName !== 'foregroundColor' &&\r\n          ruleName.indexOf('body') === -1\r\n        ) {\r\n          abridgedTheme[ruleName] = themeRules[ruleName];\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h2 id=\"Output\">Output</h2>\r\n        <div className={'ms-themer-output-root'}>\r\n          <div>\r\n            <h3>JSON</h3>\r\n            <textarea readOnly={true} spellCheck={false} value={JSON.stringify(ThemeGenerator.getThemeAsJson(abridgedTheme), void 0, 2)} />\r\n          </div>\r\n          <div>\r\n            <h3>SASS</h3>\r\n            <textarea readOnly={true} spellCheck={false} value={ThemeGenerator.getThemeAsSass(abridgedTheme)} />\r\n          </div>\r\n          <div>\r\n            <h3>PowerShell</h3>\r\n            <textarea readOnly={true} spellCheck={false} value={ThemeGenerator.getThemeForPowerShell(abridgedTheme)} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  private _makeNewTheme = (): void => {\r\n    const themeAsJson: { [key: string]: string } = ThemeGenerator.getThemeAsJson(this.state.themeRules);\r\n    console.log('New theme...', themeAsJson);\r\n\r\n    const finalTheme = loadTheme({\r\n      ...{ palette: themeAsJson },\r\n      isInverted: isDark(this.state.themeRules[BaseSlots[BaseSlots.backgroundColor]].color!)\r\n    });\r\n\r\n    const root = document.querySelector('.App-content') as HTMLElement;\r\n    if (root) {\r\n      root.style.backgroundColor = finalTheme.semanticColors.bodyBackground;\r\n      root.style.color = finalTheme.semanticColors.bodyText;\r\n    }\r\n\r\n    document.body.style.backgroundColor = finalTheme.semanticColors.bodyBackground;\r\n    document.body.style.color = finalTheme.semanticColors.bodyText;\r\n    console.log('New theme:', finalTheme);\r\n  };\r\n\r\n  private _baseColorSlotPicker = (baseSlot: BaseSlots, title: string): JSX.Element => {\r\n    let colorChangeTimeout: number;\r\n\r\n    const onChange = (ev: any, newColor: IColor): void => {\r\n      if (colorChangeTimeout) {\r\n        clearTimeout(colorChangeTimeout);\r\n      }\r\n      colorChangeTimeout = this._async.setTimeout(() => {\r\n        const themeRules = this.state.themeRules;\r\n        const currentIsDark = isDark(themeRules[BaseSlots[BaseSlots.backgroundColor]].color!);\r\n        ThemeGenerator.setSlot(themeRules[BaseSlots[baseSlot]], newColor.str, currentIsDark, true, true);\r\n        if (currentIsDark !== isDark(themeRules[BaseSlots[BaseSlots.backgroundColor]].color!)) {\r\n          // isInverted got swapped, so need to refresh slots with new shading rules\r\n          ThemeGenerator.insureSlots(themeRules, !currentIsDark);\r\n        }\r\n        this.setState({ themeRules: themeRules }, this._makeNewTheme);\r\n      }, 20);\r\n      // 20ms is low enough that you can slowly drag to change color and see that theme,\r\n      // but high enough that quick changes don't get bogged down by a million changes inbetween\r\n    };\r\n\r\n    return (\r\n      <div className=\"ms-themer-paletteSlot\" key={baseSlot}>\r\n        <h3>{title}</h3>\r\n        <div>\r\n          <ColorPicker\r\n            key={'baseslotcolorpicker' + baseSlot}\r\n            color={this.state.themeRules[BaseSlots[baseSlot]].color!.str}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"ms-themer-swatchBg\" style={{ backgroundColor: this.state.themeRules[BaseSlots[baseSlot]].color!.str }}>\r\n          <div className=\"ms-themer-swatch\" style={{ backgroundColor: this.state.themeRules[BaseSlots[baseSlot]].color!.str }} />\r\n          {[\r\n            this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade1']),\r\n            this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade2']),\r\n            this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade3']),\r\n            this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade4']),\r\n            this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade5']),\r\n            this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade6']),\r\n            this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade7']),\r\n            this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade8'])\r\n          ]}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n"]}