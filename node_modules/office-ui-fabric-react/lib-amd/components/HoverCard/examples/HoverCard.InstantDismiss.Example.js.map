{"version":3,"file":"HoverCard.InstantDismiss.Example.js","sourceRoot":"../src/","sources":["components/HoverCard/examples/HoverCard.InstantDismiss.Example.tsx"],"names":[],"mappings":";;;IAMA,IAAM,UAAU,GAAG,wBAAc,CAAC;QAChC,SAAS,EAAE;YACT,KAAK,EAAE,GAAG;YACV,MAAM,EAAE,GAAG;YACX,OAAO,EAAE,MAAM;YACf,UAAU,EAAE,QAAQ;YACpB,cAAc,EAAE,QAAQ;SACzB;QACD,MAAM,EAAE;YACN,UAAU,EAAE,KAAK;YACjB,OAAO,EAAE,cAAc;YACvB,MAAM,EAAE,oBAAoB;YAC5B,OAAO,EAAE,CAAC;YACV,YAAY,EAAE,CAAC;SAChB;KACF,CAAC,CAAC;IAEH;QAAoD,0DAAuB;QAA3E;YAAA,qEA4CC;YA3CS,gBAAU,GAAG,KAAK,CAAC,SAAS,EAAc,CAAC;YA0B3C,wBAAkB,GAAG;gBAC3B,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,SAAS;oBAClC,oBAAC,sBAAa,IAAC,OAAO,EAAE,KAAI,CAAC,mBAAmB,EAAE,IAAI,EAAC,iBAAiB,GAAG,CACvE,CACP,CAAC;YACJ,CAAC,CAAC;YAEM,yBAAmB,GAAG;gBAC5B,IAAI,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE;oBAC3B,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;iBACnC;YACH,CAAC,CAAC;YAEM,iBAAW,GAAG;gBACpB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YACjC,CAAC,CAAC;;QACJ,CAAC;QAzCQ,+CAAM,GAAb;YACE,IAAM,cAAc,GAAoB;gBACtC,iBAAiB,EAAE,IAAI,CAAC,kBAAkB;aAC3C,CAAC;YAEF,OAAO,CACL,oBAAC,eAAM;gBACL;;oBACyE,2CAAgB;;oBAAyB,GAAG;oBACnH,8CAAmB;6BACjB;gBACJ,oBAAC,qBAAS,IACR,gBAAgB,EAAE,IAAI,EACtB,IAAI,EAAE,yBAAa,CAAC,KAAK,EACzB,cAAc,EAAE,cAAc,EAC9B,YAAY,EAAE,IAAI,CAAC,UAAU,EAC7B,UAAU,EAAE,IAAI,CAAC,WAAW;oBAE5B,8BAAM,SAAS,EAAE,UAAU,CAAC,MAAM,oBAAsB,CAC9C,CACL,CACV,CAAC;QACJ,CAAC;QAmBH,qCAAC;IAAD,CAAC,AA5CD,CAAoD,KAAK,CAAC,SAAS,GA4ClE;IA5CY,wEAA8B","sourcesContent":["import * as React from 'react';\r\nimport { HoverCard, IHoverCard, IPlainCardProps, HoverCardType } from 'office-ui-fabric-react/lib/HoverCard';\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\r\n\r\nconst classNames = mergeStyleSets({\r\n  plainCard: {\r\n    width: 200,\r\n    height: 200,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  target: {\r\n    fontWeight: '600',\r\n    display: 'inline-block',\r\n    border: '1px dashed #605e5c',\r\n    padding: 5,\r\n    borderRadius: 2\r\n  }\r\n});\r\n\r\nexport class HoverCardInstantDismissExample extends React.Component<{}, {}> {\r\n  private _hoverCard = React.createRef<IHoverCard>();\r\n\r\n  public render() {\r\n    const plainCardProps: IPlainCardProps = {\r\n      onRenderPlainCard: this._onRenderPlainCard\r\n    };\r\n\r\n    return (\r\n      <Fabric>\r\n        <p>\r\n          In cases where an instant dismiss of the card is needed, public method <i>dismiss()</i> can be used through its{' '}\r\n          <i>componentRef</i> prop.\r\n        </p>\r\n        <HoverCard\r\n          cardDismissDelay={2000}\r\n          type={HoverCardType.plain}\r\n          plainCardProps={plainCardProps}\r\n          componentRef={this._hoverCard}\r\n          onCardHide={this._onCardHide}\r\n        >\r\n          <span className={classNames.target}>Hover Over Me</span>\r\n        </HoverCard>\r\n      </Fabric>\r\n    );\r\n  }\r\n\r\n  private _onRenderPlainCard = (): JSX.Element => {\r\n    return (\r\n      <div className={classNames.plainCard}>\r\n        <DefaultButton onClick={this._instantDismissCard} text=\"Instant Dismiss\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  private _instantDismissCard = (): void => {\r\n    if (this._hoverCard.current) {\r\n      this._hoverCard.current.dismiss();\r\n    }\r\n  };\r\n\r\n  private _onCardHide = (): void => {\r\n    console.log('I am now hidden');\r\n  };\r\n}\r\n"]}