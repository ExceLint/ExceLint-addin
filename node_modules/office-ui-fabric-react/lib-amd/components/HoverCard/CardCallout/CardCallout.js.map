{"version":3,"file":"CardCallout.js","sourceRoot":"../src/","sources":["components/HoverCard/CardCallout/CardCallout.tsx"],"names":[],"mappings":";;;IAaa,QAAA,WAAW,GAAG,UAAC,KAAwB;QAEhD,IAAA,mBAAY,EAAZ,iCAAY,EACZ,0BAAgD,EAAhD,uFAAgD,EAChD,iDAAoB,EACpB,mCAAa,EACb,6BAAU,EACV,2BAAS,EACT,uBAAO,EACP,2BAAS,EACT,+BAAW,EACX,uBAAO,CACC;QAEV,IAAM,YAAY,wBACb,0BAAc,CAAC,KAAK,EAAE,yBAAa,CAAC,IACvC,SAAS,EAAE,SAAS,EACpB,MAAM,EAAE,aAAa,EACrB,aAAa,EAAE,KAAK,EACpB,eAAe,EAAE,eAAe,EAChC,oBAAoB,EAAE,oBAAoB,EAC1C,WAAW,EAAE,WAAW,EACxB,cAAc,EAAE,EAAE,EAClB,SAAS,EAAE,OAAO,EAClB,QAAQ,EAAE,QAAQ,GACnB,CAAC;QAEF,OAAO,CACL,oBAAC,KAAK,CAAC,QAAQ,QACZ,SAAS,CAAC,CAAC,CAAC,CACX,oBAAC,0BAAgB,uBACX,YAAY,IAChB,cAAc,EAAE;gBACd,oBAAoB,EAAE,KAAK;gBAC3B,2BAA2B,EAAE,IAAI;gBACjC,iBAAiB,EAAE,CAAC,UAAU;aAC/B,KAEA,OAAO,CACS,CACpB,CAAC,CAAC,CAAC,CACF,oBAAC,iBAAO,uBAAK,YAAY,GAAG,OAAO,CAAW,CAC/C,CACc,CAClB,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\r\n\r\nimport { divProperties, getNativeProps } from '../../../Utilities';\r\nimport { Callout } from '../../../Callout';\r\nimport { DirectionalHint } from '../../../common/DirectionalHint';\r\nimport { IBaseCardProps } from '../BaseCard.types';\r\nimport { FocusTrapCallout, ICalloutProps } from '../../../Callout';\r\n\r\nexport interface ICardCalloutProps extends IBaseCardProps<{}, {}, {}> {\r\n  finalHeight?: number;\r\n  content?: JSX.Element;\r\n}\r\n\r\nexport const CardCallout = (props: ICardCalloutProps) => {\r\n  const {\r\n    gapSpace = 0,\r\n    directionalHint = DirectionalHint.bottomLeftEdge,\r\n    directionalHintFixed,\r\n    targetElement,\r\n    firstFocus,\r\n    trapFocus,\r\n    onLeave,\r\n    className,\r\n    finalHeight,\r\n    content\r\n  } = props;\r\n\r\n  const calloutProps: ICalloutProps = {\r\n    ...getNativeProps(props, divProperties),\r\n    className: className,\r\n    target: targetElement,\r\n    isBeakVisible: false,\r\n    directionalHint: directionalHint,\r\n    directionalHintFixed: directionalHintFixed,\r\n    finalHeight: finalHeight,\r\n    minPagePadding: 24,\r\n    onDismiss: onLeave,\r\n    gapSpace: gapSpace\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {trapFocus ? (\r\n        <FocusTrapCallout\r\n          {...calloutProps}\r\n          focusTrapProps={{\r\n            forceFocusInsideTrap: false,\r\n            isClickableOutsideFocusTrap: true,\r\n            disableFirstFocus: !firstFocus\r\n          }}\r\n        >\r\n          {content}\r\n        </FocusTrapCallout>\r\n      ) : (\r\n        <Callout {...calloutProps}>{content}</Callout>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n"]}