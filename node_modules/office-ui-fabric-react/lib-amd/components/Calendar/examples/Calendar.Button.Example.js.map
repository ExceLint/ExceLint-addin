{"version":3,"file":"Calendar.Button.Example.js","sourceRoot":"../src/","sources":["components/Calendar/examples/Calendar.Button.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["// @codepen\r\nimport * as React from 'react';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Callout, DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\r\nimport { Calendar, DayOfWeek } from 'office-ui-fabric-react/lib/Calendar';\r\nimport { FocusTrapZone } from 'office-ui-fabric-react/lib/FocusTrapZone';\r\n\r\nconst DayPickerStrings = {\r\n  months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n\r\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n\r\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n\r\n  shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\r\n\r\n  goToToday: 'Go to today'\r\n};\r\n\r\nexport interface ICalendarButtonExampleState {\r\n  showCalendar: boolean;\r\n  selectedDate: Date | null;\r\n}\r\n\r\nexport interface ICalendarButtonExampleProps {\r\n  isDayPickerVisible?: boolean;\r\n  isMonthPickerVisible?: boolean;\r\n  highlightCurrentMonth?: boolean;\r\n  highlightSelectedMonth?: boolean;\r\n  buttonString?: string;\r\n  showMonthPickerAsOverlay?: boolean;\r\n  showGoToToday?: boolean;\r\n}\r\n\r\nexport class CalendarButtonExample extends React.Component<ICalendarButtonExampleProps, ICalendarButtonExampleState> {\r\n  public static defaultProps: ICalendarButtonExampleProps = {\r\n    showMonthPickerAsOverlay: false,\r\n    isDayPickerVisible: true,\r\n    isMonthPickerVisible: true,\r\n    showGoToToday: true,\r\n    buttonString: 'Click for Calendar'\r\n  };\r\n\r\n  private _calendarButtonElement: HTMLElement;\r\n\r\n  public constructor(props: ICalendarButtonExampleProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showCalendar: false,\r\n      selectedDate: null\r\n    };\r\n\r\n    this._onClick = this._onClick.bind(this);\r\n    this._onDismiss = this._onDismiss.bind(this);\r\n    this._onSelectDate = this._onSelectDate.bind(this);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div>\r\n        <div ref={calendarBtn => (this._calendarButtonElement = calendarBtn!)}>\r\n          <DefaultButton\r\n            onClick={this._onClick}\r\n            text={!this.state.selectedDate ? this.props.buttonString : this.state.selectedDate.toLocaleDateString()}\r\n          />\r\n        </div>\r\n        {this.state.showCalendar && (\r\n          <Callout\r\n            isBeakVisible={false}\r\n            className=\"ms-DatePicker-callout\"\r\n            gapSpace={0}\r\n            doNotLayer={false}\r\n            target={this._calendarButtonElement}\r\n            directionalHint={DirectionalHint.bottomLeftEdge}\r\n            onDismiss={this._onDismiss}\r\n            setInitialFocus={true}\r\n          >\r\n            <FocusTrapZone isClickableOutsideFocusTrap={true}>\r\n              <Calendar\r\n                onSelectDate={this._onSelectDate}\r\n                onDismiss={this._onDismiss}\r\n                isMonthPickerVisible={this.props.isMonthPickerVisible}\r\n                value={this.state.selectedDate!}\r\n                firstDayOfWeek={DayOfWeek.Sunday}\r\n                strings={DayPickerStrings}\r\n                isDayPickerVisible={this.props.isDayPickerVisible}\r\n                highlightCurrentMonth={this.props.highlightCurrentMonth}\r\n                highlightSelectedMonth={this.props.highlightSelectedMonth}\r\n                showMonthPickerAsOverlay={this.props.showMonthPickerAsOverlay}\r\n                showGoToToday={this.props.showGoToToday}\r\n              />\r\n            </FocusTrapZone>\r\n          </Callout>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onClick(event: any): void {\r\n    this.setState((prevState: ICalendarButtonExampleState) => {\r\n      prevState.showCalendar = !prevState.showCalendar;\r\n      return prevState;\r\n    });\r\n  }\r\n\r\n  private _onDismiss(): void {\r\n    this.setState((prevState: ICalendarButtonExampleState) => {\r\n      prevState.showCalendar = false;\r\n      return prevState;\r\n    });\r\n  }\r\n\r\n  private _onSelectDate(date: Date): void {\r\n    this.setState((prevState: ICalendarButtonExampleState) => {\r\n      prevState.showCalendar = false;\r\n      prevState.selectedDate = date;\r\n      return prevState;\r\n    });\r\n  }\r\n}\r\n"]}