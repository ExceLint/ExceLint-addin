{"version":3,"file":"CalendarMonth.js","sourceRoot":"../src/","sources":["components/Calendar/CalendarMonth.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, KeyCodes, css, getRTL, IRefObject } from '../../Utilities';\r\nimport { ICalendarStrings, ICalendarIconStrings, ICalendarFormatDateCallbacks } from './Calendar.types';\r\nimport { FocusZone } from '../../FocusZone';\r\nimport {\r\n  addYears,\r\n  setMonth,\r\n  getYearStart,\r\n  getYearEnd,\r\n  getMonthStart,\r\n  getMonthEnd,\r\n  compareDatePart\r\n} from '../../utilities/dateMath/DateMath';\r\nimport { Icon } from '../../Icon';\r\nimport * as stylesImport from './Calendar.scss';\r\nimport { CalendarYear, ICalendarYearRange } from './CalendarYear';\r\nconst styles: any = stylesImport;\r\n\r\nexport interface ICalendarMonth {\r\n  focus(): void;\r\n}\r\n\r\nexport interface ICalendarMonthProps extends React.ClassAttributes<CalendarMonth> {\r\n  componentRef?: IRefObject<ICalendarMonth>;\r\n  navigatedDate: Date;\r\n  selectedDate: Date;\r\n  strings: ICalendarStrings;\r\n  onNavigateDate: (date: Date, focusOnNavigatedDay: boolean) => void;\r\n  today?: Date;\r\n  highlightCurrentMonth: boolean;\r\n  highlightSelectedMonth: boolean;\r\n  onHeaderSelect?: (focus: boolean) => void;\r\n  navigationIcons: ICalendarIconStrings;\r\n  dateTimeFormatter: ICalendarFormatDateCallbacks;\r\n  minDate?: Date;\r\n  maxDate?: Date;\r\n  yearPickerHidden?: boolean;\r\n}\r\n\r\nexport interface ICalendarMonthState {\r\n  /** State used to show/hide month picker */\r\n  isYearPickerVisible?: boolean;\r\n}\r\n\r\nexport class CalendarMonth extends BaseComponent<ICalendarMonthProps, ICalendarMonthState> {\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n    navigatedMonth: HTMLElement;\r\n  };\r\n\r\n  private _selectMonthCallbacks: (() => void)[];\r\n  private _calendarYearRef: CalendarYear;\r\n  private _focusOnUpdate: boolean;\r\n\r\n  public constructor(props: ICalendarMonthProps) {\r\n    super(props);\r\n\r\n    this._selectMonthCallbacks = [];\r\n    props.strings.shortMonths.map((month, index) => {\r\n      this._selectMonthCallbacks[index] = this._onSelectMonth.bind(this, index);\r\n    });\r\n\r\n    this._isCurrentMonth = this._isCurrentMonth.bind(this);\r\n    this._onSelectNextYear = this._onSelectNextYear.bind(this);\r\n    this._onSelectPrevYear = this._onSelectPrevYear.bind(this);\r\n    this._onSelectMonth = this._onSelectMonth.bind(this);\r\n\r\n    this.state = { isYearPickerVisible: false };\r\n  }\r\n\r\n  public componentDidUpdate(): void {\r\n    if (this._focusOnUpdate) {\r\n      this.focus();\r\n      this._focusOnUpdate = false;\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      navigatedDate,\r\n      selectedDate,\r\n      strings,\r\n      today,\r\n      highlightCurrentMonth,\r\n      highlightSelectedMonth,\r\n      navigationIcons,\r\n      dateTimeFormatter,\r\n      minDate,\r\n      maxDate,\r\n      yearPickerHidden\r\n    } = this.props;\r\n\r\n    if (this.state.isYearPickerVisible) {\r\n      // default the year picker to the current navigated date\r\n      const currentSelectedDate = navigatedDate ? navigatedDate.getFullYear() : undefined;\r\n      return (\r\n        <CalendarYear\r\n          key={'calendarYear_' + (currentSelectedDate && currentSelectedDate.toString())}\r\n          minYear={minDate ? minDate.getFullYear() : undefined}\r\n          maxYear={maxDate ? maxDate.getFullYear() : undefined}\r\n          onSelectYear={this._onSelectYear}\r\n          navigationIcons={navigationIcons}\r\n          onHeaderSelect={this._onYearPickerHeaderSelect}\r\n          selectedYear={currentSelectedDate}\r\n          onRenderYear={this._onRenderYear}\r\n          strings={{\r\n            rangeAriaLabel: this._yearRangeToString\r\n          }}\r\n          ref={this._onCalendarYearRef}\r\n        />\r\n      );\r\n    }\r\n\r\n    const leftNavigationIcon = navigationIcons.leftNavigation;\r\n    const rightNavigationIcon = navigationIcons.rightNavigation;\r\n\r\n    // determine if previous/next years are in bounds\r\n    const isPrevYearInBounds = minDate ? compareDatePart(minDate, getYearStart(navigatedDate)) < 0 : true;\r\n    const isNextYearInBounds = maxDate ? compareDatePart(getYearEnd(navigatedDate), maxDate) < 0 : true;\r\n\r\n    return (\r\n      <div className={css('ms-DatePicker-monthPicker', styles.monthPicker)}>\r\n        <div className={css('ms-DatePicker-header', styles.header)}>\r\n          {this.props.onHeaderSelect || !yearPickerHidden ? (\r\n            <div\r\n              className={css('ms-DatePicker-currentYear js-showYearPicker', styles.currentYear, styles.headerToggleView)}\r\n              onClick={this._onHeaderSelect}\r\n              onKeyDown={this._onHeaderKeyDown}\r\n              aria-label={dateTimeFormatter.formatYear(navigatedDate)}\r\n              role=\"button\"\r\n              tabIndex={0}\r\n            >\r\n              {dateTimeFormatter.formatYear(navigatedDate)}\r\n            </div>\r\n          ) : (\r\n            <div className={css('ms-DatePicker-currentYear js-showYearPicker', styles.currentYear)}>\r\n              {dateTimeFormatter.formatYear(navigatedDate)}\r\n            </div>\r\n          )}\r\n          <div className={css('ms-DatePicker-yearComponents', styles.yearComponents)}>\r\n            <div className={css('ms-DatePicker-navContainer', styles.navContainer)}>\r\n              <button\r\n                className={css('ms-DatePicker-prevYear js-prevYear', styles.prevYear, {\r\n                  ['ms-DatePicker-prevYear--disabled ' + styles.prevYearIsDisabled]: !isPrevYearInBounds\r\n                })}\r\n                disabled={!isPrevYearInBounds}\r\n                onClick={isPrevYearInBounds ? this._onSelectPrevYear : undefined}\r\n                onKeyDown={isPrevYearInBounds ? this._onSelectPrevYearKeyDown : undefined}\r\n                aria-label={\r\n                  strings.prevYearAriaLabel\r\n                    ? strings.prevYearAriaLabel + ' ' + dateTimeFormatter.formatYear(addYears(navigatedDate, -1))\r\n                    : undefined\r\n                }\r\n                role=\"button\"\r\n                type=\"button\"\r\n              >\r\n                <Icon iconName={getRTL() ? rightNavigationIcon : leftNavigationIcon} />\r\n              </button>\r\n              <button\r\n                className={css('ms-DatePicker-nextYear js-nextYear', styles.nextYear, {\r\n                  ['ms-DatePicker-nextYear--disabled ' + styles.nextYearIsDisabled]: !isNextYearInBounds\r\n                })}\r\n                disabled={!isNextYearInBounds}\r\n                onClick={isNextYearInBounds ? this._onSelectNextYear : undefined}\r\n                onKeyDown={isNextYearInBounds ? this._onSelectNextYearKeyDown : undefined}\r\n                aria-label={\r\n                  strings.nextYearAriaLabel\r\n                    ? strings.nextYearAriaLabel + ' ' + dateTimeFormatter.formatYear(addYears(navigatedDate, 1))\r\n                    : undefined\r\n                }\r\n                role=\"button\"\r\n                type=\"button\"\r\n              >\r\n                <Icon iconName={getRTL() ? leftNavigationIcon : rightNavigationIcon} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <FocusZone>\r\n          <div className={css('ms-DatePicker-optionGrid', styles.optionGrid)} role=\"grid\" aria-readonly=\"true\">\r\n            <div role=\"row\">\r\n              {strings.shortMonths.map((month, index) => {\r\n                const indexedMonth = setMonth(navigatedDate, index);\r\n                const isCurrentMonth = this._isCurrentMonth(index, navigatedDate.getFullYear(), today!);\r\n                const isNavigatedMonth = navigatedDate.getMonth() === index;\r\n                const isSelectedMonth = selectedDate.getMonth() === index;\r\n                const isSelectedYear = selectedDate.getFullYear() === navigatedDate.getFullYear();\r\n                const isInBounds =\r\n                  (minDate ? compareDatePart(minDate, getMonthEnd(indexedMonth)) < 1 : true) &&\r\n                  (maxDate ? compareDatePart(getMonthStart(indexedMonth), maxDate) < 1 : true);\r\n\r\n                return (\r\n                  <button\r\n                    role={'gridcell'}\r\n                    className={css('ms-DatePicker-monthOption', styles.monthOption, {\r\n                      ['ms-DatePicker-day--today ' + styles.monthIsCurrentMonth]: highlightCurrentMonth && isCurrentMonth!,\r\n                      ['ms-DatePicker-day--highlighted ' + styles.monthIsHighlighted]:\r\n                        (highlightCurrentMonth || highlightSelectedMonth) && isSelectedMonth && isSelectedYear,\r\n                      ['ms-DatePicker-monthOption--disabled ' + styles.monthOptionIsDisabled]: !isInBounds\r\n                    })}\r\n                    disabled={!isInBounds}\r\n                    key={index}\r\n                    onClick={isInBounds ? this._selectMonthCallbacks[index] : undefined}\r\n                    onKeyDown={isInBounds ? this._onSelectMonthKeyDown(index) : undefined}\r\n                    aria-label={dateTimeFormatter.formatMonthYear(indexedMonth, strings)}\r\n                    aria-selected={isCurrentMonth || isNavigatedMonth}\r\n                    data-is-focusable={isInBounds ? true : undefined}\r\n                    ref={isNavigatedMonth ? 'navigatedMonth' : undefined}\r\n                    type=\"button\"\r\n                  >\r\n                    {month}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </FocusZone>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public focus() {\r\n    if (this._calendarYearRef) {\r\n      this._calendarYearRef.focus();\r\n    } else if (this.refs.navigatedMonth) {\r\n      this.refs.navigatedMonth.tabIndex = 0;\r\n      this.refs.navigatedMonth.focus();\r\n    }\r\n  }\r\n\r\n  private _onCalendarYearRef = (ref: CalendarYear) => {\r\n    this._calendarYearRef = ref;\r\n  };\r\n\r\n  private _isCurrentMonth(month: number, year: number, today: Date): boolean {\r\n    return today.getFullYear() === year && today.getMonth() === month;\r\n  }\r\n\r\n  private _onKeyDown = (callback: () => void, ev: React.KeyboardEvent<HTMLElement>): void => {\r\n    if (ev.which === KeyCodes.enter) {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  private _onSelectYear = (selectedYear: number) => {\r\n    this._focusOnUpdate = true;\r\n    const { navigatedDate, onNavigateDate, maxDate, minDate } = this.props;\r\n    const navYear = navigatedDate.getFullYear();\r\n    if (navYear !== selectedYear) {\r\n      let newNavigationDate = new Date(navigatedDate.getTime());\r\n      newNavigationDate.setFullYear(selectedYear);\r\n      // for min and max dates, adjust the new navigation date - perhaps this should be\r\n      // checked on the master navigation date handler (i.e. in Calendar)\r\n      if (maxDate && newNavigationDate > maxDate) {\r\n        newNavigationDate = setMonth(newNavigationDate, maxDate.getMonth());\r\n      } else if (minDate && newNavigationDate < minDate) {\r\n        newNavigationDate = setMonth(newNavigationDate, minDate.getMonth());\r\n      }\r\n      onNavigateDate(newNavigationDate, true);\r\n    }\r\n    this.setState({ isYearPickerVisible: false });\r\n  };\r\n\r\n  private _yearToString = (year: number) => {\r\n    const { navigatedDate, dateTimeFormatter } = this.props;\r\n    if (dateTimeFormatter) {\r\n      // create a date based on the current nav date\r\n      const yearFormattingDate = new Date(navigatedDate.getTime());\r\n      yearFormattingDate.setFullYear(year);\r\n      return dateTimeFormatter.formatYear(yearFormattingDate);\r\n    }\r\n    return String(year);\r\n  };\r\n\r\n  private _yearRangeToString = (yearRange: ICalendarYearRange) => {\r\n    return `${this._yearToString(yearRange.fromYear)} - ${this._yearToString(yearRange.toYear)}`;\r\n  };\r\n\r\n  private _onRenderYear = (year: number) => {\r\n    return this._yearToString(year);\r\n  };\r\n\r\n  private _onSelectNextYear = (): void => {\r\n    const { navigatedDate, onNavigateDate } = this.props;\r\n    onNavigateDate(addYears(navigatedDate, 1), false);\r\n  };\r\n\r\n  private _onSelectNextYearKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\r\n    if (ev.which === KeyCodes.enter) {\r\n      this._onKeyDown(this._onSelectNextYear, ev);\r\n    }\r\n  };\r\n\r\n  private _onSelectPrevYear = (): void => {\r\n    const { navigatedDate, onNavigateDate } = this.props;\r\n    onNavigateDate(addYears(navigatedDate, -1), false);\r\n  };\r\n\r\n  private _onSelectPrevYearKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\r\n    if (ev.which === KeyCodes.enter) {\r\n      this._onKeyDown(this._onSelectPrevYear, ev);\r\n    }\r\n  };\r\n\r\n  private _onSelectMonthKeyDown = (index: number): ((ev: React.KeyboardEvent<HTMLElement>) => void) => {\r\n    return (ev: React.KeyboardEvent<HTMLElement>) => this._onKeyDown(() => this._onSelectMonth(index), ev);\r\n  };\r\n\r\n  private _onSelectMonth = (newMonth: number): void => {\r\n    const { navigatedDate, onNavigateDate, onHeaderSelect } = this.props;\r\n\r\n    // If header is clickable the calendars are overlayed, switch back to day picker when month is clicked\r\n    if (onHeaderSelect) {\r\n      onHeaderSelect(true);\r\n    }\r\n    onNavigateDate(setMonth(navigatedDate, newMonth), true);\r\n  };\r\n\r\n  private _onHeaderSelect = (): void => {\r\n    const { onHeaderSelect, yearPickerHidden } = this.props;\r\n    if (!yearPickerHidden) {\r\n      this._focusOnUpdate = true;\r\n      this.setState({ isYearPickerVisible: true });\r\n    } else if (onHeaderSelect) {\r\n      onHeaderSelect(true);\r\n    }\r\n  };\r\n\r\n  private _onYearPickerHeaderSelect = (focus: boolean): void => {\r\n    this._focusOnUpdate = focus;\r\n    this.setState({ isYearPickerVisible: false });\r\n  };\r\n\r\n  private _onHeaderKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\r\n    const { onHeaderSelect } = this.props;\r\n    if (onHeaderSelect && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\r\n      onHeaderSelect(true);\r\n    }\r\n  };\r\n}\r\n"]}