{"version":3,"file":"Keytips.Button.Example.js","sourceRoot":"../src/","sources":["components/Keytip/examples/Keytips.Button.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { DefaultButton, CompoundButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { keytipMap } from './KeytipSetup';\r\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\r\n\r\nexport interface IKeytipsButtonExampleState {\r\n  btnDisabled: boolean;\r\n}\r\n\r\nexport class KeytipsButtonExample extends React.Component<{}, IKeytipsButtonExampleState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      btnDisabled: false\r\n    };\r\n  }\r\n\r\n  /* tslint:disable:jsx-ban-props jsx-no-lambda */\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <p>When multiple Keytips start with the same character, typing that character will filter the visible keytips.</p>\r\n        <DefaultButton\r\n          className=\"u-marginRight\"\r\n          keytipProps={keytipMap.Button}\r\n          text=\"Button\"\r\n          onClick={() => {\r\n            console.log('Button');\r\n          }}\r\n        />\r\n        <CompoundButton\r\n          className=\"u-marginRight u-marginBottom\"\r\n          keytipProps={keytipMap.CompoundButton}\r\n          text=\"Compound Button\"\r\n          secondaryText={'With a Keytip'}\r\n          onClick={() => {\r\n            console.log('Compound Button');\r\n          }}\r\n        />\r\n        <DefaultButton\r\n          className=\"u-marginRight\"\r\n          keytipProps={keytipMap.ButtonWithMenu}\r\n          text=\"Button with Menu\"\r\n          onClick={() => {\r\n            console.log('Button with Menu');\r\n          }}\r\n          menuProps={{\r\n            items: [\r\n              {\r\n                key: 'buttonMenuItem1',\r\n                text: 'Menu Item 1',\r\n                keytipProps: keytipMap.ButtonMenuItem1\r\n              },\r\n              {\r\n                key: 'buttonMenuItem2',\r\n                text: 'Menu Item 2',\r\n                keytipProps: keytipMap.ButtonMenuItem2\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n        <DefaultButton\r\n          className=\"u-marginRight\"\r\n          keytipProps={keytipMap.SplitButton}\r\n          text=\"Split Button\"\r\n          split={true}\r\n          onClick={() => {\r\n            console.log('Split Button');\r\n          }}\r\n          menuProps={{\r\n            items: [\r\n              {\r\n                key: 'splitButtonMenuButton1',\r\n                text: 'Split Button Menu Item 1',\r\n                keytipProps: keytipMap.SplitButtonMenuItem1\r\n              },\r\n              {\r\n                key: 'splitButtonMenuButton2',\r\n                text: 'Split Button Menu Item 2',\r\n                keytipProps: keytipMap.SplitButtonMenuItem2\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n        <DefaultButton text=\"I do not have a keytip\" />\r\n        <p>The 'offset' prop can be used to position the keytip a set distance from the top-left corner of the element.</p>\r\n        <DefaultButton\r\n          className=\"u-marginBottom\"\r\n          keytipProps={keytipMap.ButtonOffset}\r\n          text=\"Button keytip offset 10x10\"\r\n          onClick={() => {\r\n            console.log('Button');\r\n          }}\r\n        />\r\n        <p>When a Keytip's corresponding component is disabled, the keytip still appears but cannot be triggered.</p>\r\n        <Toggle onText={'Enabled'} offText={'Disabled'} defaultChecked={!this.state.btnDisabled} onChange={this._toggleDisabled} />\r\n        <DefaultButton\r\n          keytipProps={keytipMap.DisabledButton}\r\n          disabled={this.state.btnDisabled}\r\n          text={(this.state.btnDisabled ? 'Disabled' : 'Enabled') + ' Button'}\r\n          onClick={() => {\r\n            console.log('Disabled Button');\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _toggleDisabled = (ev: React.MouseEvent<HTMLElement>, checked: boolean) => {\r\n    this.setState({ btnDisabled: !checked });\r\n  };\r\n}\r\n"]}