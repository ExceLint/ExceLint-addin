{"version":3,"file":"Text.Ramp.Example.js","sourceRoot":"../src/","sources":["components/Text/examples/Text.Ramp.Example.tsx"],"names":[],"mappings":";;;IAYA,IAAM,QAAQ,GAAG,+CAA+C,CAAC;IAMjE,IAAM,QAAQ,GAAkC;QAC9C,EAAE,IAAI,EAAE,MAAM,EAAE;QAChB,EAAE,IAAI,EAAE,QAAQ,EAAE;QAClB,EAAE,IAAI,EAAE,OAAO,EAAE;QACjB,EAAE,IAAI,EAAE,WAAW,EAAE;QACrB,EAAE,IAAI,EAAE,QAAQ,EAAE;QAClB,EAAE,IAAI,EAAE,YAAY,EAAE;QACtB,EAAE,IAAI,EAAE,OAAO,EAAE;QACjB,EAAE,IAAI,EAAE,QAAQ,EAAE;QAClB,EAAE,IAAI,EAAE,SAAS,EAAE;QACnB,EAAE,IAAI,EAAE,MAAM,EAAE;KACjB,CAAC;IAYF;QAAqC,2CAA0C;QAI7E,yBAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAwBb;YAtBC,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YAEpB,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAoC,EAAE,KAAa;gBACnE,OAAA,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC;oBAClB,GAAG,EAAE,OAAO,CAAC,IAAI,GAAG,KAAK;oBACzB,OAAO,EAAE,OAAO,CAAC,IAAI;oBACrB,OAAO,EAAE,CACP,oBAAC,WAAI,IAAC,GAAG,EAAE,OAAO,CAAC,IAAI,GAAG,MAAM,GAAG,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,IAAI,EAAE,MAAM,QAAC,KAAK,UAC1E,QAAQ,CACJ,CACR;iBACF,CAAC;YARF,CAQE,CACH,CAAC;YAEF,KAAI,CAAC,QAAQ,GAAG;gBACd,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,WAAW,EAAE,IAAI,EAAE;gBAC1G,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE;aAC5G,CAAC;YAEF,KAAI,CAAC,KAAK,GAAG;gBACX,KAAK,EAAE,KAAI,CAAC,SAAS;aACtB,CAAC;;QACJ,CAAC;QAEM,gCAAM,GAAb;YACU,IAAA,wBAAK,CAAgB;YAE7B,OAAO,CACL,oBAAC,yBAAW,IACV,KAAK,EAAE,KAAK,EACZ,OAAO,EAAE,IAAI,CAAC,QAAQ,EACtB,MAAM,EAAC,KAAK,EACZ,aAAa,EAAE,2BAAa,CAAC,IAAI,EACjC,UAAU,EAAE,mCAAqB,CAAC,YAAY,EAC9C,WAAW,EAAE,IAAI,CAAC,iBAAiB,GACnC,CACH,CAAC;QACJ,CAAC;QAEO,2CAAiB,GAAzB,UAA0B,KAAuB;YAC/C,OAAO,oBAAC,wBAAU,uBAAK,KAAK,IAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,IAAI,CAAC;QAC3E,CAAC;QACH,sBAAC;IAAD,CAAC,AAjDD,CAAqC,KAAK,CAAC,SAAS,GAiDnD;IAjDY,0CAAe","sourcesContent":["import { Text } from 'office-ui-fabric-react/lib/Text';\r\nimport { IFontStyles } from 'office-ui-fabric-react/lib/Styling';\r\nimport {\r\n  DetailsList,\r\n  IColumn,\r\n  DetailsListLayoutMode,\r\n  SelectionMode,\r\n  DetailsRow,\r\n  IDetailsRowProps\r\n} from 'office-ui-fabric-react/lib/DetailsList';\r\nimport * as React from 'react';\r\n\r\nconst TestText = 'The quick brown fox jumped over the lazy dog.';\r\n\r\ninterface ISetting<TType> {\r\n  name: TType;\r\n}\r\n\r\nconst Variants: ISetting<keyof IFontStyles>[] = [\r\n  { name: 'tiny' },\r\n  { name: 'xSmall' },\r\n  { name: 'small' },\r\n  { name: 'smallPlus' },\r\n  { name: 'medium' },\r\n  { name: 'mediumPlus' },\r\n  { name: 'large' },\r\n  { name: 'xLarge' },\r\n  { name: 'xxLarge' },\r\n  { name: 'mega' }\r\n];\r\n\r\nexport interface ITextRampExampleItem {\r\n  key: string;\r\n  variant: string;\r\n  example: JSX.Element;\r\n}\r\n\r\nexport interface ITextRampExampleState {\r\n  items: ITextRampExampleItem[];\r\n}\r\n\r\nexport class TextRampExample extends React.Component<{}, ITextRampExampleState> {\r\n  private _allItems: ITextRampExampleItem[];\r\n  private _columns: IColumn[];\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this._allItems = [];\r\n\r\n    Variants.forEach((setting: ISetting<keyof IFontStyles>, index: number) =>\r\n      this._allItems.push({\r\n        key: setting.name + index,\r\n        variant: setting.name,\r\n        example: (\r\n          <Text key={setting.name + 'text' + index} variant={setting.name} nowrap block>\r\n            {TestText}\r\n          </Text>\r\n        )\r\n      })\r\n    );\r\n\r\n    this._columns = [\r\n      { key: 'column1', name: 'Variant', fieldName: 'variant', minWidth: 100, maxWidth: 150, isResizable: true },\r\n      { key: 'column2', name: 'Example', fieldName: 'example', minWidth: 200, maxWidth: 1600, isResizable: true }\r\n    ];\r\n\r\n    this.state = {\r\n      items: this._allItems\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { items } = this.state;\r\n\r\n    return (\r\n      <DetailsList\r\n        items={items}\r\n        columns={this._columns}\r\n        setKey=\"set\"\r\n        selectionMode={SelectionMode.none}\r\n        layoutMode={DetailsListLayoutMode.fixedColumns}\r\n        onRenderRow={this._renderDetailsRow}\r\n      />\r\n    );\r\n  }\r\n\r\n  private _renderDetailsRow(props: IDetailsRowProps): JSX.Element {\r\n    return <DetailsRow {...props} styles={{ root: { color: 'inherit' } }} />;\r\n  }\r\n}\r\n"]}