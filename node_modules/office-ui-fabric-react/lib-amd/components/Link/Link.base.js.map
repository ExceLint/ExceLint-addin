{"version":3,"file":"Link.base.js","sourceRoot":"../src/","sources":["components/Link/Link.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nimport { ILink, ILinkProps, ILinkStyleProps, ILinkStyles } from './Link.types';\nimport { KeytipData } from '../../KeytipData';\n\nconst getClassNames = classNamesFunction<ILinkStyleProps, ILinkStyles>();\n\nexport class LinkBase extends React.Component<ILinkProps, {}> implements ILink {\n  private _link = React.createRef<HTMLAnchorElement | HTMLButtonElement | null>();\n\n  constructor(props: ILinkProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const { disabled, keytipProps } = this.props;\n\n    if (keytipProps) {\n      return (\n        <KeytipData\n          keytipProps={keytipProps}\n          ariaDescribedBy={(this.props as { 'aria-describedby': string })['aria-describedby']}\n          disabled={disabled}\n        >\n          {(keytipAttributes: any): JSX.Element => this._renderContent(keytipAttributes)}\n        </KeytipData>\n      );\n    }\n\n    return this._renderContent();\n  }\n\n  public focus() {\n    const { current } = this._link;\n\n    if (current && current.focus) {\n      current.focus();\n    }\n  }\n\n  private _renderContent = (keytipAttributes: any = {}): JSX.Element => {\n    const { disabled, children, className, href, theme, styles } = this.props;\n\n    const classNames = getClassNames(styles!, {\n      className,\n      isButton: !href,\n      isDisabled: disabled,\n      theme: theme!,\n    });\n\n    const RootType = this._getRootType(this.props);\n\n    return (\n      <RootType\n        {...keytipAttributes}\n        {...this._adjustPropsForRootType(RootType, this.props)}\n        className={classNames.root}\n        onClick={this._onClick}\n        ref={this._link}\n        aria-disabled={disabled}\n      >\n        {children}\n      </RootType>\n    );\n  };\n\n  private _onClick = (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n    const { onClick, disabled } = this.props;\n\n    if (disabled) {\n      ev.preventDefault();\n    } else if (onClick) {\n      onClick(ev);\n    }\n  };\n\n  private _adjustPropsForRootType(\n    RootType: string | React.ComponentClass | React.FunctionComponent,\n    props: ILinkProps & { getStyles?: any },\n  ): Partial<ILinkProps> {\n    // Deconstruct the props so we remove props like `as`, `theme` and `styles`\n    // as those will always be removed. We also take some props that are optional\n    // based on the RootType.\n    const {\n      children,\n      as,\n      disabled,\n      target,\n      href,\n      theme,\n      getStyles,\n      styles,\n      componentRef,\n      keytipProps,\n      ...restProps\n    } = props;\n\n    // RootType will be a string if we're dealing with an html component\n    if (typeof RootType === 'string') {\n      // Remove the disabled prop for anchor elements\n      if (RootType === 'a') {\n        return {\n          target,\n          href: disabled ? undefined : href,\n          ...restProps,\n        };\n      }\n\n      // Add the type='button' prop for button elements\n      if (RootType === 'button') {\n        return {\n          type: 'button',\n          disabled,\n          ...restProps,\n        };\n      }\n\n      // Remove the target and href props for all other non anchor elements\n      return { ...restProps, disabled };\n    }\n\n    // Retain all props except 'as' for ReactComponents\n    return { target, href, disabled, ...restProps };\n  }\n\n  private _getRootType(props: ILinkProps): string | React.ComponentClass | React.FunctionComponent {\n    if (props.as) {\n      return props.as;\n    }\n\n    if (props.href) {\n      return 'a';\n    }\n\n    return 'button';\n  }\n}\n"]}