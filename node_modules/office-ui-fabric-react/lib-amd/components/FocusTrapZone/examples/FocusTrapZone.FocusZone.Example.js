define(["require", "exports", "tslib", "react", "office-ui-fabric-react/lib/Button", "office-ui-fabric-react/lib/FocusTrapZone", "office-ui-fabric-react/lib/FocusZone", "office-ui-fabric-react/lib/Toggle", "./FocusTrapZone.Box.Example.scss"], function (require, exports, tslib_1, React, Button_1, FocusTrapZone_1, FocusZone_1, Toggle_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var BoxExample = /** @class */ (function (_super) {
        tslib_1.__extends(BoxExample, _super);
        function BoxExample(props) {
            var _this = _super.call(this, props) || this;
            _this._onButtonClickHandler = function () {
                _this.setState({
                    isChecked: true
                });
            };
            _this._onExitButtonClickHandler = function () {
                _this.setState({
                    isChecked: false
                });
            };
            _this._onFocusTrapZoneToggleChanged = function (ev, isChecked) {
                _this.setState({
                    isChecked: isChecked
                }, function () { return _this._toggle.focus(); });
            };
            _this._setRef = function (toggle) {
                _this._toggle = toggle;
            };
            _this.state = {
                isChecked: false
            };
            return _this;
        }
        BoxExample.prototype.render = function () {
            var _this = this;
            var isChecked = this.state.isChecked;
            return (React.createElement("div", null,
                React.createElement(Button_1.DefaultButton, { secondaryText: "Focuses inside the FocusTrapZone", onClick: this._onButtonClickHandler, text: "Go to Trap Zone" }),
                (function () {
                    if (isChecked) {
                        return (React.createElement(FocusTrapZone_1.FocusTrapZone, { forceFocusInsideTrap: true, focusPreviouslyFocusedInnerElement: true }, _this._internalContents()));
                    }
                    else {
                        return React.createElement("div", null, _this._internalContents());
                    }
                })()));
        };
        BoxExample.prototype._internalContents = function () {
            var _this = this;
            var isChecked = this.state.isChecked;
            return (React.createElement("div", { className: "ms-FocusTrapZoneBoxExample" },
                React.createElement(FocusZone_1.FocusZone, { direction: FocusZone_1.FocusZoneDirection.horizontal, "data-is-visible": true },
                    React.createElement(Button_1.DefaultButton, { text: "FZ1" }),
                    React.createElement(Button_1.DefaultButton, { text: "FZ1" }),
                    React.createElement(Button_1.DefaultButton, { text: "FZ1" })),
                React.createElement("br", null),
                React.createElement(Button_1.DefaultButton, { text: "No FZ" }),
                React.createElement("br", null),
                React.createElement("br", null),
                React.createElement(FocusZone_1.FocusZone, { direction: FocusZone_1.FocusZoneDirection.horizontal, "data-is-visible": true },
                    React.createElement(Button_1.DefaultButton, { text: "FZ2" }),
                    React.createElement(Button_1.DefaultButton, { text: "FZ2" }),
                    React.createElement(Button_1.DefaultButton, { text: "FZ2" })),
                React.createElement("br", null),
                React.createElement(Toggle_1.Toggle, { componentRef: this._setRef, checked: isChecked, onChange: this._onFocusTrapZoneToggleChanged, label: "Focus Trap Zone", onText: "On", offText: "Off" }),
                (function () {
                    if (isChecked) {
                        return (React.createElement(Button_1.DefaultButton, { secondaryText: "Exit Focus Trap Zone", onClick: _this._onExitButtonClickHandler, text: "Exit Focus Trap Zone" }));
                    }
                })()));
        };
        return BoxExample;
    }(React.Component));
    exports.default = BoxExample;
});
//# sourceMappingURL=FocusTrapZone.FocusZone.Example.js.map