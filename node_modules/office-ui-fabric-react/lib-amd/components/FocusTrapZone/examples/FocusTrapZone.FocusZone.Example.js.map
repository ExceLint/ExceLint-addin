{"version":3,"file":"FocusTrapZone.FocusZone.Example.js","sourceRoot":"../src/","sources":["components/FocusTrapZone/examples/FocusTrapZone.FocusZone.Example.tsx"],"names":[],"mappings":";;;IAYA;QAAmD,yDAAwD;QAA3G;YAAA,qEAkEC;YAjEQ,WAAK,GAAwC;gBAClD,WAAW,EAAE,KAAK;aACnB,CAAC;YAEM,aAAO,GAAG,KAAK,CAAC,SAAS,EAAW,CAAC;YAuDrC,mCAA6B,GAAG,UAAC,EAAiC,EAAE,OAAiB;gBAC3F,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC,OAAO,EAAE,EAAE;oBACxC,6CAA6C;oBAC7C,KAAI,CAAC,OAAO,CAAC,OAAQ,CAAC,KAAK,EAAE,CAAC;gBAChC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;;QACJ,CAAC;QA3DQ,8CAAM,GAAb;YACE,OAAO,CACL,iCACG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CACxB,oBAAC,6BAAa,IAAC,oBAAoB,EAAE,IAAI,EAAE,kCAAkC,EAAE,IAAI,IAChF,IAAI,CAAC,iBAAiB,EAAE,CACX,CACjB,CAAC,CAAC,CAAC,CACF,IAAI,CAAC,iBAAiB,EAAE,CACzB,CACG,CACP,CAAC;QACJ,CAAC;QAEO,yDAAiB,GAAzB;YACU,IAAA,oCAAW,CAAgB;YACnC,IAAM,OAAO,GAAG,EAAE,CAAC;YACnB,IAAM,MAAM,GAAG,oBAAoB,CAAC;YACpC,IAAM,UAAU,GAAG,gBAAa,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,CAAE,CAAC;YAC1E,IAAM,MAAM,GAAiB,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;YAEjD,OAAO,CACL,oBAAC,aAAK,IAAC,MAAM,EAAE,MAAM,EAAE,eAAe,EAAC,OAAO,EAAC,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,SAAA,EAAE,EAAE;gBAC9F,oBAAC,eAAM,IACL,KAAK,EAAC,eAAe,EACrB,YAAY,EAAE,IAAI,CAAC,OAAO,EAC1B,OAAO,EAAE,WAAW,EACpB,QAAQ,EAAE,IAAI,CAAC,6BAA6B,EAC5C,MAAM,EAAC,qBAAqB,EAC5B,OAAO,EAAC,KAAK,GACb;gBAEF,oBAAC,qBAAS,IAAC,SAAS,EAAE,8BAAkB,CAAC,UAAU,qBAAmB,IAAI;oBACxE,oBAAC,aAAK,IAAC,UAAU,QAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,MAAM,QAAA,EAAE,OAAO,SAAA,EAAE,EAAE;wBACrE,oBAAC,sBAAa,IAAC,IAAI,EAAC,KAAK,GAAG;wBAC5B,oBAAC,sBAAa,IAAC,IAAI,EAAC,KAAK,GAAG;wBAC5B,oBAAC,sBAAa,IAAC,IAAI,EAAC,KAAK,GAAG,CACtB,CACE;gBAEZ,oBAAC,sBAAa,IAAC,IAAI,EAAC,OAAO,GAAG;gBAE9B,oBAAC,qBAAS,IAAC,SAAS,EAAE,8BAAkB,CAAC,UAAU,qBAAmB,IAAI;oBACxE,oBAAC,aAAK,IAAC,UAAU,QAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,MAAM,QAAA,EAAE,OAAO,SAAA,EAAE,EAAE;wBACrE,oBAAC,sBAAa,IAAC,IAAI,EAAC,KAAK,GAAG;wBAC5B,oBAAC,sBAAa,IAAC,IAAI,EAAC,KAAK,GAAG;wBAC5B,oBAAC,sBAAa,IAAC,IAAI,EAAC,KAAK,GAAG,CACtB,CACE,CACN,CACT,CAAC;QACJ,CAAC;QAQH,oCAAC;IAAD,CAAC,AAlED,CAAmD,KAAK,CAAC,SAAS,GAkEjE;IAlEY,sEAA6B","sourcesContent":["import * as React from 'react';\r\n\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { FocusTrapZone } from 'office-ui-fabric-react/lib/FocusTrapZone';\r\nimport { FocusZone, FocusZoneDirection } from 'office-ui-fabric-react/lib/FocusZone';\r\nimport { Toggle, IToggle } from 'office-ui-fabric-react/lib/Toggle';\r\nimport { Stack, IStackTokens } from 'office-ui-fabric-react/lib/Stack';\r\n\r\nexport interface IFocusTrapZoneFocusZoneExampleState {\r\n  useTrapZone: boolean;\r\n}\r\n\r\nexport class FocusTrapZoneFocusZoneExample extends React.Component<{}, IFocusTrapZoneFocusZoneExampleState> {\r\n  public state: IFocusTrapZoneFocusZoneExampleState = {\r\n    useTrapZone: false\r\n  };\r\n\r\n  private _toggle = React.createRef<IToggle>();\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        {this.state.useTrapZone ? (\r\n          <FocusTrapZone forceFocusInsideTrap={true} focusPreviouslyFocusedInnerElement={true}>\r\n            {this._internalContents()}\r\n          </FocusTrapZone>\r\n        ) : (\r\n          this._internalContents()\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _internalContents() {\r\n    const { useTrapZone } = this.state;\r\n    const padding = 10;\r\n    const border = '2px dashed #ababab';\r\n    const rootBorder = `2px solid ${useTrapZone ? '#ababab' : 'transparent'}`;\r\n    const tokens: IStackTokens = { childrenGap: 10 };\r\n\r\n    return (\r\n      <Stack tokens={tokens} horizontalAlign=\"start\" styles={{ root: { border: rootBorder, padding } }}>\r\n        <Toggle\r\n          label=\"Use trap zone\"\r\n          componentRef={this._toggle}\r\n          checked={useTrapZone}\r\n          onChange={this._onFocusTrapZoneToggleChanged}\r\n          onText=\"On (toggle to exit)\"\r\n          offText=\"Off\"\r\n        />\r\n\r\n        <FocusZone direction={FocusZoneDirection.horizontal} data-is-visible={true}>\r\n          <Stack horizontal tokens={tokens} styles={{ root: { border, padding } }}>\r\n            <DefaultButton text=\"FZ1\" />\r\n            <DefaultButton text=\"FZ1\" />\r\n            <DefaultButton text=\"FZ1\" />\r\n          </Stack>\r\n        </FocusZone>\r\n\r\n        <DefaultButton text=\"No FZ\" />\r\n\r\n        <FocusZone direction={FocusZoneDirection.horizontal} data-is-visible={true}>\r\n          <Stack horizontal tokens={tokens} styles={{ root: { border, padding } }}>\r\n            <DefaultButton text=\"FZ2\" />\r\n            <DefaultButton text=\"FZ2\" />\r\n            <DefaultButton text=\"FZ2\" />\r\n          </Stack>\r\n        </FocusZone>\r\n      </Stack>\r\n    );\r\n  }\r\n\r\n  private _onFocusTrapZoneToggleChanged = (ev: React.MouseEvent<HTMLElement>, checked?: boolean): void => {\r\n    this.setState({ useTrapZone: !!checked }, () => {\r\n      // Restore focus to toggle after re-rendering\r\n      this._toggle.current!.focus();\r\n    });\r\n  };\r\n}\r\n"]}