{"version":3,"file":"FocusTrapZone.Box.FocusOnCustomElement.Example.js","sourceRoot":"../src/","sources":["components/FocusTrapZone/examples/FocusTrapZone.Box.FocusOnCustomElement.Example.tsx"],"names":[],"mappings":";;;IAYA,IAAM,eAAe,GAAG,kBAAkB,CAAC;IAE3C;QAA0D,gEAA+D;QAAzH;YAAA,qEAuDC;YAtDQ,WAAK,GAA+C;gBACzD,WAAW,EAAE,KAAK;aACnB,CAAC;YAEM,aAAO,GAAG,KAAK,CAAC,SAAS,EAAW,CAAC;YAyCrC,mCAA6B,GAAG,UAAC,EAAiC,EAAE,OAAiB;gBAC3F,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC,OAAO,EAAE,EAAE;oBACxC,wDAAwD;oBACxD,qEAAqE;oBACrE,IAAI,CAAC,OAAO,EAAE;wBACZ,KAAI,CAAC,OAAO,CAAC,OAAQ,CAAC,KAAK,EAAE,CAAC;qBAC/B;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;;QACJ,CAAC;QAhDQ,qDAAM,GAAb;YACE,OAAO,CACL,iCACG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CACxB,oBAAC,6BAAa,IAAC,sBAAsB,EAAE,eAAe,IAAG,IAAI,CAAC,iBAAiB,EAAE,CAAiB,CACnG,CAAC,CAAC,CAAC,CACF,IAAI,CAAC,iBAAiB,EAAE,CACzB,CACG,CACP,CAAC;QACJ,CAAC;QAEO,gEAAiB,GAAzB;YACU,IAAA,oCAAW,CAAgB;YAEnC,OAAO,CACL,oBAAC,aAAK,IACJ,eAAe,EAAC,OAAO,EACvB,MAAM,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,EAC3B,MAAM,EAAE;oBACN,IAAI,EAAE,EAAE,MAAM,EAAE,gBAAa,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,CAAE,EAAE,OAAO,EAAE,EAAE,EAAE;iBACtF;gBAED,oBAAC,eAAM,IACL,KAAK,EAAC,eAAe,EACrB,YAAY,EAAE,IAAI,CAAC,OAAO,EAC1B,OAAO,EAAE,WAAW,EACpB,QAAQ,EAAE,IAAI,CAAC,6BAA6B,EAC5C,MAAM,EAAC,qBAAqB,EAC5B,OAAO,EAAC,KAAK,GACb;gBACF,oBAAC,qBAAS,IAAC,KAAK,EAAC,wBAAwB,EAAC,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,GAAI;gBAC9E,oBAAC,WAAI,IAAC,IAAI,EAAC,kBAAkB,EAAC,SAAS,EAAE,eAAe,6EAEjD,CACD,CACT,CAAC;QACJ,CAAC;QAWH,2CAAC;IAAD,CAAC,AAvDD,CAA0D,KAAK,CAAC,SAAS,GAuDxE;IAvDY,oFAAoC","sourcesContent":["import * as React from 'react';\r\n\r\nimport { FocusTrapZone } from 'office-ui-fabric-react/lib/FocusTrapZone';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Toggle, IToggle } from 'office-ui-fabric-react/lib/Toggle';\r\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\r\n\r\nexport interface IFocusTrapZoneBoxCustomElementExampleState {\r\n  useTrapZone: boolean;\r\n}\r\n\r\nconst _focusClassName = 'shouldFocusInput';\r\n\r\nexport class FocusTrapZoneBoxCustomElementExample extends React.Component<{}, IFocusTrapZoneBoxCustomElementExampleState> {\r\n  public state: IFocusTrapZoneBoxCustomElementExampleState = {\r\n    useTrapZone: false\r\n  };\r\n\r\n  private _toggle = React.createRef<IToggle>();\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        {this.state.useTrapZone ? (\r\n          <FocusTrapZone firstFocusableSelector={_focusClassName}>{this._internalContents()}</FocusTrapZone>\r\n        ) : (\r\n          this._internalContents()\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _internalContents() {\r\n    const { useTrapZone } = this.state;\r\n\r\n    return (\r\n      <Stack\r\n        horizontalAlign=\"start\"\r\n        tokens={{ childrenGap: 15 }}\r\n        styles={{\r\n          root: { border: `2px solid ${useTrapZone ? '#ababab' : 'transparent'}`, padding: 10 }\r\n        }}\r\n      >\r\n        <Toggle\r\n          label=\"Use trap zone\"\r\n          componentRef={this._toggle}\r\n          checked={useTrapZone}\r\n          onChange={this._onFocusTrapZoneToggleChanged}\r\n          onText=\"On (toggle to exit)\"\r\n          offText=\"Off\"\r\n        />\r\n        <TextField label=\"Input inside trap zone\" styles={{ root: { width: 300 } }} />\r\n        <Link href=\"https://bing.com\" className={_focusClassName}>\r\n          Hyperlink which will receive initial focus when trap zone is activated\r\n        </Link>\r\n      </Stack>\r\n    );\r\n  }\r\n\r\n  private _onFocusTrapZoneToggleChanged = (ev: React.MouseEvent<HTMLElement>, checked?: boolean): void => {\r\n    this.setState({ useTrapZone: !!checked }, () => {\r\n      // Restore focus to toggle after disabling the trap zone\r\n      // (the trap zone itself will handle initial focus when it's enabled)\r\n      if (!checked) {\r\n        this._toggle.current!.focus();\r\n      }\r\n    });\r\n  };\r\n}\r\n"]}