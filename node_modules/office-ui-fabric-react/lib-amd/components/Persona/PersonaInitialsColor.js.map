{"version":3,"file":"PersonaInitialsColor.js","sourceRoot":"../src/","sources":["components/Persona/PersonaInitialsColor.ts"],"names":[],"mappings":"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","sourcesContent":["import { PersonaInitialsColor, IPersonaProps } from './Persona.types';\r\n\r\n/**\r\n * These colors are considered reserved colors and can only be set with overrides:\r\n * - Red is a color that often has a special meaning.\r\n * - Transparent is not intended to be used with typical initials due to accessibility issues,\r\n *   its primary use is for Facepile overflow buttons.\r\n */\r\nconst COLOR_SWATCHES_LOOKUP: PersonaInitialsColor[] = [\r\n  PersonaInitialsColor.lightGreen,\r\n  PersonaInitialsColor.lightBlue,\r\n  PersonaInitialsColor.lightPink,\r\n  PersonaInitialsColor.green,\r\n  PersonaInitialsColor.darkGreen,\r\n  PersonaInitialsColor.pink,\r\n  PersonaInitialsColor.magenta,\r\n  PersonaInitialsColor.purple,\r\n  PersonaInitialsColor.violet,\r\n  PersonaInitialsColor.teal,\r\n  PersonaInitialsColor.blue,\r\n  PersonaInitialsColor.darkBlue,\r\n  PersonaInitialsColor.orange,\r\n  PersonaInitialsColor.darkRed\r\n];\r\n\r\nconst COLOR_SWATCHES_NUM_ENTRIES = COLOR_SWATCHES_LOOKUP.length;\r\n\r\nfunction getInitialsColorFromName(displayName: string | undefined): PersonaInitialsColor {\r\n  let color = PersonaInitialsColor.blue;\r\n  if (!displayName) {\r\n    return color;\r\n  }\r\n\r\n  let hashCode = 0;\r\n  for (let iLen: number = displayName.length - 1; iLen >= 0; iLen--) {\r\n    const ch: number = displayName.charCodeAt(iLen);\r\n    const shift: number = iLen % 8;\r\n    // tslint:disable-next-line:no-bitwise\r\n    hashCode ^= (ch << shift) + (ch >> (8 - shift));\r\n  }\r\n\r\n  color = COLOR_SWATCHES_LOOKUP[hashCode % COLOR_SWATCHES_NUM_ENTRIES];\r\n\r\n  return color;\r\n}\r\n\r\nfunction personaInitialsColorToHexCode(personaInitialsColor: PersonaInitialsColor): string {\r\n  switch (personaInitialsColor) {\r\n    case PersonaInitialsColor.lightBlue:\r\n      return '#6BA5E7';\r\n    case PersonaInitialsColor.blue:\r\n      return '#2D89EF';\r\n    case PersonaInitialsColor.darkBlue:\r\n      return '#2B5797';\r\n    case PersonaInitialsColor.teal:\r\n      return '#00ABA9';\r\n    case PersonaInitialsColor.lightGreen:\r\n      return '#99B433';\r\n    case PersonaInitialsColor.green:\r\n      return '#00A300';\r\n    case PersonaInitialsColor.darkGreen:\r\n      return '#1E7145';\r\n    case PersonaInitialsColor.lightPink:\r\n      return '#E773BD';\r\n    case PersonaInitialsColor.pink:\r\n      return '#FF0097';\r\n    case PersonaInitialsColor.magenta:\r\n      return '#7E3878';\r\n    case PersonaInitialsColor.purple:\r\n      return '#603CBA';\r\n    case PersonaInitialsColor.black:\r\n      return '#1D1D1D';\r\n    case PersonaInitialsColor.orange:\r\n      return '#DA532C';\r\n    case PersonaInitialsColor.red:\r\n      return '#EE1111';\r\n    case PersonaInitialsColor.darkRed:\r\n      return '#B91D47';\r\n    case PersonaInitialsColor.transparent:\r\n      return 'transparent';\r\n    case PersonaInitialsColor.violet:\r\n      return '#5E4B8B';\r\n  }\r\n}\r\n\r\nexport function initialsColorPropToColorCode(props: IPersonaProps): string {\r\n  const { primaryText, text } = props;\r\n  let { initialsColor } = props;\r\n  let initialsColorCode: string;\r\n  if (typeof initialsColor === 'string') {\r\n    initialsColorCode = initialsColor;\r\n  } else {\r\n    initialsColor = initialsColor !== undefined ? initialsColor : getInitialsColorFromName(text || primaryText);\r\n    initialsColorCode = personaInitialsColorToHexCode(initialsColor);\r\n  }\r\n\r\n  return initialsColorCode;\r\n}\r\n"]}