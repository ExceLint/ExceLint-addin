{"version":3,"file":"Stack.js","sourceRoot":"../src/","sources":["components/Stack/Stack.tsx"],"names":[],"mappings":";;;IASA,IAAM,SAAS,GAA4B,UAAA,KAAK;QACtC,IAAA,aAAoB,EAApB,qCAAoB,EAAE,mCAAa,EAAE,iBAAI,EAAE,6DAAO,CAAW;QAErE,4BAAgB,CAAC,OAAO,EAAE,KAAK,EAAE;YAC/B,GAAG,EAAE,oBAAoB;YACzB,SAAS,EAAE,kBAAkB;YAC7B,QAAQ,EAAE,iBAAiB;YAC3B,OAAO,EAAE,gBAAgB;SAC1B,CAAC,CAAC;QAEH,IAAM,aAAa,GAAmD,KAAK,CAAC,QAAQ,CAAC,GAAG,CACtF,KAAK,CAAC,QAAQ,EACd,UAAC,KAA0C,EAAE,KAAa;YACxD,IAAI,CAAC,KAAK,EAAE;gBACV,OAAO,IAAI,CAAC;aACb;YAED,IAAI,YAAY,CAAC,KAAK,CAAC,EAAE;gBACvB,IAAM,gBAAgB,GAAoB;oBACxC,MAAM,EAAE,CAAC,aAAa;iBACvB,CAAC;gBAEF,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,wCAC1B,gBAAgB,GAChB,KAAK,CAAC,KAAK,EACd,CAAC;aACJ;YAED,OAAO,KAAK,CAAC;QACf,CAAC,CACF,CAAC;QAEF,IAAM,WAAW,GAAG,0BAAc,CAAuC,IAAI,EAAE,iCAAqB,CAAC,CAAC;QAEtG,IAAM,KAAK,GAAG,qBAAQ,CAA2B,KAAK,EAAE;YACtD,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,KAAK;SACb,CAAC,CAAC;QAEH,IAAI,IAAI,EAAE;YACR,OAAO,CACL,uBAAC,KAAK,CAAC,IAAI,uBAAK,WAAW;gBACzB,uBAAC,KAAK,CAAC,KAAK,QAAE,aAAa,CAAe,CAC/B,CACd,CAAC;SACH;QAED,OAAO,uBAAC,KAAK,CAAC,IAAI,uBAAK,WAAW,GAAG,aAAa,CAAc,CAAC;IACnE,CAAC,CAAC;IAEF,SAAS,YAAY,CAAC,IAAqB;QACzC,sEAAsE;QACtE,yGAAyG;QACzG,uFAAuF;QACvF,OAAO,CACL,CAAC,CAAC,IAAI;YACN,OAAO,IAAI,KAAK,QAAQ;YACxB,CAAC,CAAE,IAA2B,CAAC,IAAI;YACnC,iGAAiG;YAC/F,IAA2B,CAAC,IAA4B,CAAC,WAAW,KAAK,qBAAS,CAAC,WAAW,CACjG,CAAC;IACJ,CAAC;IAED,IAAM,YAAY,GAAG;QACnB,IAAI,EAAE,qBAAS;KAChB,CAAC;IAEW,QAAA,KAAK,GAEd,4BAAe,CAAC,SAAS,EAAE;QAC7B,WAAW,EAAE,OAAO;QACpB,MAAM,uBAAA;QACN,OAAO,EAAE,YAAY;KACtB,CAAC,CAAC;IAEH,kBAAe,aAAK,CAAC","sourcesContent":["/** @jsx withSlots */\nimport * as React from 'react';\nimport { withSlots, createComponent, getSlots } from '../../Foundation';\nimport { getNativeProps, htmlElementProperties, warnDeprecations } from '../../Utilities';\nimport { styles } from './Stack.styles';\nimport { IStackComponent, IStackProps, IStackSlots } from './Stack.types';\nimport { StackItem } from './StackItem/StackItem';\nimport { IStackItemProps } from './StackItem/StackItem.types';\n\nconst StackView: IStackComponent['view'] = props => {\n  const { as: RootType = 'div', disableShrink, wrap, ...rest } = props;\n\n  warnDeprecations('Stack', props, {\n    gap: 'tokens.childrenGap',\n    maxHeight: 'tokens.maxHeight',\n    maxWidth: 'tokens.maxWidth',\n    padding: 'tokens.padding',\n  });\n\n  const stackChildren: (React.ReactChild | null)[] | null | undefined = React.Children.map(\n    props.children,\n    (child: React.ReactElement<IStackItemProps>, index: number) => {\n      if (!child) {\n        return null;\n      }\n\n      if (_isStackItem(child)) {\n        const defaultItemProps: IStackItemProps = {\n          shrink: !disableShrink,\n        };\n\n        return React.cloneElement(child, {\n          ...defaultItemProps,\n          ...child.props,\n        });\n      }\n\n      return child;\n    },\n  );\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(rest, htmlElementProperties);\n\n  const Slots = getSlots<IStackProps, IStackSlots>(props, {\n    root: RootType,\n    inner: 'div',\n  });\n\n  if (wrap) {\n    return (\n      <Slots.root {...nativeProps}>\n        <Slots.inner>{stackChildren}</Slots.inner>\n      </Slots.root>\n    );\n  }\n\n  return <Slots.root {...nativeProps}>{stackChildren}</Slots.root>;\n};\n\nfunction _isStackItem(item: React.ReactNode): item is typeof StackItem {\n  // In theory, we should be able to just check item.type === StackItem.\n  // However, under certain unclear circumstances (see https://github.com/microsoft/fluentui/issues/10785),\n  // the object identity is different despite the function implementation being the same.\n  return (\n    !!item &&\n    typeof item === 'object' &&\n    !!(item as React.ReactElement).type &&\n    // StackItem is generated by createComponent, so we need to check its displayName instead of name\n    ((item as React.ReactElement).type as React.ComponentType).displayName === StackItem.displayName\n  );\n}\n\nconst StackStatics = {\n  Item: StackItem,\n};\n\nexport const Stack: React.FunctionComponent<IStackProps> & {\n  Item: React.FunctionComponent<IStackItemProps>;\n} = createComponent(StackView, {\n  displayName: 'Stack',\n  styles,\n  statics: StackStatics,\n});\n\nexport default Stack;\n"]}