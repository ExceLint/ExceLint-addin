{"version":3,"file":"StackItem.js","sourceRoot":"../src/","sources":["components/Stack/StackItem/StackItem.tsx"],"names":[],"mappings":";;;IAMA,IAAM,aAAa,GAAgC,UAAA,KAAK;QAC9C,IAAA,yBAAQ,CAAW;QAC3B,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACtC,OAAO,IAAI,CAAC;SACb;QAED,IAAM,KAAK,GAAG,qBAAQ,CAAmC,KAAK,EAAE;YAC9D,IAAI,EAAE,KAAK;SACZ,CAAC,CAAC;QAEH,OAAO,uBAAC,KAAK,CAAC,IAAI,QAAE,QAAQ,CAAc,CAAC;IAC7C,CAAC,CAAC;IAEW,QAAA,SAAS,GAA6C,4BAAe,CAAC,aAAa,EAAE;QAChG,WAAW,EAAE,WAAW;QACxB,MAAM,oCAAA;KACP,CAAC,CAAC;IAEH,kBAAe,iBAAS,CAAC","sourcesContent":["/** @jsx withSlots */\nimport * as React from 'react';\nimport { withSlots, createComponent, getSlots } from '../../../Foundation';\nimport { IStackItemComponent, IStackItemProps, IStackItemSlots } from './StackItem.types';\nimport { StackItemStyles as styles } from './StackItem.styles';\n\nconst StackItemView: IStackItemComponent['view'] = props => {\n  const { children } = props;\n  if (React.Children.count(children) < 1) {\n    return null;\n  }\n\n  const Slots = getSlots<IStackItemProps, IStackItemSlots>(props, {\n    root: 'div',\n  });\n\n  return <Slots.root>{children}</Slots.root>;\n};\n\nexport const StackItem: React.FunctionComponent<IStackItemProps> = createComponent(StackItemView, {\n  displayName: 'StackItem',\n  styles,\n});\n\nexport default StackItem;\n"]}