{"version":3,"file":"StackItem.types.js","sourceRoot":"../src/","sources":["components/Stack/StackItem/StackItem.types.ts"],"names":[],"mappings":"","sourcesContent":["import { IComponentStyles, IHTMLSlot, IComponent, IStyleableComponentProps } from '../../../Foundation';\r\n\r\nexport type IStackItemComponent = IComponent<IStackItemProps, IStackItemTokens, IStackItemStyles>;\r\n\r\nexport interface IStackItemSlots {\r\n  root?: IHTMLSlot;\r\n}\r\n\r\n// These types are redundant with IStackItemComponent but are needed until TS function return widening issue is resolved:\r\n// https://github.com/Microsoft/TypeScript/issues/241\r\n// For now, these helper types can be used to provide return type safety when specifying tokens and styles functions.\r\nexport type IStackItemTokenReturnType = ReturnType<Extract<IStackItemComponent['tokens'], Function>>;\r\nexport type IStackItemStylesReturnType = ReturnType<Extract<IStackItemComponent['styles'], Function>>;\r\n\r\nexport interface IStackItemProps extends IStackItemSlots, IStyleableComponentProps<IStackItemProps, IStackItemTokens, IStackItemStyles> {\r\n  /**\r\n   * Defines a CSS class name used to style the StackItem.\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * Defines how much to grow the StackItem in proportion to its siblings.\r\n   */\r\n  grow?: boolean | number | 'inherit' | 'initial' | 'unset';\r\n\r\n  /**\r\n   * Defines at what ratio should the StackItem shrink to fit the available space.\r\n   */\r\n  shrink?: boolean | number | 'inherit' | 'initial' | 'unset';\r\n\r\n  /**\r\n   * Defines whether the StackItem should be prevented from shrinking.\r\n   * This can be used to prevent a StackItem from shrinking when it is inside of a Stack that has shrinking items.\r\n   * @defaultvalue false\r\n   */\r\n  disableShrink?: boolean;\r\n\r\n  /**\r\n   * Defines how to align the StackItem along the x-axis (for vertical Stacks) or the y-axis (for horizontal Stacks).\r\n   */\r\n  align?: 'auto' | 'stretch' | 'baseline' | 'start' | 'center' | 'end';\r\n\r\n  /**\r\n   * Defines whether the StackItem should take up 100% of the height of its parent.\r\n   * @defaultvalue true\r\n   */\r\n  verticalFill?: boolean;\r\n\r\n  /**\r\n   * Defines order of the StackItem.\r\n   * @defaultvalue 0\r\n   */\r\n  order?: number | string;\r\n}\r\n\r\nexport interface IStackItemTokens {\r\n  margin?: number | string;\r\n}\r\n\r\nexport type IStackItemStyles = IComponentStyles<IStackItemSlots>;\r\n"]}