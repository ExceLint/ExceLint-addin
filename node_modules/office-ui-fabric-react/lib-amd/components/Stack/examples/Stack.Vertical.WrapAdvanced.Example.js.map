{"version":3,"file":"Stack.Vertical.WrapAdvanced.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Vertical.WrapAdvanced.Example.tsx"],"names":[],"mappings":";;;IAkBA;QAAsD,4DAAkC;QACtF,0CAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAQb;YAgHO,oBAAc,GAAG,UAAC,KAAa;gBACrC,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;YACvC,CAAC,CAAC;YAEM,qBAAe,GAAG,UAAC,KAAa;gBACtC,KAAI,CAAC,QAAQ,CAAC,EAAE,eAAe,EAAE,KAAK,EAAE,CAAC,CAAC;YAC5C,CAAC,CAAC;YAEM,8BAAwB,GAAG,UAAC,EAAmC,EAAE,MAAuB;gBAC9F,KAAI,CAAC,QAAQ,CAAC,EAAE,mBAAmB,EAAE,MAAM,CAAC,GAA0B,EAAE,CAAC,CAAC;YAC5E,CAAC,CAAC;YAEM,4BAAsB,GAAG,UAAC,EAAmC,EAAE,MAAuB;gBAC5F,KAAI,CAAC,QAAQ,CAAC,EAAE,iBAAiB,EAAE,MAAM,CAAC,GAAwB,EAAE,CAAC,CAAC;YACxE,CAAC,CAAC;YAEM,uBAAiB,GAAG,UAAC,EAAmC,EAAE,MAAuB;gBACvF,KAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAe,EAAE,CAAC,CAAC;YACtD,CAAC,CAAC;YAzIA,KAAI,CAAC,KAAK,GAAG;gBACX,UAAU,EAAE,GAAG;gBACf,eAAe,EAAE,GAAG;gBACpB,mBAAmB,EAAE,OAAO;gBAC5B,iBAAiB,EAAE,OAAO;gBAC1B,QAAQ,EAAE,SAAS;aACpB,CAAC;;QACJ,CAAC;QAEM,iDAAM,GAAb;YACQ,IAAA,eAA8F,EAA5F,0BAAU,EAAE,oCAAe,EAAE,sBAAQ,EAAE,4CAAmB,EAAE,wCAAiB,CAAgB;YAErG,IAAM,MAAM,GAAG,wBAAc,CAAC;gBAC5B,IAAI,EAAE;oBACJ,UAAU,EAAE,wBAAc,CAAC,aAAa;oBACxC,KAAK,EAAK,UAAU,MAAG;oBACvB,QAAQ,UAAA;oBACR,SAAS,EAAE;wBACT,QAAQ,EAAE;4BACR,KAAK,EAAE,EAAE;4BACT,MAAM,EAAE,EAAE;4BACV,OAAO,EAAE,MAAM;4BACf,UAAU,EAAE,QAAQ;4BACpB,cAAc,EAAE,QAAQ;4BACxB,UAAU,EAAE,wBAAc,CAAC,YAAY;4BACvC,KAAK,EAAE,wBAAc,CAAC,KAAK;yBAC5B;qBACF;iBACF;gBAED,SAAS,EAAE;oBACT,MAAM,EAAE,eAAe;iBACxB;aACF,CAAC,CAAC;YAEH,IAAM,MAAM,GAAG;gBACb,YAAY,EAAE;oBACZ,WAAW,EAAE,EAAE;iBAChB;gBACD,SAAS,EAAE;oBACT,WAAW,EAAE,EAAE;iBAChB;aACF,CAAC;YAEF,OAAO,CACL,oBAAC,aAAK,IAAC,MAAM,EAAE,MAAM,CAAC,YAAY;gBAChC,oBAAC,aAAK,IAAC,UAAU;oBACf,oBAAC,aAAK,CAAC,IAAI,IAAC,IAAI;wBACd,oBAAC,eAAM,IAAC,KAAK,EAAC,eAAe,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,YAAY,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,eAAe,GAAI,CACpH;oBACb,oBAAC,aAAK,CAAC,IAAI,IAAC,IAAI;wBACd,oBAAC,eAAM,IACL,KAAK,EAAC,kBAAkB,EACxB,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,CAAC,EACP,YAAY,EAAE,GAAG,EACjB,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,cAAc,GAC7B,CACS,CACP;gBAER,oBAAC,aAAK,IAAC,UAAU,QAAC,MAAM,EAAE,MAAM,CAAC,SAAS;oBACxC,oBAAC,aAAK,CAAC,IAAI,IAAC,IAAI;wBACd,oBAAC,mBAAQ,IACP,WAAW,EAAE,mBAAmB,EAChC,WAAW,EAAC,6BAA6B,EACzC,KAAK,EAAC,uBAAuB,EAC7B,OAAO,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAC3G,QAAQ,EAAE,IAAI,CAAC,wBAAwB,GACvC,CACS;oBACb,oBAAC,aAAK,CAAC,IAAI,IAAC,IAAI;wBACd,oBAAC,mBAAQ,IACP,WAAW,EAAE,iBAAiB,EAC9B,WAAW,EAAC,2BAA2B,EACvC,KAAK,EAAC,qBAAqB,EAC3B,OAAO,EAAE;gCACP,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE;gCAC7B,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE;gCACjC,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE;gCAC9B,EAAE,GAAG,EAAE,cAAc,EAAE,IAAI,EAAE,cAAc,EAAE;gCAC7C,EAAE,GAAG,EAAE,eAAe,EAAE,IAAI,EAAE,eAAe,EAAE;gCAC/C,EAAE,GAAG,EAAE,cAAc,EAAE,IAAI,EAAE,cAAc,EAAE;6BAC9C,EACD,QAAQ,EAAE,IAAI,CAAC,sBAAsB,GACrC,CACS;oBACb,oBAAC,aAAK,CAAC,IAAI,IAAC,IAAI;wBACd,oBAAC,mBAAQ,IACP,WAAW,EAAE,QAAQ,EACrB,WAAW,EAAC,iBAAiB,EAC7B,KAAK,EAAC,WAAW,EACjB,OAAO,EAAE,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,EAChH,QAAQ,EAAE,IAAI,CAAC,iBAAiB,GAChC,CACS,CACP;gBAER,6BAAK,SAAS,EAAE,MAAM,CAAC,SAAS;oBAC9B,oBAAC,aAAK,IACJ,IAAI,QACJ,MAAM,EAAE,MAAM,CAAC,SAAS,EACxB,eAAe,EAAE,mBAAmB,EACpC,aAAa,EAAE,iBAAiB,EAChC,SAAS,EAAE,MAAM,CAAC,IAAI;wBAEtB,sCAAc;wBACd,sCAAc;wBACd,sCAAc;wBACd,sCAAc;wBACd,sCAAc,CACR,CACJ,CACA,CACT,CAAC;QACJ,CAAC;QAqBH,uCAAC;IAAD,CAAC,AA7ID,CAAsD,KAAK,CAAC,SAAS,GA6IpE;IA7IY,4EAAgC","sourcesContent":["import * as React from 'react';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\r\nimport { Stack } from '../Stack';\r\nimport { mergeStyleSets, DefaultPalette } from 'office-ui-fabric-react/lib/Styling';\r\n\r\nexport type HorizontalAlignment = 'start' | 'center' | 'end' | 'space-around' | 'space-between' | 'space-evenly';\r\nexport type VerticalAlignment = 'start' | 'center' | 'end';\r\nexport type Overflow = 'visible' | 'auto' | 'hidden';\r\n\r\nexport interface IExampleState {\r\n  stackWidth: number;\r\n  containerHeight: number;\r\n  horizontalAlignment: HorizontalAlignment;\r\n  verticalAlignment: VerticalAlignment;\r\n  overflow: Overflow;\r\n}\r\n\r\nexport class VerticalStackWrapAdvancedExample extends React.Component<{}, IExampleState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      stackWidth: 100,\r\n      containerHeight: 420,\r\n      horizontalAlignment: 'start',\r\n      verticalAlignment: 'start',\r\n      overflow: 'visible'\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { stackWidth, containerHeight, overflow, horizontalAlignment, verticalAlignment } = this.state;\r\n\r\n    const styles = mergeStyleSets({\r\n      root: {\r\n        background: DefaultPalette.themeTertiary,\r\n        width: `${stackWidth}%`,\r\n        overflow,\r\n        selectors: {\r\n          '& span': {\r\n            width: 50,\r\n            height: 50,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            background: DefaultPalette.themePrimary,\r\n            color: DefaultPalette.white\r\n          }\r\n        }\r\n      },\r\n\r\n      container: {\r\n        height: containerHeight\r\n      }\r\n    });\r\n\r\n    const tokens = {\r\n      sectionStack: {\r\n        childrenGap: 10\r\n      },\r\n      wrapStack: {\r\n        childrenGap: 20\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Stack tokens={tokens.sectionStack}>\r\n        <Stack horizontal>\r\n          <Stack.Item grow>\r\n            <Slider label=\"Stack height:\" min={1} max={420} step={1} defaultValue={420} showValue={true} onChange={this._onHeightChange} />\r\n          </Stack.Item>\r\n          <Stack.Item grow>\r\n            <Slider\r\n              label=\"Container width:\"\r\n              min={1}\r\n              max={100}\r\n              step={1}\r\n              defaultValue={100}\r\n              showValue={true}\r\n              onChange={this._onWidthChange}\r\n            />\r\n          </Stack.Item>\r\n        </Stack>\r\n\r\n        <Stack horizontal tokens={tokens.wrapStack}>\r\n          <Stack.Item grow>\r\n            <Dropdown\r\n              selectedKey={horizontalAlignment}\r\n              placeholder=\"Select Horizontal Alignment\"\r\n              label=\"Horizontal alignment:\"\r\n              options={[{ key: 'start', text: 'Left' }, { key: 'center', text: 'Center' }, { key: 'end', text: 'Right' }]}\r\n              onChange={this._onHorizontalAlignChange}\r\n            />\r\n          </Stack.Item>\r\n          <Stack.Item grow>\r\n            <Dropdown\r\n              selectedKey={verticalAlignment}\r\n              placeholder=\"Select Vertical Alignment\"\r\n              label=\"Vertical alignment:\"\r\n              options={[\r\n                { key: 'start', text: 'Top' },\r\n                { key: 'center', text: 'Center' },\r\n                { key: 'end', text: 'Bottom' },\r\n                { key: 'space-around', text: 'Space around' },\r\n                { key: 'space-between', text: 'Space between' },\r\n                { key: 'space-evenly', text: 'Space evenly' }\r\n              ]}\r\n              onChange={this._onVerticalAlignChange}\r\n            />\r\n          </Stack.Item>\r\n          <Stack.Item grow>\r\n            <Dropdown\r\n              selectedKey={overflow}\r\n              placeholder=\"Select Overflow\"\r\n              label=\"Overflow:\"\r\n              options={[{ key: 'visible', text: 'Visible' }, { key: 'auto', text: 'Auto' }, { key: 'hidden', text: 'Hidden' }]}\r\n              onChange={this._onOverflowChange}\r\n            />\r\n          </Stack.Item>\r\n        </Stack>\r\n\r\n        <div className={styles.container}>\r\n          <Stack\r\n            wrap\r\n            tokens={tokens.wrapStack}\r\n            horizontalAlign={horizontalAlignment}\r\n            verticalAlign={verticalAlignment}\r\n            className={styles.root}\r\n          >\r\n            <span>1</span>\r\n            <span>2</span>\r\n            <span>3</span>\r\n            <span>4</span>\r\n            <span>5</span>\r\n          </Stack>\r\n        </div>\r\n      </Stack>\r\n    );\r\n  }\r\n\r\n  private _onWidthChange = (value: number): void => {\r\n    this.setState({ stackWidth: value });\r\n  };\r\n\r\n  private _onHeightChange = (value: number): void => {\r\n    this.setState({ containerHeight: value });\r\n  };\r\n\r\n  private _onHorizontalAlignChange = (ev: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void => {\r\n    this.setState({ horizontalAlignment: option.key as HorizontalAlignment });\r\n  };\r\n\r\n  private _onVerticalAlignChange = (ev: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void => {\r\n    this.setState({ verticalAlignment: option.key as VerticalAlignment });\r\n  };\r\n\r\n  private _onOverflowChange = (ev: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void => {\r\n    this.setState({ overflow: option.key as Overflow });\r\n  };\r\n}\r\n"]}