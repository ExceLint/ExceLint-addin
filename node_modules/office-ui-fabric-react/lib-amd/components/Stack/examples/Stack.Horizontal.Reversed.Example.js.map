{"version":3,"file":"Stack.Horizontal.Reversed.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Horizontal.Reversed.Example.tsx"],"names":[],"mappings":";;;IAKA;QAAoD,0DAAuB;QAA3E;YAAA,qEA+DC;YAHS,cAAQ,GAAG;gBACjB,KAAK,CAAC,eAAe,CAAC,CAAC;YACzB,CAAC,CAAC;;QACJ,CAAC;QA9DQ,+CAAM,GAAb;YACE,IAAM,MAAM,GAAG,wBAAc,CAAC;gBAC5B,IAAI,EAAE;oBACJ,UAAU,EAAE,wBAAc,CAAC,aAAa;iBACzC;gBAED,IAAI,EAAE;oBACJ,KAAK,EAAE,wBAAc,CAAC,KAAK;oBAC3B,UAAU,EAAE,wBAAc,CAAC,YAAY;oBACvC,OAAO,EAAE,CAAC;iBACX;aACF,CAAC,CAAC;YAEH,OAAO,CACL,oBAAC,aAAK,IAAC,GAAG,EAAE,CAAC;gBACX,6DAAqC;gBACrC,oBAAC,aAAK,IAAC,UAAU,QAAC,QAAQ,QAAC,aAAa,QAAC,SAAS,EAAE,MAAM,CAAC,IAAI;oBAC7D,6CAAqB;oBACrB,6CAAqB;oBACrB,+CAAuB,CACjB;gBAER,iEAAyC;gBACzC,oBAAC,aAAK,IAAC,UAAU,QAAC,QAAQ,QAAC,aAAa,QAAC,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,IAAI;oBACnF,6CAAqB;oBACrB,6CAAqB;oBACrB,+CAAuB,CACjB;gBAER,oDAA4B;gBAC5B,oBAAC,aAAK,IAAC,UAAU,QAAC,QAAQ,QAAC,aAAa,QAAC,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE;oBACrH,oBAAC,aAAK,CAAC,IAAI,IAAC,KAAK,EAAC,MAAM,EAAC,SAAS,EAAE,MAAM,CAAC,IAAI;wBAC7C,sDAA8B,CACnB;oBACb,oBAAC,aAAK,CAAC,IAAI,IAAC,KAAK,EAAC,SAAS,EAAC,SAAS,EAAE,MAAM,CAAC,IAAI;wBAChD,yDAAiC,CACtB;oBACb,oBAAC,aAAK,CAAC,IAAI,IAAC,KAAK,EAAC,UAAU,EAAC,SAAS,EAAE,MAAM,CAAC,IAAI;wBACjD,0DAAkC,CACvB;oBACb,oBAAC,aAAK,CAAC,IAAI,IAAC,KAAK,EAAC,OAAO,EAAC,SAAS,EAAE,MAAM,CAAC,IAAI;wBAC9C,uDAA+B,CACpB;oBACb,oBAAC,aAAK,CAAC,IAAI,IAAC,KAAK,EAAC,QAAQ,EAAC,SAAS,EAAE,MAAM,CAAC,IAAI;wBAC/C,wDAAgC,CACrB;oBACb,oBAAC,aAAK,CAAC,IAAI,IAAC,KAAK,EAAC,KAAK,EAAC,SAAS,EAAE,MAAM,CAAC,IAAI;wBAC5C,qDAA6B,CAClB,CACP;gBAER,oDAA4B;gBAC5B,oBAAC,aAAK,IAAC,UAAU,QAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,IAAI;oBAC3E,0DAAkC,CAC5B,CACF,CACT,CAAC;QACJ,CAAC;QAKH,qCAAC;IAAD,CAAC,AA/DD,CAAoD,KAAK,CAAC,SAAS,GA+DlE;IA/DY,wEAA8B","sourcesContent":["// @codepen\r\nimport * as React from 'react';\r\nimport { Stack } from '../Stack';\r\nimport { mergeStyleSets, DefaultPalette } from 'office-ui-fabric-react/lib/Styling';\r\n\r\nexport class HorizontalStackReversedExample extends React.Component<{}, {}> {\r\n  public render(): JSX.Element {\r\n    const styles = mergeStyleSets({\r\n      root: {\r\n        background: DefaultPalette.themeTertiary\r\n      },\r\n\r\n      item: {\r\n        color: DefaultPalette.white,\r\n        background: DefaultPalette.themePrimary,\r\n        padding: 5\r\n      }\r\n    });\r\n\r\n    return (\r\n      <Stack gap={5}>\r\n        <span>Default horizontal stack</span>\r\n        <Stack horizontal reversed disableShrink className={styles.root}>\r\n          <span>Item One</span>\r\n          <span>Item Two</span>\r\n          <span>Item Three</span>\r\n        </Stack>\r\n\r\n        <span>Horizontal gap between items</span>\r\n        <Stack horizontal reversed disableShrink gap={10} padding={10} className={styles.root}>\r\n          <span>Item One</span>\r\n          <span>Item Two</span>\r\n          <span>Item Three</span>\r\n        </Stack>\r\n\r\n        <span>Item alignments</span>\r\n        <Stack horizontal reversed disableShrink gap={5} padding={10} className={styles.root} styles={{ root: { height: 100 } }}>\r\n          <Stack.Item align=\"auto\" className={styles.item}>\r\n            <span>Auto-aligned item</span>\r\n          </Stack.Item>\r\n          <Stack.Item align=\"stretch\" className={styles.item}>\r\n            <span>Stretch-aligned item</span>\r\n          </Stack.Item>\r\n          <Stack.Item align=\"baseline\" className={styles.item}>\r\n            <span>Baseline-aligned item</span>\r\n          </Stack.Item>\r\n          <Stack.Item align=\"start\" className={styles.item}>\r\n            <span>Start-aligned item</span>\r\n          </Stack.Item>\r\n          <Stack.Item align=\"center\" className={styles.item}>\r\n            <span>Center-aligned item</span>\r\n          </Stack.Item>\r\n          <Stack.Item align=\"end\" className={styles.item}>\r\n            <span>End-aligned item</span>\r\n          </Stack.Item>\r\n        </Stack>\r\n\r\n        <span>Clickable stack</span>\r\n        <Stack horizontal onClick={this._onClick} padding={10} className={styles.root}>\r\n          <span>Click inside this box</span>\r\n        </Stack>\r\n      </Stack>\r\n    );\r\n  }\r\n\r\n  private _onClick = (): void => {\r\n    alert('Clicked Stack');\r\n  };\r\n}\r\n"]}