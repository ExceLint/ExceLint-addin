{"version":3,"file":"Stack.Horizontal.Wrap.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Horizontal.Wrap.Example.tsx"],"names":[],"mappings":";;;IASA;QAAgD,sDAAkC;QAChF,oCAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAIb;YA0DO,oBAAc,GAAG,UAAC,KAAa;gBACrC,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;YACvC,CAAC,CAAC;YA/DA,KAAI,CAAC,KAAK,GAAG;gBACX,UAAU,EAAE,GAAG;aAChB,CAAC;;QACJ,CAAC;QAEM,2CAAM,GAAb;YACE,IAAM,MAAM,GAAG,wBAAc,CAAC;gBAC5B,IAAI,EAAE;oBACJ,UAAU,EAAE,wBAAc,CAAC,aAAa;oBACxC,KAAK,EAAK,IAAI,CAAC,KAAK,CAAC,UAAU,MAAG;oBAClC,SAAS,EAAE;wBACT,QAAQ,EAAE;4BACR,KAAK,EAAE,EAAE;4BACT,MAAM,EAAE,EAAE;4BACV,OAAO,EAAE,MAAM;4BACf,UAAU,EAAE,QAAQ;4BACpB,cAAc,EAAE,QAAQ;4BACxB,UAAU,EAAE,wBAAc,CAAC,YAAY;4BACvC,KAAK,EAAE,wBAAc,CAAC,KAAK;yBAC5B;qBACF;iBACF;aACF,CAAC,CAAC;YAEH,IAAM,MAAM,GAAG;gBACb,YAAY,EAAE;oBACZ,WAAW,EAAE,EAAE;iBAChB;gBACD,SAAS,EAAE;oBACT,WAAW,EAAE,EAAE;iBAChB;aACF,CAAC;YAEF,OAAO,CACL,oBAAC,aAAK,IAAC,MAAM,EAAE,MAAM,CAAC,YAAY;gBAChC,oBAAC,eAAM,IACL,KAAK,EAAC,wEAAwE,EAC9E,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,CAAC,EACP,YAAY,EAAE,GAAG,EACjB,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,cAAc,GAC7B;gBAEF,oBAAC,aAAK,IAAC,UAAU,QAAC,IAAI,QAAC,MAAM,EAAE,MAAM,CAAC,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC,IAAI;oBACrE,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,uCAAe,CACT,CACF,CACT,CAAC;QACJ,CAAC;QAKH,iCAAC;IAAD,CAAC,AAnED,CAAgD,KAAK,CAAC,SAAS,GAmE9D;IAnEY,gEAA0B","sourcesContent":["import * as React from 'react';\r\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\r\nimport { Stack } from '../Stack';\r\nimport { mergeStyleSets, DefaultPalette } from 'office-ui-fabric-react/lib/Styling';\r\n\r\nexport interface IExampleState {\r\n  stackWidth: number;\r\n}\r\n\r\nexport class HorizontalStackWrapExample extends React.Component<{}, IExampleState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      stackWidth: 100\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const styles = mergeStyleSets({\r\n      root: {\r\n        background: DefaultPalette.themeTertiary,\r\n        width: `${this.state.stackWidth}%`,\r\n        selectors: {\r\n          '& span': {\r\n            width: 50,\r\n            height: 50,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            background: DefaultPalette.themePrimary,\r\n            color: DefaultPalette.white\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    const tokens = {\r\n      sectionStack: {\r\n        childrenGap: 10\r\n      },\r\n      wrapStack: {\r\n        childrenGap: 30\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Stack tokens={tokens.sectionStack}>\r\n        <Slider\r\n          label=\"Change the stack width to see how child items wrap onto multiple rows:\"\r\n          min={1}\r\n          max={100}\r\n          step={1}\r\n          defaultValue={100}\r\n          showValue={true}\r\n          onChange={this._onWidthChange}\r\n        />\r\n\r\n        <Stack horizontal wrap tokens={tokens.wrapStack} className={styles.root}>\r\n          <span>1</span>\r\n          <span>2</span>\r\n          <span>3</span>\r\n          <span>4</span>\r\n          <span>5</span>\r\n          <span>6</span>\r\n          <span>7</span>\r\n          <span>8</span>\r\n          <span>9</span>\r\n          <span>10</span>\r\n        </Stack>\r\n      </Stack>\r\n    );\r\n  }\r\n\r\n  private _onWidthChange = (value: number): void => {\r\n    this.setState({ stackWidth: value });\r\n  };\r\n}\r\n"]}