{"version":3,"file":"Stack.Horizontal.Configure.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Horizontal.Configure.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\r\nimport { Stack } from '../Stack';\r\nimport { mergeStyleSets, DefaultPalette } from 'office-ui-fabric-react/lib/Styling';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\n\r\nexport type HorizontalAlignment = 'start' | 'center' | 'end' | 'space-around' | 'space-between' | 'space-evenly';\r\nexport type VerticalAlignment = 'start' | 'center' | 'end';\r\n\r\nexport interface IExampleState {\r\n  numItems: number;\r\n  showBoxShadow: boolean;\r\n  preventOverflow: boolean;\r\n  wrap: boolean;\r\n  wrapperWidth: number;\r\n  disableShrink: boolean;\r\n  columnGap: number;\r\n  rowGap: number;\r\n  paddingLeft: number;\r\n  paddingRight: number;\r\n  paddingTop: number;\r\n  paddingBottom: number;\r\n  horizontalAlignment: HorizontalAlignment;\r\n  verticalAlignment: VerticalAlignment;\r\n  hideEmptyChildren: boolean;\r\n  emptyChildren: string[];\r\n}\r\n\r\nexport class HorizontalStackConfigureExample extends React.Component<{}, IExampleState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      numItems: 5,\r\n      showBoxShadow: false,\r\n      preventOverflow: false,\r\n      wrap: false,\r\n      wrapperWidth: 100,\r\n      disableShrink: true,\r\n      columnGap: 0,\r\n      rowGap: 0,\r\n      paddingLeft: 0,\r\n      paddingRight: 0,\r\n      paddingTop: 0,\r\n      paddingBottom: 0,\r\n      horizontalAlignment: 'start',\r\n      verticalAlignment: 'start',\r\n      hideEmptyChildren: false,\r\n      emptyChildren: []\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      numItems,\r\n      showBoxShadow,\r\n      preventOverflow,\r\n      wrap,\r\n      wrapperWidth,\r\n      disableShrink,\r\n      columnGap,\r\n      rowGap,\r\n      paddingLeft,\r\n      paddingRight,\r\n      paddingTop,\r\n      paddingBottom,\r\n      horizontalAlignment,\r\n      verticalAlignment,\r\n      hideEmptyChildren,\r\n      emptyChildren\r\n    } = this.state;\r\n\r\n    const styles = mergeStyleSets({\r\n      root: [\r\n        {\r\n          background: DefaultPalette.themeTertiary,\r\n          minHeight: 100,\r\n          marginLeft: 10,\r\n          marginRight: 10,\r\n          width: `calc(${wrapperWidth}% - 20px)`\r\n        },\r\n        preventOverflow && {\r\n          overflow: 'hidden' as 'hidden'\r\n        }\r\n      ],\r\n\r\n      item: {\r\n        width: 50,\r\n        height: 50,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        background: DefaultPalette.themePrimary,\r\n        color: DefaultPalette.white,\r\n        boxShadow: showBoxShadow ? `0px 0px 10px 5px ${DefaultPalette.themeDarker}` : ''\r\n      }\r\n    });\r\n\r\n    const stackStyles = {\r\n      inner: {\r\n        overflow: preventOverflow ? 'hidden' : ('visible' as 'hidden' | 'visible')\r\n      }\r\n    };\r\n\r\n    const tokens = {\r\n      sectionStack: {\r\n        childrenGap: 10\r\n      },\r\n      configureStack: {\r\n        childrenGap: 20\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Stack tokens={tokens.sectionStack}>\r\n        <Stack horizontal disableShrink>\r\n          <Stack.Item grow>\r\n            <Stack>\r\n              <Slider\r\n                label=\"Number of items:\"\r\n                min={1}\r\n                max={30}\r\n                step={1}\r\n                defaultValue={5}\r\n                showValue={true}\r\n                onChange={this._onNumItemsChange}\r\n              />\r\n              <Stack horizontal disableShrink>\r\n                <Checkbox label=\"Shadow around items\" onChange={this._onBoxShadowChange} styles={{ root: { marginRight: 10 } }} />\r\n                <Checkbox label=\"Prevent item overflow\" onChange={this._onPreventOverflowChange} />\r\n              </Stack>\r\n            </Stack>\r\n          </Stack.Item>\r\n          <Stack.Item grow>\r\n            <Stack horizontal disableShrink tokens={tokens.configureStack}>\r\n              <Stack>\r\n                <Checkbox label=\"Wrap items\" onChange={this._onWrapChange} styles={{ root: { marginBottom: 10 } }} />\r\n                <Checkbox label=\"Shrink items\" onChange={this._onShrinkChange} />\r\n              </Stack>\r\n              <Stack.Item grow>\r\n                <Slider\r\n                  label=\"Container width:\"\r\n                  min={1}\r\n                  max={100}\r\n                  step={1}\r\n                  defaultValue={100}\r\n                  showValue={true}\r\n                  onChange={this._onWrapperWidthChange}\r\n                />\r\n              </Stack.Item>\r\n            </Stack>\r\n          </Stack.Item>\r\n        </Stack>\r\n\r\n        <Stack horizontal disableShrink tokens={tokens.configureStack}>\r\n          <Stack.Item grow>\r\n            <Stack>\r\n              <Slider\r\n                label=\"Horizontal gap between items:\"\r\n                min={0}\r\n                max={50}\r\n                step={1}\r\n                defaultValue={0}\r\n                showValue={true}\r\n                onChange={this._onGapChange}\r\n              />\r\n              <Slider\r\n                label=\"Vertical gap between items:\"\r\n                min={0}\r\n                max={50}\r\n                step={1}\r\n                defaultValue={0}\r\n                showValue={true}\r\n                onChange={this._onVerticalGapChange}\r\n              />\r\n            </Stack>\r\n          </Stack.Item>\r\n          <Stack.Item grow>\r\n            <Stack>\r\n              <Slider\r\n                label=\"Left padding:\"\r\n                min={0}\r\n                max={50}\r\n                step={1}\r\n                defaultValue={0}\r\n                showValue={true}\r\n                onChange={this._onPaddingLeftChange}\r\n              />\r\n              <Slider\r\n                label=\"Right padding:\"\r\n                min={0}\r\n                max={50}\r\n                step={1}\r\n                defaultValue={0}\r\n                showValue={true}\r\n                onChange={this._onPaddingRightChange}\r\n              />\r\n            </Stack>\r\n          </Stack.Item>\r\n          <Stack.Item grow>\r\n            <Stack>\r\n              <Slider\r\n                label=\"Top padding:\"\r\n                min={0}\r\n                max={50}\r\n                step={1}\r\n                defaultValue={0}\r\n                showValue={true}\r\n                onChange={this._onPaddingTopChange}\r\n              />\r\n              <Slider\r\n                label=\"Bottom padding:\"\r\n                min={0}\r\n                max={50}\r\n                step={1}\r\n                defaultValue={0}\r\n                showValue={true}\r\n                onChange={this._onPaddingBottomChange}\r\n              />\r\n            </Stack>\r\n          </Stack.Item>\r\n        </Stack>\r\n\r\n        <Stack horizontal disableShrink tokens={tokens.configureStack} verticalAlign=\"end\">\r\n          <Stack.Item grow>\r\n            <Dropdown\r\n              selectedKey={horizontalAlignment}\r\n              placeholder=\"Select Horizontal Alignment\"\r\n              label=\"Horizontal alignment:\"\r\n              options={[\r\n                { key: 'start', text: 'Left' },\r\n                { key: 'center', text: 'Center' },\r\n                { key: 'end', text: 'Right' },\r\n                { key: 'space-around', text: 'Space around' },\r\n                { key: 'space-between', text: 'Space between' },\r\n                { key: 'space-evenly', text: 'Space evenly' }\r\n              ]}\r\n              onChange={this._onHorizontalAlignChange}\r\n            />\r\n          </Stack.Item>\r\n          <Stack.Item grow>\r\n            <Dropdown\r\n              selectedKey={verticalAlignment}\r\n              placeholder=\"Select Vertical Alignment\"\r\n              label=\"Vertical alignment:\"\r\n              options={[{ key: 'start', text: 'Top' }, { key: 'center', text: 'Center' }, { key: 'end', text: 'Bottom' }]}\r\n              onChange={this._onVerticalAlignChange}\r\n            />\r\n          </Stack.Item>\r\n          <Stack.Item>\r\n            <Checkbox label=\"Hide empty children\" onChange={this._onHideEmptyChildrenChange} />\r\n          </Stack.Item>\r\n          <Stack.Item grow>\r\n            <TextField label=\"Enter a space-separated list of empty children (e.g. 1 2 3):\" onChange={this._onEmptyChildrenChange} />\r\n          </Stack.Item>\r\n        </Stack>\r\n\r\n        <Stack\r\n          horizontal\r\n          wrap={wrap}\r\n          disableShrink={disableShrink}\r\n          tokens={{ childrenGap: rowGap + ' ' + columnGap }}\r\n          padding={`${paddingTop}px ${paddingRight}px ${paddingBottom}px ${paddingLeft}px`}\r\n          horizontalAlign={horizontalAlignment}\r\n          verticalAlign={verticalAlignment}\r\n          className={styles.root}\r\n          styles={stackStyles}\r\n        >\r\n          {this._range(1, numItems).map((value: number, index: number) => {\r\n            if (emptyChildren.indexOf(value.toString()) !== -1) {\r\n              return hideEmptyChildren ? <Stack.Item key={index} className={styles.item} /> : <span key={index} className={styles.item} />;\r\n            }\r\n\r\n            return (\r\n              <span key={index} className={styles.item}>\r\n                {value}\r\n              </span>\r\n            );\r\n          })}\r\n        </Stack>\r\n      </Stack>\r\n    );\r\n  }\r\n\r\n  private _onNumItemsChange = (value: number): void => {\r\n    this.setState({ numItems: value });\r\n  };\r\n\r\n  private _range = (start: number, end: number): number[] => {\r\n    const result = [];\r\n    for (let i = start; i <= end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  private _onBoxShadowChange = (ev: React.FormEvent<HTMLElement>, isChecked: boolean): void => {\r\n    this.setState({ showBoxShadow: isChecked });\r\n  };\r\n\r\n  private _onPreventOverflowChange = (ev: React.FormEvent<HTMLElement>, isChecked: boolean): void => {\r\n    this.setState({ preventOverflow: isChecked });\r\n  };\r\n\r\n  private _onWrapChange = (ev: React.FormEvent<HTMLElement>, isChecked: boolean): void => {\r\n    this.setState({ wrap: isChecked });\r\n  };\r\n\r\n  private _onShrinkChange = (ev: React.FormEvent<HTMLElement>, isChecked: boolean): void => {\r\n    this.setState({ disableShrink: !isChecked });\r\n  };\r\n\r\n  private _onWrapperWidthChange = (value: number): void => {\r\n    this.setState({ wrapperWidth: value });\r\n  };\r\n\r\n  private _onGapChange = (value: number): void => {\r\n    this.setState({ columnGap: value });\r\n  };\r\n\r\n  private _onVerticalGapChange = (value: number): void => {\r\n    this.setState({ rowGap: value });\r\n  };\r\n\r\n  private _onPaddingLeftChange = (value: number): void => {\r\n    this.setState({ paddingLeft: value });\r\n  };\r\n\r\n  private _onPaddingRightChange = (value: number): void => {\r\n    this.setState({ paddingRight: value });\r\n  };\r\n\r\n  private _onPaddingTopChange = (value: number): void => {\r\n    this.setState({ paddingTop: value });\r\n  };\r\n\r\n  private _onPaddingBottomChange = (value: number): void => {\r\n    this.setState({ paddingBottom: value });\r\n  };\r\n\r\n  private _onHorizontalAlignChange = (ev: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void => {\r\n    this.setState({ horizontalAlignment: option.key as HorizontalAlignment });\r\n  };\r\n\r\n  private _onVerticalAlignChange = (ev: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void => {\r\n    this.setState({ verticalAlignment: option.key as VerticalAlignment });\r\n  };\r\n\r\n  private _onHideEmptyChildrenChange = (ev: React.FormEvent<HTMLElement>, isChecked: boolean): void => {\r\n    this.setState({ hideEmptyChildren: isChecked });\r\n  };\r\n\r\n  private _onEmptyChildrenChange = (ev: React.FormEvent<HTMLInputElement>, value?: string): void => {\r\n    if (value === undefined) {\r\n      return;\r\n    }\r\n    this.setState({ emptyChildren: value.replace(/,/g, '').split(' ') });\r\n  };\r\n}\r\n"]}