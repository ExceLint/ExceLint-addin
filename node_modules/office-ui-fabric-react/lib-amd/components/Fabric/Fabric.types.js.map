{"version":3,"file":"Fabric.types.js","sourceRoot":"../src/","sources":["components/Fabric/Fabric.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport { IStyle, ITheme } from '../../Styling';\nimport { IRefObject, IStyleFunctionOrObject } from '../../Utilities';\n\nexport interface IFabricProps extends React.HTMLAttributes<HTMLDivElement> {\n  componentRef?: IRefObject<{}>;\n\n  /**\n   * Overrides the root element type, defaults to `div`.\n   */\n  as?: React.ElementType;\n\n  /**\n   * Injected by the `styled` HOC wrapper.\n   */\n  theme?: ITheme;\n\n  /**\n   * Overrides the styles for the component.\n   */\n  styles?: IStyleFunctionOrObject<IFabricStyleProps, IFabricStyles>;\n\n  /**\n   * Applies the current body background specified in the theme to the root element.\n   */\n  applyTheme?: boolean;\n\n  /**\n   * Applies the current body background specified in the theme to the body element.\n   */\n  applyThemeToBody?: boolean;\n\n  /**\n   * Specifies the direction of the content. Will inject a `dir` attribute, and also ensure that the `rtl` flag of the\n   * contextual theme object is set correctly so that css registered with merge-styles can be auto flipped correctly.\n   */\n  dir?: 'rtl' | 'ltr' | 'auto';\n}\n\nexport interface IFabricStyleProps extends IFabricProps {\n  theme: ITheme;\n}\n\nexport interface IFabricStyles {\n  root: IStyle;\n  bodyThemed: IStyle;\n}\n"]}