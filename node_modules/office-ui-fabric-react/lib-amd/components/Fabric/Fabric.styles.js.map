{"version":3,"file":"Fabric.styles.js","sourceRoot":"../src/","sources":["components/Fabric/Fabric.styles.ts"],"names":[],"mappings":";;;IAGA,IAAM,WAAW,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC;IAE9C,IAAM,gBAAgB,GAAG;QACvB,IAAI,EAAE,WAAW;QACjB,UAAU,EAAE,sBAAsB;KACnC,CAAC;IAOW,QAAA,SAAS,GAAG,UAAC,KAAwB;QACxC,IAAA,mBAAK,EAAE,2BAAS,EAAE,6BAAU,CAAW;QAC/C,IAAM,UAAU,GAAG,6BAAmB,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;QAChE,OAAO;YACL,IAAI,EAAE;gBACJ,UAAU,CAAC,IAAI;gBACf,KAAK,CAAC,KAAK,CAAC,MAAM;gBAClB;oBACE,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,cAAc;oBACnC,SAAS,EAAE;wBACT,UAAU,EAAE,WAAW;wBACvB,SAAS,EAAE,WAAW;wBACtB,YAAY,EAAE,WAAW;qBAC1B;iBACF;gBACD,4CAA4C;gBAC5C,UAAU,IAAI;oBACZ,KAAK,EAAE,KAAK,CAAC,cAAc,CAAC,QAAQ;oBACpC,eAAe,EAAE,KAAK,CAAC,cAAc,CAAC,cAAc;iBACrD;gBACD,SAAS;aACV;YACD,UAAU,EAAE;gBACV;oBACE,eAAe,EAAE,KAAK,CAAC,cAAc,CAAC,cAAc;iBACrD;aACF;SACF,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import { getGlobalClassNames } from '../../Styling';\nimport { IFabricStyleProps, IFabricStyles } from './Fabric.types';\n\nconst inheritFont = { fontFamily: 'inherit' };\n\nconst GlobalClassNames = {\n  root: 'ms-Fabric',\n  bodyThemed: 'ms-Fabric-bodyThemed',\n};\n\nexport interface IFabricClassNames {\n  root: string;\n  bodyThemed: string;\n}\n\nexport const getStyles = (props: IFabricStyleProps): IFabricStyles => {\n  const { theme, className, applyTheme } = props;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        color: theme.palette.neutralPrimary,\n        selectors: {\n          '& button': inheritFont,\n          '& input': inheritFont,\n          '& textarea': inheritFont,\n        },\n      },\n      // apply theme to only if applyTheme is true\n      applyTheme && {\n        color: theme.semanticColors.bodyText,\n        backgroundColor: theme.semanticColors.bodyBackground,\n      },\n      className,\n    ],\n    bodyThemed: [\n      {\n        backgroundColor: theme.semanticColors.bodyBackground,\n      },\n    ],\n  };\n};\n"]}