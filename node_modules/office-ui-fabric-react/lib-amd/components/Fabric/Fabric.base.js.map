{"version":3,"file":"Fabric.base.js","sourceRoot":"../src/","sources":["components/Fabric/Fabric.base.tsx"],"names":[],"mappings":";;;IAKA,IAAM,aAAa,GAAG,8BAAkB,EAAoC,CAAC;IAE7E;QAAgC,sCAK/B;QAGC,oBAAY,KAAmB;YAA/B,YACE,kBAAM,KAAK,CAAC,SAEb;YALO,kBAAY,GAAG,KAAK,CAAC,SAAS,EAAkB,CAAC;YA0BjD,kBAAY,GAAG,UAAC,EAAc;gBACpC,KAAI,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC;YAC3C,CAAC,CAAC;YAEM,gBAAU,GAAG,UAAC,EAAiB;gBACrC,IAAI,gCAAoB,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;oBAClC,KAAI,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;iBACzC;YACH,CAAC,CAAC;YA9BA,KAAI,CAAC,KAAK,GAAG,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC;;QACzC,CAAC;QAEM,2BAAM,GAAb;YACE,IAAM,UAAU,GAAG,aAAa,CAAC,yBAAS,uBACpC,IAAI,CAAC,KAA2B,EACjC,IAAI,CAAC,KAAK,EACb,CAAC;YACH,IAAM,QAAQ,GAAG,0BAAc,CAAC,IAAI,CAAC,KAAK,EAAE,yBAAa,CAAC,CAAC;YAE3D,OAAO,gDAAS,QAAQ,IAAE,SAAS,EAAE,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,YAAY,IAAI,CAAC;QACnF,CAAC;QAEM,sCAAiB,GAAxB;YACE,IAAM,GAAG,GAAG,qBAAS,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAEjD,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;gBAC3D,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;aACxD;QACH,CAAC;QAWH,iBAAC;IAAD,CAAC,AAzCD,CAAgC,yBAAa,GAyC5C;IAzCY,gCAAU","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, getNativeProps, divProperties, classNamesFunction, getWindow, isDirectionalKeyCode } from '../../Utilities';\r\nimport { getStyles } from './Fabric.styles';\r\nimport { IFabricProps, IFabricStyleProps, IFabricStyles } from './Fabric.types';\r\n\r\nconst getClassNames = classNamesFunction<IFabricStyleProps, IFabricStyles>();\r\n\r\nexport class FabricBase extends BaseComponent<\r\n  IFabricProps,\r\n  {\r\n    isFocusVisible: boolean;\r\n  }\r\n> {\r\n  private _rootElement = React.createRef<HTMLDivElement>();\r\n\r\n  constructor(props: IFabricProps) {\r\n    super(props);\r\n    this.state = { isFocusVisible: false };\r\n  }\r\n\r\n  public render() {\r\n    const classNames = getClassNames(getStyles, {\r\n      ...(this.props as IFabricStyleProps),\r\n      ...this.state\r\n    });\r\n    const divProps = getNativeProps(this.props, divProperties);\r\n\r\n    return <div {...divProps} className={classNames.root} ref={this._rootElement} />;\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    const win = getWindow(this._rootElement.current);\r\n\r\n    if (win) {\r\n      this._events.on(win, 'mousedown', this._onMouseDown, true);\r\n      this._events.on(win, 'keydown', this._onKeyDown, true);\r\n    }\r\n  }\r\n\r\n  private _onMouseDown = (ev: MouseEvent): void => {\r\n    this.setState({ isFocusVisible: false });\r\n  };\r\n\r\n  private _onKeyDown = (ev: KeyboardEvent): void => {\r\n    if (isDirectionalKeyCode(ev.which)) {\r\n      this.setState({ isFocusVisible: true });\r\n    }\r\n  };\r\n}\r\n"]}