define(["require", "exports", "tslib", "react", "./CommandBar.checklist", "./examples/CommandBar.Basic.Example", "./examples/CommandBar.ButtonAs.Example", "./examples/CommandBar.CommandBarButtonAs.Example", "./examples/data"], function (require, exports, tslib_1, React, CommandBar_checklist_1, CommandBar_Basic_Example_1, CommandBar_ButtonAs_Example_1, CommandBar_CommandBarButtonAs_Example_1, data_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var CommandBarBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/examples/CommandBar.Basic.Example.tsx');
    var CommandBarButtonAsExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/examples/CommandBar.ButtonAs.Example.tsx');
    var IndividualCommandBarButtonAsExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/examples/CommandBar.CommandBarButtonAs.Example.tsx');
    var cmdBarParamsTextAndIcons = {
        items: data_1.items,
        overflowItems: data_1.overflowItems,
        farItems: data_1.farItems
    };
    exports.CommandBarPageProps = {
        title: 'CommandBar',
        componentName: 'CommandBar',
        componentUrl: 'https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/CommandBar',
        componentStatus: CommandBar_checklist_1.CommandBarStatus,
        examples: [
            {
                title: 'CommandBar with overflowing menu items',
                code: CommandBarBasicExampleCode,
                view: React.createElement(CommandBar_Basic_Example_1.CommandBarBasicExample, tslib_1.__assign({}, cmdBarParamsTextAndIcons))
            },
            {
                title: 'CommandBar custom buttons and overflow menu',
                code: CommandBarButtonAsExampleCode,
                view: React.createElement(CommandBar_ButtonAs_Example_1.CommandBarButtonAsExample, tslib_1.__assign({}, cmdBarParamsTextAndIcons))
            },
            {
                title: 'CommandBar with coachmark on individual button',
                code: IndividualCommandBarButtonAsExampleCode,
                view: React.createElement(CommandBar_CommandBarButtonAs_Example_1.IndividualCommandBarButtonAsExampleWrapper, tslib_1.__assign({}, cmdBarParamsTextAndIcons))
            }
        ],
        propertiesTablesSources: [
            require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/CommandBar.types.ts'),
            require('!raw-loader!office-ui-fabric-react/src/components/ContextualMenu/ContextualMenu.types.ts')
        ],
        overview: require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/docs/CommandBarOverview.md'),
        bestPractices: '',
        dos: require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/docs/CommandBarDos.md'),
        donts: require('!raw-loader!office-ui-fabric-react/src/components/CommandBar/docs/CommandBarDonts.md'),
        isHeaderVisible: true,
        isFeedbackVisible: true
    };
});
//# sourceMappingURL=CommandBar.doc.js.map