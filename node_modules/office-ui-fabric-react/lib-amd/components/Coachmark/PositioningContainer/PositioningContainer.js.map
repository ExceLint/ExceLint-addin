{"version":3,"file":"PositioningContainer.js","sourceRoot":"../src/","sources":["components/Coachmark/PositioningContainer/PositioningContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { IPositioningContainerProps } from './PositioningContainer.types';\r\nimport { getClassNames } from './PositioningContainer.styles';\r\nimport { Layer } from '../../../Layer';\r\n\r\n// Utilites/Helpers\r\nimport { DirectionalHint } from '../../../common/DirectionalHint';\r\nimport {\r\n  BaseComponent,\r\n  IPoint,\r\n  IRectangle,\r\n  assign,\r\n  css,\r\n  elementContains,\r\n  focusFirstChild,\r\n  getWindow,\r\n  getDocument\r\n} from '../../../Utilities';\r\n\r\nimport { getMaxHeight, positionElement, IPositionedData, IPositionProps, IPosition, RectangleEdge } from '../../../utilities/positioning';\r\n\r\nimport { AnimationClassNames, mergeStyles } from '../../../Styling';\r\n\r\nconst OFF_SCREEN_STYLE = { opacity: 0 };\r\n\r\n// In order for some of the max height logic to work\r\n// properly we need to set the border.\r\n// The value is abitrary.\r\nconst BORDER_WIDTH = 1;\r\nconst SLIDE_ANIMATIONS: { [key: number]: string } = {\r\n  [RectangleEdge.top]: 'slideUpIn20',\r\n  [RectangleEdge.bottom]: 'slideDownIn20',\r\n  [RectangleEdge.left]: 'slideLeftIn20',\r\n  [RectangleEdge.right]: 'slideRightIn20'\r\n};\r\n\r\nexport interface IPositioningContainerState {\r\n  /**\r\n   * Current set of calcualted positions for the outermost parent container.\r\n   */\r\n  positions?: IPositionedData;\r\n\r\n  /**\r\n   * Tracks the current height offset and updates during\r\n   * the height animation when props.finalHeight is specified.\r\n   */\r\n  heightOffset?: number;\r\n}\r\n\r\nexport class PositioningContainer extends BaseComponent<IPositioningContainerProps, IPositioningContainerState>\r\n  implements PositioningContainer {\r\n  public static defaultProps: IPositioningContainerProps = {\r\n    preventDismissOnScroll: false,\r\n    offsetFromTarget: 0,\r\n    minPagePadding: 8,\r\n    directionalHint: DirectionalHint.bottomAutoEdge\r\n  };\r\n\r\n  private _didSetInitialFocus: boolean;\r\n\r\n  /**\r\n   * The primary positioned div.\r\n   */\r\n  private _positionedHost = React.createRef<HTMLDivElement>();\r\n\r\n  // @TODO rename to reflect the name of this class\r\n  private _contentHost = React.createRef<HTMLDivElement>();\r\n\r\n  /**\r\n   * Stores an instance of Window, used to check\r\n   * for server side rendering and if focus was lost.\r\n   */\r\n  private _targetWindow: Window;\r\n\r\n  /**\r\n   * The bounds used when determing if and where the\r\n   * PositioningContainer should be placed.\r\n   */\r\n  private _positioningBounds: IRectangle;\r\n\r\n  /**\r\n   * The maximum height the PositioningContainer can grow to\r\n   * without going being the window or target bounds\r\n   */\r\n  private _maxHeight: number | undefined;\r\n  private _positionAttempts: number;\r\n  private _target: HTMLElement | MouseEvent | IPoint | null;\r\n  private _setHeightOffsetTimer: number;\r\n\r\n  constructor(props: IPositioningContainerProps) {\r\n    super(props);\r\n    this._didSetInitialFocus = false;\r\n    this.state = {\r\n      positions: undefined,\r\n      heightOffset: 0\r\n    };\r\n    this._positionAttempts = 0;\r\n  }\r\n\r\n  public componentWillMount(): void {\r\n    this._setTargetWindowAndElement(this._getTarget());\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this._onComponentDidMount();\r\n  }\r\n\r\n  public componentDidUpdate(): void {\r\n    this._setInitialFocus();\r\n    this._updateAsyncPosition();\r\n  }\r\n\r\n  public componentWillUpdate(newProps: IPositioningContainerProps): void {\r\n    // If the target element changed, find the new one. If we are tracking\r\n    // target with class name, always find element because we do not know if\r\n    // fabric has rendered a new element and disposed the old element.\r\n    const newTarget = this._getTarget(newProps);\r\n    const oldTarget = this._getTarget();\r\n    if (newTarget !== oldTarget || typeof newTarget === 'string' || newTarget instanceof String) {\r\n      this._maxHeight = undefined;\r\n      this._setTargetWindowAndElement(newTarget!);\r\n    }\r\n\r\n    if (newProps.offsetFromTarget !== this.props.offsetFromTarget) {\r\n      this._maxHeight = undefined;\r\n    }\r\n\r\n    if (newProps.finalHeight !== this.props.finalHeight) {\r\n      this._setHeightOffsetEveryFrame();\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element | null {\r\n    // If there is no target window then we are likely in server side rendering and we should not render anything.\r\n    if (!this._targetWindow) {\r\n      return null;\r\n    }\r\n\r\n    const { className, positioningContainerWidth, positioningContainerMaxHeight, children } = this.props;\r\n    const { positions } = this.state;\r\n\r\n    const styles = getClassNames();\r\n\r\n    const directionalClassName =\r\n      positions && positions.targetEdge ? (AnimationClassNames as any)[SLIDE_ANIMATIONS[positions.targetEdge]] : '';\r\n\r\n    const getContentMaxHeight: number = this._getMaxHeight() + this.state.heightOffset!;\r\n    const contentMaxHeight: number =\r\n      positioningContainerMaxHeight! && positioningContainerMaxHeight! > getContentMaxHeight\r\n        ? getContentMaxHeight\r\n        : positioningContainerMaxHeight!;\r\n    const content = (\r\n      <div ref={this._positionedHost} className={css('ms-PositioningContainer', styles.container)}>\r\n        <div\r\n          className={mergeStyles(\r\n            'ms-PositioningContainer-layerHost',\r\n            styles.root,\r\n            className,\r\n            directionalClassName,\r\n            !!positioningContainerWidth && { width: positioningContainerWidth }\r\n          )}\r\n          // tslint:disable-next-line:jsx-ban-props\r\n          style={positions ? positions.elementPosition : OFF_SCREEN_STYLE}\r\n          tabIndex={-1} // Safari and Firefox on Mac OS requires this to back-stop click events so focus remains in the Callout.\r\n          // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\r\n          ref={this._contentHost}\r\n        >\r\n          {children}\r\n          {\r\n            // @TODO apply to the content container\r\n            contentMaxHeight\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return this.props.doNotLayer ? content : <Layer>{content}</Layer>;\r\n  }\r\n\r\n  /**\r\n   * Deprecated, use `onResize` instead.\r\n   * @deprecated Use `onResize` instead.\r\n   */\r\n  public dismiss = (ev?: Event | React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>): void => {\r\n    this.onResize(ev);\r\n  };\r\n\r\n  public onResize = (ev?: Event | React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>): void => {\r\n    const { onDismiss } = this.props;\r\n    if (onDismiss) {\r\n      onDismiss(ev);\r\n    } else {\r\n      this._updateAsyncPosition();\r\n    }\r\n  };\r\n\r\n  protected _dismissOnScroll(ev: Event): void {\r\n    const { preventDismissOnScroll } = this.props;\r\n    if (this.state.positions && !preventDismissOnScroll) {\r\n      this._dismissOnLostFocus(ev);\r\n    }\r\n  }\r\n\r\n  protected _dismissOnLostFocus(ev: Event): void {\r\n    const target = ev.target as HTMLElement;\r\n    const clickedOutsideCallout = this._positionedHost.current && !elementContains(this._positionedHost.current, target);\r\n\r\n    if (\r\n      (!this._target && clickedOutsideCallout) ||\r\n      (ev.target !== this._targetWindow &&\r\n        clickedOutsideCallout &&\r\n        ((this._target as MouseEvent).stopPropagation ||\r\n          (!this._target || (target !== this._target && !elementContains(this._target as HTMLElement, target)))))\r\n    ) {\r\n      this.onResize(ev);\r\n    }\r\n  }\r\n\r\n  protected _setInitialFocus = (): void => {\r\n    if (this._contentHost.current && this.props.setInitialFocus && !this._didSetInitialFocus && this.state.positions) {\r\n      this._didSetInitialFocus = true;\r\n      focusFirstChild(this._contentHost.current);\r\n    }\r\n  };\r\n\r\n  protected _onComponentDidMount = (): void => {\r\n    // This is added so the positioningContainer will dismiss when the window is scrolled\r\n    // but not when something inside the positioningContainer is scrolled. The delay seems\r\n    // to be required to avoid React firing an async focus event in IE from\r\n    // the target changing focus quickly prior to rendering the positioningContainer.\r\n    this._async.setTimeout(() => {\r\n      this._events.on(this._targetWindow, 'scroll', this._async.throttle(this._dismissOnScroll, 10), true);\r\n      this._events.on(this._targetWindow, 'resize', this._async.throttle(this.onResize, 10), true);\r\n      this._events.on(this._targetWindow.document.body, 'focus', this._dismissOnLostFocus, true);\r\n      this._events.on(this._targetWindow.document.body, 'click', this._dismissOnLostFocus, true);\r\n    }, 0);\r\n\r\n    if (this.props.onLayerMounted) {\r\n      this.props.onLayerMounted();\r\n    }\r\n\r\n    this._updateAsyncPosition();\r\n    this._setHeightOffsetEveryFrame();\r\n  };\r\n\r\n  private _updateAsyncPosition(): void {\r\n    this._async.requestAnimationFrame(() => this._updatePosition());\r\n  }\r\n\r\n  private _updatePosition(): void {\r\n    const { positions } = this.state;\r\n    const { offsetFromTarget, onPositioned } = this.props;\r\n\r\n    const hostElement = this._positionedHost.current;\r\n    const positioningContainerElement = this._contentHost.current;\r\n\r\n    if (hostElement && positioningContainerElement) {\r\n      let currentProps: IPositionProps | undefined;\r\n      currentProps = assign(currentProps, this.props);\r\n      currentProps!.bounds = this._getBounds();\r\n      currentProps!.target = this._target!;\r\n      if (document.body.contains(currentProps!.target as Node)) {\r\n        currentProps!.gapSpace = offsetFromTarget;\r\n        const newPositions: IPositionedData = positionElement(currentProps!, hostElement, positioningContainerElement);\r\n        // Set the new position only when the positions are not exists or one of the new positioningContainer positions are different.\r\n        // The position should not change if the position is within 2 decimal places.\r\n        if (\r\n          (!positions && newPositions) ||\r\n          (positions && newPositions && !this._arePositionsEqual(positions, newPositions) && this._positionAttempts < 5)\r\n        ) {\r\n          // We should not reposition the positioningContainer more than a few times, if it is then the content is likely resizing\r\n          // and we should stop trying to reposition to prevent a stack overflow.\r\n          this._positionAttempts++;\r\n          this.setState(\r\n            {\r\n              positions: newPositions\r\n            },\r\n            () => {\r\n              if (onPositioned) {\r\n                onPositioned(newPositions);\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          this._positionAttempts = 0;\r\n          if (onPositioned) {\r\n            onPositioned(newPositions);\r\n          }\r\n        }\r\n      } else if (positions !== undefined) {\r\n        this.setState({\r\n          positions: undefined\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private _getBounds(): IRectangle {\r\n    if (!this._positioningBounds) {\r\n      let currentBounds = this.props.bounds;\r\n\r\n      if (!currentBounds) {\r\n        currentBounds = {\r\n          top: 0 + this.props.minPagePadding!,\r\n          left: 0 + this.props.minPagePadding!,\r\n          right: this._targetWindow.innerWidth - this.props.minPagePadding!,\r\n          bottom: this._targetWindow.innerHeight - this.props.minPagePadding!,\r\n          width: this._targetWindow.innerWidth - this.props.minPagePadding! * 2,\r\n          height: this._targetWindow.innerHeight - this.props.minPagePadding! * 2\r\n        };\r\n      }\r\n      this._positioningBounds = currentBounds;\r\n    }\r\n    return this._positioningBounds;\r\n  }\r\n\r\n  /**\r\n   * Return the maximum height the container can grow to\r\n   * without going out of the specified bounds\r\n   */\r\n  private _getMaxHeight(): number {\r\n    const { directionalHintFixed, offsetFromTarget, directionalHint } = this.props;\r\n\r\n    if (!this._maxHeight) {\r\n      if (directionalHintFixed && this._target) {\r\n        const gapSpace = offsetFromTarget ? offsetFromTarget : 0;\r\n        this._maxHeight = getMaxHeight(this._target, directionalHint!, gapSpace, this._getBounds());\r\n      } else {\r\n        this._maxHeight = this._getBounds().height! - BORDER_WIDTH * 2;\r\n      }\r\n    }\r\n    return this._maxHeight!;\r\n  }\r\n\r\n  private _arePositionsEqual(positions: IPositionedData, newPosition: IPositionedData): boolean {\r\n    return this._comparePositions(positions.elementPosition, newPosition.elementPosition);\r\n  }\r\n\r\n  private _comparePositions(oldPositions: IPosition, newPositions: IPosition): boolean {\r\n    for (const key in newPositions) {\r\n      // This needs to be checked here and below because there is a linting error if for in does not immediately have an if statement\r\n      if (newPositions.hasOwnProperty(key)) {\r\n        const oldPositionEdge = oldPositions[key];\r\n        const newPositionEdge = newPositions[key];\r\n\r\n        if (oldPositionEdge && newPositionEdge) {\r\n          if (oldPositionEdge.toFixed(2) !== newPositionEdge.toFixed(2)) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private _setTargetWindowAndElement(target: HTMLElement | string | MouseEvent | IPoint | null): void {\r\n    if (target) {\r\n      if (typeof target === 'string') {\r\n        const currentDoc: Document = getDocument()!;\r\n        this._target = currentDoc ? (currentDoc.querySelector(target) as HTMLElement) : null;\r\n        this._targetWindow = getWindow()!;\r\n      } else if ((target as MouseEvent).stopPropagation) {\r\n        this._targetWindow = getWindow((target as MouseEvent).toElement as HTMLElement)!;\r\n        this._target = target;\r\n      } else if ((target as IPoint).x !== undefined && (target as IPoint).y !== undefined) {\r\n        this._targetWindow = getWindow()!;\r\n        this._target = target;\r\n      } else {\r\n        const targetElement: HTMLElement = target as HTMLElement;\r\n        this._targetWindow = getWindow(targetElement)!;\r\n        this._target = target;\r\n      }\r\n    } else {\r\n      this._targetWindow = getWindow()!;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Animates the height if finalHeight was given.\r\n   */\r\n  private _setHeightOffsetEveryFrame(): void {\r\n    if (this._contentHost && this.props.finalHeight) {\r\n      this._setHeightOffsetTimer = this._async.requestAnimationFrame(() => {\r\n        if (!this._contentHost.current) {\r\n          return;\r\n        }\r\n\r\n        const positioningContainerMainElem = this._contentHost.current.lastChild as HTMLElement;\r\n        const cardScrollHeight: number = positioningContainerMainElem.scrollHeight;\r\n        const cardCurrHeight: number = positioningContainerMainElem.offsetHeight;\r\n        const scrollDiff: number = cardScrollHeight - cardCurrHeight;\r\n\r\n        this.setState({\r\n          heightOffset: this.state.heightOffset! + scrollDiff\r\n        });\r\n\r\n        if (positioningContainerMainElem.offsetHeight < this.props.finalHeight!) {\r\n          this._setHeightOffsetEveryFrame();\r\n        } else {\r\n          this._async.cancelAnimationFrame(this._setHeightOffsetTimer);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private _getTarget(props: IPositioningContainerProps = this.props): HTMLElement | string | MouseEvent | IPoint | null {\r\n    const { target } = props;\r\n    return target!;\r\n  }\r\n}\r\n"]}