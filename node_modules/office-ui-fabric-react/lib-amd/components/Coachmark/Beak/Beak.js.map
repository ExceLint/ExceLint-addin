{"version":3,"file":"Beak.js","sourceRoot":"../src/","sources":["components/Coachmark/Beak/Beak.tsx"],"names":[],"mappings":";;;IAOa,QAAA,WAAW,GAAG,EAAE,CAAC;IACjB,QAAA,UAAU,GAAG,EAAE,CAAC;IAE7B;QAA0B,gCAA6B;QACrD,cAAY,KAAiB;mBAC3B,kBAAM,KAAK,CAAC;QACd,CAAC;QAEM,qBAAM,GAAb;YACQ,IAAA,eAA+E,EAA7E,cAAI,EAAE,YAAG,EAAE,kBAAM,EAAE,gBAAK,EAAE,gBAAK,EAAE,iBAA6B,EAA7B,gEAA6B,CAAgB;YAEtF,IAAI,SAAiB,CAAC;YACtB,IAAI,QAAgB,CAAC;YAErB,IAAI,SAAS,KAAK,2BAAa,CAAC,GAAG,IAAI,SAAS,KAAK,2BAAa,CAAC,MAAM,EAAE;gBACzE,SAAS,GAAG,mBAAW,CAAC;gBACxB,QAAQ,GAAG,kBAAU,CAAC;aACvB;iBAAM;gBACL,SAAS,GAAG,kBAAU,CAAC;gBACvB,QAAQ,GAAG,mBAAW,CAAC;aACxB;YAED,IAAI,QAAgB,CAAC;YACrB,IAAI,QAAgB,CAAC;YACrB,IAAI,UAAkB,CAAC;YACvB,IAAI,SAAiB,CAAC;YAEtB,QAAQ,SAAS,EAAE;gBACjB,KAAK,2BAAa,CAAC,GAAG,CAAC;gBACvB;oBACE,QAAQ,GAAM,kBAAU,GAAG,CAAC,QAAK,CAAC;oBAClC,QAAQ,GAAM,kBAAU,UAAK,mBAAa,CAAC;oBAC3C,UAAU,GAAG,QAAM,mBAAa,CAAC;oBACjC,SAAS,GAAG,mBAAmB,CAAC;oBAChC,MAAM;gBACR,KAAK,2BAAa,CAAC,KAAK;oBACtB,QAAQ,GAAG,MAAM,CAAC;oBAClB,QAAQ,GAAM,mBAAW,UAAK,mBAAa,CAAC;oBAC5C,UAAU,GAAG,QAAM,kBAAY,CAAC;oBAChC,SAAS,GAAG,kBAAkB,CAAC;oBAC/B,MAAM;gBACR,KAAK,2BAAa,CAAC,MAAM;oBACvB,QAAQ,GAAG,MAAM,CAAC;oBAClB,QAAQ,GAAM,kBAAU,QAAK,CAAC;oBAC9B,UAAU,GAAM,kBAAU,GAAG,CAAC,UAAK,mBAAa,CAAC;oBACjD,SAAS,GAAG,kBAAkB,CAAC;oBAC/B,MAAM;gBACR,KAAK,2BAAa,CAAC,IAAI;oBACrB,QAAQ,GAAM,mBAAW,QAAK,CAAC;oBAC/B,QAAQ,GAAG,QAAM,mBAAa,CAAC;oBAC/B,UAAU,GAAM,mBAAW,UAAK,kBAAY,CAAC;oBAC7C,SAAS,GAAG,mBAAmB,CAAC;oBAChC,MAAM;aACT;YAED,IAAM,aAAa,GAAG,8BAAkB,EAAiC,CAAC;YAC1E,IAAM,UAAU,GAAG,aAAa,CAAC,uBAAS,EAAE;gBAC1C,IAAI,MAAA;gBACJ,GAAG,KAAA;gBACH,MAAM,QAAA;gBACN,KAAK,OAAA;gBACL,MAAM,EAAK,SAAS,OAAI;gBACxB,KAAK,EAAK,QAAQ,OAAI;gBACtB,SAAS,EAAE,SAAS;gBACpB,KAAK,OAAA;aACN,CAAC,CAAC;YAEH,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,IAAI,EAAE,IAAI,EAAC,cAAc;gBAClD,6BAAK,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAC,IAAI;oBACjE,iCAAS,MAAM,EAAE,QAAQ,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG,GAAG,UAAU,GAAI,CAC7D,CACF,CACP,CAAC;QACJ,CAAC;QACH,WAAC;IAAD,CAAC,AAxED,CAA0B,yBAAa,GAwEtC;IAxEY,oBAAI","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, classNamesFunction } from '../../../Utilities';\r\nimport { IBeakProps } from './Beak.types';\r\nimport { getStyles, IBeakStyles } from './Beak.styles';\r\nimport { IBeakStylesProps } from './Beak.types';\r\nimport { RectangleEdge } from '../../../utilities/positioning';\r\n\r\nexport const BEAK_HEIGHT = 10;\r\nexport const BEAK_WIDTH = 18;\r\n\r\nexport class Beak extends BaseComponent<IBeakProps, {}> {\r\n  constructor(props: IBeakProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { left, top, bottom, right, color, direction = RectangleEdge.top } = this.props;\r\n\r\n    let svgHeight: number;\r\n    let svgWidth: number;\r\n\r\n    if (direction === RectangleEdge.top || direction === RectangleEdge.bottom) {\r\n      svgHeight = BEAK_HEIGHT;\r\n      svgWidth = BEAK_WIDTH;\r\n    } else {\r\n      svgHeight = BEAK_WIDTH;\r\n      svgWidth = BEAK_HEIGHT;\r\n    }\r\n\r\n    let pointOne: string;\r\n    let pointTwo: string;\r\n    let pointThree: string;\r\n    let transform: string;\r\n\r\n    switch (direction) {\r\n      case RectangleEdge.top:\r\n      default:\r\n        pointOne = `${BEAK_WIDTH / 2}, 0`;\r\n        pointTwo = `${BEAK_WIDTH}, ${BEAK_HEIGHT}`;\r\n        pointThree = `0, ${BEAK_HEIGHT}`;\r\n        transform = 'translateY(-100%)';\r\n        break;\r\n      case RectangleEdge.right:\r\n        pointOne = `0, 0`;\r\n        pointTwo = `${BEAK_HEIGHT}, ${BEAK_HEIGHT}`;\r\n        pointThree = `0, ${BEAK_WIDTH}`;\r\n        transform = 'translateX(100%)';\r\n        break;\r\n      case RectangleEdge.bottom:\r\n        pointOne = `0, 0`;\r\n        pointTwo = `${BEAK_WIDTH}, 0`;\r\n        pointThree = `${BEAK_WIDTH / 2}, ${BEAK_HEIGHT}`;\r\n        transform = 'translateY(100%)';\r\n        break;\r\n      case RectangleEdge.left:\r\n        pointOne = `${BEAK_HEIGHT}, 0`;\r\n        pointTwo = `0, ${BEAK_HEIGHT}`;\r\n        pointThree = `${BEAK_HEIGHT}, ${BEAK_WIDTH}`;\r\n        transform = 'translateX(-100%)';\r\n        break;\r\n    }\r\n\r\n    const getClassNames = classNamesFunction<IBeakStylesProps, IBeakStyles>();\r\n    const classNames = getClassNames(getStyles, {\r\n      left,\r\n      top,\r\n      bottom,\r\n      right,\r\n      height: `${svgHeight}px`,\r\n      width: `${svgWidth}px`,\r\n      transform: transform,\r\n      color\r\n    });\r\n\r\n    return (\r\n      <div className={classNames.root} role=\"presentation\">\r\n        <svg height={svgHeight} width={svgWidth} className={classNames.beak}>\r\n          <polygon points={pointOne + ' ' + pointTwo + ' ' + pointThree} />\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}