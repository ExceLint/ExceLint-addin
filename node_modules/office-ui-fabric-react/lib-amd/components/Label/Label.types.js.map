{"version":3,"file":"Label.types.js","sourceRoot":"../src/","sources":["components/Label/Label.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport { ITheme, IStyle } from '../../Styling';\r\nimport { IRefObject, IComponentAs, IStyleFunctionOrObject } from '../../Utilities';\r\n\r\nexport interface ILabel {}\r\n\r\nexport interface ILabelProps extends React.LabelHTMLAttributes<HTMLLabelElement> {\r\n  /**\r\n   * Render the root element as another type.\r\n   */\r\n  as?: IComponentAs<React.AllHTMLAttributes<HTMLElement>>;\r\n\r\n  /**\r\n   * Optional callback to access the ILabel interface. Use this instead of ref for accessing\r\n   * the public methods and properties of the component.\r\n   */\r\n  componentRef?: IRefObject<ILabel>;\r\n\r\n  /**\r\n   * Whether the associated form field is required or not\r\n   * @defaultvalue false\r\n   */\r\n  required?: boolean;\r\n\r\n  /**\r\n   * Renders the label as disabled.\r\n   */\r\n  disabled?: boolean;\r\n\r\n  /**\r\n   * Theme provided by HOC.\r\n   */\r\n  theme?: ITheme;\r\n\r\n  /**\r\n   * Styles for the label.\r\n   */\r\n  styles?: IStyleFunctionOrObject<ILabelStyleProps, ILabelStyles>;\r\n}\r\n\r\nexport interface ILabelStyles {\r\n  /**\r\n   * Styles for the root element.\r\n   */\r\n  root: IStyle;\r\n}\r\n\r\nexport interface ILabelStyleProps {\r\n  /**\r\n   *\r\n   */\r\n  theme: ITheme;\r\n  className?: string;\r\n  disabled?: boolean;\r\n  required?: boolean;\r\n}\r\n"]}