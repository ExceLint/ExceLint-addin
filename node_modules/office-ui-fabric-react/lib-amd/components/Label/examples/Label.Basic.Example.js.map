{"version":3,"file":"Label.Basic.Example.js","sourceRoot":"../src/","sources":["components/Label/examples/Label.Basic.Example.tsx"],"names":[],"mappings":";;;IAMa,QAAA,iBAAiB,GAAG;QAC/B,2DAA2D;QAC3D,yFAAyF;QACzF,IAAM,WAAW,GAAG,iBAAK,CAAC,SAAS,CAAC,CAAC;QAErC,OAAO,CACL;YACE,oBAAC,aAAK,sBAAoB;YAC1B,oBAAC,aAAK,IAAC,QAAQ,EAAE,IAAI,2BAA8B;YACnD,oBAAC,aAAK,IAAC,QAAQ,EAAE,IAAI,2BAA8B;YACnD,oBAAC,aAAK,IAAC,OAAO,EAAE,WAAW,2BAA8B;YACzD,oBAAC,qBAAS,IAAC,EAAE,EAAE,WAAW,GAAI,CAC1B,CACP,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\r\n\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { getId } from 'office-ui-fabric-react/lib/Utilities';\r\n\r\nexport const LabelBasicExample = () => {\r\n  // Use getId() to ensure that the ID is unique on the page.\r\n  // (It's also okay to use a plain string without getId() and manually ensure uniqueness.)\r\n  const textFieldId = getId('anInput');\r\n\r\n  return (\r\n    <div>\r\n      <Label>I'm a Label</Label>\r\n      <Label disabled={true}>I'm a disabled Label</Label>\r\n      <Label required={true}>I'm a required Label</Label>\r\n      <Label htmlFor={textFieldId}>A Label for An Input</Label>\r\n      <TextField id={textFieldId} />\r\n    </div>\r\n  );\r\n};\r\n"]}