{"version":3,"file":"SpinButton.styles.js","sourceRoot":"../src/","sources":["components/SpinButton/SpinButton.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { FontSizes, IRawStyle, ITheme, concatStyleSets, HighContrastSelector } from '../../Styling';\r\n\r\nimport { IButtonStyles } from '../../Button';\r\nimport { ISpinButtonStyles } from './SpinButton.types';\r\nimport { memoizeFunction } from '../../Utilities';\r\n\r\nconst _getDisabledStyles = memoizeFunction(\r\n  (theme: ITheme): IRawStyle => {\r\n    const { semanticColors } = theme;\r\n\r\n    const SpinButtonTextColorDisabled = semanticColors.disabledText;\r\n    const SpinButtonBackgroundColorDisabled = semanticColors.disabledBackground;\r\n\r\n    return {\r\n      backgroundColor: SpinButtonBackgroundColorDisabled,\r\n      borderColor: 'transparent',\r\n      pointerEvents: 'none',\r\n      cursor: 'default',\r\n      color: SpinButtonTextColorDisabled,\r\n      selectors: {\r\n        [HighContrastSelector]: {\r\n          color: 'GrayText'\r\n        }\r\n      }\r\n    };\r\n  }\r\n);\r\n\r\nexport const getArrowButtonStyles = memoizeFunction(\r\n  (theme: ITheme, isUpArrow: boolean, customSpecificArrowStyles?: Partial<IButtonStyles>): IButtonStyles => {\r\n    const { semanticColors } = theme;\r\n\r\n    const ArrowButtonTextColor = semanticColors.buttonText;\r\n    const ArrowButtonTextColorHovered = semanticColors.buttonTextHovered;\r\n    const ArrowButtonTextColorPressed = semanticColors.buttonTextChecked;\r\n\r\n    const ArrowButtonBackgroundHovered = semanticColors.buttonBackgroundHovered;\r\n    const ArrowButtonBackgroundPressed = semanticColors.buttonBackgroundChecked;\r\n\r\n    const defaultArrowButtonStyles: IButtonStyles = {\r\n      root: {\r\n        outline: 'none',\r\n        display: 'block',\r\n        height: '50%',\r\n        width: '14px',\r\n        padding: '0',\r\n        backgroundColor: 'transparent',\r\n        textAlign: 'center',\r\n        cursor: 'default',\r\n        color: ArrowButtonTextColor\r\n      },\r\n      rootHovered: {\r\n        backgroundColor: ArrowButtonBackgroundHovered,\r\n        color: ArrowButtonTextColorHovered\r\n      },\r\n      rootChecked: {\r\n        backgroundColor: ArrowButtonBackgroundPressed,\r\n        color: ArrowButtonTextColorPressed,\r\n        selectors: {\r\n          [HighContrastSelector]: {\r\n            backgroundColor: 'Highlight',\r\n            color: 'HighlightText'\r\n          }\r\n        }\r\n      },\r\n      rootPressed: {\r\n        backgroundColor: ArrowButtonBackgroundPressed,\r\n        color: ArrowButtonTextColorPressed,\r\n        selectors: {\r\n          [HighContrastSelector]: {\r\n            backgroundColor: 'Highlight',\r\n            color: 'HighlightText'\r\n          }\r\n        }\r\n      },\r\n      rootDisabled: {\r\n        opacity: 0.5,\r\n        selectors: {\r\n          [HighContrastSelector]: {\r\n            color: 'GrayText',\r\n            opacity: 1\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        fontSize: '6px',\r\n        marginTop: '0',\r\n        marginRight: '0',\r\n        marginBottom: '0',\r\n        marginLeft: '0'\r\n      }\r\n    };\r\n\r\n    // No specific styles needed as of now.\r\n    const defaultUpArrowButtonStyles: Partial<IButtonStyles> = {};\r\n\r\n    const defaultDownArrowButtonStyles: Partial<IButtonStyles> = {};\r\n\r\n    return concatStyleSets(\r\n      defaultArrowButtonStyles,\r\n      isUpArrow ? defaultUpArrowButtonStyles : defaultDownArrowButtonStyles,\r\n      customSpecificArrowStyles\r\n    ) as IButtonStyles;\r\n  }\r\n);\r\n\r\nexport const getStyles = memoizeFunction(\r\n  (theme: ITheme, customStyles?: Partial<ISpinButtonStyles>): ISpinButtonStyles => {\r\n    const { palette, semanticColors } = theme;\r\n\r\n    const SpinButtonRootBorderColor = semanticColors.inputBorder;\r\n    const SpinButtonRootBorderColorHovered = semanticColors.inputBorderHovered;\r\n    const SpinButtonRootBorderColorFocused = semanticColors.inputFocusBorderAlt;\r\n\r\n    const SpinButtonTextColorDisabled = semanticColors.disabledText;\r\n    const SpinButtonInputTextColor = semanticColors.bodyText;\r\n    const SpinButtonInputTextColorSelected = palette.white;\r\n    const SpinButtonInputBackgroundColorSelected = palette.themePrimary;\r\n\r\n    const SpinButtonIconDisabledColor = semanticColors.disabledText;\r\n\r\n    const defaultStyles: ISpinButtonStyles = {\r\n      root: {\r\n        outline: 'none',\r\n        fontSize: FontSizes.medium,\r\n        width: '100%',\r\n        minWidth: '86px'\r\n      },\r\n      labelWrapper: {\r\n        display: 'inline-flex'\r\n      },\r\n      labelWrapperStart: {\r\n        float: 'left',\r\n        marginRight: '10px'\r\n      },\r\n      labelWrapperEnd: {\r\n        float: 'right',\r\n        marginLeft: '10px'\r\n      },\r\n      labelWrapperTop: {\r\n        marginBottom: '10px'\r\n      },\r\n      labelWrapperBottom: {\r\n        marginTop: '10px'\r\n      },\r\n      icon: {\r\n        padding: '2px 5px',\r\n        fontSize: '20px'\r\n      },\r\n      iconDisabled: {\r\n        color: SpinButtonIconDisabledColor\r\n      },\r\n      label: {\r\n        pointerEvents: 'none',\r\n        padding: '2px 0'\r\n      },\r\n      labelDisabled: {\r\n        cursor: 'default',\r\n        color: SpinButtonTextColorDisabled,\r\n        selectors: {\r\n          [HighContrastSelector]: {\r\n            color: 'GrayText'\r\n          }\r\n        }\r\n      },\r\n      spinButtonWrapper: {\r\n        display: 'flex',\r\n        boxSizing: 'border-box',\r\n        height: '32px',\r\n        minWidth: '86px',\r\n        borderWidth: '1px',\r\n        borderStyle: 'solid',\r\n        borderColor: SpinButtonRootBorderColor\r\n      },\r\n      spinButtonWrapperTopBottom: {\r\n        width: '100%'\r\n      },\r\n      spinButtonWrapperHovered: {\r\n        borderColor: SpinButtonRootBorderColorHovered,\r\n        outline: '2px dashed transparent',\r\n        selectors: {\r\n          [HighContrastSelector]: {\r\n            borderColor: 'Highlight',\r\n            outline: 'none'\r\n          }\r\n        }\r\n      },\r\n      spinButtonWrapperFocused: {\r\n        borderColor: SpinButtonRootBorderColorFocused,\r\n        outline: '2px dashed transparent',\r\n        selectors: {\r\n          [HighContrastSelector]: {\r\n            borderColor: 'Highlight',\r\n            outline: 'none'\r\n          }\r\n        }\r\n      },\r\n      spinButtonWrapperDisabled: _getDisabledStyles(theme),\r\n      input: {\r\n        boxSizing: 'border-box',\r\n        boxShadow: 'none',\r\n        borderStyle: 'none',\r\n        marginTop: '0',\r\n        marginRight: '0',\r\n        marginBottom: '0',\r\n        marginLeft: '0',\r\n        fontSize: FontSizes.medium,\r\n        color: SpinButtonInputTextColor,\r\n        height: '100%',\r\n        padding: '0 12px',\r\n        outline: '0',\r\n        textOverflow: 'ellipsis',\r\n        display: 'block',\r\n        float: 'left',\r\n        width: 'calc(100% - 14px)',\r\n        minWidth: '72px',\r\n        overflow: 'hidden',\r\n        cursor: 'text',\r\n        userSelect: 'text'\r\n      },\r\n      inputTextSelected: {\r\n        backgroundColor: SpinButtonInputBackgroundColorSelected,\r\n        color: SpinButtonInputTextColorSelected,\r\n        selectors: {\r\n          [HighContrastSelector]: {\r\n            backgroundColor: 'Highlight',\r\n            borderColor: 'Highlight',\r\n            color: 'HighlightText'\r\n          }\r\n        }\r\n      },\r\n      inputDisabled: _getDisabledStyles(theme),\r\n      arrowButtonsContainer: {\r\n        outline: 'none',\r\n        fontSize: '12px',\r\n        display: 'block',\r\n        float: 'left',\r\n        height: '100%',\r\n        cursor: 'default',\r\n        padding: '0',\r\n        boxSizing: 'border-box'\r\n      },\r\n      arrowButtonsContainerDisabled: _getDisabledStyles(theme)\r\n    };\r\n    return concatStyleSets(defaultStyles, customStyles) as ISpinButtonStyles;\r\n  }\r\n);\r\n"]}