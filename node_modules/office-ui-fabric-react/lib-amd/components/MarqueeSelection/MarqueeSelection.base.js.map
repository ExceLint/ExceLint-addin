{"version":3,"file":"MarqueeSelection.base.js","sourceRoot":"../src/","sources":["components/MarqueeSelection/MarqueeSelection.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\n\r\nimport {\r\n  AutoScroll,\r\n  BaseComponent,\r\n  IPoint,\r\n  IRectangle,\r\n  classNamesFunction,\r\n  findScrollableParent,\r\n  getDistanceBetweenPoints,\r\n  getRTL\r\n} from '../../Utilities';\r\n\r\nimport { IMarqueeSelectionProps, IMarqueeSelectionStyleProps, IMarqueeSelectionStyles } from './MarqueeSelection.types';\r\n\r\nconst getClassNames = classNamesFunction<IMarqueeSelectionStyleProps, IMarqueeSelectionStyles>();\r\n\r\nexport interface IMarqueeSelectionState {\r\n  dragOrigin?: IPoint;\r\n  dragRect?: IRectangle;\r\n}\r\n\r\n// We want to make the marquee selection start when the user drags a minimum distance. Otherwise we'd start\r\n// the drag even if they just click an item without moving.\r\nconst MIN_DRAG_DISTANCE = 5;\r\n\r\n/**\r\n * MarqueeSelection component abstracts managing a draggable rectangle which sets items selected/not selected.\r\n * Elements which have data-selectable-index attributes are queried and measured once to determine if they\r\n * fall within the bounds of the rectangle. The measure is memoized during the drag as a performance optimization\r\n * so if the items change sizes while dragging, that could cause incorrect results.\r\n */\r\nexport class MarqueeSelectionBase extends BaseComponent<IMarqueeSelectionProps, IMarqueeSelectionState> {\r\n  public static defaultProps = {\r\n    rootTagName: 'div',\r\n    rootProps: {},\r\n    isEnabled: true\r\n  };\r\n\r\n  private _root = React.createRef<HTMLDivElement>();\r\n  private _dragOrigin: IPoint | undefined;\r\n  private _rootRect: IRectangle;\r\n  private _lastMouseEvent: MouseEvent | undefined;\r\n  private _autoScroll: AutoScroll | undefined;\r\n  private _selectedIndicies: { [key: string]: boolean } | undefined;\r\n  private _preservedIndicies: number[] | undefined;\r\n  private _itemRectCache: { [key: string]: IRectangle } | undefined;\r\n  private _scrollableParent: HTMLElement;\r\n  private _scrollableSurface: HTMLElement;\r\n  private _scrollTop: number;\r\n  private _isTouch: boolean;\r\n\r\n  constructor(props: IMarqueeSelectionProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dragRect: undefined\r\n    };\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this._scrollableParent = findScrollableParent(this._root.current) as HTMLElement;\r\n    this._scrollableSurface = this._scrollableParent === (window as any) ? document.body : this._scrollableParent;\r\n    // When scroll events come from window, we need to read scrollTop values from the body.\r\n\r\n    const hitTarget = this.props.isDraggingConstrainedToRoot ? this._root.current : this._scrollableSurface;\r\n\r\n    this._events.on(hitTarget, 'mousedown', this._onMouseDown);\r\n    this._events.on(hitTarget, 'touchstart', this._onTouchStart, true);\r\n    this._events.on(hitTarget, 'pointerdown', this._onPointerDown, true);\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    if (this._autoScroll) {\r\n      this._autoScroll.dispose();\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { rootProps, children, theme, className, styles } = this.props;\r\n    const { dragRect } = this.state;\r\n\r\n    const classNames = getClassNames(styles!, {\r\n      theme: theme!,\r\n      className\r\n    });\r\n\r\n    return (\r\n      <div {...rootProps} className={classNames.root} ref={this._root}>\r\n        {children}\r\n        {dragRect && <div className={classNames.dragMask} />}\r\n        {dragRect && (\r\n          <div className={classNames.box} style={dragRect}>\r\n            <div className={classNames.boxFill} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /** Determine if the mouse event occured on a scrollbar of the target element. */\r\n  private _isMouseEventOnScrollbar(ev: MouseEvent): boolean {\r\n    const targetElement = ev.target as HTMLElement;\r\n    const targetScrollbarWidth = targetElement.offsetWidth - targetElement.clientWidth;\r\n\r\n    if (targetScrollbarWidth) {\r\n      const targetRect = targetElement.getBoundingClientRect();\r\n\r\n      // Check vertical scroll\r\n      if (getRTL()) {\r\n        if (ev.clientX < targetRect.left + targetScrollbarWidth) {\r\n          return true;\r\n        }\r\n      } else {\r\n        if (ev.clientX > targetRect.left + targetElement.clientWidth) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      // Check horizontal scroll\r\n      if (ev.clientY > targetRect.top + targetElement.clientHeight) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private _onMouseDown = (ev: MouseEvent): void => {\r\n    const { isEnabled, onShouldStartSelection } = this.props;\r\n\r\n    // Ensure the mousedown is within the boundaries of the target. If not, it may have been a click on a scrollbar.\r\n    if (this._isMouseEventOnScrollbar(ev)) {\r\n      return;\r\n    }\r\n\r\n    if (this._isInSelectionToggle(ev)) {\r\n      return;\r\n    }\r\n\r\n    if (!this._isTouch && isEnabled && !this._isDragStartInSelection(ev) && (!onShouldStartSelection || onShouldStartSelection(ev))) {\r\n      if (this._scrollableSurface && ev.button === 0 && this._root.current) {\r\n        this._selectedIndicies = {};\r\n        this._preservedIndicies = undefined;\r\n        this._events.on(window, 'mousemove', this._onAsyncMouseMove);\r\n        this._events.on(this._scrollableParent, 'scroll', this._onAsyncMouseMove);\r\n        this._events.on(window, 'click', this._onMouseUp, true);\r\n\r\n        this._autoScroll = new AutoScroll(this._root.current);\r\n        this._scrollTop = this._scrollableSurface.scrollTop;\r\n        this._rootRect = this._root.current.getBoundingClientRect();\r\n\r\n        this._onMouseMove(ev);\r\n      }\r\n    }\r\n  };\r\n\r\n  private _onTouchStart = (ev: TouchEvent): void => {\r\n    this._isTouch = true;\r\n\r\n    this._async.setTimeout(() => {\r\n      this._isTouch = false;\r\n    }, 0);\r\n  };\r\n\r\n  private _onPointerDown = (ev: PointerEvent): void => {\r\n    if (ev.pointerType === 'touch') {\r\n      this._isTouch = true;\r\n\r\n      this._async.setTimeout(() => {\r\n        this._isTouch = false;\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  private _getRootRect(): IRectangle {\r\n    return {\r\n      left: this._rootRect.left,\r\n      top: this._rootRect.top + (this._scrollTop - this._scrollableSurface.scrollTop),\r\n      width: this._rootRect.width,\r\n      height: this._rootRect.height\r\n    };\r\n  }\r\n\r\n  private _onAsyncMouseMove(ev: MouseEvent): void {\r\n    this._async.requestAnimationFrame(() => {\r\n      this._onMouseMove(ev);\r\n    });\r\n\r\n    ev.stopPropagation();\r\n    ev.preventDefault();\r\n  }\r\n\r\n  private _onMouseMove(ev: MouseEvent): boolean | undefined {\r\n    if (!this._autoScroll) {\r\n      return;\r\n    }\r\n\r\n    if (ev.clientX !== undefined) {\r\n      this._lastMouseEvent = ev;\r\n    }\r\n\r\n    const rootRect = this._getRootRect();\r\n    const currentPoint = { x: ev.clientX - rootRect.left, y: ev.clientY - rootRect.top };\r\n\r\n    if (!this._dragOrigin) {\r\n      this._dragOrigin = currentPoint;\r\n    }\r\n\r\n    if (ev.buttons !== undefined && ev.buttons === 0) {\r\n      this._onMouseUp(ev);\r\n    } else {\r\n      if (this.state.dragRect || getDistanceBetweenPoints(this._dragOrigin, currentPoint) > MIN_DRAG_DISTANCE) {\r\n        if (!this.state.dragRect) {\r\n          const { selection } = this.props;\r\n\r\n          this._preservedIndicies = selection && selection.getSelectedIndices && selection.getSelectedIndices();\r\n        }\r\n        // We need to constrain the current point to the rootRect boundaries.\r\n        const constrainedPoint = this.props.isDraggingConstrainedToRoot\r\n          ? {\r\n              x: Math.max(0, Math.min(rootRect.width, this._lastMouseEvent!.clientX - rootRect.left)),\r\n              y: Math.max(0, Math.min(rootRect.height, this._lastMouseEvent!.clientY - rootRect.top))\r\n            }\r\n          : {\r\n              x: this._lastMouseEvent!.clientX - rootRect.left,\r\n              y: this._lastMouseEvent!.clientY - rootRect.top\r\n            };\r\n\r\n        const dragRect = {\r\n          left: Math.min(this._dragOrigin.x, constrainedPoint.x),\r\n          top: Math.min(this._dragOrigin.y, constrainedPoint.y),\r\n          width: Math.abs(constrainedPoint.x - this._dragOrigin.x),\r\n          height: Math.abs(constrainedPoint.y - this._dragOrigin.y)\r\n        };\r\n\r\n        this._evaluateSelection(dragRect, rootRect);\r\n\r\n        this.setState({ dragRect });\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private _onMouseUp(ev: MouseEvent): void {\r\n    this._events.off(window);\r\n    this._events.off(this._scrollableParent, 'scroll');\r\n\r\n    if (this._autoScroll) {\r\n      this._autoScroll.dispose();\r\n    }\r\n\r\n    this._autoScroll = this._dragOrigin = this._lastMouseEvent = this._selectedIndicies = this._itemRectCache = undefined;\r\n\r\n    if (this.state.dragRect) {\r\n      this.setState({\r\n        dragRect: undefined\r\n      });\r\n\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n    }\r\n  }\r\n\r\n  private _isPointInRectangle(rectangle: IRectangle, point: IPoint): boolean {\r\n    return rectangle.top < point.y && rectangle.bottom! > point.y && rectangle.left < point.x && rectangle.right! > point.x;\r\n  }\r\n\r\n  /**\r\n   * We do not want to start the marquee if we're trying to marquee\r\n   * from within an existing marquee selection.\r\n   */\r\n  private _isDragStartInSelection(ev: MouseEvent): boolean {\r\n    const selection = this.props.selection;\r\n    if (!this._root.current || (selection && selection.getSelectedCount() === 0)) {\r\n      return false;\r\n    }\r\n\r\n    const allElements = this._root.current.querySelectorAll('[data-selection-index]');\r\n    for (let i = 0; i < allElements.length; i++) {\r\n      const element = allElements[i];\r\n      const index = Number(element.getAttribute('data-selection-index'));\r\n      if (selection.isIndexSelected(index)) {\r\n        const itemRect = element.getBoundingClientRect();\r\n        if (this._isPointInRectangle(itemRect, { x: ev.clientX, y: ev.clientY })) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private _isInSelectionToggle(ev: MouseEvent): boolean {\r\n    let element: HTMLElement | null = ev.target as HTMLElement;\r\n\r\n    while (element && element !== this._root.current) {\r\n      if (element.getAttribute('data-selection-toggle') === 'true') {\r\n        return true;\r\n      }\r\n\r\n      element = element.parentElement;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private _evaluateSelection(dragRect: IRectangle, rootRect: IRectangle): void {\r\n    // Break early if we don't need to evaluate.\r\n    if (!dragRect || !this._root.current) {\r\n      return;\r\n    }\r\n\r\n    const { selection } = this.props;\r\n    const allElements = this._root.current.querySelectorAll('[data-selection-index]');\r\n\r\n    if (!this._itemRectCache) {\r\n      this._itemRectCache = {};\r\n    }\r\n\r\n    // Stop change events, clear selection to re-populate.\r\n    selection.setChangeEvents(false);\r\n    selection.setAllSelected(false);\r\n\r\n    for (let i = 0; i < allElements.length; i++) {\r\n      const element = allElements[i];\r\n      const index = element.getAttribute('data-selection-index') as string;\r\n\r\n      // Pull the memoized rectangle for the item, or the get the rect and memoize.\r\n      let itemRect = this._itemRectCache[index];\r\n\r\n      if (!itemRect) {\r\n        itemRect = element.getBoundingClientRect();\r\n\r\n        // Normalize the item rect to the dragRect coordinates.\r\n        itemRect = {\r\n          left: itemRect.left - rootRect.left,\r\n          top: itemRect.top - rootRect.top,\r\n          width: itemRect.width,\r\n          height: itemRect.height,\r\n          right: itemRect.left - rootRect.left + itemRect.width,\r\n          bottom: itemRect.top - rootRect.top + itemRect.height\r\n        };\r\n\r\n        if (itemRect.width > 0 && itemRect.height > 0) {\r\n          this._itemRectCache[index] = itemRect;\r\n        }\r\n      }\r\n\r\n      if (\r\n        itemRect.top < dragRect.top + dragRect.height &&\r\n        itemRect.bottom! > dragRect.top &&\r\n        itemRect.left < dragRect.left + dragRect.width &&\r\n        itemRect.right! > dragRect.left\r\n      ) {\r\n        this._selectedIndicies![index] = true;\r\n      } else {\r\n        delete this._selectedIndicies![index];\r\n      }\r\n    }\r\n\r\n    for (const index in this._selectedIndicies!) {\r\n      if (this._selectedIndicies!.hasOwnProperty(index)) {\r\n        selection.setIndexSelected(Number(index), true, false);\r\n      }\r\n    }\r\n\r\n    if (this._preservedIndicies) {\r\n      for (const index of this._preservedIndicies) {\r\n        selection.setIndexSelected(index, true, false);\r\n      }\r\n    }\r\n\r\n    selection.setChangeEvents(true);\r\n  }\r\n}\r\n"]}