{"version":3,"file":"Rating.base.js","sourceRoot":"../src/","sources":["components/Rating/Rating.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, classNamesFunction, css, format, getId } from '../../Utilities';\r\nimport { IProcessedStyleSet } from '../../Styling';\r\nimport { Icon } from '../../Icon';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { IRatingProps, RatingSize, IRatingStyleProps, IRatingStyles } from './Rating.types';\r\n\r\nconst getClassNames = classNamesFunction<IRatingStyleProps, IRatingStyles>();\r\n\r\ninterface IRatingStarProps extends React.AllHTMLAttributes<HTMLElement> {\r\n  fillPercentage: number;\r\n  disabled: boolean;\r\n  readOnly: boolean;\r\n  classNames: IProcessedStyleSet<IRatingStyles>;\r\n  icon?: string;\r\n}\r\n\r\nexport interface IRatingState {\r\n  rating: number | null | undefined;\r\n}\r\n\r\nconst RatingStar = (props: IRatingStarProps) => {\r\n  const icon = props.icon || 'FavoriteStarFill';\r\n  return (\r\n    <div className={props.classNames.ratingStar} key={props.id}>\r\n      <Icon className={props.classNames.ratingStarBack} iconName={icon} />\r\n      {!props.disabled && (\r\n        <Icon className={props.classNames.ratingStarFront} iconName={icon} style={{ width: props.fillPercentage + '%' }} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport class RatingBase extends BaseComponent<IRatingProps, IRatingState> {\r\n  public static defaultProps: IRatingProps = {\r\n    min: 1,\r\n    max: 5\r\n  };\r\n  private _id: string;\r\n  private _min: number;\r\n  private _labelId: string;\r\n  private _classNames: IProcessedStyleSet<IRatingStyles>;\r\n\r\n  constructor(props: IRatingProps) {\r\n    super(props);\r\n\r\n    this._warnDeprecations({\r\n      onChanged: 'onChange'\r\n    });\r\n\r\n    this._id = getId('Rating');\r\n    this._min = this.props.allowZeroStars ? 0 : 1;\r\n    if (this.props.min !== undefined && this.props.min !== 1) {\r\n      this._min = this.props.min;\r\n    }\r\n    this._labelId = getId('RatingLabel');\r\n\r\n    this.state = {\r\n      rating: this._getInitialValue(props)\r\n    };\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: IRatingProps): void {\r\n    if (typeof nextProps.rating !== 'undefined' && nextProps.rating !== this.state.rating) {\r\n      this.setState({\r\n        rating: this._getClampedRating(nextProps.rating)\r\n      } as IRatingState);\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const id = this._id;\r\n    const stars = [];\r\n    const starIds = [];\r\n    const { disabled, getAriaLabel, styles, max, rating, readOnly, size, theme, icon, unselectedIcon = icon } = this.props;\r\n\r\n    this._classNames = getClassNames(styles!, {\r\n      disabled,\r\n      readOnly,\r\n      theme: theme!\r\n    });\r\n\r\n    for (let i = this._min as number; i <= (max as number); i++) {\r\n      if (i !== 0) {\r\n        const fillPercentage = this._getFillingPercentage(i);\r\n        const ratingStarProps: IRatingStarProps = {\r\n          fillPercentage,\r\n          disabled: disabled ? true : false,\r\n          readOnly: readOnly ? true : false,\r\n          classNames: this._classNames,\r\n          icon: fillPercentage > 0 ? icon : unselectedIcon\r\n        };\r\n\r\n        starIds.push(this._getStarId(i - 1));\r\n\r\n        stars.push(\r\n          <button\r\n            className={css(this._classNames.ratingButton, {\r\n              [this._classNames.ratingStarIsLarge]: size === RatingSize.Large,\r\n              [this._classNames.ratingStarIsSmall]: size !== RatingSize.Large\r\n            })}\r\n            id={starIds[i - 1]}\r\n            key={i}\r\n            {...(i === Math.ceil(this.state.rating as number) ? { 'data-is-current': true } : {})}\r\n            onFocus={this._onFocus.bind(this, i)}\r\n            onClick={this._onFocus.bind(this, i)} // For Safari & Firefox on OSX\r\n            disabled={disabled || readOnly ? true : false}\r\n            role=\"presentation\"\r\n            type=\"button\"\r\n          >\r\n            {this._getLabel(i)}\r\n            <RatingStar key={i + 'rating'} {...ratingStarProps} />\r\n          </button>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={css('ms-Rating-star', this._classNames.root, {\r\n          [this._classNames.rootIsLarge]: size === RatingSize.Large,\r\n          [this._classNames.rootIsSmall]: size !== RatingSize.Large\r\n        })}\r\n        aria-label={getAriaLabel ? getAriaLabel(this.state.rating ? this.state.rating : 0, this.props.max as number) : ''}\r\n        id={id}\r\n      >\r\n        <FocusZone\r\n          direction={FocusZoneDirection.horizontal}\r\n          tabIndex={readOnly ? 0 : -1}\r\n          className={css(this._classNames.ratingFocusZone, {\r\n            [this._classNames.rootIsLarge]: size === RatingSize.Large,\r\n            [this._classNames.rootIsSmall]: size !== RatingSize.Large\r\n          })}\r\n          data-is-focusable={readOnly ? true : false}\r\n          defaultActiveElement={rating ? starIds[rating - 1] && '#' + starIds[rating - 1] : undefined}\r\n        >\r\n          {stars}\r\n        </FocusZone>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _getStarId(index: number): string {\r\n    return this._id + '-star-' + index;\r\n  }\r\n\r\n  private _onFocus(value: number, ev: React.FocusEvent<HTMLElement>): void {\r\n    if (this.state.rating !== value) {\r\n      this.setState({\r\n        rating: value\r\n      } as IRatingState);\r\n\r\n      const { onChange, onChanged } = this.props;\r\n\r\n      if (onChange) {\r\n        onChange(ev, value);\r\n      }\r\n\r\n      if (onChanged) {\r\n        onChanged(value);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _getLabel(rating: number): JSX.Element {\r\n    const text = this.props.ariaLabelFormat || '';\r\n\r\n    return (\r\n      <span id={`${this._labelId}-${rating}`} className={this._classNames.labelText}>\r\n        {format(text, rating, this.props.max)}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  private _getInitialValue(props: IRatingProps): number | undefined {\r\n    if (typeof props.rating === 'undefined') {\r\n      return this._min;\r\n    }\r\n\r\n    if (props.rating === null) {\r\n      return undefined;\r\n    }\r\n\r\n    return this._getClampedRating(props.rating);\r\n  }\r\n\r\n  private _getClampedRating(rating: number): number {\r\n    return Math.min(Math.max(rating, this._min as number), this.props.max as number);\r\n  }\r\n\r\n  private _getFillingPercentage(starPosition: number): number {\r\n    const ceilValue = Math.ceil(this.state.rating as number);\r\n    let fillPercentage = 100;\r\n\r\n    if (starPosition === this.state.rating) {\r\n      fillPercentage = 100;\r\n    } else if (starPosition === ceilValue) {\r\n      fillPercentage = 100 * ((this.state.rating as number) % 1);\r\n    } else if (starPosition > ceilValue) {\r\n      fillPercentage = 0;\r\n    }\r\n    return fillPercentage;\r\n  }\r\n}\r\n"]}