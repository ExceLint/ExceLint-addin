{"version":3,"file":"Rating.types.js","sourceRoot":"../src/","sources":["components/Rating/Rating.types.ts"],"names":[],"mappings":";;;IAmGA,IAAY,UAGX;IAHD,WAAY,UAAU;QACpB,6CAAS,CAAA;QACT,6CAAS,CAAA;IACX,CAAC,EAHW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAGrB","sourcesContent":["import * as React from 'react';\r\nimport { IStyle, ITheme } from '../../Styling';\r\nimport { IRefObject, IStyleFunctionOrObject } from '../../Utilities';\r\n\r\nexport interface IRating {}\r\n\r\n/**\r\n * Rating component props.\r\n */\r\nexport interface IRatingProps extends React.AllHTMLAttributes<HTMLElement> {\r\n  /**\r\n   * Optional callback to access the IRating interface. Use this instead of ref for accessing\r\n   * the public methods and properties of the component.\r\n   */\r\n  componentRef?: IRefObject<IRating>;\r\n\r\n  /**\r\n   * Selected rating, has to be an integer between min and max\r\n   */\r\n  rating?: number;\r\n\r\n  /**\r\n   * Minimum rating, defaults to 1, has to be \\>= 0\r\n   * @deprecated No longer used.\r\n   */\r\n  min?: number;\r\n\r\n  /**\r\n   * Maximum rating, defaults to 5, has to be \\>= min\r\n   */\r\n  max?: number;\r\n\r\n  /**\r\n   * Allow the rating value to be set to 0 instead of a minimum of 1.\r\n   */\r\n  allowZeroStars?: boolean;\r\n\r\n  /**\r\n   * Custom icon\r\n   * @defaultvalue FavoriteStarFill\r\n   */\r\n  icon?: string;\r\n\r\n  /**\r\n   * Custom icon for unselected rating elements.\r\n   * If an `icon` property is provided, defaults to the value of the `icon` property.\r\n   * @defaultvalue FavoriteStarFill\r\n   */\r\n  unselectedIcon?: string;\r\n\r\n  /**\r\n   * Size of rating, defaults to small\r\n   */\r\n  size?: RatingSize;\r\n\r\n  /**\r\n   * Callback issued when the rating changes.\r\n   */\r\n  onChange?: (event: React.FocusEvent<HTMLElement>, rating?: number) => void;\r\n\r\n  /**\r\n   * @deprecated Use `onChange` instead.\r\n   */\r\n  onChanged?: (rating: number) => void;\r\n\r\n  /**\r\n   * Optional label format for star ratings, will be read by screen readers, defaults to ''.\r\n   * Can be used like \"\\{0\\} of \\{1\\} stars selected\".\r\n   * Where \\{0\\} will be subsituted by the current rating and \\{1\\} will be subsituted by the max rating.\r\n   */\r\n  ariaLabelFormat?: string;\r\n\r\n  /**\r\n   * Deprecated: Optional id of label describing this instance of Rating. Use `getAriaLabel` instead.\r\n   * @deprecated Use `getAriaLabel` instead.\r\n   */\r\n  ariaLabelId?: string;\r\n\r\n  /**\r\n   * Optional flag to mark rating control as readOnly\r\n   */\r\n  readOnly?: boolean;\r\n\r\n  /*\r\n   * Optional callback to set the arialabel for rating control.\r\n   */\r\n  getAriaLabel?: (rating: number, max: number) => string;\r\n\r\n  /**\r\n   * Call to provide customized styling that will layer on top of the variant rules.\r\n   */\r\n  styles?: IStyleFunctionOrObject<IRatingStyleProps, IRatingStyles>;\r\n\r\n  /**\r\n   * Theme (provided through customization.)\r\n   */\r\n  theme?: ITheme;\r\n}\r\n\r\nexport enum RatingSize {\r\n  Small = 0,\r\n  Large = 1\r\n}\r\n\r\nexport interface IRatingStyleProps {\r\n  disabled?: boolean;\r\n  readOnly?: boolean;\r\n  theme: ITheme;\r\n}\r\n\r\nexport interface IRatingStyles {\r\n  root: IStyle;\r\n  ratingStar: IStyle;\r\n  ratingStarBack: IStyle;\r\n  ratingStarFront: IStyle;\r\n  ratingButton: IStyle;\r\n  ratingStarIsSmall: IStyle;\r\n  ratingStarIsLarge: IStyle;\r\n  rootIsSmall: IStyle;\r\n  rootIsLarge: IStyle;\r\n  labelText: IStyle;\r\n  ratingFocusZone: IStyle;\r\n}\r\n"]}