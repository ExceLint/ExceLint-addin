{"version":3,"file":"ChoiceGroupOption.types.js","sourceRoot":"../src/","sources":["components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\r\nimport { ITheme, IStyle } from '../../../Styling';\r\nimport { IRefObject } from '../../../Utilities';\r\nimport { IChoiceGroupOption } from '../../ChoiceGroup/ChoiceGroup.types';\r\n\r\nexport type OnFocusCallback = (ev?: React.FocusEvent<HTMLElement | HTMLInputElement>, props?: IChoiceGroupOption) => void | undefined;\r\nexport type OnChangeCallback = (evt?: React.FormEvent<HTMLElement | HTMLInputElement>, props?: IChoiceGroupOption) => void;\r\n\r\nexport interface IChoiceGroupOptionProps extends IChoiceGroupOption {\r\n  /**\r\n   * Optional callback to access the IChoiceGroup interface. Use this instead of ref for accessing\r\n   * the public methods and properties of the component.\r\n   */\r\n  componentRef?: IRefObject<IChoiceGroupOption>;\r\n\r\n  /**\r\n   * A callback for receiving a notification when the choice has been changed.\r\n   */\r\n  onChange?: OnChangeCallback;\r\n\r\n  /**\r\n   * A callback for receiving a notification when the choice has received focus.\r\n   */\r\n  onFocus?: OnFocusCallback;\r\n\r\n  /**\r\n   * A callback for receiving a notification when the choice has lost focus.\r\n   */\r\n  onBlur?: (ev: React.FocusEvent<HTMLElement>, props?: IChoiceGroupOption) => void;\r\n\r\n  /**\r\n   * Indicates if the ChoiceGroupOption should appear focused, visually\r\n   */\r\n  focused?: boolean;\r\n\r\n  /**\r\n   * Theme (provided through customization.)\r\n   */\r\n  theme?: ITheme;\r\n\r\n  /**\r\n   * If true, it specifies that an option must be selected in the ChoiceGroup before submitting the form\r\n   */\r\n  required?: boolean;\r\n\r\n  /**\r\n   * This value is used to group each ChoiceGroupOption into the same logical ChoiceGroup\r\n   */\r\n  name?: string;\r\n}\r\n\r\nexport interface IChoiceGroupOptionStyleProps {\r\n  theme: ITheme;\r\n  hasIcon?: boolean;\r\n  hasImage?: boolean;\r\n  checked?: boolean;\r\n  disabled?: boolean;\r\n  imageIsLarge?: boolean;\r\n  focused?: boolean;\r\n}\r\n\r\nexport interface IChoiceGroupOptionStyles {\r\n  root?: IStyle;\r\n  choiceFieldWrapper?: IStyle;\r\n  input?: IStyle;\r\n  field?: IStyle;\r\n  innerField?: IStyle;\r\n  imageWrapper?: IStyle;\r\n  selectedImageWrapper?: IStyle;\r\n  iconWrapper?: IStyle;\r\n  labelWrapper?: IStyle;\r\n}\r\n"]}