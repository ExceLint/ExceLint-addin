{"version":3,"file":"ColorPicker.Basic.Example.js","sourceRoot":"../src/","sources":["components/ColorPicker/examples/ColorPicker.Basic.Example.tsx"],"names":[],"mappings":";;;IAKA,IAAM,UAAU,GAAG,wBAAc,CAAC;QAChC,OAAO,EAAE;YACP,OAAO,EAAE,MAAM;SAChB;QACD,OAAO,EAAE;YACP,UAAU,EAAE,EAAE;SACf;QACD,WAAW,EAAE;YACX,KAAK,EAAE,GAAG;YACV,MAAM,EAAE,GAAG;YACX,MAAM,EAAE,QAAQ;YAChB,MAAM,EAAE,mBAAmB;YAC3B,SAAS;gBACP,GAAC,8BAAoB,IAAG;oBACtB,oBAAoB,EAAE,MAAM;iBAC7B;mBACF;SACF;KACF,CAAC,CAAC;IAOH;QAA6C,mDAAkD;QAA/F;YAAA,qEAqCC;YApCQ,WAAK,GAAkC;gBAC5C,KAAK,EAAE,0BAAkB,CAAC,SAAS,CAAE;gBACrC,iBAAiB,EAAE,KAAK;aACzB,CAAC;YAqBM,kBAAY,GAAG,UAAC,EAAqC,EAAE,QAAgB;gBAC7E,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;YACrC,CAAC,CAAC;YAEM,uBAAiB,GAAG,UAAC,EAAiC,EAAE,OAAiB;gBAC/E,IAAI,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC;gBAC7B,IAAI,OAAO,EAAE;oBACX,iEAAiE;oBACjE,KAAK,GAAG,iBAAO,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;iBACxC;gBACD,KAAI,CAAC,QAAQ,CAAC,EAAE,iBAAiB,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,OAAA,EAAE,CAAC,CAAC;YACzD,CAAC,CAAC;;QACJ,CAAC;QA/BQ,wCAAM,GAAb;YACQ,IAAA,eAAyC,EAAvC,gBAAK,EAAE,wCAAiB,CAAgB;YAChD,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,OAAO;gBAChC,oBAAC,mBAAW,IAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,iBAAiB,EAAE,iBAAiB,GAAI;gBAEhG,6BAAK,SAAS,EAAE,UAAU,CAAC,OAAO;oBAChC,6BACE,SAAS,EAAE,UAAU,CAAC,WAAW,EACjC,KAAK,EAAE;4BACL,eAAe,EAAE,KAAK,CAAC,GAAG;yBAC3B,GACD;oBACF,oBAAC,cAAM,IAAC,KAAK,EAAC,mBAAmB,EAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,EAAE,OAAO,EAAE,iBAAiB,GAAI,CAC9F,CACF,CACP,CAAC;QACJ,CAAC;QAcH,8BAAC;IAAD,CAAC,AArCD,CAA6C,KAAK,CAAC,SAAS,GAqC3D;IArCY,0DAAuB","sourcesContent":["import * as React from 'react';\r\nimport { ColorPicker, Toggle, getColorFromString, IColor } from 'office-ui-fabric-react/lib/index';\r\nimport { mergeStyleSets, HighContrastSelector } from 'office-ui-fabric-react/lib/Styling';\r\nimport { updateA } from 'office-ui-fabric-react/lib/utilities/color/updateA';\r\n\r\nconst classNames = mergeStyleSets({\r\n  wrapper: {\r\n    display: 'flex'\r\n  },\r\n  column2: {\r\n    marginLeft: 10\r\n  },\r\n  colorSquare: {\r\n    width: 100,\r\n    height: 100,\r\n    margin: '16px 0',\r\n    border: '1px solid #c8c6c4',\r\n    selectors: {\r\n      [HighContrastSelector]: {\r\n        MsHighContrastAdjust: 'none'\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport interface IBasicColorPickerExampleState {\r\n  color: IColor;\r\n  alphaSliderHidden: boolean;\r\n}\r\n\r\nexport class ColorPickerBasicExample extends React.Component<{}, IBasicColorPickerExampleState> {\r\n  public state: IBasicColorPickerExampleState = {\r\n    color: getColorFromString('#ffffff')!,\r\n    alphaSliderHidden: false\r\n  };\r\n\r\n  public render(): JSX.Element {\r\n    const { color, alphaSliderHidden } = this.state;\r\n    return (\r\n      <div className={classNames.wrapper}>\r\n        <ColorPicker color={color} onChange={this._updateColor} alphaSliderHidden={alphaSliderHidden} />\r\n\r\n        <div className={classNames.column2}>\r\n          <div\r\n            className={classNames.colorSquare}\r\n            style={{\r\n              backgroundColor: color.str\r\n            }}\r\n          />\r\n          <Toggle label=\"Hide alpha slider\" onChange={this._onHideAlphaClick} checked={alphaSliderHidden} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _updateColor = (ev: React.SyntheticEvent<HTMLElement>, colorObj: IColor) => {\r\n    this.setState({ color: colorObj });\r\n  };\r\n\r\n  private _onHideAlphaClick = (ev: React.MouseEvent<HTMLElement>, checked?: boolean) => {\r\n    let color = this.state.color;\r\n    if (checked) {\r\n      // If hiding the alpha slider, remove transparency from the color\r\n      color = updateA(this.state.color, 100);\r\n    }\r\n    this.setState({ alphaSliderHidden: !!checked, color });\r\n  };\r\n}\r\n"]}