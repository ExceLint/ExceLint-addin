{"version":3,"file":"DatePicker.base.js","sourceRoot":"../src/","sources":["components/DatePicker/DatePicker.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  IDatePicker,\n  IDatePickerProps,\n  IDatePickerStrings,\n  IDatePickerStyleProps,\n  IDatePickerStyles,\n} from './DatePicker.types';\nimport {\n  KeyCodes,\n  classNamesFunction,\n  getId,\n  getNativeProps,\n  divProperties,\n  css,\n  initializeComponentRef,\n} from '../../Utilities';\nimport { Calendar, ICalendar, DayOfWeek } from '../../Calendar';\nimport { FirstWeekOfYear } from '../../utilities/dateValues/DateValues';\nimport { Callout } from '../../Callout';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { TextField, ITextField } from '../../TextField';\nimport { compareDates, compareDatePart } from '../../utilities/dateMath/DateMath';\nimport { FocusTrapZone } from '../../FocusTrapZone';\n\nconst getClassNames = classNamesFunction<IDatePickerStyleProps, IDatePickerStyles>();\n\nexport interface IDatePickerState {\n  selectedDate?: Date;\n  formattedDate?: string;\n  isDatePickerShown?: boolean;\n  errorMessage?: string;\n}\n\nconst DEFAULT_STRINGS: IDatePickerStrings = {\n  months: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ],\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  goToToday: 'Go to today',\n  prevMonthAriaLabel: 'Go to previous month',\n  nextMonthAriaLabel: 'Go to next month',\n  prevYearAriaLabel: 'Go to previous year',\n  nextYearAriaLabel: 'Go to next year',\n  prevYearRangeAriaLabel: 'Previous year range',\n  nextYearRangeAriaLabel: 'Next year range',\n  closeButtonAriaLabel: 'Close date picker',\n  weekNumberFormatString: 'Week number {0}',\n};\n\nexport class DatePickerBase extends React.Component<IDatePickerProps, IDatePickerState> implements IDatePicker {\n  public static defaultProps: IDatePickerProps = {\n    allowTextInput: false,\n    formatDate: (date: Date) => {\n      if (date) {\n        return date.toDateString();\n      }\n\n      return '';\n    },\n    parseDateFromString: (dateStr: string) => {\n      const date = Date.parse(dateStr);\n      if (date) {\n        return new Date(date);\n      }\n\n      return null;\n    },\n    firstDayOfWeek: DayOfWeek.Sunday,\n    initialPickerDate: new Date(),\n    isRequired: false,\n    isMonthPickerVisible: true,\n    showMonthPickerAsOverlay: false,\n    strings: DEFAULT_STRINGS,\n    highlightCurrentMonth: false,\n    highlightSelectedMonth: false,\n    borderless: false,\n    pickerAriaLabel: 'Calendar',\n    showWeekNumbers: false,\n    firstWeekOfYear: FirstWeekOfYear.FirstDay,\n    showGoToToday: true,\n    dateTimeFormatter: undefined,\n    showCloseButton: false,\n    underlined: false,\n    allFocusable: false,\n  };\n\n  private _calendar = React.createRef<ICalendar>();\n  private _datePickerDiv = React.createRef<HTMLDivElement>();\n  private _textField = React.createRef<ITextField>();\n  private _preventFocusOpeningPicker: boolean;\n  private _id: string;\n\n  constructor(props: IDatePickerProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this.state = this._getDefaultState();\n\n    this._id = props.id || getId('DatePicker');\n\n    this._preventFocusOpeningPicker = false;\n  }\n\n  public UNSAFE_componentWillReceiveProps(nextProps: IDatePickerProps): void {\n    const { formatDate, value } = nextProps;\n\n    if (\n      compareDates(this.props.minDate!, nextProps.minDate!) &&\n      compareDates(this.props.maxDate!, nextProps.maxDate!) &&\n      this.props.isRequired === nextProps.isRequired &&\n      compareDates(this.state.selectedDate!, value!) &&\n      this.props.formatDate === formatDate\n    ) {\n      // if the props we care about haven't changed, don't run validation or updates\n      return;\n    }\n\n    this._setErrorMessage(true, nextProps);\n\n    this._id = nextProps.id || this._id;\n\n    // Issue# 1274: Check if the date value changed from old value, i.e., if indeed a new date is being\n    // passed in or if the formatting function was modified. We only update the selected date if either of these\n    // had a legit change. Note tha the bug will still repro when only the formatDate was passed in props and this\n    // is the result of the onSelectDate callback, but this should be a rare scenario.\n    const oldValue = this.state.selectedDate;\n    if (!compareDates(oldValue!, value!) || this.props.formatDate !== formatDate) {\n      this.setState({\n        selectedDate: value || undefined,\n        formattedDate: formatDate && value ? formatDate(value) : '',\n      });\n    }\n  }\n\n  public componentDidUpdate(prevProps: IDatePickerProps, prevState: IDatePickerState) {\n    if (prevState.isDatePickerShown && !this.state.isDatePickerShown) {\n      // If DatePicker's menu (Calendar) is closed, run onAfterMenuDismiss\n      if (this.props.onAfterMenuDismiss) {\n        this.props.onAfterMenuDismiss();\n      }\n    }\n  }\n\n  public render(): JSX.Element {\n    const {\n      firstDayOfWeek,\n      strings,\n      label,\n      theme,\n      className,\n      styles,\n      initialPickerDate,\n      isRequired,\n      disabled,\n      ariaLabel,\n      pickerAriaLabel,\n      placeholder,\n      allowTextInput,\n      borderless,\n      minDate,\n      maxDate,\n      showCloseButton,\n      calendarProps,\n      calloutProps,\n      textField: textFieldProps,\n      underlined,\n      allFocusable,\n      calendarAs: CalendarType = Calendar,\n      tabIndex,\n    } = this.props;\n    const { isDatePickerShown, formattedDate, selectedDate } = this.state;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      className,\n      disabled,\n      label: !!label,\n      isDatePickerShown,\n    });\n\n    const calloutId = getId('DatePicker-Callout');\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties, ['value']);\n    const iconProps = textFieldProps && textFieldProps.iconProps;\n\n    return (\n      <div {...nativeProps} className={classNames.root}>\n        <div\n          ref={this._datePickerDiv}\n          aria-haspopup=\"true\"\n          aria-owns={isDatePickerShown ? calloutId : undefined}\n          className={classNames.wrapper}\n        >\n          <TextField\n            role=\"combobox\"\n            label={label}\n            aria-expanded={isDatePickerShown}\n            ariaLabel={ariaLabel}\n            aria-controls={isDatePickerShown ? calloutId : undefined}\n            required={isRequired}\n            disabled={disabled}\n            errorMessage={this._getErrorMessage()}\n            placeholder={placeholder}\n            borderless={borderless}\n            value={formattedDate}\n            componentRef={this._textField}\n            underlined={underlined}\n            tabIndex={tabIndex}\n            readOnly={!allowTextInput}\n            {...textFieldProps}\n            id={this._id + '-label'}\n            className={css(classNames.textField, textFieldProps && textFieldProps.className)}\n            iconProps={{\n              iconName: 'Calendar',\n              ...iconProps,\n              className: css(classNames.icon, iconProps && iconProps.className),\n              onClick: this._onIconClick,\n            }}\n            onKeyDown={this._onTextFieldKeyDown}\n            onFocus={this._onTextFieldFocus}\n            onBlur={this._onTextFieldBlur}\n            onClick={this._onTextFieldClick}\n            onChange={this._onTextFieldChanged}\n          />\n        </div>\n        {isDatePickerShown && (\n          <Callout\n            id={calloutId}\n            role=\"dialog\"\n            ariaLabel={pickerAriaLabel}\n            isBeakVisible={false}\n            gapSpace={0}\n            doNotLayer={false}\n            target={this._datePickerDiv.current}\n            directionalHint={DirectionalHint.bottomLeftEdge}\n            {...calloutProps}\n            className={css(classNames.callout, calloutProps && calloutProps.className)}\n            onDismiss={this._calendarDismissed}\n            onPositioned={this._onCalloutPositioned}\n          >\n            <FocusTrapZone\n              isClickableOutsideFocusTrap={true}\n              disableFirstFocus={this.props.disableAutoFocus}\n              forceFocusInsideTrap={false}\n            >\n              <CalendarType\n                {...calendarProps}\n                onSelectDate={this._onSelectDate}\n                onDismiss={this._calendarDismissed}\n                isMonthPickerVisible={this.props.isMonthPickerVisible}\n                showMonthPickerAsOverlay={this.props.showMonthPickerAsOverlay}\n                today={this.props.today}\n                value={selectedDate || initialPickerDate}\n                firstDayOfWeek={firstDayOfWeek}\n                strings={strings!}\n                highlightCurrentMonth={this.props.highlightCurrentMonth}\n                highlightSelectedMonth={this.props.highlightSelectedMonth}\n                showWeekNumbers={this.props.showWeekNumbers}\n                firstWeekOfYear={this.props.firstWeekOfYear}\n                showGoToToday={this.props.showGoToToday}\n                dateTimeFormatter={this.props.dateTimeFormatter}\n                minDate={minDate}\n                maxDate={maxDate}\n                componentRef={this._calendar}\n                showCloseButton={showCloseButton}\n                allFocusable={allFocusable}\n              />\n            </FocusTrapZone>\n          </Callout>\n        )}\n      </div>\n    );\n  }\n\n  public focus(): void {\n    if (this._textField.current) {\n      this._textField.current.focus();\n    }\n  }\n\n  public reset(): void {\n    this.setState(this._getDefaultState());\n  }\n\n  private _setErrorMessage(setState: boolean, nextProps?: IDatePickerProps): string | undefined {\n    const { isRequired, strings, value, minDate, maxDate, initialPickerDate } = nextProps || this.props;\n    let errorMessage = !initialPickerDate && isRequired && !value ? strings!.isRequiredErrorMessage || ' ' : undefined;\n\n    if (!errorMessage && value) {\n      errorMessage = this._isDateOutOfBounds(value!, minDate, maxDate)\n        ? strings!.isOutOfBoundsErrorMessage || ' '\n        : undefined;\n    }\n\n    if (setState) {\n      this.setState({\n        errorMessage: errorMessage,\n      });\n    }\n\n    return errorMessage;\n  }\n\n  private _onSelectDate = (date: Date): void => {\n    const { formatDate, onSelectDate } = this.props;\n\n    if (this.props.calendarProps && this.props.calendarProps.onSelectDate) {\n      this.props.calendarProps.onSelectDate(date);\n    }\n\n    this.setState({\n      selectedDate: date,\n      formattedDate: formatDate && date ? formatDate(date) : '',\n    });\n\n    if (onSelectDate) {\n      onSelectDate(date);\n    }\n\n    this._calendarDismissed();\n  };\n\n  private _onCalloutPositioned = (): void => {\n    let shouldFocus = true;\n    // If the user has specified that the callout shouldn't use initial focus, then respect\n    // that and don't attempt to set focus. That will default to true within the callout\n    // so we need to check if it's undefined here.\n    if (this.props.calloutProps && this.props.calloutProps.setInitialFocus !== undefined) {\n      shouldFocus = this.props.calloutProps.setInitialFocus;\n    }\n    if (this._calendar.current && shouldFocus) {\n      this._calendar.current.focus();\n    }\n  };\n\n  private _onTextFieldFocus = (ev: React.FocusEvent<HTMLElement>): void => {\n    if (this.props.disableAutoFocus) {\n      return;\n    }\n\n    if (!this.props.allowTextInput) {\n      if (!this._preventFocusOpeningPicker) {\n        this._showDatePickerPopup();\n      } else {\n        this._preventFocusOpeningPicker = false;\n      }\n    }\n  };\n\n  private _onTextFieldBlur = (ev: React.FocusEvent<HTMLElement>): void => {\n    this._validateTextInput();\n  };\n\n  private _onTextFieldChanged = (\n    ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>,\n    newValue: string,\n  ): void => {\n    const { allowTextInput, textField } = this.props;\n\n    if (allowTextInput) {\n      if (this.state.isDatePickerShown) {\n        this._dismissDatePickerPopup();\n      }\n\n      const { isRequired, strings } = this.props;\n\n      this.setState({\n        errorMessage: isRequired && !newValue ? strings!.isRequiredErrorMessage || ' ' : undefined,\n        formattedDate: newValue,\n      });\n    }\n\n    if (textField && textField.onChange) {\n      textField.onChange(ev, newValue);\n    }\n  };\n\n  private _onTextFieldKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    switch (ev.which) {\n      case KeyCodes.enter:\n        ev.preventDefault();\n        ev.stopPropagation();\n        if (!this.state.isDatePickerShown) {\n          this._validateTextInput();\n          this._showDatePickerPopup();\n        } else {\n          // When DatePicker allows input date string directly,\n          // it is expected to hit another enter to close the popup\n          if (this.props.allowTextInput) {\n            this._dismissDatePickerPopup();\n          }\n        }\n        break;\n\n      case KeyCodes.escape:\n        this._handleEscKey(ev);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  private _onTextFieldClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    if (!this.props.disableAutoFocus && !this.state.isDatePickerShown && !this.props.disabled) {\n      this._showDatePickerPopup();\n      return;\n    }\n    if (this.props.allowTextInput) {\n      this._dismissDatePickerPopup();\n    }\n  };\n\n  private _onIconClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    ev.stopPropagation();\n    if (!this.state.isDatePickerShown && !this.props.disabled) {\n      this._showDatePickerPopup();\n    } else if (this.props.allowTextInput) {\n      this._dismissDatePickerPopup();\n    }\n  };\n\n  private _showDatePickerPopup(): void {\n    if (!this.state.isDatePickerShown) {\n      this._preventFocusOpeningPicker = true;\n      this.setState({\n        isDatePickerShown: true,\n      });\n    }\n  }\n\n  private _dismissDatePickerPopup = (): void => {\n    if (this.state.isDatePickerShown) {\n      this.setState(\n        {\n          isDatePickerShown: false,\n        },\n        () => {\n          // setState is async, so we must call validate in a callback\n          this._validateTextInput();\n        },\n      );\n    }\n  };\n\n  /**\n   * Callback for closing the calendar callout\n   */\n  private _calendarDismissed = (): void => {\n    this._preventFocusOpeningPicker = true;\n    this._dismissDatePickerPopup();\n    // don't need to focus the text box, if necessary the focusTrapZone will do it\n  };\n\n  private _handleEscKey = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (this.state.isDatePickerShown) {\n      ev.stopPropagation();\n    }\n    this._calendarDismissed();\n  };\n\n  private _validateTextInput = (): void => {\n    const {\n      isRequired,\n      allowTextInput,\n      strings,\n      parseDateFromString,\n      onSelectDate,\n      formatDate,\n      minDate,\n      maxDate,\n    } = this.props;\n    const inputValue = this.state.formattedDate;\n\n    // Do validation only if DatePicker's popup is dismissed\n    if (this.state.isDatePickerShown) {\n      return;\n    }\n\n    if (allowTextInput) {\n      let date = null;\n\n      if (inputValue) {\n        // Don't parse if the selected date has the same formatted string as what we're about to parse.\n        // The formatted string might be ambiguous (ex: \"1/2/3\" or \"New Year Eve\") and the parser might\n        // not be able to come up with the exact same date.\n        if (\n          this.state.selectedDate &&\n          !this.state.errorMessage &&\n          formatDate &&\n          formatDate(this.state.selectedDate) === inputValue\n        ) {\n          return;\n        }\n        date = parseDateFromString!(inputValue);\n\n        // Check if date is null, or date is Invalid Date\n        if (!date || isNaN(date.getTime())) {\n          // Reset invalid input field, if formatting is available\n          if (formatDate) {\n            date = this.state.selectedDate;\n            this.setState({\n              formattedDate: formatDate(date!).toString(),\n            });\n          }\n\n          this.setState({\n            errorMessage: strings!.invalidInputErrorMessage || ' ',\n          });\n        } else {\n          // Check against optional date boundaries\n          if (this._isDateOutOfBounds(date, minDate, maxDate)) {\n            this.setState({\n              errorMessage: strings!.isOutOfBoundsErrorMessage || ' ',\n            });\n          } else {\n            this.setState({\n              selectedDate: date,\n              errorMessage: '',\n            });\n\n            // When formatting is available:\n            // If formatted date is valid, but is different from input, update with formatted date.\n            // This occurs when an invalid date is entered twice.\n            if (formatDate && formatDate(date) !== inputValue) {\n              this.setState({\n                formattedDate: formatDate(date).toString(),\n              });\n            }\n          }\n        }\n      } else {\n        // Only show error for empty inputValue if it is a required field\n        this.setState({\n          errorMessage: isRequired ? strings!.isRequiredErrorMessage || ' ' : '',\n        });\n      }\n\n      // Execute onSelectDate callback\n      if (onSelectDate) {\n        // If no input date string or input date string is invalid\n        // date variable will be null, callback should expect null value for this case\n        onSelectDate(date);\n      }\n    } else if (isRequired && !inputValue) {\n      // Check when DatePicker is a required field but has NO input value\n      this.setState({\n        errorMessage: strings!.isRequiredErrorMessage || ' ',\n      });\n    } else {\n      // Cleanup the error message\n      this.setState({\n        errorMessage: '',\n      });\n    }\n  };\n\n  private _getDefaultState(props: IDatePickerProps = this.props): IDatePickerState {\n    return {\n      selectedDate: props.value || undefined,\n      formattedDate: props.formatDate && props.value ? props.formatDate(props.value) : '',\n      isDatePickerShown: false,\n      errorMessage: this._setErrorMessage(false),\n    };\n  }\n\n  private _isDateOutOfBounds(date: Date, minDate?: Date, maxDate?: Date): boolean {\n    return (!!minDate && compareDatePart(minDate!, date) > 0) || (!!maxDate && compareDatePart(maxDate!, date) < 0);\n  }\n\n  private _getErrorMessage(): string | undefined {\n    if (this.state.isDatePickerShown) {\n      return undefined;\n    }\n    return this.state.errorMessage;\n  }\n}\n"]}