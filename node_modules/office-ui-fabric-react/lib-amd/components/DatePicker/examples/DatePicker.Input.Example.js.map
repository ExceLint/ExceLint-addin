{"version":3,"file":"DatePicker.Input.Example.js","sourceRoot":"../src/","sources":["components/DatePicker/examples/DatePicker.Input.Example.tsx"],"names":[],"mappings":";;;IAKA,IAAM,gBAAgB,GAAuB;QAC3C,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;QAElI,WAAW,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;QAEjG,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;QAEpF,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAE9C,SAAS,EAAE,aAAa;QACxB,kBAAkB,EAAE,sBAAsB;QAC1C,kBAAkB,EAAE,kBAAkB;QACtC,iBAAiB,EAAE,qBAAqB;QACxC,iBAAiB,EAAE,iBAAiB;QACpC,oBAAoB,EAAE,mBAAmB;QAEzC,sBAAsB,EAAE,yBAAyB;QAEjD,wBAAwB,EAAE,sBAAsB;KACjD,CAAC;IAOF;QAA4C,kDAAiD;QAC3F,gCAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAMb;YA0BO,mBAAa,GAAG,UAAC,IAA6B;gBACpD,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;YACjC,CAAC,CAAC;YAEM,cAAQ,GAAG;gBACjB,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;YACjC,CAAC,CAAC;YApCA,KAAI,CAAC,KAAK,GAAG;gBACX,cAAc,EAAE,sBAAS,CAAC,MAAM;gBAChC,KAAK,EAAE,IAAI;aACZ,CAAC;;QACJ,CAAC;QAEM,uCAAM,GAAb;YACQ,IAAA,eAAsC,EAApC,kCAAc,EAAE,gBAAK,CAAgB;YAC7C,IAAM,IAAI,GAAG,uFAAuF,CAAC;YACrG,OAAO,CACL,6BAAK,SAAS,EAAC,wBAAwB;gBACrC,0NAGI;gBACJ,oBAAC,uBAAU,IACT,KAAK,EAAC,YAAY,EAClB,UAAU,EAAE,KAAK,EACjB,cAAc,EAAE,IAAI,EACpB,SAAS,EAAE,IAAI,EACf,cAAc,EAAE,cAAc,EAC9B,OAAO,EAAE,gBAAgB,EACzB,KAAK,EAAE,KAAM,EACb,YAAY,EAAE,IAAI,CAAC,aAAa,GAChC;gBACF,oBAAC,sBAAa,IAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAC,OAAO,GAAG,CAClD,CACP,CAAC;QACJ,CAAC;QASH,6BAAC;IAAD,CAAC,AAzCD,CAA4C,KAAK,CAAC,SAAS,GAyC1D;IAzCY,wDAAsB","sourcesContent":["import * as React from 'react';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { DatePicker, DayOfWeek, IDatePickerStrings } from 'office-ui-fabric-react/lib/DatePicker';\r\nimport './DatePicker.Examples.scss';\r\n\r\nconst DayPickerStrings: IDatePickerStrings = {\r\n  months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n\r\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n\r\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n\r\n  shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\r\n\r\n  goToToday: 'Go to today',\r\n  prevMonthAriaLabel: 'Go to previous month',\r\n  nextMonthAriaLabel: 'Go to next month',\r\n  prevYearAriaLabel: 'Go to previous year',\r\n  nextYearAriaLabel: 'Go to next year',\r\n  closeButtonAriaLabel: 'Close date picker',\r\n\r\n  isRequiredErrorMessage: 'Start date is required.',\r\n\r\n  invalidInputErrorMessage: 'Invalid date format.'\r\n};\r\n\r\nexport interface IDatePickerInputExampleState {\r\n  firstDayOfWeek?: DayOfWeek;\r\n  value?: Date | null;\r\n}\r\n\r\nexport class DatePickerInputExample extends React.Component<{}, IDatePickerInputExampleState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstDayOfWeek: DayOfWeek.Sunday,\r\n      value: null\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { firstDayOfWeek, value } = this.state;\r\n    const desc = 'This field is required. One of the support input formats is year dash month dash day.';\r\n    return (\r\n      <div className=\"docs-DatePickerExample\">\r\n        <p>\r\n          Text input allowed by default when use keyboard navigation. Mouse click the TextField will popup DatePicker, click the TextField\r\n          again will dismiss the DatePicker and allow text input.\r\n        </p>\r\n        <DatePicker\r\n          label=\"Start date\"\r\n          isRequired={false}\r\n          allowTextInput={true}\r\n          ariaLabel={desc}\r\n          firstDayOfWeek={firstDayOfWeek}\r\n          strings={DayPickerStrings}\r\n          value={value!}\r\n          onSelectDate={this._onSelectDate}\r\n        />\r\n        <DefaultButton onClick={this._onClick} text=\"Clear\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onSelectDate = (date: Date | null | undefined): void => {\r\n    this.setState({ value: date });\r\n  };\r\n\r\n  private _onClick = (): void => {\r\n    this.setState({ value: null });\r\n  };\r\n}\r\n"]}