{"version":3,"file":"Suggestions.js","sourceRoot":"../src/","sources":["components/pickers/Suggestions/Suggestions.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\n\r\nimport { BaseComponent, KeyCodes, classNamesFunction, IStyleFunctionOrObject, css, styled } from '../../../Utilities';\r\nimport { IProcessedStyleSet } from '../../../Styling';\r\nimport { CommandButton, IButton } from '../../../Button';\r\nimport { Spinner, ISpinnerStyleProps, ISpinnerStyles } from '../../../Spinner';\r\nimport { ISuggestionsProps, SuggestionActionType, ISuggestionsStyleProps, ISuggestionsStyles } from './Suggestions.types';\r\nimport { SuggestionsItem } from './SuggestionsItem';\r\nimport { getStyles as suggestionsItemStyles } from './SuggestionsItem.styles';\r\nimport { ISuggestionItemProps, ISuggestionsItemStyleProps, ISuggestionsItemStyles } from './SuggestionsItem.types';\r\n\r\nimport * as stylesImport from './Suggestions.scss';\r\nconst legacyStyles: any = stylesImport;\r\n\r\nconst getClassNames = classNamesFunction<ISuggestionsStyleProps, ISuggestionsStyles>();\r\n\r\nexport interface ISuggestionsState {\r\n  selectedActionType: SuggestionActionType;\r\n}\r\n\r\nexport class Suggestions<T> extends BaseComponent<ISuggestionsProps<T>, ISuggestionsState> {\r\n  protected _forceResolveButton = React.createRef<IButton>();\r\n  protected _searchForMoreButton = React.createRef<IButton>();\r\n  protected _selectedElement = React.createRef<HTMLDivElement>();\r\n  private SuggestionsItemOfProperType = SuggestionsItem as new (props: ISuggestionItemProps<T>) => SuggestionsItem<T>;\r\n  private activeSelectedElement: HTMLDivElement | null;\r\n  private _classNames: Partial<IProcessedStyleSet<ISuggestionsStyles>>;\r\n\r\n  constructor(suggestionsProps: ISuggestionsProps<T>) {\r\n    super(suggestionsProps);\r\n    this.state = {\r\n      selectedActionType: SuggestionActionType.none\r\n    };\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this.scrollSelected();\r\n    this.activeSelectedElement = this._selectedElement ? this._selectedElement.current : null;\r\n  }\r\n\r\n  public componentDidUpdate(): void {\r\n    // Only scroll to selected element if the selected element has changed. Otherwise do nothing.\r\n    // This prevents some odd behavior where scrolling the active element out of view and clicking on a selected element\r\n    // will trigger a focus event and not give the clicked element the click.\r\n    if (this._selectedElement.current && this.activeSelectedElement !== this._selectedElement.current) {\r\n      this.scrollSelected();\r\n      this.activeSelectedElement = this._selectedElement.current;\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      forceResolveText,\r\n      mostRecentlyUsedHeaderText,\r\n      searchForMoreText,\r\n      className,\r\n      moreSuggestionsAvailable,\r\n      noResultsFoundText,\r\n      suggestions,\r\n      isLoading,\r\n      isSearching,\r\n      loadingText,\r\n      onRenderNoResultFound,\r\n      searchingText,\r\n      isMostRecentlyUsedVisible,\r\n      resultsMaximumNumber,\r\n      resultsFooterFull,\r\n      resultsFooter,\r\n      isResultsFooterVisible = true,\r\n      suggestionsAvailableAlertText,\r\n      suggestionsHeaderText,\r\n      suggestionsClassName,\r\n      theme,\r\n      styles\r\n    } = this.props;\r\n\r\n    // TODO\r\n    // Clean this up by leaving only the first part after removing support for SASS.\r\n    // Currently we can not remove the SASS styles from Suggestions class because it\r\n    // might be used by consumers separately from pickers extending from BasePicker\r\n    // and have not used the new 'styles' prop. Because it's expecting a type parameter,\r\n    // we can not use the 'styled' function without adding some helpers which can break\r\n    // downstream consumers who did not use the new helpers.\r\n    // We check for 'styles' prop which is going to be injected by the 'styled' HOC\r\n    // in BasePicker when the typed Suggestions class is ready to be rendered. If the check\r\n    // passes we can use the CSS-in-JS styles. If the check fails (ex: custom picker),\r\n    // then we just use the old SASS styles instead.\r\n    this._classNames = styles\r\n      ? getClassNames(styles, {\r\n          theme: theme!,\r\n          className,\r\n          suggestionsClassName,\r\n          forceResolveButtonSelected: this.state.selectedActionType === SuggestionActionType.forceResolve,\r\n          searchForMoreButtonSelected: this.state.selectedActionType === SuggestionActionType.searchMore\r\n        })\r\n      : {\r\n          root: css('ms-Suggestions', className, legacyStyles.root),\r\n          title: css('ms-Suggestions-title', legacyStyles.suggestionsTitle),\r\n          searchForMoreButton: css('ms-SearchMore-button', legacyStyles.actionButton, {\r\n            ['is-selected ' + legacyStyles.buttonSelected]: this.state.selectedActionType === SuggestionActionType.searchMore\r\n          }),\r\n          forceResolveButton: css('ms-forceResolve-button', legacyStyles.actionButton, {\r\n            ['is-selected ' + legacyStyles.buttonSelected]: this.state.selectedActionType === SuggestionActionType.forceResolve\r\n          }),\r\n          suggestionsAvailable: css('ms-Suggestions-suggestionsAvailable', legacyStyles.suggestionsAvailable),\r\n          suggestionsContainer: css('ms-Suggestions-container', legacyStyles.suggestionsContainer, suggestionsClassName),\r\n          noSuggestions: css('ms-Suggestions-none', legacyStyles.suggestionsNone)\r\n        };\r\n\r\n    const spinnerStyles = this._classNames.subComponentStyles\r\n      ? (this._classNames.subComponentStyles.spinner as IStyleFunctionOrObject<ISpinnerStyleProps, ISpinnerStyles>)\r\n      : undefined;\r\n\r\n    // TODO: cleanup after refactor of pickers to composition pattern and remove SASS support.\r\n    const spinnerClassNameOrStyles = styles\r\n      ? { styles: spinnerStyles }\r\n      : { className: css('ms-Suggestions-spinner', legacyStyles.suggestionsSpinner) };\r\n\r\n    const noResults = () => {\r\n      return noResultsFoundText ? (\r\n        <div role=\"alert\" className={this._classNames.noSuggestions}>\r\n          {noResultsFoundText}\r\n        </div>\r\n      ) : null;\r\n    };\r\n\r\n    // MostRecently Used text should supercede the header text if it's there and available.\r\n    let headerText: string | undefined = suggestionsHeaderText;\r\n    if (isMostRecentlyUsedVisible && mostRecentlyUsedHeaderText) {\r\n      headerText = mostRecentlyUsedHeaderText;\r\n    }\r\n\r\n    let footerTitle: ((props: ISuggestionsProps<T>) => JSX.Element) | undefined = undefined;\r\n    if (isResultsFooterVisible) {\r\n      footerTitle = suggestions.length >= (resultsMaximumNumber as number) ? resultsFooterFull : resultsFooter;\r\n    }\r\n\r\n    const hasNoSuggestions = (!suggestions || !suggestions.length) && !isLoading;\r\n\r\n    return (\r\n      <div className={this._classNames.root}>\r\n        {headerText ? <div className={this._classNames.title}>{headerText}</div> : null}\r\n        {forceResolveText && this._shouldShowForceResolve() && (\r\n          <CommandButton\r\n            componentRef={this._forceResolveButton}\r\n            className={this._classNames.forceResolveButton}\r\n            onClick={this._forceResolve}\r\n          >\r\n            {forceResolveText}\r\n          </CommandButton>\r\n        )}\r\n        {isLoading && <Spinner {...spinnerClassNameOrStyles} label={loadingText} />}\r\n        {hasNoSuggestions ? (onRenderNoResultFound ? onRenderNoResultFound(undefined, noResults) : noResults()) : this._renderSuggestions()}\r\n        {searchForMoreText && moreSuggestionsAvailable && (\r\n          <CommandButton\r\n            componentRef={this._searchForMoreButton}\r\n            className={this._classNames.searchForMoreButton}\r\n            iconProps={{ iconName: 'Search' }}\r\n            onClick={this._getMoreResults}\r\n          >\r\n            {searchForMoreText}\r\n          </CommandButton>\r\n        )}\r\n        {isSearching ? <Spinner {...spinnerClassNameOrStyles} label={searchingText} /> : null}\r\n        {footerTitle && !moreSuggestionsAvailable && !isMostRecentlyUsedVisible && !isSearching ? (\r\n          <div className={this._classNames.title}>{footerTitle(this.props)}</div>\r\n        ) : null}\r\n        {\r\n          <span role=\"alert\" aria-live=\"polite\" className={this._classNames.suggestionsAvailable}>\r\n            {!isLoading && !isSearching && suggestions && suggestions.length > 0 && suggestionsAvailableAlertText\r\n              ? suggestionsAvailableAlertText\r\n              : null}\r\n          </span>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns true if the event was handled, false otherwise\r\n   */\r\n  public tryHandleKeyDown = (keyCode: number, currentSuggestionIndex: number): boolean => {\r\n    let isEventHandled = false;\r\n    let newSelectedActionType = null;\r\n    const currentSelectedAction = this.state.selectedActionType;\r\n    const suggestionLength = this.props.suggestions.length;\r\n    if (keyCode === KeyCodes.down) {\r\n      switch (currentSelectedAction) {\r\n        case SuggestionActionType.forceResolve:\r\n          if (suggestionLength > 0) {\r\n            this._refocusOnSuggestions(keyCode);\r\n            newSelectedActionType = SuggestionActionType.none;\r\n          } else if (this._searchForMoreButton.current) {\r\n            newSelectedActionType = SuggestionActionType.searchMore;\r\n          } else {\r\n            newSelectedActionType = SuggestionActionType.forceResolve;\r\n          }\r\n          break;\r\n        case SuggestionActionType.searchMore:\r\n          if (this._forceResolveButton.current) {\r\n            newSelectedActionType = SuggestionActionType.forceResolve;\r\n          } else if (suggestionLength > 0) {\r\n            this._refocusOnSuggestions(keyCode);\r\n            newSelectedActionType = SuggestionActionType.none;\r\n          } else {\r\n            newSelectedActionType = SuggestionActionType.searchMore;\r\n          }\r\n          break;\r\n        case SuggestionActionType.none:\r\n          if (currentSuggestionIndex === -1 && this._forceResolveButton.current) {\r\n            newSelectedActionType = SuggestionActionType.forceResolve;\r\n          }\r\n          break;\r\n      }\r\n    } else if (keyCode === KeyCodes.up) {\r\n      switch (currentSelectedAction) {\r\n        case SuggestionActionType.forceResolve:\r\n          if (this._searchForMoreButton.current) {\r\n            newSelectedActionType = SuggestionActionType.searchMore;\r\n          } else if (suggestionLength > 0) {\r\n            this._refocusOnSuggestions(keyCode);\r\n            newSelectedActionType = SuggestionActionType.none;\r\n          }\r\n          break;\r\n        case SuggestionActionType.searchMore:\r\n          if (suggestionLength > 0) {\r\n            this._refocusOnSuggestions(keyCode);\r\n            newSelectedActionType = SuggestionActionType.none;\r\n          } else if (this._forceResolveButton.current) {\r\n            newSelectedActionType = SuggestionActionType.forceResolve;\r\n          }\r\n          break;\r\n        case SuggestionActionType.none:\r\n          if (currentSuggestionIndex === -1 && this._searchForMoreButton.current) {\r\n            newSelectedActionType = SuggestionActionType.searchMore;\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (newSelectedActionType !== null) {\r\n      this.setState({ selectedActionType: newSelectedActionType });\r\n      isEventHandled = true;\r\n    }\r\n\r\n    return isEventHandled;\r\n  };\r\n\r\n  public hasSuggestedAction(): boolean {\r\n    return this._searchForMoreButton.current !== undefined || this._forceResolveButton.current !== undefined;\r\n  }\r\n\r\n  public hasSuggestedActionSelected(): boolean {\r\n    return this.state.selectedActionType !== SuggestionActionType.none;\r\n  }\r\n\r\n  public executeSelectedAction(): void {\r\n    switch (this.state.selectedActionType) {\r\n      case SuggestionActionType.forceResolve:\r\n        this._forceResolve();\r\n        break;\r\n      case SuggestionActionType.searchMore:\r\n        this._getMoreResults();\r\n        break;\r\n    }\r\n  }\r\n\r\n  public focusAboveSuggestions(): void {\r\n    if (this._forceResolveButton.current) {\r\n      this.setState({ selectedActionType: SuggestionActionType.forceResolve });\r\n    } else if (this._searchForMoreButton.current) {\r\n      this.setState({ selectedActionType: SuggestionActionType.searchMore });\r\n    }\r\n  }\r\n\r\n  public focusBelowSuggestions(): void {\r\n    if (this._searchForMoreButton.current) {\r\n      this.setState({ selectedActionType: SuggestionActionType.searchMore });\r\n    } else if (this._forceResolveButton.current) {\r\n      this.setState({ selectedActionType: SuggestionActionType.forceResolve });\r\n    }\r\n  }\r\n\r\n  public focusSearchForMoreButton(): void {\r\n    if (this._searchForMoreButton.current) {\r\n      this._searchForMoreButton.current.focus();\r\n    }\r\n  }\r\n\r\n  // TODO get the element to scroll into view properly regardless of direction.\r\n  public scrollSelected(): void {\r\n    if (this._selectedElement.current && this._selectedElement.current.scrollIntoView !== undefined) {\r\n      this._selectedElement.current.scrollIntoView(false);\r\n    }\r\n  }\r\n\r\n  private _renderSuggestions(): JSX.Element | null {\r\n    const {\r\n      onRenderSuggestion,\r\n      removeSuggestionAriaLabel,\r\n      suggestionsItemClassName,\r\n      resultsMaximumNumber,\r\n      showRemoveButtons,\r\n      suggestionsContainerAriaLabel,\r\n      suggestionsListId\r\n    } = this.props;\r\n\r\n    let { suggestions } = this.props;\r\n\r\n    const TypedSuggestionsItem = this.SuggestionsItemOfProperType;\r\n\r\n    // TODO:\r\n    // Move this styled component in a separate file and make it available to the public API.\r\n    // This should be done after rewriting pickers to use a composition pattern instead of inheritance.\r\n    const StyledTypedSuggestionsItem = styled<ISuggestionItemProps<T>, ISuggestionsItemStyleProps, ISuggestionsItemStyles>(\r\n      TypedSuggestionsItem,\r\n      suggestionsItemStyles,\r\n      undefined,\r\n      {\r\n        scope: 'SuggestionItem'\r\n      }\r\n    );\r\n\r\n    let selectedIndex = -1;\r\n    suggestions.some((element, index) => {\r\n      if (element.selected) {\r\n        selectedIndex = index;\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    if (resultsMaximumNumber) {\r\n      suggestions =\r\n        selectedIndex >= resultsMaximumNumber\r\n          ? suggestions.slice(selectedIndex - resultsMaximumNumber + 1, selectedIndex + 1)\r\n          : suggestions.slice(0, resultsMaximumNumber);\r\n    }\r\n\r\n    if (suggestions.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={this._classNames.suggestionsContainer}\r\n        id={suggestionsListId}\r\n        role=\"listbox\"\r\n        aria-label={suggestionsContainerAriaLabel}\r\n      >\r\n        {suggestions.map((suggestion, index) => (\r\n          <div\r\n            ref={suggestion.selected ? this._selectedElement : ''}\r\n            // tslint:disable-next-line:no-string-literal\r\n            key={(suggestion.item as any)['key'] ? (suggestion.item as any)['key'] : index}\r\n            id={'sug-' + index}\r\n            aria-selected={suggestion.selected}\r\n            role=\"option\"\r\n            aria-label={suggestion.ariaLabel}\r\n          >\r\n            <StyledTypedSuggestionsItem\r\n              suggestionModel={suggestion}\r\n              RenderSuggestion={onRenderSuggestion as any}\r\n              onClick={this._onClickTypedSuggestionsItem(suggestion.item, index)}\r\n              className={suggestionsItemClassName}\r\n              showRemoveButton={showRemoveButtons}\r\n              removeButtonAriaLabel={removeSuggestionAriaLabel}\r\n              onRemoveItem={this._onRemoveTypedSuggestionsItem(suggestion.item, index)}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _getMoreResults = (): void => {\r\n    if (this.props.onGetMoreResults) {\r\n      this.props.onGetMoreResults();\r\n    }\r\n  };\r\n\r\n  private _forceResolve = (): void => {\r\n    if (this.props.createGenericItem) {\r\n      this.props.createGenericItem();\r\n    }\r\n  };\r\n\r\n  private _shouldShowForceResolve = (): boolean => {\r\n    return this.props.showForceResolve ? this.props.showForceResolve() : false;\r\n  };\r\n\r\n  private _onClickTypedSuggestionsItem = (item: T, index: number): ((ev: React.MouseEvent<HTMLElement>) => void) => {\r\n    return (ev: React.MouseEvent<HTMLElement>): void => {\r\n      this.props.onSuggestionClick(ev, item, index);\r\n    };\r\n  };\r\n\r\n  private _refocusOnSuggestions = (keyCode: number): void => {\r\n    if (typeof this.props.refocusSuggestions === 'function') {\r\n      this.props.refocusSuggestions(keyCode);\r\n    }\r\n  };\r\n\r\n  private _onRemoveTypedSuggestionsItem = (item: T, index: number): ((ev: React.MouseEvent<HTMLElement>) => void) => {\r\n    return (ev: React.MouseEvent<HTMLElement>): void => {\r\n      const onSuggestionRemove = this.props.onSuggestionRemove!;\r\n      onSuggestionRemove(ev, item, index);\r\n      ev.stopPropagation();\r\n    };\r\n  };\r\n}\r\n"]}