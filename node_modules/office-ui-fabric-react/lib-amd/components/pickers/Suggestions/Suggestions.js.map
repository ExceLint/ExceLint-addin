{"version":3,"file":"Suggestions.js","sourceRoot":"../src/","sources":["components/pickers/Suggestions/Suggestions.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport {\n  initializeComponentRef,\n  KeyCodes,\n  classNamesFunction,\n  IStyleFunctionOrObject,\n  css,\n  styled,\n} from '../../../Utilities';\nimport { IProcessedStyleSet } from '../../../Styling';\nimport { CommandButton, IButton } from '../../../Button';\nimport { Spinner, ISpinnerStyleProps, ISpinnerStyles } from '../../../Spinner';\nimport { Announced } from '../../../Announced';\nimport {\n  ISuggestionsProps,\n  SuggestionActionType,\n  ISuggestionsStyleProps,\n  ISuggestionsStyles,\n} from './Suggestions.types';\nimport { SuggestionsItem } from './SuggestionsItem';\nimport { getStyles as suggestionsItemStyles } from './SuggestionsItem.styles';\nimport { ISuggestionItemProps, ISuggestionsItemStyleProps, ISuggestionsItemStyles } from './SuggestionsItem.types';\n\nimport * as stylesImport from './Suggestions.scss';\nconst legacyStyles: any = stylesImport;\n\nconst getClassNames = classNamesFunction<ISuggestionsStyleProps, ISuggestionsStyles>();\n\nexport interface ISuggestionsState {\n  selectedActionType: SuggestionActionType;\n}\n\nconst StyledSuggestionsItem = styled<ISuggestionItemProps<any>, ISuggestionsItemStyleProps, ISuggestionsItemStyles>(\n  SuggestionsItem,\n  suggestionsItemStyles,\n  undefined,\n  { scope: 'SuggestionItem' },\n);\n\n/**\n * {@docCategory Pickers}\n */\nexport class Suggestions<T> extends React.Component<ISuggestionsProps<T>, ISuggestionsState> {\n  protected _forceResolveButton = React.createRef<IButton>();\n  protected _searchForMoreButton = React.createRef<IButton>();\n  protected _selectedElement = React.createRef<HTMLDivElement>();\n  private activeSelectedElement: HTMLDivElement | null;\n  private _classNames: Partial<IProcessedStyleSet<ISuggestionsStyles>>;\n\n  constructor(suggestionsProps: ISuggestionsProps<T>) {\n    super(suggestionsProps);\n\n    initializeComponentRef(this);\n\n    this.state = {\n      selectedActionType: SuggestionActionType.none,\n    };\n  }\n\n  public componentDidMount(): void {\n    this.scrollSelected();\n    this.activeSelectedElement = this._selectedElement ? this._selectedElement.current : null;\n  }\n\n  public componentDidUpdate(): void {\n    // Only scroll to selected element if the selected element has changed. Otherwise do nothing.\n    // This prevents some odd behavior where scrolling the active element out of view and clicking on a selected element\n    // will trigger a focus event and not give the clicked element the click.\n    if (this._selectedElement.current && this.activeSelectedElement !== this._selectedElement.current) {\n      this.scrollSelected();\n      this.activeSelectedElement = this._selectedElement.current;\n    }\n  }\n\n  public render(): JSX.Element {\n    const {\n      forceResolveText,\n      mostRecentlyUsedHeaderText,\n      searchForMoreText,\n      className,\n      moreSuggestionsAvailable,\n      noResultsFoundText,\n      suggestions,\n      isLoading,\n      isSearching,\n      loadingText,\n      onRenderNoResultFound,\n      searchingText,\n      isMostRecentlyUsedVisible,\n      resultsMaximumNumber,\n      resultsFooterFull,\n      resultsFooter,\n      isResultsFooterVisible = true,\n      suggestionsHeaderText,\n      suggestionsClassName,\n      theme,\n      styles,\n      suggestionsListId,\n    } = this.props;\n\n    // TODO\n    // Clean this up by leaving only the first part after removing support for SASS.\n    // Currently we can not remove the SASS styles from Suggestions class because it\n    // might be used by consumers separately from pickers extending from BasePicker\n    // and have not used the new 'styles' prop. Because it's expecting a type parameter,\n    // we can not use the 'styled' function without adding some helpers which can break\n    // downstream consumers who did not use the new helpers.\n    // We check for 'styles' prop which is going to be injected by the 'styled' HOC\n    // in BasePicker when the typed Suggestions class is ready to be rendered. If the check\n    // passes we can use the CSS-in-JS styles. If the check fails (ex: custom picker),\n    // then we just use the old SASS styles instead.\n    this._classNames = styles\n      ? getClassNames(styles, {\n          theme: theme!,\n          className,\n          suggestionsClassName,\n          forceResolveButtonSelected: this.state.selectedActionType === SuggestionActionType.forceResolve,\n          searchForMoreButtonSelected: this.state.selectedActionType === SuggestionActionType.searchMore,\n        })\n      : {\n          root: css('ms-Suggestions', className, legacyStyles.root),\n          title: css('ms-Suggestions-title', legacyStyles.suggestionsTitle),\n          searchForMoreButton: css('ms-SearchMore-button', legacyStyles.actionButton, {\n            ['is-selected ' + legacyStyles.buttonSelected]:\n              this.state.selectedActionType === SuggestionActionType.searchMore,\n          }),\n          forceResolveButton: css('ms-forceResolve-button', legacyStyles.actionButton, {\n            ['is-selected ' + legacyStyles.buttonSelected]:\n              this.state.selectedActionType === SuggestionActionType.forceResolve,\n          }),\n          suggestionsAvailable: css('ms-Suggestions-suggestionsAvailable', legacyStyles.suggestionsAvailable),\n          suggestionsContainer: css(\n            'ms-Suggestions-container',\n            legacyStyles.suggestionsContainer,\n            suggestionsClassName,\n          ),\n          noSuggestions: css('ms-Suggestions-none', legacyStyles.suggestionsNone),\n        };\n\n    const spinnerStyles = this._classNames.subComponentStyles\n      ? (this._classNames.subComponentStyles.spinner as IStyleFunctionOrObject<ISpinnerStyleProps, ISpinnerStyles>)\n      : undefined;\n\n    // TODO: cleanup after refactor of pickers to composition pattern and remove SASS support.\n    const spinnerClassNameOrStyles = styles\n      ? { styles: spinnerStyles }\n      : { className: css('ms-Suggestions-spinner', legacyStyles.suggestionsSpinner) };\n\n    const noResults = () => {\n      return noResultsFoundText ? <div className={this._classNames.noSuggestions}>{noResultsFoundText}</div> : null;\n    };\n\n    // MostRecently Used text should supercede the header text if it's there and available.\n    let headerText: string | undefined = suggestionsHeaderText;\n    if (isMostRecentlyUsedVisible && mostRecentlyUsedHeaderText) {\n      headerText = mostRecentlyUsedHeaderText;\n    }\n\n    let footerTitle: ((props: ISuggestionsProps<T>) => JSX.Element) | undefined = undefined;\n    if (isResultsFooterVisible) {\n      footerTitle = suggestions.length >= (resultsMaximumNumber as number) ? resultsFooterFull : resultsFooter;\n    }\n\n    const hasNoSuggestions = (!suggestions || !suggestions.length) && !isLoading;\n    const divProps: React.HtmlHTMLAttributes<HTMLDivElement> =\n      hasNoSuggestions || isLoading ? { role: 'dialog', id: suggestionsListId } : {};\n\n    const forceResolveId =\n      this.state.selectedActionType === SuggestionActionType.forceResolve ? 'sug-selectedAction' : undefined;\n    const searchForMoreId =\n      this.state.selectedActionType === SuggestionActionType.searchMore ? 'sug-selectedAction' : undefined;\n\n    return (\n      <div className={this._classNames.root} {...divProps}>\n        <Announced message={this._getAlertText()} aria-live=\"polite\" />\n\n        {headerText ? <div className={this._classNames.title}>{headerText}</div> : null}\n        {forceResolveText && this._shouldShowForceResolve() && (\n          <CommandButton\n            componentRef={this._forceResolveButton}\n            className={this._classNames.forceResolveButton}\n            id={forceResolveId}\n            onClick={this._forceResolve}\n            data-automationid={'sug-forceResolve'}\n          >\n            {forceResolveText}\n          </CommandButton>\n        )}\n        {isLoading && <Spinner {...spinnerClassNameOrStyles} label={loadingText} />}\n        {hasNoSuggestions\n          ? onRenderNoResultFound\n            ? onRenderNoResultFound(undefined, noResults)\n            : noResults()\n          : this._renderSuggestions()}\n        {searchForMoreText && moreSuggestionsAvailable && (\n          <CommandButton\n            componentRef={this._searchForMoreButton}\n            className={this._classNames.searchForMoreButton}\n            iconProps={{ iconName: 'Search' }}\n            id={searchForMoreId}\n            onClick={this._getMoreResults}\n            data-automationid={'sug-searchForMore'}\n          >\n            {searchForMoreText}\n          </CommandButton>\n        )}\n        {isSearching ? <Spinner {...spinnerClassNameOrStyles} label={searchingText} /> : null}\n        {footerTitle && !moreSuggestionsAvailable && !isMostRecentlyUsedVisible && !isSearching ? (\n          <div className={this._classNames.title}>{footerTitle(this.props)}</div>\n        ) : null}\n      </div>\n    );\n  }\n\n  /**\n   * Returns true if the event was handled, false otherwise\n   */\n  public tryHandleKeyDown = (keyCode: number, currentSuggestionIndex: number): boolean => {\n    let isEventHandled = false;\n    let newSelectedActionType = null;\n    const currentSelectedAction = this.state.selectedActionType;\n    const suggestionLength = this.props.suggestions.length;\n    if (keyCode === KeyCodes.down) {\n      switch (currentSelectedAction) {\n        case SuggestionActionType.forceResolve:\n          if (suggestionLength > 0) {\n            this._refocusOnSuggestions(keyCode);\n            newSelectedActionType = SuggestionActionType.none;\n          } else if (this._searchForMoreButton.current) {\n            newSelectedActionType = SuggestionActionType.searchMore;\n          } else {\n            newSelectedActionType = SuggestionActionType.forceResolve;\n          }\n          break;\n        case SuggestionActionType.searchMore:\n          if (this._forceResolveButton.current) {\n            newSelectedActionType = SuggestionActionType.forceResolve;\n          } else if (suggestionLength > 0) {\n            this._refocusOnSuggestions(keyCode);\n            newSelectedActionType = SuggestionActionType.none;\n          } else {\n            newSelectedActionType = SuggestionActionType.searchMore;\n          }\n          break;\n        case SuggestionActionType.none:\n          if (currentSuggestionIndex === -1 && this._forceResolveButton.current) {\n            newSelectedActionType = SuggestionActionType.forceResolve;\n          }\n          break;\n      }\n    } else if (keyCode === KeyCodes.up) {\n      switch (currentSelectedAction) {\n        case SuggestionActionType.forceResolve:\n          if (this._searchForMoreButton.current) {\n            newSelectedActionType = SuggestionActionType.searchMore;\n          } else if (suggestionLength > 0) {\n            this._refocusOnSuggestions(keyCode);\n            newSelectedActionType = SuggestionActionType.none;\n          }\n          break;\n        case SuggestionActionType.searchMore:\n          if (suggestionLength > 0) {\n            this._refocusOnSuggestions(keyCode);\n            newSelectedActionType = SuggestionActionType.none;\n          } else if (this._forceResolveButton.current) {\n            newSelectedActionType = SuggestionActionType.forceResolve;\n          }\n          break;\n        case SuggestionActionType.none:\n          if (currentSuggestionIndex === -1 && this._searchForMoreButton.current) {\n            newSelectedActionType = SuggestionActionType.searchMore;\n          }\n          break;\n      }\n    }\n\n    if (newSelectedActionType !== null) {\n      this.setState({ selectedActionType: newSelectedActionType });\n      isEventHandled = true;\n    }\n\n    return isEventHandled;\n  };\n\n  public hasSuggestedAction(): boolean {\n    return !!this._searchForMoreButton.current || !!this._forceResolveButton.current;\n  }\n\n  public hasSuggestedActionSelected(): boolean {\n    return this.state.selectedActionType !== SuggestionActionType.none;\n  }\n\n  public executeSelectedAction(): void {\n    switch (this.state.selectedActionType) {\n      case SuggestionActionType.forceResolve:\n        this._forceResolve();\n        break;\n      case SuggestionActionType.searchMore:\n        this._getMoreResults();\n        break;\n    }\n  }\n\n  public focusAboveSuggestions(): void {\n    if (this._forceResolveButton.current) {\n      this.setState({ selectedActionType: SuggestionActionType.forceResolve });\n    } else if (this._searchForMoreButton.current) {\n      this.setState({ selectedActionType: SuggestionActionType.searchMore });\n    }\n  }\n\n  public focusBelowSuggestions(): void {\n    if (this._searchForMoreButton.current) {\n      this.setState({ selectedActionType: SuggestionActionType.searchMore });\n    } else if (this._forceResolveButton.current) {\n      this.setState({ selectedActionType: SuggestionActionType.forceResolve });\n    }\n  }\n\n  public focusSearchForMoreButton(): void {\n    if (this._searchForMoreButton.current) {\n      this._searchForMoreButton.current.focus();\n    }\n  }\n\n  // TODO get the element to scroll into view properly regardless of direction.\n  public scrollSelected(): void {\n    if (this._selectedElement.current && this._selectedElement.current.scrollIntoView !== undefined) {\n      this._selectedElement.current.scrollIntoView(false);\n    }\n  }\n\n  private _getAlertText = () => {\n    const { isLoading, isSearching, suggestions, suggestionsAvailableAlertText, noResultsFoundText } = this.props;\n    if (!isLoading && !isSearching) {\n      if (suggestions.length > 0) {\n        return suggestionsAvailableAlertText || '';\n      }\n      if (noResultsFoundText) {\n        return noResultsFoundText;\n      }\n    }\n    return '';\n  };\n\n  private _renderSuggestions(): JSX.Element | null {\n    const {\n      onRenderSuggestion,\n      removeSuggestionAriaLabel,\n      suggestionsItemClassName,\n      resultsMaximumNumber,\n      showRemoveButtons,\n      suggestionsContainerAriaLabel,\n      suggestionsListId,\n    } = this.props;\n\n    let { suggestions } = this.props;\n\n    const StyledTypedSuggestionsItem: React.FunctionComponent<ISuggestionItemProps<T>> = StyledSuggestionsItem;\n\n    let selectedIndex = -1;\n    suggestions.some((element, index) => {\n      if (element.selected) {\n        selectedIndex = index;\n        return true;\n      }\n      return false;\n    });\n\n    if (resultsMaximumNumber) {\n      suggestions =\n        selectedIndex >= resultsMaximumNumber\n          ? suggestions.slice(selectedIndex - resultsMaximumNumber + 1, selectedIndex + 1)\n          : suggestions.slice(0, resultsMaximumNumber);\n    }\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return (\n      <div\n        className={this._classNames.suggestionsContainer}\n        id={suggestionsListId}\n        role=\"listbox\"\n        aria-label={suggestionsContainerAriaLabel}\n      >\n        {suggestions.map((suggestion, index) => (\n          <div\n            ref={suggestion.selected ? this._selectedElement : undefined}\n            key={(suggestion.item as any).key ? (suggestion.item as any).key : index}\n          >\n            <StyledTypedSuggestionsItem\n              suggestionModel={suggestion}\n              RenderSuggestion={onRenderSuggestion}\n              onClick={this._onClickTypedSuggestionsItem(suggestion.item, index)}\n              className={suggestionsItemClassName}\n              showRemoveButton={showRemoveButtons}\n              removeButtonAriaLabel={removeSuggestionAriaLabel}\n              onRemoveItem={this._onRemoveTypedSuggestionsItem(suggestion.item, index)}\n              id={'sug-' + index}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  private _getMoreResults = (): void => {\n    if (this.props.onGetMoreResults) {\n      this.props.onGetMoreResults();\n    }\n  };\n\n  private _forceResolve = (): void => {\n    if (this.props.createGenericItem) {\n      this.props.createGenericItem();\n    }\n  };\n\n  private _shouldShowForceResolve = (): boolean => {\n    return this.props.showForceResolve ? this.props.showForceResolve() : false;\n  };\n\n  private _onClickTypedSuggestionsItem = (item: T, index: number): ((ev: React.MouseEvent<HTMLElement>) => void) => {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      this.props.onSuggestionClick(ev, item, index);\n    };\n  };\n\n  private _refocusOnSuggestions = (keyCode: number): void => {\n    if (typeof this.props.refocusSuggestions === 'function') {\n      this.props.refocusSuggestions(keyCode);\n    }\n  };\n\n  private _onRemoveTypedSuggestionsItem = (item: T, index: number): ((ev: React.MouseEvent<HTMLElement>) => void) => {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      const onSuggestionRemove = this.props.onSuggestionRemove!;\n      onSuggestionRemove(ev, item, index);\n      ev.stopPropagation();\n    };\n  };\n}\n"]}