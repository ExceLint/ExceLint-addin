{"version":3,"file":"PeoplePicker.js","sourceRoot":"../src/","sources":["components/pickers/PeoplePicker/PeoplePicker.tsx"],"names":[],"mappings":";;;IAoBA;QAAsC,4CAA6C;QAAnF;;QAAqF,CAAC;QAAD,uBAAC;IAAD,CAAC,AAAtF,CAAsC,uBAAU,GAAsC;IAAzE,4CAAgB;IAE7B;QAA4C,kDAAsD;QAAlG;;QAAoG,CAAC;QAAD,6BAAC;IAAD,CAAC,AAArG,CAA4C,gCAAmB,GAAsC;IAAxF,wDAAsB;IAEnC;;OAEG;IACH;QAA4C,kDAAgB;QAA5D;;QASA,CAAC;QARC,4CAA4C;QAC9B,mCAAY,GAAG;YAC3B,YAAY,EAAE,UAAC,KAAqC,IAAK,OAAA,oBAAC,mCAAgB,uBAAK,KAAK,EAAI,EAA/B,CAA+B;YACxF,uBAAuB,EAAE,UAAC,YAA2B,EAAE,gBAA8C,IAAK,OAAA,CACxG,oBAAC,uDAA0B,IAAC,YAAY,EAAE,YAAY,EAAE,gBAAgB,EAAE,gBAAgB,GAAI,CAC/F,EAFyG,CAEzG;YACD,iBAAiB,EAAE,iBAAiB;SACrC,CAAC;QACJ,6BAAC;KAAA,AATD,CAA4C,gBAAgB,GAS3D;IATY,wDAAsB;IAWnC;;OAEG;IACH;QAA6C,mDAAgB;QAA7D;;QASA,CAAC;QARC,6CAA6C;QAC/B,oCAAY,GAAG;YAC3B,YAAY,EAAE,UAAC,KAAqC,IAAK,OAAA,oBAAC,mCAAgB,uBAAK,KAAK,EAAI,EAA/B,CAA+B;YACxF,uBAAuB,EAAE,UAAC,YAA2B,EAAE,gBAA8C,IAAK,OAAA,CACxG,oBAAC,uDAA0B,IAAC,YAAY,EAAE,YAAY,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,OAAO,EAAE,IAAI,GAAI,CAC9G,EAFyG,CAEzG;YACD,iBAAiB,EAAE,iBAAiB;SACrC,CAAC;QACJ,8BAAC;KAAA,AATD,CAA6C,gBAAgB,GAS5D;IATY,0DAAuB;IAWpC;;OAEG;IACH;QAA0C,gDAAsB;QAAhE;;QASA,CAAC;QARC,0CAA0C;QAC5B,iCAAY,GAAG;YAC3B,YAAY,EAAE,UAAC,KAAqC,IAAK,OAAA,oBAAC,mCAAgB,uBAAK,KAAK,EAAI,EAA/B,CAA+B;YACxF,uBAAuB,EAAE,UAAC,YAA2B,EAAE,gBAA8C,IAAK,OAAA,CACxG,oBAAC,uDAA0B,IAAC,YAAY,EAAE,YAAY,EAAE,gBAAgB,EAAE,gBAAgB,GAAI,CAC/F,EAFyG,CAEzG;YACD,iBAAiB,EAAE,iBAAiB;SACrC,CAAC;QACJ,2BAAC;KAAA,AATD,CAA0C,sBAAsB,GAS/D;IATY,oDAAoB;IAiBjC,2BAAkC,IAAY,EAAE,sBAAuC;QACrF,IAAM,gBAAgB,GAAG;YACvB,GAAG,EAAE,IAAI;YACT,WAAW,EAAE,IAAI;YACjB,aAAa,EAAE,GAAG;YAClB,eAAe,EAAE,sBAAsB;SACxC,CAAC;QAEF,IAAI,sBAAsB,KAAK,kCAAe,CAAC,OAAO,EAAE;YACtD,gBAAgB,CAAC,aAAa,GAAG,uBAAW,CAAC,IAAI,EAAE,kBAAM,EAAE,CAAC,CAAC;SAC9D;QAED,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAbD,8CAaC;IAEY,QAAA,kBAAkB,GAAG,kBAAM,CACtC,sBAAsB,EACtB,6BAAS,EACT,SAAS,EACT;QACE,KAAK,EAAE,oBAAoB;KAC5B,CACF,CAAC;IAEW,QAAA,mBAAmB,GAAG,kBAAM,CACvC,uBAAuB,EACvB,6BAAS,EACT,SAAS,EACT;QACE,KAAK,EAAE,qBAAqB;KAC7B,CACF,CAAC;IAEW,QAAA,gBAAgB,GAAG,kBAAM,CACpC,oBAAoB,EACpB,6BAAS,EACT,SAAS,EACT;QACE,KAAK,EAAE,sBAAsB;KAC9B,CACF,CAAC","sourcesContent":["import * as React from 'react';\r\n\r\nimport { getRTL, getInitials, styled } from '../../../Utilities';\r\nimport { BasePicker, BasePickerListBelow } from '../BasePicker';\r\nimport {\r\n  IBasePickerProps,\r\n  IBasePickerSuggestionsProps,\r\n  ValidationState,\r\n  IBasePickerStyleProps,\r\n  IBasePickerStyles\r\n} from '../BasePicker.types';\r\nimport { PeoplePickerItem } from './PeoplePickerItems/PeoplePickerItem';\r\nimport { IPersonaProps } from '../../../Persona';\r\nimport { PeoplePickerItemSuggestion } from './PeoplePickerItems/PeoplePickerItemSuggestion';\r\nimport { IPeoplePickerItemSelectedProps } from './PeoplePickerItems/PeoplePickerItem.types';\r\nimport { getStyles } from '../BasePicker.styles';\r\n\r\n/** PeoplePicker props interface which renders Personas as items. */\r\nexport interface IPeoplePickerProps extends IBasePickerProps<IPersonaProps> {}\r\n\r\nexport class BasePeoplePicker extends BasePicker<IPersonaProps, IPeoplePickerProps> {}\r\n\r\nexport class MemberListPeoplePicker extends BasePickerListBelow<IPersonaProps, IPeoplePickerProps> {}\r\n\r\n/**\r\n * Standard People Picker.\r\n */\r\nexport class NormalPeoplePickerBase extends BasePeoplePicker {\r\n  /** Default props for NormalPeoplePicker. */\r\n  public static defaultProps = {\r\n    onRenderItem: (props: IPeoplePickerItemSelectedProps) => <PeoplePickerItem {...props} />,\r\n    onRenderSuggestionsItem: (personaProps: IPersonaProps, suggestionsProps?: IBasePickerSuggestionsProps) => (\r\n      <PeoplePickerItemSuggestion personaProps={personaProps} suggestionsProps={suggestionsProps} />\r\n    ),\r\n    createGenericItem: createGenericItem\r\n  };\r\n}\r\n\r\n/**\r\n * Compact layout. It uses personas without secondary text when displaying search results.\r\n */\r\nexport class CompactPeoplePickerBase extends BasePeoplePicker {\r\n  /** Default props for CompactPeoplePicker. */\r\n  public static defaultProps = {\r\n    onRenderItem: (props: IPeoplePickerItemSelectedProps) => <PeoplePickerItem {...props} />,\r\n    onRenderSuggestionsItem: (personaProps: IPersonaProps, suggestionsProps?: IBasePickerSuggestionsProps) => (\r\n      <PeoplePickerItemSuggestion personaProps={personaProps} suggestionsProps={suggestionsProps} compact={true} />\r\n    ),\r\n    createGenericItem: createGenericItem\r\n  };\r\n}\r\n\r\n/**\r\n * MemberList layout. The selected people show up below the search box.\r\n */\r\nexport class ListPeoplePickerBase extends MemberListPeoplePicker {\r\n  /** Default props for ListPeoplePicker. */\r\n  public static defaultProps = {\r\n    onRenderItem: (props: IPeoplePickerItemSelectedProps) => <PeoplePickerItem {...props} />,\r\n    onRenderSuggestionsItem: (personaProps: IPersonaProps, suggestionsProps?: IBasePickerSuggestionsProps) => (\r\n      <PeoplePickerItemSuggestion personaProps={personaProps} suggestionsProps={suggestionsProps} />\r\n    ),\r\n    createGenericItem: createGenericItem\r\n  };\r\n}\r\n\r\nexport interface IGenericItem {\r\n  primaryText: string;\r\n  imageInitials: string;\r\n  ValidationState: ValidationState;\r\n}\r\n\r\nexport function createGenericItem(name: string, currentValidationState: ValidationState): IGenericItem & { key: React.Key } {\r\n  const personaToConvert = {\r\n    key: name,\r\n    primaryText: name,\r\n    imageInitials: '!',\r\n    ValidationState: currentValidationState\r\n  };\r\n\r\n  if (currentValidationState !== ValidationState.warning) {\r\n    personaToConvert.imageInitials = getInitials(name, getRTL());\r\n  }\r\n\r\n  return personaToConvert;\r\n}\r\n\r\nexport const NormalPeoplePicker = styled<IPeoplePickerProps, IBasePickerStyleProps, IBasePickerStyles>(\r\n  NormalPeoplePickerBase,\r\n  getStyles,\r\n  undefined,\r\n  {\r\n    scope: 'NormalPeoplePicker'\r\n  }\r\n);\r\n\r\nexport const CompactPeoplePicker = styled<IPeoplePickerProps, IBasePickerStyleProps, IBasePickerStyles>(\r\n  CompactPeoplePickerBase,\r\n  getStyles,\r\n  undefined,\r\n  {\r\n    scope: 'CompactPeoplePicker'\r\n  }\r\n);\r\n\r\nexport const ListPeoplePicker = styled<IPeoplePickerProps, IBasePickerStyleProps, IBasePickerStyles>(\r\n  ListPeoplePickerBase,\r\n  getStyles,\r\n  undefined,\r\n  {\r\n    scope: 'ListPeoplePickerBase'\r\n  }\r\n);\r\n"]}