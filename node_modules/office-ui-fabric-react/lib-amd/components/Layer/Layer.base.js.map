{"version":3,"file":"Layer.base.js","sourceRoot":"../src/","sources":["components/Layer/Layer.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { Fabric } from '../../Fabric';\nimport { ILayerProps, ILayerStyleProps, ILayerStyles } from './Layer.types';\nimport {\n  classNamesFunction,\n  customizable,\n  getDocument,\n  setPortalAttribute,\n  setVirtualParent,\n  warnDeprecations,\n} from '../../Utilities';\nimport { registerLayer, getDefaultTarget, unregisterLayer } from './Layer.notification';\n\nexport type ILayerBaseState = {\n  hostId?: string;\n  layerElement?: HTMLElement;\n};\n\nconst getClassNames = classNamesFunction<ILayerStyleProps, ILayerStyles>();\n\n@customizable('Layer', ['theme', 'hostId'])\nexport class LayerBase extends React.Component<ILayerProps, ILayerBaseState> {\n  public static defaultProps: ILayerProps = {\n    onLayerDidMount: () => undefined,\n    onLayerWillUnmount: () => undefined,\n  };\n\n  private _rootRef = React.createRef<HTMLSpanElement>();\n\n  constructor(props: ILayerProps) {\n    super(props);\n\n    this.state = {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations('Layer', props, {\n        onLayerMounted: 'onLayerDidMount',\n      });\n    }\n  }\n\n  public componentDidMount(): void {\n    const { hostId } = this.props;\n\n    this._createLayerElement();\n\n    if (hostId) {\n      registerLayer(hostId, this._createLayerElement);\n    }\n  }\n\n  public render(): React.ReactNode {\n    const { layerElement } = this.state;\n    const classNames = this._getClassNames();\n    const { eventBubblingEnabled } = this.props;\n\n    return (\n      <span className=\"ms-layer\" ref={this._rootRef}>\n        {layerElement &&\n          ReactDOM.createPortal(\n            <Fabric {...(!eventBubblingEnabled && _getFilteredEvents())} className={classNames.content}>\n              {this.props.children}\n            </Fabric>,\n            layerElement,\n          )}\n      </span>\n    );\n  }\n\n  public componentDidUpdate(): void {\n    if (this.props.hostId !== this.state.hostId) {\n      this._createLayerElement();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    const { hostId } = this.props;\n\n    this._removeLayerElement();\n    if (hostId) {\n      unregisterLayer(hostId, this._createLayerElement);\n    }\n  }\n\n  private _createLayerElement = () => {\n    const { hostId } = this.props;\n\n    const doc = getDocument(this._rootRef.current);\n    const host = this._getHost();\n\n    if (!doc || !host) {\n      return;\n    }\n\n    // If one was already existing, remove.\n    this._removeLayerElement();\n\n    const layerElement = doc.createElement('div');\n    const classNames = this._getClassNames();\n\n    layerElement.className = classNames.root!;\n    setPortalAttribute(layerElement);\n    setVirtualParent(layerElement, this._rootRef.current!);\n\n    this.props.insertFirst ? host.insertBefore(layerElement, host.firstChild) : host.appendChild(layerElement);\n\n    this.setState(\n      {\n        hostId,\n        layerElement,\n      },\n      () => {\n        // eslint-disable-next-line deprecation/deprecation\n        const { onLayerDidMount, onLayerMounted } = this.props;\n        if (onLayerMounted) {\n          onLayerMounted();\n        }\n\n        if (onLayerDidMount) {\n          onLayerDidMount();\n        }\n      },\n    );\n  };\n\n  private _removeLayerElement(): void {\n    const { onLayerWillUnmount } = this.props;\n    const { layerElement } = this.state;\n\n    if (layerElement) {\n      setVirtualParent(layerElement, null);\n    }\n\n    if (onLayerWillUnmount) {\n      onLayerWillUnmount();\n    }\n\n    if (layerElement && layerElement.parentNode) {\n      const parentNode = layerElement.parentNode;\n      if (parentNode) {\n        parentNode.removeChild(layerElement);\n      }\n    }\n  }\n\n  private _getClassNames() {\n    const { className, styles, theme } = this.props;\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      isNotHost: !this.props.hostId,\n    });\n\n    return classNames;\n  }\n\n  private _getHost(): Node | undefined {\n    const { hostId } = this.props;\n    const doc = getDocument(this._rootRef.current);\n    if (!doc) {\n      return undefined;\n    }\n\n    if (hostId) {\n      return doc.getElementById(hostId) as Node;\n    } else {\n      const defaultHostSelector = getDefaultTarget();\n      return defaultHostSelector ? (doc.querySelector(defaultHostSelector) as Node) : doc.body;\n    }\n  }\n}\n\nconst _onFilterEvent = (ev: React.SyntheticEvent<HTMLElement>): void => {\n  // We should just be able to check ev.bubble here and only stop events that are bubbling up. However, even though\n  // mouseenter and mouseleave do NOT bubble up, they are showing up as bubbling. Therefore we stop events based on\n  // event name rather than ev.bubble.\n  if (\n    ev.eventPhase === Event.BUBBLING_PHASE &&\n    ev.type !== 'mouseenter' &&\n    ev.type !== 'mouseleave' &&\n    ev.type !== 'touchstart' &&\n    ev.type !== 'touchend'\n  ) {\n    ev.stopPropagation();\n  }\n};\n\nlet _filteredEventProps: { [key: string]: (ev: React.SyntheticEvent<HTMLElement, Event>) => void };\n\nfunction _getFilteredEvents() {\n  if (!_filteredEventProps) {\n    _filteredEventProps = {} as any;\n\n    [\n      'onClick',\n      'onContextMenu',\n      'onDoubleClick',\n      'onDrag',\n      'onDragEnd',\n      'onDragEnter',\n      'onDragExit',\n      'onDragLeave',\n      'onDragOver',\n      'onDragStart',\n      'onDrop',\n      'onMouseDown',\n      'onMouseEnter',\n      'onMouseLeave',\n      'onMouseMove',\n      'onMouseOver',\n      'onMouseOut',\n      'onMouseUp',\n      'onTouchMove',\n      'onTouchStart',\n      'onTouchCancel',\n      'onTouchEnd',\n      'onKeyDown',\n      'onKeyPress',\n      'onKeyUp',\n      'onFocus',\n      'onBlur',\n      'onChange',\n      'onInput',\n      'onInvalid',\n      'onSubmit',\n    ].forEach(name => (_filteredEventProps[name] = _onFilterEvent));\n  }\n\n  return _filteredEventProps;\n}\n"]}