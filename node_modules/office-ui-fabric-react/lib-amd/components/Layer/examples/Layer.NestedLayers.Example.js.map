{"version":3,"file":"Layer.NestedLayers.Example.js","sourceRoot":"../src/","sources":["components/Layer/examples/Layer.NestedLayers.Example.tsx"],"names":[],"mappings":";;;IAUA;QAA8C,oDAAmD;QAAjG;YAAA,qEA2DC;YA1DQ,WAAK,GAAG;gBACb,UAAU,EAAE,IAAI;gBAChB,SAAS,EAAE,KAAK;aACjB,CAAC;YAwCM,iBAAW,GAAG;gBACpB,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;YACvC,CAAC,CAAC;YAEM,oBAAc,GAAG;gBACvB,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;YACtC,CAAC,CAAC;YAEM,mBAAa,GAAG;gBACtB,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;YACtC,CAAC,CAAC;YAEM,kBAAY,GAAG;gBACrB,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;YACrC,CAAC,CAAC;;QACJ,CAAC;QArDQ,yCAAM,GAAb;YACE,OAAO,CACL;gBACE,oBAAC,sBAAa,IAAC,aAAa,EAAC,wBAAwB,EAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAC,YAAY,GAAG;gBACtG,oBAAC,aAAK,IACJ,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAC5B,IAAI,EAAE,iBAAS,CAAC,aAAa,EAC7B,SAAS,EAAE,IAAI,CAAC,aAAa,EAC7B,UAAU,EAAC,wFAAwF,EACnG,oBAAoB,EAAC,OAAO;oBAE5B,oBAAC,sBAAa,IAAC,aAAa,EAAC,yBAAyB,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,EAAC,aAAa,GAAG;oBACvG,oBAAC,eAAM,IACL,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EAC7B,SAAS,EAAE,IAAI,CAAC,cAAc,EAC9B,UAAU,EAAE,IAAI,EAChB,kBAAkB,EAAE;4BAClB,IAAI,EAAE,mBAAU,CAAC,MAAM;4BACvB,KAAK,EAAE,iHAAiH;4BACxH,OAAO,EAAE,kEAAkE;yBAC5E,EACD,UAAU,EAAE;4BACV,WAAW,EAAE,WAAW;4BACxB,cAAc,EAAE,aAAa;4BAC7B,UAAU,EAAE,KAAK;4BACjB,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;yBACpC;wBAED,oBAAC,qBAAY;4BACX,oBAAC,sBAAa,IAAC,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,EAAC,IAAI,GAAG;4BACzD,oBAAC,sBAAa,IAAC,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,EAAC,QAAQ,GAAG,CAChD,CACR,CACH,CACJ,CACP,CAAC;QACJ,CAAC;QAiBH,+BAAC;IAAD,CAAC,AA3DD,CAA8C,KAAK,CAAC,SAAS,GA2D5D;IA3DY,4DAAwB","sourcesContent":["import { DefaultButton, PrimaryButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Dialog, DialogFooter, DialogType } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\r\nimport * as React from 'react';\r\n\r\nexport interface ILayerNestedLayersExampleState {\r\n  hideDialog: boolean;\r\n  showPanel: boolean;\r\n}\r\n\r\nexport class LayerNestedLayersExample extends React.Component<{}, ILayerNestedLayersExampleState> {\r\n  public state = {\r\n    hideDialog: true,\r\n    showPanel: false\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <DefaultButton secondaryText=\"Opens the Sample Panel\" onClick={this._onShowPanel} text=\"Open Panel\" />\r\n        <Panel\r\n          isOpen={this.state.showPanel}\r\n          type={PanelType.smallFixedFar}\r\n          onDismiss={this._dismissPanel}\r\n          headerText=\"This panel makes use of Layer and FocusTrapZone. Focus should be trapped in the panel.\"\r\n          closeButtonAriaLabel=\"Close\"\r\n        >\r\n          <DefaultButton secondaryText=\"Opens the Sample Dialog\" onClick={this._showDialog} text=\"Open Dialog\" />\r\n          <Dialog\r\n            hidden={this.state.hideDialog}\r\n            onDismiss={this._dismissDialog}\r\n            isBlocking={true}\r\n            dialogContentProps={{\r\n              type: DialogType.normal,\r\n              title: 'This dialog uses Modal, which also makes use of Layer and FocusTrapZone. Focus should be trapped in the dialog.',\r\n              subText: \"Focus will move back to the panel if you press 'OK' or 'Cancel'.\"\r\n            }}\r\n            modalProps={{\r\n              titleAriaId: 'myLabelId',\r\n              subtitleAriaId: 'mySubTextId',\r\n              isBlocking: false,\r\n              styles: { main: { maxWidth: 450 } }\r\n            }}\r\n          >\r\n            <DialogFooter>\r\n              <PrimaryButton onClick={this._dismissDialog} text=\"OK\" />\r\n              <DefaultButton onClick={this._dismissDialog} text=\"Cancel\" />\r\n            </DialogFooter>\r\n          </Dialog>\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _showDialog = (): void => {\r\n    this.setState({ hideDialog: false });\r\n  };\r\n\r\n  private _dismissDialog = (): void => {\r\n    this.setState({ hideDialog: true });\r\n  };\r\n\r\n  private _dismissPanel = (): void => {\r\n    this.setState({ showPanel: false });\r\n  };\r\n\r\n  private _onShowPanel = (): void => {\r\n    this.setState({ showPanel: true });\r\n  };\r\n}\r\n"]}