{"version":3,"file":"Layer.Customized.Example.js","sourceRoot":"../src/","sources":["components/Layer/examples/Layer.Customized.Example.tsx"],"names":[],"mappings":";;;IAWA;QAA4C,kDAAiD;QAA7F;YAAA,qEAwEC;YAvEQ,WAAK,GAAiC;gBAC3C,SAAS,EAAE,KAAK;gBAChB,SAAS,EAAE,KAAK;aACjB,CAAC;YACF,2DAA2D;YAC3D,yFAAyF;YACjF,kBAAY,GAAW,iBAAK,CAAC,WAAW,CAAC,CAAC;YAgD1C,qBAAe,GAAG;gBACxB,KAAI,CAAC,QAAQ,CAAC;oBACZ,SAAS,EAAE,KAAK;iBACjB,CAAC,CAAC;YACL,CAAC,CAAC;YAEM,wBAAkB,GAAG,UAAC,KAAsD,EAAE,OAAiB;gBACrG,KAAI,CAAC,QAAQ,CAAC;oBACZ,SAAS,EAAE,CAAC,CAAC,OAAO;iBACrB,CAAC,CAAC;YACL,CAAC,CAAC;YAEM,wBAAkB,GAAG,UAAC,KAAsD,EAAE,OAAiB;gBACrG,KAAI,CAAC,QAAQ,CAAC;oBACZ,SAAS,EAAE,CAAC,CAAC,OAAO;iBACrB,CAAC,CAAC;YACL,CAAC,CAAC;;QACJ,CAAC;QA/DQ,uCAAM,GAAb;YACE,OAAO,CACL;gBACE;;oBACI,0CAAkB;;oBAAoD,4CAAiB;;oBACrE,4CAAiB;6DACnC;gBACJ,oBAAC,eAAM,IAAC,KAAK,EAAC,YAAY,EAAC,WAAW,QAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,kBAAkB,GAAI;gBAC3G,oBAAC,eAAM,IAAC,KAAK,EAAC,YAAY,EAAC,WAAW,QAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,kBAAkB,GAAI;gBAC3G,oBAAC,sBAAU,IACT,cAAc,EACZ,IAAI,CAAC,KAAK,CAAC,SAAS;wBAClB,CAAC,CAAC;4BACE,KAAK,EAAE;gCACL,MAAM,EAAE,IAAI,CAAC,YAAY;6BAC1B;yBACF;wBACH,CAAC,CAAC,EAAE,IAGP,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CACvB,oBAAC,aAAK,IACJ,MAAM,EAAE,IAAI,EACZ,cAAc,EAAE,IAAI,EACpB,UAAU,EAAC,MAAM,EACjB,kBAAkB,EAAE;wBAClB,2BAA2B,EAAE,IAAI;wBACjC,oBAAoB,EAAE,KAAK;qBAC5B,EACD,WAAW,EAAE,IAAI,CAAC,eAAe,GACjC,CACH,CACU;gBACb,oBAAC,iBAAS,IACR,EAAE,EAAE,IAAI,CAAC,YAAY,EACrB,KAAK,EAAE;wBACL,QAAQ,EAAE,UAAU;wBACpB,MAAM,EAAE,OAAO;wBACf,QAAQ,EAAE,QAAQ;wBAClB,MAAM,EAAE,gBAAgB;qBACzB,GACD,CACE,CACP,CAAC;QACJ,CAAC;QAmBH,6BAAC;IAAD,CAAC,AAxED,CAA4C,KAAK,CAAC,SAAS,GAwE1D;IAxEY,wDAAsB","sourcesContent":["import { Customizer, getId } from '@uifabric/utilities';\r\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\r\nimport { LayerHost } from 'office-ui-fabric-react/lib/Layer';\r\nimport { Panel } from 'office-ui-fabric-react/lib/Panel';\r\nimport * as React from 'react';\r\n\r\nexport interface ILayerCustomizedExampleState {\r\n  showPanel: boolean;\r\n  trapPanel: boolean;\r\n}\r\n\r\nexport class LayerCustomizedExample extends React.Component<{}, ILayerCustomizedExampleState> {\r\n  public state: ILayerCustomizedExampleState = {\r\n    showPanel: false,\r\n    trapPanel: false\r\n  };\r\n  // Use getId() to ensure that the ID is unique on the page.\r\n  // (It's also okay to use a plain string without getId() and manually ensure uniqueness.)\r\n  private _layerHostId: string = getId('layerHost');\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div>\r\n        <p>\r\n          A <code>Panel</code> is rendered, trapped in a specified container. Use <b>Show panel</b> to show/hide the panel (or click the X\r\n          to dismiss it). Use <b>Trap panel</b> to release the panel from its bounds.\r\n        </p>\r\n        <Toggle label=\"Show panel\" inlineLabel checked={this.state.showPanel} onChange={this._onShowPanelChange} />\r\n        <Toggle label=\"Trap panel\" inlineLabel checked={this.state.trapPanel} onChange={this._onTrapPanelChange} />\r\n        <Customizer\r\n          scopedSettings={\r\n            this.state.trapPanel\r\n              ? {\r\n                  Layer: {\r\n                    hostId: this._layerHostId\r\n                  }\r\n                }\r\n              : {}\r\n          }\r\n        >\r\n          {this.state.showPanel && (\r\n            <Panel\r\n              isOpen={true}\r\n              hasCloseButton={true}\r\n              headerText=\"Test\"\r\n              focusTrapZoneProps={{\r\n                isClickableOutsideFocusTrap: true,\r\n                forceFocusInsideTrap: false\r\n              }}\r\n              onDismissed={this._onDismissPanel}\r\n            />\r\n          )}\r\n        </Customizer>\r\n        <LayerHost\r\n          id={this._layerHostId}\r\n          style={{\r\n            position: 'relative',\r\n            height: '400px',\r\n            overflow: 'hidden',\r\n            border: '1px solid #ccc'\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onDismissPanel = (): void => {\r\n    this.setState({\r\n      showPanel: false\r\n    });\r\n  };\r\n\r\n  private _onShowPanelChange = (event: React.FormEvent<HTMLElement | HTMLInputElement>, checked?: boolean): void => {\r\n    this.setState({\r\n      showPanel: !!checked\r\n    });\r\n  };\r\n\r\n  private _onTrapPanelChange = (event: React.FormEvent<HTMLElement | HTMLInputElement>, checked?: boolean): void => {\r\n    this.setState({\r\n      trapPanel: !!checked\r\n    });\r\n  };\r\n}\r\n"]}