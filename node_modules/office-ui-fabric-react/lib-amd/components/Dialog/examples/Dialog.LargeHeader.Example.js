define(["require", "exports", "tslib", "react", "office-ui-fabric-react/lib/Dialog", "office-ui-fabric-react/lib/Button", "office-ui-fabric-react/lib/ChoiceGroup"], function (require, exports, tslib_1, React, Dialog_1, Button_1, ChoiceGroup_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DialogLargeHeaderExample = /** @class */ (function (_super) {
        tslib_1.__extends(DialogLargeHeaderExample, _super);
        function DialogLargeHeaderExample(props) {
            var _this = _super.call(this, props) || this;
            _this._showDialog = function () {
                _this.setState({ hideDialog: false });
            };
            _this._closeDialog = function () {
                _this.setState({ hideDialog: true });
            };
            _this.state = {
                hideDialog: true
            };
            return _this;
        }
        DialogLargeHeaderExample.prototype.render = function () {
            return (React.createElement("div", null,
                React.createElement(Button_1.DefaultButton, { secondaryText: "Opens the Sample Dialog", onClick: this._showDialog, text: "Open Dialog" }),
                React.createElement(Dialog_1.Dialog, { hidden: this.state.hideDialog, onDismiss: this._closeDialog, dialogContentProps: {
                        type: Dialog_1.DialogType.largeHeader,
                        title: 'All emails together',
                        subText: 'Your Inbox has changed. No longer does it include favorites, it is a singular destination for your emails.'
                    }, modalProps: {
                        isBlocking: false,
                        containerClassName: 'ms-dialogMainOverride'
                    } },
                    React.createElement(ChoiceGroup_1.ChoiceGroup, { options: [
                            {
                                key: 'A',
                                text: 'Option A'
                            },
                            {
                                key: 'B',
                                text: 'Option B',
                                checked: true
                            },
                            {
                                key: 'C',
                                text: 'Option C',
                                disabled: true
                            }
                        ], onChange: this._onChoiceChanged }),
                    React.createElement(Dialog_1.DialogFooter, null,
                        React.createElement(Button_1.PrimaryButton, { onClick: this._closeDialog, text: "Save" }),
                        React.createElement(Button_1.DefaultButton, { onClick: this._closeDialog, text: "Cancel" })))));
        };
        DialogLargeHeaderExample.prototype._onChoiceChanged = function () {
            console.log('Choice option change');
        };
        return DialogLargeHeaderExample;
    }(React.Component));
    exports.DialogLargeHeaderExample = DialogLargeHeaderExample;
});
//# sourceMappingURL=Dialog.LargeHeader.Example.js.map