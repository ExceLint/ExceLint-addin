{"version":3,"file":"Dialog.LargeHeader.Example.js","sourceRoot":"../src/","sources":["components/Dialog/examples/Dialog.LargeHeader.Example.tsx"],"names":[],"mappings":";;;IAKA;QAA8C,oDAK7C;QACC,kCAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAIb;YA+CO,iBAAW,GAAG;gBACpB,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;YACvC,CAAC,CAAC;YAEM,kBAAY,GAAG;gBACrB,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;YACtC,CAAC,CAAC;YAxDA,KAAI,CAAC,KAAK,GAAG;gBACX,UAAU,EAAE,IAAI;aACjB,CAAC;;QACJ,CAAC;QAEM,yCAAM,GAAb;YACE,OAAO,CACL;gBACE,oBAAC,sBAAa,IAAC,aAAa,EAAC,yBAAyB,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,EAAC,aAAa,GAAG;gBACvG,oBAAC,eAAM,IACL,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EAC7B,SAAS,EAAE,IAAI,CAAC,YAAY,EAC5B,kBAAkB,EAAE;wBAClB,IAAI,EAAE,mBAAU,CAAC,WAAW;wBAC5B,KAAK,EAAE,qBAAqB;wBAC5B,OAAO,EAAE,4GAA4G;qBACtH,EACD,UAAU,EAAE;wBACV,UAAU,EAAE,KAAK;wBACjB,kBAAkB,EAAE,uBAAuB;qBAC5C;oBAED,oBAAC,yBAAW,IACV,OAAO,EAAE;4BACP;gCACE,GAAG,EAAE,GAAG;gCACR,IAAI,EAAE,UAAU;6BACjB;4BACD;gCACE,GAAG,EAAE,GAAG;gCACR,IAAI,EAAE,UAAU;gCAChB,OAAO,EAAE,IAAI;6BACd;4BACD;gCACE,GAAG,EAAE,GAAG;gCACR,IAAI,EAAE,UAAU;gCAChB,QAAQ,EAAE,IAAI;6BACf;yBACF,EACD,QAAQ,EAAE,IAAI,CAAC,gBAAgB,GAC/B;oBACF,oBAAC,qBAAY;wBACX,oBAAC,sBAAa,IAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAC,MAAM,GAAG;wBACzD,oBAAC,sBAAa,IAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAC,QAAQ,GAAG,CAC9C,CACR,CACL,CACP,CAAC;QACJ,CAAC;QAUO,mDAAgB,GAAxB;YACE,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACtC,CAAC;QACH,+BAAC;IAAD,CAAC,AArED,CAA8C,KAAK,CAAC,SAAS,GAqE5D;IArEY,4DAAwB","sourcesContent":["import * as React from 'react';\r\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { ChoiceGroup } from 'office-ui-fabric-react/lib/ChoiceGroup';\r\n\r\nexport class DialogLargeHeaderExample extends React.Component<\r\n  {},\r\n  {\r\n    hideDialog: boolean;\r\n  }\r\n> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      hideDialog: true\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <DefaultButton secondaryText=\"Opens the Sample Dialog\" onClick={this._showDialog} text=\"Open Dialog\" />\r\n        <Dialog\r\n          hidden={this.state.hideDialog}\r\n          onDismiss={this._closeDialog}\r\n          dialogContentProps={{\r\n            type: DialogType.largeHeader,\r\n            title: 'All emails together',\r\n            subText: 'Your Inbox has changed. No longer does it include favorites, it is a singular destination for your emails.'\r\n          }}\r\n          modalProps={{\r\n            isBlocking: false,\r\n            containerClassName: 'ms-dialogMainOverride'\r\n          }}\r\n        >\r\n          <ChoiceGroup\r\n            options={[\r\n              {\r\n                key: 'A',\r\n                text: 'Option A'\r\n              },\r\n              {\r\n                key: 'B',\r\n                text: 'Option B',\r\n                checked: true\r\n              },\r\n              {\r\n                key: 'C',\r\n                text: 'Option C',\r\n                disabled: true\r\n              }\r\n            ]}\r\n            onChange={this._onChoiceChanged}\r\n          />\r\n          <DialogFooter>\r\n            <PrimaryButton onClick={this._closeDialog} text=\"Save\" />\r\n            <DefaultButton onClick={this._closeDialog} text=\"Cancel\" />\r\n          </DialogFooter>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _showDialog = (): void => {\r\n    this.setState({ hideDialog: false });\r\n  };\r\n\r\n  private _closeDialog = (): void => {\r\n    this.setState({ hideDialog: true });\r\n  };\r\n\r\n  private _onChoiceChanged() {\r\n    console.log('Choice option change');\r\n  }\r\n}\r\n"]}