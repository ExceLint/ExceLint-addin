{"version":3,"file":"Dialog.base.js","sourceRoot":"../src/","sources":["components/Dialog/Dialog.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, classNamesFunction, getId } from '../../Utilities';\r\nimport { IDialogProps, IDialogStyleProps, IDialogStyles } from './Dialog.types';\r\nimport { DialogType, IDialogContentProps } from './DialogContent.types';\r\nimport { Modal, IModalProps } from '../../Modal';\r\nimport { ILayerProps } from '../../Layer';\r\nimport { withResponsiveMode } from '../../utilities/decorators/withResponsiveMode';\r\n\r\nconst getClassNames = classNamesFunction<IDialogStyleProps, IDialogStyles>();\r\n\r\nimport { DialogContent } from './DialogContent';\r\n\r\nconst DefaultModalProps: IModalProps = {\r\n  isDarkOverlay: false,\r\n  isBlocking: false,\r\n  className: '',\r\n  containerClassName: '',\r\n  topOffsetFixed: false\r\n};\r\n\r\nconst DefaultDialogContentProps: IDialogContentProps = {\r\n  type: DialogType.normal,\r\n  className: '',\r\n  topButtonsProps: []\r\n};\r\n\r\n@withResponsiveMode\r\nexport class DialogBase extends BaseComponent<IDialogProps, {}> {\r\n  public static defaultProps: IDialogProps = {\r\n    hidden: true\r\n  };\r\n\r\n  private _id: string;\r\n  private _defaultTitleTextId: string;\r\n  private _defaultSubTextId: string;\r\n\r\n  constructor(props: IDialogProps) {\r\n    super(props);\r\n\r\n    this._id = getId('Dialog');\r\n    this._defaultTitleTextId = this._id + '-title';\r\n    this._defaultSubTextId = this._id + '-subText';\r\n\r\n    this._warnDeprecations({\r\n      isOpen: 'hidden',\r\n      type: 'dialogContentProps.type',\r\n      subText: 'dialogContentProps.subText',\r\n      contentClassName: 'dialogContentProps.className',\r\n      topButtonsProps: 'dialogContentProps.topButtonsProps',\r\n      className: 'modalProps.className',\r\n      isDarkOverlay: 'modalProps.isDarkOverlay',\r\n      isBlocking: 'modalProps.isBlocking',\r\n      containerClassName: 'modalProps.containerClassName',\r\n      onDismissed: 'modalProps.onDismissed',\r\n      onLayerDidMount: 'modalProps.layerProps.onLayerDidMount',\r\n      ariaDescribedById: 'modalProps.subtitleAriaId',\r\n      ariaLabelledById: 'modalProps.titleAriaId'\r\n    });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const {\r\n      className,\r\n      containerClassName,\r\n      contentClassName,\r\n      elementToFocusOnDismiss,\r\n      firstFocusableSelector,\r\n      forceFocusInsideTrap,\r\n      styles,\r\n      hidden,\r\n      ignoreExternalFocusing,\r\n      isBlocking,\r\n      isClickableOutsideFocusTrap,\r\n      isDarkOverlay,\r\n      isOpen,\r\n      onDismiss,\r\n      onDismissed,\r\n      onLayerDidMount,\r\n      responsiveMode,\r\n      subText,\r\n      theme,\r\n      title,\r\n      topButtonsProps,\r\n      type,\r\n      minWidth,\r\n      maxWidth,\r\n      modalProps\r\n    } = this.props;\r\n\r\n    const mergedLayerProps: ILayerProps = {\r\n      ...(modalProps ? modalProps.layerProps : { onLayerDidMount })\r\n    };\r\n    if (onLayerDidMount && !mergedLayerProps.onLayerDidMount) {\r\n      mergedLayerProps.onLayerDidMount = onLayerDidMount;\r\n    }\r\n\r\n    const mergedModalProps = {\r\n      ...DefaultModalProps,\r\n      ...modalProps,\r\n      layerProps: mergedLayerProps\r\n    };\r\n\r\n    const dialogContentProps: IDialogContentProps = {\r\n      ...DefaultDialogContentProps,\r\n      ...this.props.dialogContentProps\r\n    };\r\n\r\n    const classNames = getClassNames(styles!, {\r\n      theme: theme!,\r\n      className: className || mergedModalProps.className,\r\n      containerClassName: containerClassName || mergedModalProps.containerClassName,\r\n      hidden,\r\n      dialogDefaultMinWidth: minWidth,\r\n      dialogDefaultMaxWidth: maxWidth\r\n    });\r\n\r\n    return (\r\n      <Modal\r\n        elementToFocusOnDismiss={elementToFocusOnDismiss}\r\n        firstFocusableSelector={firstFocusableSelector}\r\n        forceFocusInsideTrap={forceFocusInsideTrap}\r\n        ignoreExternalFocusing={ignoreExternalFocusing}\r\n        isClickableOutsideFocusTrap={isClickableOutsideFocusTrap}\r\n        onDismissed={onDismissed}\r\n        responsiveMode={responsiveMode}\r\n        {...mergedModalProps}\r\n        isDarkOverlay={isDarkOverlay !== undefined ? isDarkOverlay : mergedModalProps.isDarkOverlay}\r\n        isBlocking={isBlocking !== undefined ? isBlocking : mergedModalProps.isBlocking}\r\n        isOpen={isOpen !== undefined ? isOpen : !hidden}\r\n        className={classNames.root}\r\n        containerClassName={classNames.main}\r\n        onDismiss={onDismiss ? onDismiss : mergedModalProps.onDismiss}\r\n        subtitleAriaId={this._getSubTextId()}\r\n        titleAriaId={this._getTitleTextId()}\r\n      >\r\n        <DialogContent\r\n          titleId={this._defaultTitleTextId}\r\n          subTextId={this._defaultSubTextId}\r\n          title={title}\r\n          subText={subText}\r\n          showCloseButton={isBlocking !== undefined ? !isBlocking : !mergedModalProps.isBlocking}\r\n          topButtonsProps={topButtonsProps ? topButtonsProps : dialogContentProps!.topButtonsProps}\r\n          type={type !== undefined ? type : dialogContentProps!.type}\r\n          onDismiss={onDismiss ? onDismiss : dialogContentProps!.onDismiss}\r\n          className={contentClassName || dialogContentProps!.className}\r\n          {...dialogContentProps}\r\n        >\r\n          {this.props.children}\r\n        </DialogContent>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  private _getSubTextId = (): string | undefined => {\r\n    const { ariaDescribedById, modalProps, dialogContentProps, subText } = this.props;\r\n    let id = ariaDescribedById || (modalProps && modalProps.subtitleAriaId);\r\n\r\n    if (!id) {\r\n      id = (subText || (dialogContentProps && dialogContentProps.subText)) && this._defaultSubTextId;\r\n    }\r\n\r\n    return id;\r\n  };\r\n\r\n  private _getTitleTextId = (): string | undefined => {\r\n    const { ariaLabelledById, modalProps, dialogContentProps, title } = this.props;\r\n    let id = ariaLabelledById || (modalProps && modalProps.titleAriaId);\r\n\r\n    if (!id) {\r\n      id = (title || (dialogContentProps && dialogContentProps.title)) && this._defaultTitleTextId;\r\n    }\r\n\r\n    return id;\r\n  };\r\n}\r\n"]}