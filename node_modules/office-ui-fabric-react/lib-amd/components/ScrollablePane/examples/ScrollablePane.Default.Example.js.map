{"version":3,"file":"ScrollablePane.Default.Example.js","sourceRoot":"../src/","sources":["components/ScrollablePane/examples/ScrollablePane.Default.Example.tsx"],"names":[],"mappings":";;;IAMA,IAAM,KAAK,GAAG,kBAAQ,EAAE,CAAC;IACzB,IAAM,UAAU,GAAG,wBAAc,CAAC;QAChC,OAAO,EAAE;YACP,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,UAAU;YACpB,SAAS,EAAE,SAAS;SACrB;QACD,IAAI,EAAE;YACJ,QAAQ,EAAE,GAAG;YACb,MAAM,EAAE,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,YAAY;SAClD;QACD,MAAM,EAAE;YACN,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW;YAChC,OAAO,EAAE,mBAAmB;YAC5B,QAAQ,EAAE,MAAM;YAChB,SAAS,EAAE,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK;YAC7C,YAAY,EAAE,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK;SACjD;QACD,WAAW,EAAE;YACX,OAAO,EAAE,WAAW;SACrB;KACF,CAAC,CAAC;IAQH;QAAkD,wDAAe;QAG/D,sCAAY,KAAU;YAAtB,YACE,kBAAM,KAAK,CAAC,SAYb;YAYO,wBAAkB,GAAG,UAAC,IAAgC;gBAC5D,OAAO,CACL,6BACE,GAAG,EAAE,IAAI,CAAC,KAAK,EACf,KAAK,EAAE;wBACL,eAAe,EAAE,IAAI,CAAC,KAAK;qBAC5B;oBAED,oBAAC,eAAM,IAAC,cAAc,EAAE,2BAAkB,CAAC,IAAI;wBAC7C,6BAAK,SAAS,EAAE,UAAU,CAAC,MAAM;;4BAAqB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAO,CACpE;oBACT,6BAAK,SAAS,EAAE,UAAU,CAAC,WAAW,IAAG,IAAI,CAAC,IAAI,CAAO,CACrD,CACP,CAAC;YACJ,CAAC,CAAC;YApCA,IAAM,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;YACnH,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,yDAAyD;YACzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC1B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC;oBACf,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrE,IAAI,EAAE,mBAAK,CAAC,GAAG,CAAC;oBAChB,KAAK,EAAE,CAAC;iBACT,CAAC,CAAC;aACJ;;QACH,CAAC;QAEM,6CAAM,GAAb;YACE,IAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAE9D,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,OAAO;gBAChC,oBAAC,+BAAc,IAAC,MAAM,EAAE,EAAE,IAAI,EAAE,UAAU,CAAC,IAAI,EAAE,IAAM,YAAY,CAAkB,CACjF,CACP,CAAC;QACJ,CAAC;QAiBH,mCAAC;IAAD,CAAC,AA3CD,CAAkD,KAAK,CAAC,SAAS,GA2ChE;IA3CY,oEAA4B","sourcesContent":["import * as React from 'react';\r\nimport { ScrollablePane } from 'office-ui-fabric-react/lib/ScrollablePane';\r\nimport { Sticky, StickyPositionType } from 'office-ui-fabric-react/lib/Sticky';\r\nimport { lorem } from 'office-ui-fabric-react/lib/utilities/exampleData';\r\nimport { getTheme, mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\r\n\r\nconst theme = getTheme();\r\nconst classNames = mergeStyleSets({\r\n  wrapper: {\r\n    height: '80vh',\r\n    position: 'relative',\r\n    maxHeight: 'inherit'\r\n  },\r\n  pane: {\r\n    maxWidth: 400,\r\n    border: '1px solid ' + theme.palette.neutralLight\r\n  },\r\n  sticky: {\r\n    color: theme.palette.neutralDark,\r\n    padding: '5px 20px 5px 10px',\r\n    fontSize: '13px',\r\n    borderTop: '1px solid ' + theme.palette.black,\r\n    borderBottom: '1px solid ' + theme.palette.black\r\n  },\r\n  textContent: {\r\n    padding: '15px 10px'\r\n  }\r\n});\r\n\r\nexport interface IScrollablePaneExampleItem {\r\n  color: string;\r\n  text: string;\r\n  index: number;\r\n}\r\n\r\nexport class ScrollablePaneDefaultExample extends React.Component {\r\n  private _items: IScrollablePaneExampleItem[];\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    const colors = ['#eaeaea', '#dadada', '#d0d0d0', '#c8c8c8', '#a6a6a6', '#c7e0f4', '#71afe5', '#eff6fc', '#deecf9'];\r\n    this._items = [];\r\n    // Using splice prevents the colors from being duplicated\r\n    for (let i = 0; i < 5; i++) {\r\n      this._items.push({\r\n        color: colors.splice(Math.floor(Math.random() * colors.length), 1)[0],\r\n        text: lorem(200),\r\n        index: i\r\n      });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const contentAreas = this._items.map(this._createContentArea);\r\n\r\n    return (\r\n      <div className={classNames.wrapper}>\r\n        <ScrollablePane styles={{ root: classNames.pane }}>{...contentAreas}</ScrollablePane>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _createContentArea = (item: IScrollablePaneExampleItem) => {\r\n    return (\r\n      <div\r\n        key={item.index}\r\n        style={{\r\n          backgroundColor: item.color\r\n        }}\r\n      >\r\n        <Sticky stickyPosition={StickyPositionType.Both}>\r\n          <div className={classNames.sticky}>Sticky Component #{item.index + 1}</div>\r\n        </Sticky>\r\n        <div className={classNames.textContent}>{item.text}</div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n"]}