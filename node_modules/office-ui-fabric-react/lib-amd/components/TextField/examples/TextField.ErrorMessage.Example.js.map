{"version":3,"file":"TextField.ErrorMessage.Example.js","sourceRoot":"../src/","sources":["components/TextField/examples/TextField.ErrorMessage.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Promise } from 'es6-promise';\r\nimport * as React from 'react';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { NumberTextField } from './NumberTextField';\r\nimport './TextField.Examples.scss';\r\n\r\nexport class TextFieldErrorMessageExample extends React.Component<{}, {}> {\r\n  public constructor(props: any) {\r\n    super(props);\r\n\r\n    this._getErrorMessage = this._getErrorMessage.bind(this);\r\n    this._getErrorMessagePromise = this._getErrorMessagePromise.bind(this);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div className=\"docs-TextFieldErrorExample\">\r\n        <TextField\r\n          label=\"TextField with a string-based validator. Hint: the length of the input string must be less than 3.\"\r\n          onGetErrorMessage={this._getErrorMessage}\r\n        />\r\n        <TextField\r\n          label=\"TextField with a Promise-based validator. Hint: the length of the input string must be less than 3.\"\r\n          onGetErrorMessage={this._getErrorMessagePromise}\r\n        />\r\n        <TextField\r\n          label=\"TextField with a string-based validator. Hint: the length of the input string must be less than 3.\"\r\n          value=\"It should show an error message under this error message on render.\"\r\n          onGetErrorMessage={this._getErrorMessage}\r\n        />\r\n        <TextField\r\n          label=\"TextField with a string-based validator. Hint: the length of the input string must be less than 3.\"\r\n          value=\"It will run validation only on input change and not on render.\"\r\n          onGetErrorMessage={this._getErrorMessage}\r\n          validateOnLoad={false}\r\n        />\r\n        <TextField\r\n          label=\"TextField with a Promise-based validator. Hint: the length of the input string must be less than 3.\"\r\n          value=\"It should show an error message under this error message 5 seconds after render.\"\r\n          onGetErrorMessage={this._getErrorMessagePromise}\r\n        />\r\n        <TextField\r\n          label=\"TextField has both description and error message.\"\r\n          value=\"It should show description and error message on render at the same time.\"\r\n          description=\"This field has description and error message both under the input box.\"\r\n          onGetErrorMessage={this._getErrorMessage}\r\n        />\r\n        <TextField\r\n          label=\"TextField with a string-based validator. Hint: the length of the input string must be less than 3.\"\r\n          placeholder=\"Validation will start after users stop typing for 2 seconds.\"\r\n          onGetErrorMessage={this._getErrorMessage}\r\n          deferredValidationTime={2000}\r\n        />\r\n        <TextField\r\n          label=\"TextField that validates only on focus and blur. Hint: the length of the input string must be less than 3.\"\r\n          placeholder=\"Validation will start only on input focus and blur\"\r\n          onGetErrorMessage={this._getErrorMessage}\r\n          validateOnFocusIn\r\n          validateOnFocusOut\r\n        />\r\n        <TextField\r\n          label=\"TextField that validates only on blur. Hint: the length of the input string must be less than 3.\"\r\n          placeholder=\"Validation will start only on input blur.\"\r\n          onGetErrorMessage={this._getErrorMessage}\r\n          validateOnFocusOut\r\n        />\r\n        <TextField label=\"Underlined TextField\" underlined onGetErrorMessage={this._getErrorMessage} />\r\n\r\n        <TextField\r\n          label=\"TextField that uses the errorMessage property to set an error state.\"\r\n          placeholder=\"This field always has an error.\"\r\n          errorMessage=\"This is a statically set error message.\"\r\n        />\r\n        <NumberTextField label=\"Number TextField with valid initial value\" initialValue=\"100\" />\r\n        <NumberTextField label=\"Number TextField with invalid initial value\" initialValue=\"Not a number\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _getErrorMessage(value: string): string {\r\n    return value.length < 3 ? '' : `The length of the input value should less than 3, actual is ${value.length}.`;\r\n  }\r\n\r\n  private _getErrorMessagePromise(value: string): Promise<string> {\r\n    return new Promise(resolve => {\r\n      // resolve the promise after 3 second.\r\n      setTimeout(() => resolve(this._getErrorMessage(value)), 5000);\r\n    });\r\n  }\r\n}\r\n"]}