{"version":3,"file":"Dropdown.ControlledMulti.Example.js","sourceRoot":"../src/","sources":["components/Dropdown/examples/Dropdown.ControlledMulti.Example.tsx"],"names":[],"mappings":";;;IAOA;QAAoD,0DAAyD;QAA7G;YAAA,qEAgDC;YA/CQ,WAAK,GAAyC;gBACnD,aAAa,EAAE,EAAE;aAClB,CAAC;YA6BM,eAAS,GAAG,UAAC,KAAsC,EAAE,IAAqB;gBAChF,IAAM,gBAAgB,GAAO,KAAI,CAAC,KAAK,CAAC,aAAa,QAAC,CAAC;gBACvD,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,iCAAiC;oBACjC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAa,CAAC,CAAC;iBAC3C;qBAAM;oBACL,sCAAsC;oBACtC,IAAM,SAAS,GAAG,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,GAAa,CAAC,CAAC;oBAC/D,IAAI,SAAS,GAAG,CAAC,CAAC,EAAE;wBAClB,gBAAgB,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;qBACvC;iBACF;gBACD,KAAI,CAAC,QAAQ,CAAC;oBACZ,aAAa,EAAE,gBAAgB;iBAChC,CAAC,CAAC;YACL,CAAC,CAAC;;QACJ,CAAC;QA3CQ,+CAAM,GAAb;YACU,IAAA,wCAAa,CAAgB;YAErC,OAAO,CACL,oBAAC,mBAAQ,IACP,WAAW,EAAC,gBAAgB,EAC5B,KAAK,EAAC,iCAAiC,EACvC,YAAY,EAAE,aAAa,EAC3B,QAAQ,EAAE,IAAI,CAAC,SAAS,EACxB,WAAW,QACX,OAAO,EAAE;oBACP,EAAE,GAAG,EAAE,cAAc,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,+BAAoB,CAAC,MAAM,EAAE;oBAC9E,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;oBAC/B,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE;oBACjC,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE;oBACjD,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;oBAC/B,EAAE,GAAG,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE,+BAAoB,CAAC,OAAO,EAAE;oBACvE,EAAE,GAAG,EAAE,kBAAkB,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,+BAAoB,CAAC,MAAM,EAAE;oBACtF,EAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE;oBACrC,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE;oBACjC,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE;iBACpC,EACD,MAAM,EAAE,EAAE,QAAQ,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,GACpC,CACH,CAAC;QACJ,CAAC;QAkBH,qCAAC;IAAD,CAAC,AAhDD,CAAoD,KAAK,CAAC,SAAS,GAgDlE;IAhDY,wEAA8B","sourcesContent":["import * as React from 'react';\r\nimport { Dropdown, DropdownMenuItemType, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\n\r\nexport interface IDropdownControlledMultiExampleState {\r\n  selectedItems: string[];\r\n}\r\n\r\nexport class DropdownControlledMultiExample extends React.Component<{}, IDropdownControlledMultiExampleState> {\r\n  public state: IDropdownControlledMultiExampleState = {\r\n    selectedItems: []\r\n  };\r\n\r\n  public render() {\r\n    const { selectedItems } = this.state;\r\n\r\n    return (\r\n      <Dropdown\r\n        placeholder=\"Select options\"\r\n        label=\"Multi-select controlled example\"\r\n        selectedKeys={selectedItems}\r\n        onChange={this._onChange}\r\n        multiSelect\r\n        options={[\r\n          { key: 'fruitsHeader', text: 'Fruits', itemType: DropdownMenuItemType.Header },\r\n          { key: 'apple', text: 'Apple' },\r\n          { key: 'banana', text: 'Banana' },\r\n          { key: 'orange', text: 'Orange', disabled: true },\r\n          { key: 'grape', text: 'Grape' },\r\n          { key: 'divider_1', text: '-', itemType: DropdownMenuItemType.Divider },\r\n          { key: 'vegetablesHeader', text: 'Vegetables', itemType: DropdownMenuItemType.Header },\r\n          { key: 'broccoli', text: 'Broccoli' },\r\n          { key: 'carrot', text: 'Carrot' },\r\n          { key: 'lettuce', text: 'Lettuce' }\r\n        ]}\r\n        styles={{ dropdown: { width: 300 } }}\r\n      />\r\n    );\r\n  }\r\n\r\n  private _onChange = (event: React.FormEvent<HTMLDivElement>, item: IDropdownOption): void => {\r\n    const newSelectedItems = [...this.state.selectedItems];\r\n    if (item.selected) {\r\n      // add the option if it's checked\r\n      newSelectedItems.push(item.key as string);\r\n    } else {\r\n      // remove the option if it's unchecked\r\n      const currIndex = newSelectedItems.indexOf(item.key as string);\r\n      if (currIndex > -1) {\r\n        newSelectedItems.splice(currIndex, 1);\r\n      }\r\n    }\r\n    this.setState({\r\n      selectedItems: newSelectedItems\r\n    });\r\n  };\r\n}\r\n"]}