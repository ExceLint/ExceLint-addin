{"version":3,"file":"Dropdown.Controlled.Example.js","sourceRoot":"../src/","sources":["components/Dropdown/examples/Dropdown.Controlled.Example.tsx"],"names":[],"mappings":";;;IAOA;QAA+C,qDAAoD;QAAnG;YAAA,qEAmCC;YAlCQ,WAAK,GAAoC;gBAC9C,YAAY,EAAE,SAAS;aACxB,CAAC;YA4BM,eAAS,GAAG,UAAC,KAAsC,EAAE,IAAqB;gBAChF,OAAO,CAAC,GAAG,CAAC,uBAAqB,IAAI,CAAC,IAAI,UAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,CAAE,CAAC,CAAC;gBAC3F,KAAI,CAAC,QAAQ,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;YACxC,CAAC,CAAC;;QACJ,CAAC;QA9BQ,0CAAM,GAAb;YACU,IAAA,sCAAY,CAAgB;YAEpC,OAAO,CACL,oBAAC,mBAAQ,IACP,KAAK,EAAC,oBAAoB,EAC1B,WAAW,EAAE,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EACxD,QAAQ,EAAE,IAAI,CAAC,SAAS,EACxB,WAAW,EAAC,kBAAkB,EAC9B,OAAO,EAAE;oBACP,EAAE,GAAG,EAAE,cAAc,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,+BAAoB,CAAC,MAAM,EAAE;oBAC9E,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;oBAC/B,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE;oBACjC,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE;oBACjD,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;oBAC/B,EAAE,GAAG,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE,+BAAoB,CAAC,OAAO,EAAE;oBACvE,EAAE,GAAG,EAAE,kBAAkB,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,+BAAoB,CAAC,MAAM,EAAE;oBACtF,EAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE;oBACrC,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE;oBACjC,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE;iBACpC,EACD,MAAM,EAAE,EAAE,QAAQ,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,GACpC,CACH,CAAC;QACJ,CAAC;QAMH,gCAAC;IAAD,CAAC,AAnCD,CAA+C,KAAK,CAAC,SAAS,GAmC7D;IAnCY,8DAAyB","sourcesContent":["import * as React from 'react';\r\nimport { Dropdown, DropdownMenuItemType, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\n\r\nexport interface IDropdownControlledExampleState {\r\n  selectedItem?: { key: string | number | undefined };\r\n}\r\n\r\nexport class DropdownControlledExample extends React.Component<{}, IDropdownControlledExampleState> {\r\n  public state: IDropdownControlledExampleState = {\r\n    selectedItem: undefined\r\n  };\r\n\r\n  public render() {\r\n    const { selectedItem } = this.state;\r\n\r\n    return (\r\n      <Dropdown\r\n        label=\"Controlled example\"\r\n        selectedKey={selectedItem ? selectedItem.key : undefined}\r\n        onChange={this._onChange}\r\n        placeholder=\"Select an option\"\r\n        options={[\r\n          { key: 'fruitsHeader', text: 'Fruits', itemType: DropdownMenuItemType.Header },\r\n          { key: 'apple', text: 'Apple' },\r\n          { key: 'banana', text: 'Banana' },\r\n          { key: 'orange', text: 'Orange', disabled: true },\r\n          { key: 'grape', text: 'Grape' },\r\n          { key: 'divider_1', text: '-', itemType: DropdownMenuItemType.Divider },\r\n          { key: 'vegetablesHeader', text: 'Vegetables', itemType: DropdownMenuItemType.Header },\r\n          { key: 'broccoli', text: 'Broccoli' },\r\n          { key: 'carrot', text: 'Carrot' },\r\n          { key: 'lettuce', text: 'Lettuce' }\r\n        ]}\r\n        styles={{ dropdown: { width: 300 } }}\r\n      />\r\n    );\r\n  }\r\n\r\n  private _onChange = (event: React.FormEvent<HTMLDivElement>, item: IDropdownOption): void => {\r\n    console.log(`Selection change: ${item.text} ${item.selected ? 'selected' : 'unselected'}`);\r\n    this.setState({ selectedItem: item });\r\n  };\r\n}\r\n"]}