{"version":3,"file":"updateH.js","sourceRoot":"../src/","sources":["utilities/color/updateH.ts"],"names":[],"mappings":";AACA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AAEtD;;;;;GAKG;AACH,MAAM,UAAU,OAAO,CAAC,KAAa,EAAE,CAAS;IACxC,IAAA,iCAA0C,EAAxC,QAAC,EAAE,QAAC,EAAE,QAAkC,CAAC;IACjD,IAAM,GAAG,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAE7B,6BACK,KAAK,KACR,CAAC,GAAA;QACD,CAAC,GAAA;QACD,CAAC,GAAA;QACD,CAAC,GAAA;QACD,GAAG,KAAA,EACH,GAAG,EAAE,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,IAC5C;AACJ,CAAC","sourcesContent":["import { IColor } from './interfaces';\nimport { hsv2rgb } from './hsv2rgb';\nimport { rgb2hex } from './rgb2hex';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\n\n/**\n * Gets a color with the same saturation and value as `color` and the other components updated\n * to match the given hue.\n *\n * Does not modify the original `color` and does not supply a default alpha value.\n */\nexport function updateH(color: IColor, h: number): IColor {\n  const { r, g, b } = hsv2rgb(h, color.s, color.v);\n  const hex = rgb2hex(r, g, b);\n\n  return {\n    ...color,\n    h,\n    r,\n    g,\n    b,\n    hex,\n    str: _rgbaOrHexString(r, g, b, color.a, hex),\n  };\n}\n"]}