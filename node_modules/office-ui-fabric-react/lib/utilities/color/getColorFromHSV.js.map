{"version":3,"file":"getColorFromHSV.js","sourceRoot":"../src/","sources":["utilities/color/getColorFromHSV.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,MAAM,UAAU,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AAEtD;;;;;;GAMG;AACH,MAAM,0BAA0B,GAAS,EAAE,CAAU;IAC3C,IAAA,SAAC,EAAE,SAAC,EAAE,SAAC,CAAS;IACxB,CAAC,GAAG,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;IAE1C,IAAA,qBAA8B,EAA5B,QAAC,EAAE,QAAC,EAAE,QAAC,CAAsB;IACrC,IAAM,GAAG,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,IAAM,GAAG,GAAG,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IAE9C,OAAO,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,GAAG,KAAA,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,GAAG,KAAA,EAAE,CAAC,GAAA,EAAE,CAAC;AAC3C,CAAC","sourcesContent":["import { IHSV, IColor } from './interfaces';\r\nimport { MAX_COLOR_ALPHA } from './consts';\r\nimport { hsv2rgb } from './hsv2rgb';\r\nimport { hsv2hex } from './hsv2hex';\r\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\r\n\r\n/**\r\n * Converts an HSV color (and optional alpha value) to a color object.\r\n * If `a` is not given, a default of 100 is used.\r\n * Hex in the returned value will *not* be prefixed with #.\r\n * If `a` is unspecified or 100, the result's `str` property will contain a hex value\r\n * (*not* prefixed with #)\r\n */\r\nexport function getColorFromHSV(hsv: IHSV, a?: number): IColor {\r\n  const { h, s, v } = hsv;\r\n  a = typeof a === 'number' ? a : MAX_COLOR_ALPHA;\r\n\r\n  const { r, g, b } = hsv2rgb(h, s, v);\r\n  const hex = hsv2hex(h, s, v);\r\n  const str = _rgbaOrHexString(r, g, b, a, hex);\r\n\r\n  return { a, b, g, h, hex, r, s, str, v };\r\n}\r\n"]}