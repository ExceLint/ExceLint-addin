{"version":3,"file":"DragDropHelper.js","sourceRoot":"../src/","sources":["utilities/dragdrop/DragDropHelper.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { EventGroup } from '../../Utilities';\r\nimport { IDragDropHelper, IDragDropTarget, IDragDropOptions, IDragDropEvent, IDragDropContext } from './interfaces';\r\nimport { ISelection } from '../../utilities/selection/interfaces';\r\n\r\nconst MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\r\nconst MOUSEMOVE_PRIMARY_BUTTON = 1; // for mouse move event we are using ev.buttons property, 1 means left button\r\n\r\nexport interface IDragDropHelperParams {\r\n  selection: ISelection;\r\n  minimumPixelsForDrag?: number;\r\n}\r\n\r\nexport class DragDropHelper implements IDragDropHelper {\r\n  private _dragEnterCounts: { [key: string]: number };\r\n  private _isDragging: boolean;\r\n  private _dragData: {\r\n    eventTarget: EventTarget | null;\r\n    clientX: number;\r\n    clientY: number;\r\n    dataTransfer?: DataTransfer;\r\n    dropTarget?: IDragDropTarget;\r\n    dragTarget?: IDragDropTarget;\r\n  } | null;\r\n  private _selection: ISelection;\r\n  private _activeTargets: {\r\n    [key: string]: {\r\n      target: IDragDropTarget;\r\n      dispose: () => void;\r\n    };\r\n  };\r\n  private _events: EventGroup;\r\n  private _lastId: number;\r\n\r\n  constructor(params: IDragDropHelperParams) {\r\n    this._selection = params.selection;\r\n    this._dragEnterCounts = {};\r\n    this._activeTargets = {};\r\n    this._lastId = 0;\r\n\r\n    this._events = new EventGroup(this);\r\n    // clear drag data when mouse up, use capture event to ensure it will be run\r\n    this._events.on(document.body, 'mouseup', this._onMouseUp.bind(this), true);\r\n    this._events.on(document, 'mouseup', this._onDocumentMouseUp.bind(this), true);\r\n  }\r\n\r\n  public dispose(): void {\r\n    this._events.dispose();\r\n  }\r\n\r\n  public subscribe(\r\n    root: HTMLElement,\r\n    events: EventGroup,\r\n    dragDropOptions: IDragDropOptions\r\n  ): {\r\n    key: string;\r\n    dispose(): void;\r\n  } {\r\n    const { key = `${++this._lastId}` } = dragDropOptions;\r\n\r\n    const handlers: {\r\n      callback: (context: IDragDropContext, event?: any) => void;\r\n      eventName: string;\r\n    }[] = [];\r\n\r\n    let onDragStart: (event: DragEvent) => void;\r\n    let onDragLeave: (event: DragEvent) => void;\r\n    let onDragEnter: (event: DragEvent) => void;\r\n    let onDragEnd: (event: DragEvent) => void;\r\n    let onDrop: (event: DragEvent) => void;\r\n    let onDragOver: (event: DragEvent) => void;\r\n    let onMouseDown: (event: MouseEvent) => void;\r\n\r\n    let isDraggable: boolean;\r\n    let isDroppable: boolean;\r\n\r\n    let activeTarget: {\r\n      target: IDragDropTarget;\r\n      dispose: () => void;\r\n    };\r\n\r\n    if (dragDropOptions && root) {\r\n      const { eventMap, context, updateDropState } = dragDropOptions;\r\n\r\n      const dragDropTarget: IDragDropTarget = {\r\n        root: root,\r\n        options: dragDropOptions,\r\n        key: key\r\n      };\r\n\r\n      isDraggable = this._isDraggable(dragDropTarget);\r\n      isDroppable = this._isDroppable(dragDropTarget);\r\n\r\n      if (isDraggable || isDroppable) {\r\n        if (eventMap) {\r\n          for (const event of eventMap) {\r\n            const handler = {\r\n              callback: event.callback.bind(null, context),\r\n              eventName: event.eventName\r\n            };\r\n\r\n            handlers.push(handler);\r\n\r\n            this._events.on(root, handler.eventName, handler.callback);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (isDroppable) {\r\n        // If the target is droppable, wire up global event listeners to track drop-related events.\r\n        onDragLeave = (event: DragEvent) => {\r\n          if (!(event as IDragDropEvent).isHandled) {\r\n            (event as IDragDropEvent).isHandled = true;\r\n            this._dragEnterCounts[key]--;\r\n            if (this._dragEnterCounts[key] === 0) {\r\n              updateDropState(false /* isDropping */, event);\r\n            }\r\n          }\r\n        };\r\n\r\n        onDragEnter = (event: DragEvent) => {\r\n          event.preventDefault(); // needed for IE\r\n          if (!(event as IDragDropEvent).isHandled) {\r\n            (event as IDragDropEvent).isHandled = true;\r\n            this._dragEnterCounts[key]++;\r\n            if (this._dragEnterCounts[key] === 1) {\r\n              updateDropState(true /* isDropping */, event);\r\n            }\r\n          }\r\n        };\r\n\r\n        onDragEnd = (event: DragEvent) => {\r\n          this._dragEnterCounts[key] = 0;\r\n          updateDropState(false /* isDropping */, event);\r\n        };\r\n\r\n        onDrop = (event: DragEvent) => {\r\n          this._dragEnterCounts[key] = 0;\r\n          updateDropState(false /* isDropping */, event);\r\n\r\n          if (dragDropOptions.onDrop) {\r\n            dragDropOptions.onDrop(dragDropOptions.context.data, event);\r\n          }\r\n        };\r\n\r\n        onDragOver = (event: DragEvent) => {\r\n          event.preventDefault();\r\n          if (dragDropOptions.onDragOver) {\r\n            dragDropOptions.onDragOver(dragDropOptions.context.data, event);\r\n          }\r\n        };\r\n\r\n        this._dragEnterCounts[key] = 0;\r\n\r\n        // dragenter and dragleave will be fired when hover to the child element\r\n        // but we only want to change state when enter or leave the current element\r\n        // use the count to ensure it.\r\n        events.on(root, 'dragenter', onDragEnter);\r\n        events.on(root, 'dragleave', onDragLeave);\r\n        events.on(root, 'dragend', onDragEnd);\r\n        events.on(root, 'drop', onDrop);\r\n        events.on(root, 'dragover', onDragOver);\r\n      }\r\n\r\n      if (isDraggable) {\r\n        // If the target is draggable, wire up local event listeners for mouse events.\r\n        onMouseDown = this._onMouseDown.bind(this, dragDropTarget);\r\n        onDragEnd = this._onDragEnd.bind(this, dragDropTarget);\r\n\r\n        // We need to add in data so that on Firefox we show the ghost element when dragging\r\n        onDragStart = (event: DragEvent) => {\r\n          const { options } = this._dragData!.dragTarget!;\r\n          if (options && options.onDragStart) {\r\n            options.onDragStart(options.context.data, options.context.index, this._selection.getSelection(), event);\r\n          }\r\n          this._isDragging = true;\r\n          event.dataTransfer.setData('id', root.id);\r\n        };\r\n\r\n        events.on(root, 'dragstart', onDragStart);\r\n        events.on(root, 'mousedown', onMouseDown);\r\n        events.on(root, 'dragend', onDragEnd);\r\n      }\r\n\r\n      activeTarget = {\r\n        target: dragDropTarget,\r\n        dispose: () => {\r\n          if (this._activeTargets[key] === activeTarget) {\r\n            delete this._activeTargets[key];\r\n          }\r\n\r\n          if (root) {\r\n            for (const handler of handlers) {\r\n              this._events.off(root, handler.eventName, handler.callback);\r\n            }\r\n\r\n            if (isDroppable) {\r\n              events.off(root, 'dragenter', onDragEnter);\r\n              events.off(root, 'dragleave', onDragLeave);\r\n              events.off(root, 'dragend', onDragEnd);\r\n              events.off(root, 'dragover', onDragOver);\r\n              events.off(root, 'drop', onDrop);\r\n            }\r\n\r\n            if (isDraggable) {\r\n              events.off(root, 'dragstart', onDragStart);\r\n              events.off(root, 'mousedown', onMouseDown);\r\n              events.off(root, 'dragend', onDragEnd);\r\n            }\r\n          }\r\n        }\r\n      };\r\n\r\n      this._activeTargets[key] = activeTarget;\r\n    }\r\n\r\n    return {\r\n      key: key,\r\n      dispose: () => {\r\n        if (activeTarget) {\r\n          activeTarget.dispose();\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  public unsubscribe(root: HTMLElement, key: string): void {\r\n    const activeTarget = this._activeTargets[key];\r\n\r\n    if (activeTarget) {\r\n      activeTarget.dispose();\r\n    }\r\n  }\r\n\r\n  private _onDragEnd(target: IDragDropTarget, event: DragEvent): void {\r\n    const { options } = target;\r\n    if (options.onDragEnd) {\r\n      options.onDragEnd(options.context.data, event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * clear drag data when mouse up on body\r\n   */\r\n  private _onMouseUp(event: MouseEvent): void {\r\n    this._isDragging = false;\r\n    if (this._dragData) {\r\n      for (const key of Object.keys(this._activeTargets)) {\r\n        const activeTarget = this._activeTargets[key];\r\n\r\n        if (activeTarget.target.root) {\r\n          this._events.off(activeTarget.target.root, 'mousemove');\r\n          this._events.off(activeTarget.target.root, 'mouseleave');\r\n        }\r\n      }\r\n\r\n      if (this._dragData.dropTarget) {\r\n        // raise dragleave event to let dropTarget know it need to remove dropping style\r\n        EventGroup.raise(this._dragData.dropTarget.root, 'dragleave');\r\n        EventGroup.raise(this._dragData.dropTarget.root, 'drop');\r\n      }\r\n    }\r\n    this._dragData = null;\r\n  }\r\n\r\n  /**\r\n   * clear drag data when mouse up outside of the document\r\n   */\r\n  private _onDocumentMouseUp(event: MouseEvent): void {\r\n    if (event.target === document.documentElement) {\r\n      this._onMouseUp(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * when mouse move over a new drop target while dragging some items,\r\n   * fire dragleave on the old target and fire dragenter to the new target\r\n   * The target will handle style change on dragenter and dragleave events.\r\n   */\r\n  private _onMouseMove(target: IDragDropTarget, event: MouseEvent): void {\r\n    const {\r\n      // use buttons property here since ev.button in some edge case is not updating well during the move.\r\n      // but firefox doesn't support it, so we set the default value when it is not defined.\r\n      buttons = MOUSEMOVE_PRIMARY_BUTTON\r\n    } = event;\r\n\r\n    if (this._dragData && buttons !== MOUSEMOVE_PRIMARY_BUTTON) {\r\n      // cancel mouse down event and return early when the primary button is not pressed\r\n      this._onMouseUp(event);\r\n      return;\r\n    }\r\n\r\n    const { root, key } = target;\r\n    if (this._isDragging) {\r\n      if (this._isDroppable(target)) {\r\n        // we can have nested drop targets in the DOM, like a folder inside a group. In that case, when we drag into\r\n        // the inner target (folder), we first set dropTarget to the inner element. But the same event is bubbled to the\r\n        // outer target too, and we need to prevent the outer one from taking over.\r\n        // So, check if the last dropTarget is not a child of the current.\r\n\r\n        if (this._dragData) {\r\n          if (this._dragData.dropTarget && this._dragData.dropTarget.key !== key && !this._isChild(root, this._dragData.dropTarget.root)) {\r\n            if (this._dragEnterCounts[this._dragData.dropTarget.key] > 0) {\r\n              EventGroup.raise(this._dragData.dropTarget.root, 'dragleave');\r\n              EventGroup.raise(root, 'dragenter');\r\n              this._dragData.dropTarget = target;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * when mouse leave a target while dragging some items, fire dragleave to the target\r\n   */\r\n  private _onMouseLeave(target: IDragDropTarget, event: MouseEvent): void {\r\n    if (this._isDragging) {\r\n      if (this._dragData && this._dragData.dropTarget && this._dragData.dropTarget.key === target.key) {\r\n        EventGroup.raise(target.root, 'dragleave');\r\n        this._dragData.dropTarget = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * when mouse down on a draggable item, we start to track dragdata.\r\n   */\r\n  private _onMouseDown(target: IDragDropTarget, event: MouseEvent): void {\r\n    if (event.button !== MOUSEDOWN_PRIMARY_BUTTON) {\r\n      // Ignore anything except the primary button.\r\n      return;\r\n    }\r\n\r\n    if (this._isDraggable(target)) {\r\n      this._dragData = {\r\n        clientX: event.clientX,\r\n        clientY: event.clientY,\r\n        eventTarget: event.target,\r\n        dragTarget: target\r\n      };\r\n\r\n      for (const key of Object.keys(this._activeTargets)) {\r\n        const activeTarget = this._activeTargets[key];\r\n        if (activeTarget.target.root) {\r\n          this._events.on(activeTarget.target.root, 'mousemove', this._onMouseMove.bind(this, activeTarget.target));\r\n          this._events.on(activeTarget.target.root, 'mouseleave', this._onMouseLeave.bind(this, activeTarget.target));\r\n        }\r\n      }\r\n    } else {\r\n      this._dragData = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * determine whether the child target is a descendant of the parent\r\n   */\r\n  private _isChild(parent: React.ReactInstance, child: React.ReactInstance): boolean {\r\n    const parentElement = ReactDOM.findDOMNode(parent);\r\n    let childElement = ReactDOM.findDOMNode(child);\r\n    while (childElement && childElement.parentElement) {\r\n      if (childElement.parentElement === parentElement) {\r\n        return true;\r\n      }\r\n      childElement = childElement.parentElement;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private _isDraggable(target: IDragDropTarget): boolean {\r\n    const { options } = target;\r\n    return !!(options.canDrag && options.canDrag(options.context.data));\r\n  }\r\n\r\n  private _isDroppable(target: IDragDropTarget): boolean {\r\n    // TODO: take the drag item into consideration to prevent dragging an item into the same group\r\n    const { options } = target;\r\n    const dragContext = this._dragData && this._dragData.dragTarget ? this._dragData.dragTarget.options.context : undefined;\r\n    return !!(options.canDrop && options.canDrop(options.context, dragContext));\r\n  }\r\n}\r\n"]}