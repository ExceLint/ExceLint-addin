{"version":3,"file":"SelectableOption.types.js","sourceRoot":"../src/","sources":["utilities/selectableOption/SelectableOption.types.ts"],"names":[],"mappings":"AA8CA,MAAM,CAAN,IAAY,4BAIX;AAJD,WAAY,4BAA4B;IACtC,mFAAU,CAAA;IACV,qFAAW,CAAA;IACX,mFAAU,CAAA;AACZ,CAAC,EAJW,4BAA4B,KAA5B,4BAA4B,QAIvC","sourcesContent":["export interface ISelectableOption {\r\n  /**\r\n   * Arbitrary string associated with this option.\r\n   */\r\n  key: string | number;\r\n\r\n  /**\r\n   * Text to render for this option\r\n   */\r\n  text: string;\r\n\r\n  /**\r\n   * Title attribute (built in tooltip) for a given option.\r\n   */\r\n  title?: string;\r\n\r\n  /**\r\n   * Text to render for this option\r\n   */\r\n  itemType?: SelectableOptionMenuItemType;\r\n\r\n  /**\r\n   * Index for this option\r\n   */\r\n  index?: number;\r\n\r\n  /**\r\n   * The aria label for the dropdown option. If not present, the `text` will be used.\r\n   */\r\n  ariaLabel?: string;\r\n\r\n  /** If option is selected. */\r\n  selected?: boolean;\r\n\r\n  /**\r\n   * Whether the option is disabled\r\n   * @defaultvalue false\r\n   */\r\n  disabled?: boolean;\r\n\r\n  /**\r\n   * Data available to custom onRender functions.\r\n   */\r\n  data?: any;\r\n}\r\n\r\nexport enum SelectableOptionMenuItemType {\r\n  Normal = 0,\r\n  Divider = 1,\r\n  Header = 2\r\n}\r\n"]}