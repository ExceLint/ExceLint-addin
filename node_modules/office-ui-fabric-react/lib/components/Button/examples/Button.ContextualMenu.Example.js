import * as tslib_1 from "tslib";
import * as React from 'react';
import { DefaultButton } from 'office-ui-fabric-react/lib/Button';
import { ContextualMenu } from 'office-ui-fabric-react/lib/ContextualMenu';
import { Label } from 'office-ui-fabric-react/lib/Label';
import { css, classNamesFunction } from 'office-ui-fabric-react/lib/Utilities';
import { getStyles } from './Button.Basic.Example.styles';
var ButtonContextualMenuExample = /** @class */ (function (_super) {
    tslib_1.__extends(ButtonContextualMenuExample, _super);
    function ButtonContextualMenuExample() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._getMenu = function (menuProps) {
            // Customize contextual menu with menuAs
            return React.createElement(ContextualMenu, tslib_1.__assign({}, menuProps));
        };
        return _this;
    }
    ButtonContextualMenuExample.prototype.render = function () {
        var _a = this.props, disabled = _a.disabled, checked = _a.checked;
        var getClassNames = classNamesFunction();
        var classNames = getClassNames(getStyles, {});
        return (React.createElement("div", { className: css(classNames.twoup) },
            React.createElement("div", null,
                React.createElement(Label, null, "Non persisted menu"),
                React.createElement(DefaultButton, { "data-automation-id": "test", disabled: disabled, allowDisabledFocus: true, checked: checked, iconProps: { iconName: 'Add' }, menuAs: this._getMenu, text: "New", 
                    // tslint:disable-next-line:jsx-no-lambda
                    onMenuClick: function (ev) {
                        console.log(ev);
                    }, menuProps: {
                        items: [
                            {
                                key: 'emailMessage',
                                text: 'Email message',
                                iconProps: { iconName: 'Mail' }
                            },
                            {
                                key: 'calendarEvent',
                                text: 'Calendar event',
                                iconProps: { iconName: 'Calendar' }
                            }
                        ],
                        directionalHintFixed: true
                    } })),
            React.createElement("div", null,
                React.createElement(Label, null, "Persisted menu"),
                React.createElement(DefaultButton, { "data-automation-id": "test", disabled: disabled, allowDisabledFocus: true, checked: checked, persistMenu: true, iconProps: { iconName: 'Add' }, menuAs: this._getMenu, text: "New", 
                    // tslint:disable-next-line:jsx-no-lambda
                    onMenuClick: function (ev) {
                        console.log(ev);
                    }, menuProps: {
                        items: [
                            {
                                key: 'emailMessage',
                                text: 'Email message',
                                iconProps: { iconName: 'Mail' }
                            },
                            {
                                key: 'calendarEvent',
                                text: 'Calendar event',
                                iconProps: { iconName: 'Calendar' }
                            }
                        ],
                        directionalHintFixed: true
                    } }))));
    };
    return ButtonContextualMenuExample;
}(React.Component));
export { ButtonContextualMenuExample };
//# sourceMappingURL=Button.ContextualMenu.Example.js.map