{"version":3,"file":"Facepile.Basic.Example.js","sourceRoot":"../src/","sources":["components/Facepile/examples/Facepile.Basic.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { Facepile, IFacepilePersona, IFacepileProps } from 'office-ui-fabric-react/lib/Facepile';\r\nimport { PersonaSize } from 'office-ui-fabric-react/lib/Persona';\r\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\r\nimport { facepilePersonas } from './FacepileExampleData';\r\nimport './Facepile.Examples.scss';\r\nimport * as exampleStylesImport from '../../../common/_exampleStyles.scss';\r\nconst exampleStyles: any = exampleStylesImport;\r\n\r\nexport interface IFacepileBasicExampleState {\r\n  numberOfFaces: any;\r\n  imagesFadeIn: boolean;\r\n  personaSize: PersonaSize;\r\n}\r\n\r\nexport class FacepileBasicExample extends React.Component<{}, IFacepileBasicExampleState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      numberOfFaces: 3,\r\n      imagesFadeIn: true,\r\n      personaSize: PersonaSize.size32\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { numberOfFaces, personaSize } = this.state;\r\n    const facepileProps: IFacepileProps = {\r\n      personaSize: personaSize,\r\n      personas: facepilePersonas.slice(0, numberOfFaces),\r\n      overflowPersonas: facepilePersonas.slice(numberOfFaces),\r\n      getPersonaProps: (persona: IFacepilePersona) => {\r\n        return {\r\n          imageShouldFadeIn: this.state.imagesFadeIn\r\n        };\r\n      },\r\n      ariaDescription: 'To move through the items use left and right arrow keys.'\r\n    };\r\n\r\n    return (\r\n      <div className={'ms-FacepileExample'}>\r\n        <Facepile {...facepileProps} />\r\n        <div className={'control'}>\r\n          <Slider\r\n            label=\"Number of Personas:\"\r\n            min={1}\r\n            max={5}\r\n            step={1}\r\n            showValue={true}\r\n            value={numberOfFaces}\r\n            onChange={this._onChangePersonaNumber}\r\n          />\r\n          <Dropdown\r\n            label=\"Persona Size:\"\r\n            selectedKey={this.state.personaSize}\r\n            options={[\r\n              { key: PersonaSize.size16, text: PersonaSize[PersonaSize.size16] },\r\n              { key: PersonaSize.size24, text: PersonaSize[PersonaSize.size24] },\r\n              { key: PersonaSize.size28, text: PersonaSize[PersonaSize.size28] },\r\n              { key: PersonaSize.size32, text: PersonaSize[PersonaSize.size32] },\r\n              { key: PersonaSize.size40, text: PersonaSize[PersonaSize.size40] }\r\n            ]}\r\n            onChange={this._onChangePersonaSize}\r\n          />\r\n          <Checkbox\r\n            className={exampleStyles.exampleCheckbox}\r\n            label=\"Fade In\"\r\n            checked={this.state.imagesFadeIn}\r\n            onChange={this._onChangeFadeIn}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onChangeFadeIn = (ev: React.FormEvent<HTMLElement | HTMLInputElement>, checked: boolean): void => {\r\n    this.setState(\r\n      (prevState: IFacepileBasicExampleState): IFacepileBasicExampleState => {\r\n        prevState.imagesFadeIn = checked!;\r\n        return prevState;\r\n      }\r\n    );\r\n  };\r\n\r\n  private _onChangePersonaNumber = (value: number): void => {\r\n    this.setState(\r\n      (prevState: IFacepileBasicExampleState): IFacepileBasicExampleState => {\r\n        prevState.numberOfFaces = value;\r\n        return prevState;\r\n      }\r\n    );\r\n  };\r\n\r\n  private _onChangePersonaSize = (event: React.FormEvent<HTMLDivElement>, value: IDropdownOption): void => {\r\n    this.setState(\r\n      (prevState: IFacepileBasicExampleState): IFacepileBasicExampleState => {\r\n        prevState.personaSize = value.key as PersonaSize;\r\n        return prevState;\r\n      }\r\n    );\r\n  };\r\n}\r\n"]}