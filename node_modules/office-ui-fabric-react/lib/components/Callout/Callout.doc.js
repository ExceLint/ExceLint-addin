import * as tslib_1 from "tslib";
import * as React from 'react';
import { items } from '../CommandBar/examples/data';
import { CalloutBasicExample } from './examples/Callout.Basic.Example';
import { CalloutNestedExample } from './examples/Callout.Nested.Example';
import { CalloutFocusTrapExample } from './examples/Callout.FocusTrap.Example';
import { CalloutDirectionalExample } from './examples/Callout.Directional.Example';
import { CalloutCoverExample } from './examples/Callout.Cover.Example';
import { CalloutStatus } from './Callout.checklist';
var CalloutBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Callout/examples/Callout.Basic.Example.tsx');
var CalloutNestedExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Callout/examples/Callout.Nested.Example.tsx');
var CalloutFocusTrapExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Callout/examples/Callout.FocusTrap.Example.tsx');
var CalloutDirectionalExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Callout/examples/Callout.Directional.Example.tsx');
var CalloutCoverExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Callout/examples/Callout.Cover.Example.tsx');
var cmdBarParamsTextAndIcons = { items: items, farItems: null };
export var CalloutPageProps = {
    title: 'Callout',
    componentName: 'Callout',
    componentUrl: 'https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/Callout',
    componentStatus: CalloutStatus,
    examples: [
        {
            title: 'Default Callout',
            code: CalloutBasicExampleCode,
            view: React.createElement(CalloutBasicExample, null)
        },
        {
            title: 'Nested Callout... Callout with a commandbar with a sub menu',
            code: CalloutNestedExampleCode,
            view: React.createElement(CalloutNestedExample, tslib_1.__assign({}, cmdBarParamsTextAndIcons))
        },
        {
            title: 'Focus Trap Callout',
            code: CalloutFocusTrapExampleCode,
            view: React.createElement(CalloutFocusTrapExample, tslib_1.__assign({}, cmdBarParamsTextAndIcons))
        },
        {
            title: 'Callout with directional hint',
            code: CalloutDirectionalExampleCode,
            view: React.createElement(CalloutDirectionalExample, null)
        },
        {
            title: 'Callout with cover',
            code: CalloutCoverExampleCode,
            view: React.createElement(CalloutCoverExample, null)
        }
    ],
    propertiesTablesSources: [require('!raw-loader!office-ui-fabric-react/src/components/Callout/Callout.types.ts')],
    overview: require('!raw-loader!office-ui-fabric-react/src/components/Callout/docs/CalloutOverview.md'),
    bestPractices: '',
    dos: require('!raw-loader!office-ui-fabric-react/src/components/Callout/docs/CalloutDos.md'),
    donts: require('!raw-loader!office-ui-fabric-react/src/components/Callout/docs/CalloutDonts.md'),
    isHeaderVisible: true,
    isFeedbackVisible: true
};
//# sourceMappingURL=Callout.doc.js.map