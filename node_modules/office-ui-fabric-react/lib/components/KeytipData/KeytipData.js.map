{"version":3,"file":"KeytipData.js","sourceRoot":"../src/","sources":["components/KeytipData/KeytipData.tsx"],"names":[],"mappings":";AAEA,OAAO,EAAE,cAAc,EAAE,sBAAsB,EAAE,MAAM,+BAA+B,CAAC;AAEvF,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAEhD;;;GAGG;AACH,MAAM,CAAC,IAAM,UAAU,GAAqE,UAAA,KAAK;;IACvF,IAAA,yBAAQ,EAAE,6CAAkB,CAAW;IACzC,IAAA,mCAA8D,EAA5D,sBAAQ,EAAE,oCAAkD,CAAC;IAErE,OAAO,QAAQ;QACb,GAAC,cAAc,IAAG,QAAQ;QAC1B,GAAC,sBAAsB,IAAG,QAAQ;QAClC,sBAAkB,GAAE,eAAe;YACnC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { IRenderComponent } from '../../Utilities';\nimport { DATAKTP_TARGET, DATAKTP_EXECUTE_TARGET } from '../../utilities/keytips/index';\nimport { IKeytipDataProps } from './KeytipData.types';\nimport { useKeytipData } from './useKeytipData';\n\n/**\n * A small element to help the target component correctly read out its aria-describedby for its Keytip\n * {@docCategory Keytips}\n */\nexport const KeytipData: React.FunctionComponent<IKeytipDataProps & IRenderComponent<{}>> = props => {\n  const { children, ...keytipDataProps } = props;\n  const { keytipId, ariaDescribedBy } = useKeytipData(keytipDataProps);\n\n  return children({\n    [DATAKTP_TARGET]: keytipId,\n    [DATAKTP_EXECUTE_TARGET]: keytipId,\n    'aria-describedby': ariaDescribedBy,\n  });\n};\n"]}