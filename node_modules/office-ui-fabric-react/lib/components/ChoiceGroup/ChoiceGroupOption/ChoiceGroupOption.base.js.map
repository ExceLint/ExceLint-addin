{"version":3,"file":"ChoiceGroupOption.base.js","sourceRoot":"../src/","sources":["components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Image } from '../../../Image';\nimport { Icon } from '../../../Icon';\nimport {\n  IChoiceGroupOptionProps,\n  IChoiceGroupOptionStyleProps,\n  IChoiceGroupOptionStyles,\n} from './ChoiceGroupOption.types';\nimport { classNamesFunction, getNativeProps, inputProperties, css, initializeComponentRef } from '../../../Utilities';\nimport { IProcessedStyleSet } from '../../../Styling';\nimport { composeRenderFunction } from '@uifabric/utilities';\n\nconst getClassNames = classNamesFunction<IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles>();\n\nconst LARGE_IMAGE_SIZE = 71;\n\n/**\n * {@docCategory ChoiceGroup}\n */\nexport class ChoiceGroupOptionBase extends React.Component<IChoiceGroupOptionProps, {}> {\n  public static defaultProps: Partial<IChoiceGroupOptionProps> = {\n    // This ensures default imageSize value doesn't mutate. Mutation can cause style re-calcuation.\n    imageSize: { width: 32, height: 32 },\n  };\n\n  private _classNames: IProcessedStyleSet<IChoiceGroupOptionStyles>;\n\n  constructor(props: IChoiceGroupOptionProps) {\n    super(props);\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const {\n      ariaLabel,\n      focused,\n      required,\n      theme,\n      iconProps,\n      imageSrc,\n      imageSize,\n      disabled,\n      // eslint-disable-next-line deprecation/deprecation\n      checked,\n      id,\n      styles,\n      name,\n      onRenderField = this._onRenderField,\n      ...rest\n    } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      hasIcon: !!iconProps,\n      hasImage: !!imageSrc,\n      checked,\n      disabled,\n      imageIsLarge: !!imageSrc && (imageSize!.width > LARGE_IMAGE_SIZE || imageSize!.height > LARGE_IMAGE_SIZE),\n      imageSize,\n      focused,\n    });\n\n    const { className, ...nativeProps } = getNativeProps<{ className: string }>(rest, inputProperties);\n\n    return (\n      <div className={this._classNames.root}>\n        <div className={this._classNames.choiceFieldWrapper}>\n          <input\n            aria-label={ariaLabel}\n            id={id}\n            className={css(this._classNames.input, className)}\n            type=\"radio\"\n            name={name}\n            disabled={disabled}\n            checked={checked}\n            required={required}\n            {...nativeProps}\n            onChange={this._onChange}\n            onFocus={this._onFocus}\n            onBlur={this._onBlur}\n          />\n          {onRenderField(this.props, this._onRenderField)}\n        </div>\n      </div>\n    );\n  }\n\n  private _onChange = (evt: React.FormEvent<HTMLInputElement>): void => {\n    const { onChange } = this.props;\n    if (onChange) {\n      onChange(evt, this.props);\n    }\n  };\n\n  private _onBlur = (evt: React.FocusEvent<HTMLElement>) => {\n    const { onBlur } = this.props;\n    if (onBlur) {\n      onBlur(evt, this.props);\n    }\n  };\n\n  private _onFocus = (evt: React.FocusEvent<HTMLElement>) => {\n    const { onFocus } = this.props;\n    if (onFocus) {\n      onFocus(evt, this.props);\n    }\n  };\n\n  private _onRenderField = (props: IChoiceGroupOptionProps): JSX.Element => {\n    const { id, imageSrc, imageAlt = '', selectedImageSrc, iconProps } = props;\n\n    const imageSize = props.imageSize ? props.imageSize : { width: 32, height: 32 };\n\n    const onRenderLabel = props.onRenderLabel\n      ? composeRenderFunction(props.onRenderLabel, this._onRenderLabel)\n      : this._onRenderLabel;\n\n    const label = onRenderLabel(props);\n\n    return (\n      <label htmlFor={id} className={this._classNames.field}>\n        {imageSrc && (\n          <div className={this._classNames.innerField}>\n            <div className={this._classNames.imageWrapper}>\n              <Image src={imageSrc} alt={imageAlt} width={imageSize.width} height={imageSize.height} />\n            </div>\n            <div className={this._classNames.selectedImageWrapper}>\n              <Image src={selectedImageSrc} alt={imageAlt} width={imageSize.width} height={imageSize.height} />\n            </div>\n          </div>\n        )}\n        {iconProps && (\n          <div className={this._classNames.innerField}>\n            <div className={this._classNames.iconWrapper}>\n              <Icon {...iconProps} />\n            </div>\n          </div>\n        )}\n        {imageSrc || iconProps ? <div className={this._classNames.labelWrapper}>{label}</div> : label}\n      </label>\n    );\n  };\n\n  private _onRenderLabel = (props: IChoiceGroupOptionProps): JSX.Element => {\n    return (\n      <span id={props.labelId} className=\"ms-ChoiceFieldLabel\">\n        {props.text}\n      </span>\n    );\n  };\n}\n"]}