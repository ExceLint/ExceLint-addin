{"version":3,"file":"Dialog.base.js","sourceRoot":"../src/","sources":["components/Dialog/Dialog.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { warnDeprecations, classNamesFunction, getId } from '../../Utilities';\nimport { IDialogProps, IDialogStyleProps, IDialogStyles } from './Dialog.types';\nimport { DialogType, IDialogContentProps } from './DialogContent.types';\nimport { Modal, IModalProps, IDragOptions } from '../../Modal';\nimport { ILayerProps } from '../../Layer';\nimport { withResponsiveMode } from '../../utilities/decorators/withResponsiveMode';\n\nconst getClassNames = classNamesFunction<IDialogStyleProps, IDialogStyles>();\n\nimport { DialogContent } from './DialogContent';\n\nconst DefaultModalProps: IModalProps = {\n  isDarkOverlay: false,\n  isBlocking: false,\n  className: '',\n  containerClassName: '',\n  topOffsetFixed: false,\n};\n\nconst DefaultDialogContentProps: IDialogContentProps = {\n  type: DialogType.normal,\n  className: '',\n  topButtonsProps: [],\n};\n\n@withResponsiveMode\nexport class DialogBase extends React.Component<IDialogProps, {}> {\n  public static defaultProps: IDialogProps = {\n    hidden: true,\n  };\n\n  private _id: string;\n  private _defaultTitleTextId: string;\n  private _defaultSubTextId: string;\n\n  constructor(props: IDialogProps) {\n    super(props);\n\n    this._id = getId('Dialog');\n    this._defaultTitleTextId = this._id + '-title';\n    this._defaultSubTextId = this._id + '-subText';\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations('Dialog', props, {\n        isOpen: 'hidden',\n        type: 'dialogContentProps.type',\n        subText: 'dialogContentProps.subText',\n        contentClassName: 'dialogContentProps.className',\n        topButtonsProps: 'dialogContentProps.topButtonsProps',\n        className: 'modalProps.className',\n        isDarkOverlay: 'modalProps.isDarkOverlay',\n        isBlocking: 'modalProps.isBlocking',\n        containerClassName: 'modalProps.containerClassName',\n        onDismissed: 'modalProps.onDismissed',\n        onLayerDidMount: 'modalProps.layerProps.onLayerDidMount',\n        ariaDescribedById: 'modalProps.subtitleAriaId',\n        ariaLabelledById: 'modalProps.titleAriaId',\n      });\n    }\n  }\n\n  public render(): JSX.Element {\n    const {\n      /* eslint-disable deprecation/deprecation */\n      className,\n      containerClassName,\n      contentClassName,\n      elementToFocusOnDismiss,\n      firstFocusableSelector,\n      forceFocusInsideTrap,\n      styles,\n      hidden,\n      ignoreExternalFocusing,\n      isBlocking,\n      isClickableOutsideFocusTrap,\n      isDarkOverlay,\n      isOpen,\n      onDismiss,\n      onDismissed,\n      onLayerDidMount,\n      responsiveMode,\n      subText,\n      theme,\n      title,\n      topButtonsProps,\n      type,\n      /* eslint-enable deprecation/deprecation */\n      minWidth,\n      maxWidth,\n      modalProps,\n    } = this.props;\n\n    const mergedLayerProps: ILayerProps = {\n      ...(modalProps ? modalProps.layerProps : { onLayerDidMount }),\n    };\n    if (onLayerDidMount && !mergedLayerProps.onLayerDidMount) {\n      mergedLayerProps.onLayerDidMount = onLayerDidMount;\n    }\n\n    let dialogDraggableClassName: string | undefined;\n    let dragOptions: IDragOptions | undefined;\n\n    // if we are draggable, make sure we are using the correct\n    // draggable classname and selectors\n    if (modalProps && modalProps.dragOptions && !modalProps.dragOptions.dragHandleSelector) {\n      dialogDraggableClassName = 'ms-Dialog-draggable-header';\n      dragOptions = {\n        ...modalProps.dragOptions,\n        dragHandleSelector: `.${dialogDraggableClassName}`,\n      };\n    } else {\n      dragOptions = modalProps && modalProps.dragOptions;\n    }\n\n    const mergedModalProps = {\n      ...DefaultModalProps,\n      className,\n      containerClassName,\n      isBlocking,\n      isDarkOverlay,\n      onDismissed,\n      ...modalProps,\n      layerProps: mergedLayerProps,\n      dragOptions,\n    };\n\n    const dialogContentProps: IDialogContentProps = {\n      className: contentClassName,\n      subText,\n      title,\n      topButtonsProps,\n      type,\n      ...DefaultDialogContentProps,\n      ...this.props.dialogContentProps,\n      draggableHeaderClassName: dialogDraggableClassName,\n      titleProps: {\n        // eslint-disable-next-line deprecation/deprecation\n        id: this.props.dialogContentProps?.titleId || this._defaultTitleTextId,\n        ...this.props.dialogContentProps?.titleProps,\n      },\n    };\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className: mergedModalProps.className,\n      containerClassName: mergedModalProps.containerClassName,\n      hidden,\n      dialogDefaultMinWidth: minWidth,\n      dialogDefaultMaxWidth: maxWidth,\n    });\n\n    return (\n      <Modal\n        elementToFocusOnDismiss={elementToFocusOnDismiss}\n        firstFocusableSelector={firstFocusableSelector}\n        forceFocusInsideTrap={forceFocusInsideTrap}\n        ignoreExternalFocusing={ignoreExternalFocusing}\n        isClickableOutsideFocusTrap={isClickableOutsideFocusTrap}\n        onDismissed={mergedModalProps.onDismissed}\n        responsiveMode={responsiveMode}\n        {...mergedModalProps}\n        isDarkOverlay={mergedModalProps.isDarkOverlay}\n        isBlocking={mergedModalProps.isBlocking}\n        isOpen={isOpen !== undefined ? isOpen : !hidden}\n        className={classNames.root}\n        containerClassName={classNames.main}\n        onDismiss={onDismiss ? onDismiss : mergedModalProps.onDismiss}\n        subtitleAriaId={this._getSubTextId()}\n        titleAriaId={this._getTitleTextId()}\n      >\n        <DialogContent\n          subTextId={this._defaultSubTextId}\n          title={dialogContentProps.title}\n          subText={dialogContentProps.subText}\n          showCloseButton={mergedModalProps.isBlocking}\n          topButtonsProps={dialogContentProps.topButtonsProps}\n          type={dialogContentProps.type}\n          onDismiss={onDismiss ? onDismiss : dialogContentProps.onDismiss}\n          className={dialogContentProps.className}\n          {...dialogContentProps}\n        >\n          {this.props.children}\n        </DialogContent>\n      </Modal>\n    );\n  }\n\n  private _getSubTextId = (): string | undefined => {\n    // eslint-disable-next-line deprecation/deprecation\n    const { ariaDescribedById, modalProps, dialogContentProps, subText } = this.props;\n    let id = (modalProps && modalProps.subtitleAriaId) || ariaDescribedById;\n\n    if (!id) {\n      id = ((dialogContentProps && dialogContentProps.subText) || subText) && this._defaultSubTextId;\n    }\n\n    return id;\n  };\n\n  private _getTitleTextId = (): string | undefined => {\n    // eslint-disable-next-line deprecation/deprecation\n    const { ariaLabelledById, modalProps, dialogContentProps, title } = this.props;\n    let id = (modalProps && modalProps.titleAriaId) || ariaLabelledById;\n\n    if (!id) {\n      id = ((dialogContentProps && dialogContentProps.title) || title) && this._defaultTitleTextId;\n    }\n\n    return id;\n  };\n}\n"]}