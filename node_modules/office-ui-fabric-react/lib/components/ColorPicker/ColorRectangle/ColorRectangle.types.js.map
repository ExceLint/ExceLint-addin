{"version":3,"file":"ColorRectangle.types.js","sourceRoot":"../src/","sources":["components/ColorPicker/ColorRectangle/ColorRectangle.types.ts"],"names":[],"mappings":"","sourcesContent":["import { ITheme, IStyle } from '../../../Styling';\r\nimport { IBaseProps, IRefObject, IStyleFunctionOrObject } from '../../../Utilities';\r\nimport { IColor } from '../../../utilities/color/interfaces';\r\n\r\nexport interface IColorRectangle {\r\n  /** Currently selected color. */\r\n  color: IColor;\r\n}\r\n\r\nexport interface IColorRectangleProps extends IBaseProps<IColorRectangle> {\r\n  /**\r\n   * Gets the component ref.\r\n   */\r\n  componentRef?: IRefObject<IColorRectangle>;\r\n\r\n  /**\r\n   * Current color of the rectangle.\r\n   */\r\n  color: IColor;\r\n\r\n  /**\r\n   * Minimum width and height.\r\n   */\r\n  minSize?: number;\r\n\r\n  /**\r\n   * Additional CSS class(es) to apply to the ColorRectangle.\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * Theme (provided through customization).\r\n   */\r\n  theme?: ITheme;\r\n\r\n  /**\r\n   * Call to provide customized styling that will layer on top of the variant rules.\r\n   */\r\n  styles?: IStyleFunctionOrObject<IColorRectangleStyleProps, IColorRectangleStyles>;\r\n\r\n  /**\r\n   * Callback for when the color changes.\r\n   * @deprecated Use `onChange`\r\n   */\r\n  onSVChanged?: (s: number, v: number) => void;\r\n\r\n  /**\r\n   * Callback for when the color changes.\r\n   */\r\n  onChange?: (ev: React.MouseEvent<HTMLElement>, color: IColor) => void;\r\n}\r\n\r\nexport interface IColorRectangleStyleProps {\r\n  /**\r\n   * Theme (provided through customization).\r\n   */\r\n  theme: ITheme;\r\n\r\n  /**\r\n   * Additional CSS class(es) to apply to the ColorRectangle.\r\n   */\r\n  className?: string;\r\n}\r\n\r\nexport interface IColorRectangleStyles {\r\n  /**\r\n   * Style set for the root element.\r\n   */\r\n  root?: IStyle;\r\n\r\n  /**\r\n   * Style set for the light-colored rectangle.\r\n   */\r\n  light?: IStyle;\r\n\r\n  /**\r\n   * Style set for the dark-colored rectangle.\r\n   */\r\n  dark?: IStyle;\r\n\r\n  /**\r\n   * Style set for the draggable thumb element.\r\n   */\r\n  thumb?: IStyle;\r\n}\r\n"]}