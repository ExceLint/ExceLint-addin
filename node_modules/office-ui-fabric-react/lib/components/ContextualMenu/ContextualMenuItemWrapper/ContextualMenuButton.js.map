{"version":3,"file":"ContextualMenuButton.js","sourceRoot":"../src/","sources":["components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuButton.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { buttonProperties, getNativeProps } from '../../../Utilities';\r\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\r\nimport { KeytipData } from '../../../KeytipData';\r\nimport { getIsChecked, isItemDisabled, hasSubmenu } from '../../../utilities/contextualMenu/index';\r\nimport { ContextualMenuItem } from '../ContextualMenuItem';\r\n\r\nexport class ContextualMenuButton extends ContextualMenuItemWrapper {\r\n  private _btn = React.createRef<HTMLButtonElement>();\r\n\r\n  public render() {\r\n    const {\r\n      item,\r\n      classNames,\r\n      index,\r\n      focusableElementIndex,\r\n      totalItemCount,\r\n      hasCheckmarks,\r\n      hasIcons,\r\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\r\n      expandedMenuItemKey,\r\n      onItemMouseDown,\r\n      onItemClick,\r\n      openSubMenu,\r\n      dismissSubMenu,\r\n      dismissMenu\r\n    } = this.props;\r\n\r\n    const subMenuId = this._getSubMenuId(item);\r\n\r\n    const isChecked: boolean | null | undefined = getIsChecked(item);\r\n    const canCheck: boolean = isChecked !== null;\r\n    const defaultRole = canCheck ? 'menuitemcheckbox' : 'menuitem';\r\n    const itemHasSubmenu = hasSubmenu(item);\r\n    const { itemProps, ariaLabel } = item;\r\n\r\n    const buttonNativeProperties = getNativeProps(item, buttonProperties);\r\n    // Do not add the disabled attribute to the button so that it is focusable\r\n    delete (buttonNativeProperties as any).disabled;\r\n\r\n    const itemButtonProperties = {\r\n      className: classNames.root,\r\n      onClick: this._onItemClick,\r\n      onKeyDown: itemHasSubmenu ? this._onItemKeyDown : null,\r\n      onMouseEnter: this._onItemMouseEnter,\r\n      onMouseLeave: this._onItemMouseLeave,\r\n      onMouseDown: (ev: any) => (onItemMouseDown ? onItemMouseDown(item, ev) : undefined),\r\n      onMouseMove: this._onItemMouseMove,\r\n      href: item.href,\r\n      title: item.title,\r\n      'aria-label': ariaLabel,\r\n      'aria-haspopup': itemHasSubmenu || undefined,\r\n      'aria-owns': item.key === expandedMenuItemKey ? subMenuId : undefined,\r\n      'aria-expanded': itemHasSubmenu ? item.key === expandedMenuItemKey : undefined,\r\n      'aria-checked': canCheck ? !!isChecked : undefined,\r\n      'aria-posinset': focusableElementIndex + 1,\r\n      'aria-setsize': totalItemCount,\r\n      'aria-disabled': isItemDisabled(item),\r\n      role: item.role || defaultRole,\r\n      style: item.style\r\n    };\r\n\r\n    let { keytipProps } = item;\r\n    if (keytipProps && itemHasSubmenu) {\r\n      keytipProps = {\r\n        ...keytipProps,\r\n        hasMenu: true\r\n      };\r\n    }\r\n\r\n    return (\r\n      <KeytipData\r\n        keytipProps={keytipProps}\r\n        ariaDescribedBy={(buttonNativeProperties as any)['aria-describedby']}\r\n        disabled={isItemDisabled(item)}\r\n      >\r\n        {(keytipAttributes: any): JSX.Element => (\r\n          <button\r\n            ref={this._btn}\r\n            {...buttonNativeProperties as React.ButtonHTMLAttributes<HTMLButtonElement>}\r\n            {...itemButtonProperties as React.ButtonHTMLAttributes<HTMLButtonElement>}\r\n            {...keytipAttributes}\r\n          >\r\n            <ChildrenRenderer\r\n              componentRef={item.componentRef}\r\n              item={item}\r\n              classNames={classNames}\r\n              index={index}\r\n              onCheckmarkClick={hasCheckmarks && onItemClick ? onItemClick : undefined}\r\n              hasIcons={hasIcons}\r\n              openSubMenu={openSubMenu}\r\n              dismissSubMenu={dismissSubMenu}\r\n              dismissMenu={dismissMenu}\r\n              getSubmenuTarget={this._getSubmenuTarget}\r\n              {...itemProps}\r\n            />\r\n          </button>\r\n        )}\r\n      </KeytipData>\r\n    );\r\n  }\r\n\r\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\r\n    return this._btn.current ? this._btn.current : undefined;\r\n  };\r\n}\r\n"]}