{"version":3,"file":"ContextualMenu.CustomMenuItem.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.CustomMenuItem.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,sBAAsB,EAAE,MAAM,2CAA2C,CAAC;AAEnF,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAClE,OAAO,8BAA8B,CAAC;AAEtC;IAA6D,mEAAe;IAC1E,iDAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAIb;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,WAAW,EAAE,KAAK;SACnB,CAAC;;IACJ,CAAC;IAEM,wDAAM,GAAb;QACE,OAAO,CACL;YACE,oBAAC,aAAa,IACZ,IAAI,EAAC,0BAA0B,EAC/B,SAAS,EAAE;oBACT,kBAAkB,EAAE,IAAI;oBACxB,KAAK,EAAE;wBACL;4BACE,GAAG,EAAE,SAAS;4BACd,IAAI,EAAE,KAAK;yBACZ;wBACD;4BACE,GAAG,EAAE,WAAW;4BAChB,QAAQ,EAAE,sBAAsB,CAAC,OAAO;yBACzC;wBACD;4BACE,GAAG,EAAE,QAAQ;4BACb,IAAI,EAAE,QAAQ;yBACf;wBACD;4BACE,GAAG,EAAE,MAAM;4BACX,IAAI,EAAE,MAAM;yBACb;wBACD;4BACE,GAAG,EAAE,YAAY;4BACjB,IAAI,EAAE,YAAY;yBACnB;wBACD;4BACE,GAAG,EAAE,UAAU;4BACf,IAAI,EAAE,eAAe;4BACrB,QAAQ,EAAE,IAAI;yBACf;qBACF;oBACD,oBAAoB,EAAE,UAAC,KAA+B,IAAK,OAAA;;wBAAsB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAO,EAA5C,CAA4C;iBACxG,GACD,CACE,CACP,CAAC;IACJ,CAAC;IACH,8CAAC;AAAD,CAAC,AAhDD,CAA6D,KAAK,CAAC,SAAS,GAgD3E","sourcesContent":["import * as React from 'react';\r\nimport { ContextualMenuItemType } from 'office-ui-fabric-react/lib/ContextualMenu';\r\nimport { IContextualMenuItemProps } from 'office-ui-fabric-react/lib/ContextualMenu';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport './ContextualMenuExample.scss';\r\n\r\nexport class ContextualMenuWithCustomMenuItemExample extends React.Component {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      showCallout: false\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div>\r\n        <DefaultButton\r\n          text=\"Click for ContextualMenu\"\r\n          menuProps={{\r\n            shouldFocusOnMount: true,\r\n            items: [\r\n              {\r\n                key: 'newItem',\r\n                text: 'New'\r\n              },\r\n              {\r\n                key: 'divider_1',\r\n                itemType: ContextualMenuItemType.Divider\r\n              },\r\n              {\r\n                key: 'rename',\r\n                text: 'Rename'\r\n              },\r\n              {\r\n                key: 'edit',\r\n                text: 'Edit'\r\n              },\r\n              {\r\n                key: 'properties',\r\n                text: 'Properties'\r\n              },\r\n              {\r\n                key: 'disabled',\r\n                text: 'Disabled item',\r\n                disabled: true\r\n              }\r\n            ],\r\n            contextualMenuItemAs: (props: IContextualMenuItemProps) => <div>Custom rendered {props.item.text}</div>\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}