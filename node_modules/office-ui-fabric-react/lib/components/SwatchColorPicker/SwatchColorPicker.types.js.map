{"version":3,"file":"SwatchColorPicker.types.js","sourceRoot":"../src/","sources":["components/SwatchColorPicker/SwatchColorPicker.types.ts"],"names":[],"mappings":"","sourcesContent":["import { IStyle, ITheme } from '../../Styling';\r\nimport { IStyleFunctionOrObject } from '../../Utilities';\r\nimport { IColorCellProps, IColorPickerGridCellStyleProps, IColorPickerGridCellStyles } from './ColorPickerGridCell.types';\r\n\r\nexport interface ISwatchColorPickerProps {\r\n  /**\r\n   * the number of columns for the swatch color picker\r\n   */\r\n  columnCount: number;\r\n\r\n  /**\r\n   * The id for the swatch color picker\r\n   */\r\n  id?: string;\r\n\r\n  /**\r\n   * Additional class name to provide on the root element\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * The shape of the color cells, defaults to circle\r\n   */\r\n  cellShape?: 'circle' | 'square';\r\n\r\n  /**\r\n   * The id of color cell that is currently selected\r\n   */\r\n  selectedId?: string;\r\n\r\n  /**\r\n   * The color cells that will be made available to the user\r\n   */\r\n  colorCells: IColorCellProps[];\r\n\r\n  /**\r\n   * Callback issued when the user changes the color.\r\n   * Note, if no id or color is given, there is no selected cell\r\n   * (e.g. the user executed the currently selected cell to unselect it)\r\n   */\r\n  onColorChanged?: (id?: string, color?: string) => void;\r\n\r\n  /**\r\n   * Callback issued when the user hovers over a color cell.\r\n   * Note, if no id or color is given, cells are not longer being hovered\r\n   */\r\n  onCellHovered?: (id?: string, color?: string) => void;\r\n\r\n  /**\r\n   * Callback issued when the user focuses a color cell.\r\n   * Note, if no id or color is given, cells are not longer being focused\r\n   */\r\n  onCellFocused?: (id?: string, color?: string) => void;\r\n\r\n  /**\r\n   * Is this swatch color picker disabled?\r\n   */\r\n  disabled?: boolean;\r\n\r\n  /**\r\n   * The optional position this grid is in the parent set (index in a parent menu, for example)\r\n   */\r\n  positionInSet?: number;\r\n\r\n  /**\r\n   * The optional size of the parent set (size of parent menu, for example)\r\n   */\r\n  setSize?: number;\r\n\r\n  /**\r\n   * Should focus cycle to the beginning of once the user navigates past the end (and vice versa).\r\n   * This prop is only relevant if doNotcontainWithinFocusZone is not true\r\n   * @defaultvalue true\r\n   */\r\n  shouldFocusCircularNavigate?: boolean;\r\n\r\n  /**\r\n   * If true do not contain the grid inside of a FocusZone.\r\n   * If false contain the grid inside of a FocusZone.\r\n   */\r\n  doNotContainWithinFocusZone?: boolean;\r\n\r\n  /**\r\n   * The distance between cells, in pixels\r\n   * @defaultvalue 10\r\n   */\r\n  cellMargin?: number;\r\n\r\n  /**\r\n   * Height of an individual cell, in pixels\r\n   * @defaultvalue 20\r\n   */\r\n  cellHeight?: number;\r\n\r\n  /**\r\n   * Width of an individual cell, in pixels\r\n   * @defaultvalue 20\r\n   */\r\n  cellWidth?: number;\r\n\r\n  /**\r\n   * Width of the border indicating a hovered/selected cell, in pixels\r\n   * If `cellWidth` is less than 24px, then default value is 2px. Otherwise it defaults to 4px.\r\n   * @defaultvalue 2\r\n   */\r\n  cellBorderWidth?: number;\r\n\r\n  /**\r\n   * Theme to apply to the component.\r\n   */\r\n  theme?: ITheme;\r\n\r\n  /**\r\n   * Optional styles for the component.\r\n   */\r\n  styles?: IStyleFunctionOrObject<ISwatchColorPickerStyleProps, ISwatchColorPickerStyles>;\r\n\r\n  /**\r\n   * Optional styles for the component.\r\n   */\r\n  getColorGridCellStyles?: IStyleFunctionOrObject<IColorPickerGridCellStyleProps, IColorPickerGridCellStyles>;\r\n\r\n  /**\r\n   * Optional, whether to update focus when a cell is hovered.\r\n   * @defaultvalue false\r\n   */\r\n  focusOnHover?: boolean;\r\n\r\n  /**\r\n   * Selector to focus on mouseLeave\r\n   * SHOULD ONLY BE USED IN CONJUNCTION WITH focusOnHover\r\n   */\r\n  mouseLeaveParentSelector?: string | undefined;\r\n}\r\n\r\n/**\r\n * Properties required to build the styles for the color picker component.\r\n */\r\nexport interface ISwatchColorPickerStyleProps {\r\n  /**\r\n   * Theme to apply to the container\r\n   */\r\n  theme: ITheme;\r\n\r\n  /**\r\n   * Custom className to apply to the container.\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * The distance between cells\r\n   */\r\n  cellMargin?: number;\r\n}\r\n\r\n/**\r\n * Styles for the Color Picker Component.\r\n */\r\nexport interface ISwatchColorPickerStyles {\r\n  /**\r\n   * Style applied to the container grid of the swatchColorPicker\r\n   */\r\n  root: IStyle;\r\n\r\n  /**\r\n   * Style for the table cells of the grid.\r\n   */\r\n  tableCell: IStyle;\r\n\r\n  /**\r\n   * Optional, style for the FocusZone container for the grid\r\n   */\r\n  focusedContainer?: IStyle;\r\n}\r\n"]}