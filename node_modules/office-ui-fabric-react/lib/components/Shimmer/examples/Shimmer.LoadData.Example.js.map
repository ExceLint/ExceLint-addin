{"version":3,"file":"Shimmer.LoadData.Example.js","sourceRoot":"../src/","sources":["components/Shimmer/examples/Shimmer.LoadData.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Shimmer, ShimmerElementsGroup, ShimmerElementType } from 'office-ui-fabric-react/lib/Shimmer';\r\nimport { Persona, PersonaSize, PersonaPresence, IPersonaProps } from 'office-ui-fabric-react/lib/Persona';\r\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\r\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\r\n\r\nconst wrapperClass = mergeStyles({\r\n  padding: 2,\r\n  selectors: {\r\n    '& > *': {\r\n      margin: '10px 0'\r\n    }\r\n  }\r\n});\r\n\r\nexport interface IShimmerLoadDataExampleState {\r\n  isDataLoadedOne?: boolean;\r\n  isDataLoadedTwo?: boolean;\r\n  contentOne?: string;\r\n  examplePersona?: IPersonaProps;\r\n}\r\n\r\nexport class ShimmerLoadDataExample extends React.Component<{}, IShimmerLoadDataExampleState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      isDataLoadedOne: false,\r\n      isDataLoadedTwo: false,\r\n      contentOne: '',\r\n      examplePersona: {}\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { isDataLoadedOne, isDataLoadedTwo, contentOne, examplePersona } = this.state;\r\n\r\n    return (\r\n      <div className={wrapperClass}>\r\n        <Toggle checked={isDataLoadedOne} onChange={this._getContentOne} onText=\"Toggle to show shimmer\" offText=\"Toggle to load content\" />\r\n        <Shimmer isDataLoaded={isDataLoadedOne} ariaLabel=\"Loading content\">\r\n          <div\r\n            style={{\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              whiteSpace: 'nowrap',\r\n              lineHeight: '1',\r\n              minHeight: '16px' // Default height of Shimmer when no elements being provided.\r\n            }}\r\n          >\r\n            {contentOne}\r\n            {contentOne}\r\n            {contentOne}\r\n          </div>\r\n        </Shimmer>\r\n        <Toggle checked={isDataLoadedTwo} onChange={this._getContentTwo} onText=\"Toggle to show shimmer\" offText=\"Toggle to load content\" />\r\n        <Shimmer customElementsGroup={this._getCustomElements()} width={300} isDataLoaded={isDataLoadedTwo}>\r\n          <Persona {...examplePersona} size={PersonaSize.size40} presence={PersonaPresence.away} />\r\n        </Shimmer>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _getContentOne = (ev: React.MouseEvent<HTMLElement>, checked: boolean): void => {\r\n    const { isDataLoadedOne } = this.state;\r\n    this.setState({\r\n      isDataLoadedOne: checked,\r\n      contentOne: !isDataLoadedOne ? 'Congratulations!!! You have successfully loaded the content. ' : ''\r\n    });\r\n  };\r\n\r\n  private _getContentTwo = (ev: React.MouseEvent<HTMLElement>, checked: boolean): void => {\r\n    const { isDataLoadedTwo } = this.state;\r\n    this.setState({\r\n      isDataLoadedTwo: checked,\r\n      examplePersona: !isDataLoadedTwo\r\n        ? {\r\n            imageUrl: 'https://static2.sharepointonline.com/files/fabric/office-ui-fabric-react-assets/persona-female.png',\r\n            imageInitials: 'AL',\r\n            primaryText: 'Annie Lindqvist',\r\n            secondaryText: 'Software Engineer'\r\n          }\r\n        : {}\r\n    });\r\n  };\r\n\r\n  private _getCustomElements = (): JSX.Element => {\r\n    return (\r\n      <div style={{ display: 'flex' }}>\r\n        <ShimmerElementsGroup\r\n          shimmerElements={[{ type: ShimmerElementType.circle, height: 40 }, { type: ShimmerElementType.gap, width: 16, height: 40 }]}\r\n        />\r\n        <ShimmerElementsGroup\r\n          flexWrap={true}\r\n          width=\"100%\"\r\n          shimmerElements={[\r\n            { type: ShimmerElementType.line, width: '100%', height: 10, verticalAlign: 'bottom' },\r\n            { type: ShimmerElementType.line, width: '90%', height: 8 },\r\n            { type: ShimmerElementType.gap, width: '10%', height: 20 }\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n"]}