{"version":3,"file":"DocumentCardActions.base.js","sourceRoot":"../src/","sources":["components/DocumentCard/DocumentCardActions.base.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,aAAa,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AACpE,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAElC,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAG1C,IAAM,aAAa,GAAG,kBAAkB,EAA8D,CAAC;AAEvG;IAA6C,mDAA6C;IAA1F;;IA+BA,CAAC;IA5BQ,wCAAM,GAAb;QAAA,iBA2BC;QA1BO,IAAA,eAAyD,EAAvD,oBAAO,EAAE,gBAAK,EAAE,kBAAM,EAAE,gBAAK,EAAE,wBAAS,CAAgB;QAEhE,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,MAAO,EAAE;YACxC,KAAK,EAAE,KAAM;YACb,SAAS,WAAA;SACV,CAAC,CAAC;QAEH,OAAO,CACL,6BAAK,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;YAClC,OAAO;gBACN,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,KAAK;oBACxB,OAAO,CACL,6BAAK,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK;wBACjD,oBAAC,UAAU,uBAAK,MAAM,EAAI,CACtB,CACP,CAAC;gBACJ,CAAC,CAAC;YAEH,KAAM,GAAG,CAAC,IAAI,CACb,6BAAK,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;gBACpC,oBAAC,IAAI,IAAC,QAAQ,EAAC,MAAM,EAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,GAAI;gBAC9D,KAAK,CACF,CACP,CACG,CACP,CAAC;IACJ,CAAC;IACH,8BAAC;AAAD,CAAC,AA/BD,CAA6C,aAAa,GA+BzD","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, classNamesFunction } from '../../Utilities';\r\nimport { Icon } from '../../Icon';\r\nimport { IDocumentCardActionsProps, IDocumentCardActionsStyleProps, IDocumentCardActionsStyles } from './DocumentCardActions.types';\r\nimport { IconButton } from '../../Button';\r\nimport { IProcessedStyleSet } from '../../Styling';\r\n\r\nconst getClassNames = classNamesFunction<IDocumentCardActionsStyleProps, IDocumentCardActionsStyles>();\r\n\r\nexport class DocumentCardActionsBase extends BaseComponent<IDocumentCardActionsProps, any> {\r\n  private _classNames: IProcessedStyleSet<IDocumentCardActionsStyles>;\r\n\r\n  public render(): JSX.Element {\r\n    const { actions, views, styles, theme, className } = this.props;\r\n\r\n    this._classNames = getClassNames(styles!, {\r\n      theme: theme!,\r\n      className\r\n    });\r\n\r\n    return (\r\n      <div className={this._classNames.root}>\r\n        {actions &&\r\n          actions.map((action, index) => {\r\n            return (\r\n              <div className={this._classNames.action} key={index}>\r\n                <IconButton {...action} />\r\n              </div>\r\n            );\r\n          })}\r\n\r\n        {views! > 0 && (\r\n          <div className={this._classNames.views}>\r\n            <Icon iconName=\"View\" className={this._classNames.viewsIcon} />\r\n            {views}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}