{"version":3,"file":"DocumentCardTitle.base.js","sourceRoot":"../src/","sources":["components/DocumentCard/DocumentCardTitle.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\n\r\nimport { BaseComponent, classNamesFunction } from '../../Utilities';\r\nimport { IDocumentCardTitleProps, IDocumentCardTitleStyleProps, IDocumentCardTitleStyles } from './DocumentCardTitle.types';\r\nimport { IProcessedStyleSet } from '../../Styling';\r\n\r\nconst getClassNames = classNamesFunction<IDocumentCardTitleStyleProps, IDocumentCardTitleStyles>();\r\n\r\nexport interface IDocumentCardTitleState {\r\n  truncatedTitleFirstPiece?: string;\r\n  truncatedTitleSecondPiece?: string;\r\n}\r\n\r\nconst TRUNCATION_SEPARATOR = '&hellip;';\r\nconst TRUNCATION_MINIMUM_LENGTH = 40; // This is the length we know can fit into the min width of DocumentCard.\r\nconst TRUNCATION_MAXIMUM_LENGTH = 90 - TRUNCATION_SEPARATOR.length;\r\n\r\n// This is the length we know can fit into the min width 2 lines of DocumentCard.\r\nconst TRUNCATION_MINI_LENGTH_SECONDARY = 80;\r\nconst TRUNCATION_MAX_LENGTH_SECONDARY = 130 - TRUNCATION_SEPARATOR.length;\r\nconst TRUNCATION_FIRST_PIECE_LONGER_BY = 10;\r\nconst TRUNCATION_VERTICAL_OVERFLOW_THRESHOLD = 5;\r\n\r\nexport class DocumentCardTitleBase extends BaseComponent<IDocumentCardTitleProps, IDocumentCardTitleState> {\r\n  private _titleElement = React.createRef<HTMLDivElement>();\r\n  private _scrollTimerId: number;\r\n  private _truncatedTitleAtWidth: number;\r\n  private _isTruncated: boolean;\r\n  private _classNames: IProcessedStyleSet<IDocumentCardTitleStyles>;\r\n\r\n  constructor(props: IDocumentCardTitleProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      truncatedTitleFirstPiece: '',\r\n      truncatedTitleSecondPiece: ''\r\n    };\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    const { title, shouldTruncate, showAsSecondaryTitle } = this.props;\r\n    const miniLength = showAsSecondaryTitle ? TRUNCATION_MINI_LENGTH_SECONDARY : TRUNCATION_MINIMUM_LENGTH;\r\n    if (shouldTruncate && title && title.length > miniLength) {\r\n      if (this._doesTitleOverflow()) {\r\n        this._startTruncation(this.props);\r\n      }\r\n      this._events.on(window, 'resize', this._updateTruncation);\r\n    }\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IDocumentCardTitleProps): void {\r\n    this._events.off(window, 'resize');\r\n    this._isTruncated = false;\r\n\r\n    const miniLength = newProps.showAsSecondaryTitle ? TRUNCATION_MINI_LENGTH_SECONDARY : TRUNCATION_MINIMUM_LENGTH;\r\n    if (newProps.shouldTruncate && newProps.title && newProps.title.length > miniLength) {\r\n      this._startTruncation(newProps);\r\n      this._events.on(window, 'resize', this._updateTruncation);\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(): void {\r\n    // If we're truncating, make sure the title fits\r\n    if (this.props.shouldTruncate) {\r\n      this._shrinkTitle();\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { title, shouldTruncate, showAsSecondaryTitle, styles, theme, className } = this.props;\r\n    const { truncatedTitleFirstPiece, truncatedTitleSecondPiece } = this.state;\r\n\r\n    this._classNames = getClassNames(styles!, {\r\n      theme: theme!,\r\n      className,\r\n      showAsSecondaryTitle\r\n    });\r\n\r\n    let documentCardTitle;\r\n    if (shouldTruncate && this._isTruncated) {\r\n      documentCardTitle = (\r\n        <div className={this._classNames.root} ref={this._titleElement} title={title}>\r\n          {truncatedTitleFirstPiece}\r\n          &hellip;\r\n          {truncatedTitleSecondPiece}\r\n        </div>\r\n      );\r\n    } else {\r\n      documentCardTitle = (\r\n        <div className={this._classNames.root} ref={this._titleElement} title={title}>\r\n          {title}\r\n        </div>\r\n      );\r\n    }\r\n    return documentCardTitle;\r\n  }\r\n\r\n  private _startTruncation = (props: IDocumentCardTitleProps): void => {\r\n    const originalTitle = props.title;\r\n    this._isTruncated = false;\r\n    const miniLength = props.showAsSecondaryTitle ? TRUNCATION_MINI_LENGTH_SECONDARY : TRUNCATION_MINIMUM_LENGTH;\r\n    const maxLength = props.showAsSecondaryTitle ? TRUNCATION_MAX_LENGTH_SECONDARY : TRUNCATION_MAXIMUM_LENGTH;\r\n\r\n    // If the title is really short, there's no need to truncate it\r\n    if (originalTitle && originalTitle.length >= miniLength) {\r\n      // Break the text into two pieces for assembly later\r\n      if (originalTitle.length > maxLength) {\r\n        // The text is really long, so we can take a chunk out of the middle so the two pieces combine for the maximum length\r\n        this._isTruncated = true;\r\n        this.setState({\r\n          truncatedTitleFirstPiece: originalTitle.slice(0, maxLength / 2 + TRUNCATION_FIRST_PIECE_LONGER_BY),\r\n          truncatedTitleSecondPiece: originalTitle.slice(originalTitle.length - (maxLength / 2 - TRUNCATION_FIRST_PIECE_LONGER_BY))\r\n        });\r\n      } else {\r\n        // The text is not so long, so we'll just break it into two pieces\r\n        this.setState({\r\n          truncatedTitleFirstPiece: originalTitle.slice(0, Math.ceil(originalTitle.length / 2) + TRUNCATION_FIRST_PIECE_LONGER_BY),\r\n          truncatedTitleSecondPiece: originalTitle.slice(\r\n            originalTitle.length - Math.floor(originalTitle.length / 2) + TRUNCATION_FIRST_PIECE_LONGER_BY\r\n          )\r\n        });\r\n      }\r\n    }\r\n\r\n    // Save the width we just started truncation at, so that later we will only update truncation if necessary\r\n    if (this._titleElement.current) {\r\n      this._truncatedTitleAtWidth = this._titleElement.current.clientWidth;\r\n    }\r\n  };\r\n\r\n  private _shrinkTitle(): void {\r\n    if (this._doesTitleOverflow()) {\r\n      const { truncatedTitleFirstPiece, truncatedTitleSecondPiece } = this.state;\r\n      this._isTruncated = true;\r\n\r\n      if (truncatedTitleFirstPiece || truncatedTitleSecondPiece) {\r\n        this.setState({\r\n          truncatedTitleFirstPiece: truncatedTitleFirstPiece!.slice(0, truncatedTitleFirstPiece!.length - 1),\r\n          truncatedTitleSecondPiece: truncatedTitleSecondPiece!.slice(1)\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private _doesTitleOverflow(): boolean {\r\n    const titleElement = this._titleElement.current;\r\n\r\n    if (!titleElement) {\r\n      return false;\r\n    }\r\n\r\n    return (\r\n      titleElement.scrollHeight > titleElement.clientHeight + TRUNCATION_VERTICAL_OVERFLOW_THRESHOLD ||\r\n      titleElement.scrollWidth > titleElement.clientWidth\r\n    );\r\n  }\r\n\r\n  private _updateTruncation(): void {\r\n    // Only update truncation if the title's size has changed since the last time we truncated\r\n    if (this._titleElement.current && this._titleElement.current.clientWidth !== this._truncatedTitleAtWidth) {\r\n      // Throttle truncation so that it doesn't happen during a window resize\r\n      clearTimeout(this._scrollTimerId);\r\n      this._scrollTimerId = this._async.setTimeout(this._startTruncation.bind(this, this.props), 250);\r\n    }\r\n  }\r\n}\r\n"]}