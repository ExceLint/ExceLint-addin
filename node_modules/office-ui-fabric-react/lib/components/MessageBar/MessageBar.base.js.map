{"version":3,"file":"MessageBar.base.js","sourceRoot":"../src/","sources":["components/MessageBar/MessageBar.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  DelayedRender,\n  getId,\n  classNamesFunction,\n  getNativeProps,\n  htmlElementProperties,\n  css,\n  initializeComponentRef,\n} from '../../Utilities';\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\nimport { IMessageBarProps, IMessageBarStyleProps, IMessageBarStyles, MessageBarType } from './MessageBar.types';\n\nconst getClassNames = classNamesFunction<IMessageBarStyleProps, IMessageBarStyles>();\n\nexport interface IMessageBarState {\n  labelId?: string;\n  showContent?: boolean;\n  expandSingleLine?: boolean;\n}\n\nexport class MessageBarBase extends React.Component<IMessageBarProps, IMessageBarState> {\n  public static defaultProps: IMessageBarProps = {\n    messageBarType: MessageBarType.info,\n    onDismiss: undefined,\n    isMultiline: true,\n  };\n\n  private ICON_MAP = {\n    [MessageBarType.info]: 'Info',\n    [MessageBarType.warning]: 'Info',\n    [MessageBarType.error]: 'ErrorBadge',\n    [MessageBarType.blocked]: 'Blocked2',\n    [MessageBarType.severeWarning]: 'Warning',\n    [MessageBarType.success]: 'Completed',\n  };\n\n  private _classNames: { [key in keyof IMessageBarStyles]: string };\n\n  constructor(props: IMessageBarProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this.state = {\n      labelId: getId('MessageBar'),\n      // eslint-disable-next-line react/no-unused-state\n      showContent: false,\n      expandSingleLine: false,\n    };\n  }\n\n  public render(): JSX.Element {\n    const { isMultiline } = this.props;\n\n    this._classNames = this._getClassNames();\n\n    return isMultiline ? this._renderMultiLine() : this._renderSingleLine();\n  }\n\n  private _getActionsDiv(): JSX.Element | null {\n    if (this.props.actions) {\n      return <div className={this._classNames.actions}>{this.props.actions}</div>;\n    }\n    return null;\n  }\n\n  private _getDismissDiv(): JSX.Element | null {\n    const { onDismiss, dismissIconProps } = this.props;\n    if (onDismiss) {\n      return (\n        <IconButton\n          disabled={false}\n          className={this._classNames.dismissal}\n          onClick={onDismiss}\n          iconProps={dismissIconProps ? dismissIconProps : { iconName: 'Clear' }}\n          title={this.props.dismissButtonAriaLabel}\n          ariaLabel={this.props.dismissButtonAriaLabel}\n        />\n      );\n    }\n    return null;\n  }\n\n  private _getDismissSingleLine(): JSX.Element | null {\n    if (this.props.onDismiss) {\n      return <div className={this._classNames.dismissSingleLine}>{this._getDismissDiv()}</div>;\n    }\n    return null;\n  }\n\n  private _getExpandSingleLine(): JSX.Element | null {\n    if (!this.props.actions && this.props.truncated) {\n      return (\n        <div className={this._classNames.expandSingleLine}>\n          <IconButton\n            disabled={false}\n            className={this._classNames.expand}\n            onClick={this._onClick}\n            iconProps={{ iconName: this.state.expandSingleLine ? 'DoubleChevronUp' : 'DoubleChevronDown' }}\n            ariaLabel={this.props.overflowButtonAriaLabel}\n            aria-expanded={this.state.expandSingleLine}\n          />\n        </div>\n      );\n    }\n    return null;\n  }\n\n  private _getIconSpan(): JSX.Element {\n    const { messageBarIconProps } = this.props;\n    return (\n      <div className={this._classNames.iconContainer} aria-hidden>\n        {messageBarIconProps ? (\n          <Icon {...messageBarIconProps} className={css(this._classNames.icon, messageBarIconProps.className)} />\n        ) : (\n          <Icon iconName={this.ICON_MAP[this.props.messageBarType!]} className={this._classNames.icon} />\n        )}\n      </div>\n    );\n  }\n\n  private _renderMultiLine(): React.ReactElement<React.HTMLAttributes<HTMLAreaElement>> {\n    return (\n      <div className={this._classNames.root} {...this._getRegionProps()}>\n        <div className={this._classNames.content}>\n          {this._getIconSpan()}\n          {this._renderInnerText()}\n          {this._getDismissDiv()}\n        </div>\n        {this._getActionsDiv()}\n      </div>\n    );\n  }\n\n  private _renderSingleLine(): React.ReactElement<React.HTMLAttributes<HTMLAreaElement>> {\n    return (\n      <div className={this._classNames.root} {...this._getRegionProps()}>\n        <div className={this._classNames.content}>\n          {this._getIconSpan()}\n          {this._renderInnerText()}\n          {this._getExpandSingleLine()}\n          {this._getActionsDiv()}\n          {this._getDismissSingleLine()}\n        </div>\n      </div>\n    );\n  }\n\n  private _renderInnerText(): JSX.Element {\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLSpanElement>>(this.props, htmlElementProperties, [\n      'className',\n    ]);\n\n    return (\n      <div\n        className={this._classNames.text}\n        id={this.state.labelId}\n        role=\"status\"\n        aria-live={this._getAnnouncementPriority()}\n      >\n        <span className={this._classNames.innerText} {...nativeProps}>\n          <DelayedRender>\n            <span>{this.props.children}</span>\n          </DelayedRender>\n        </span>\n      </div>\n    );\n  }\n\n  private _getRegionProps = () => {\n    const hasActions = !!this._getActionsDiv() || !!this._getDismissDiv();\n    const regionProps = {\n      'aria-describedby': this.state.labelId,\n      role: 'region',\n    };\n\n    return hasActions ? regionProps : {};\n  };\n\n  private _getClassNames(): { [key in keyof IMessageBarStyles]: string } {\n    const { theme, className, messageBarType, onDismiss, actions, truncated, isMultiline } = this.props;\n    const { expandSingleLine } = this.state;\n\n    return getClassNames(this.props.styles!, {\n      theme: theme!,\n      messageBarType: messageBarType || MessageBarType.info,\n      onDismiss: onDismiss !== undefined,\n      actions: actions !== undefined,\n      truncated: truncated,\n      isMultiline: isMultiline,\n      expandSingleLine: expandSingleLine,\n      className,\n    });\n  }\n\n  private _getAnnouncementPriority(): 'assertive' | 'polite' {\n    switch (this.props.messageBarType) {\n      case MessageBarType.blocked:\n      case MessageBarType.error:\n      case MessageBarType.severeWarning:\n        return 'assertive';\n    }\n    return 'polite';\n  }\n\n  private _onClick = (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n    this.setState({ expandSingleLine: !this.state.expandSingleLine });\n  };\n}\n"]}