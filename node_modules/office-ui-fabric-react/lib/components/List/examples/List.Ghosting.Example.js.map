{"version":3,"file":"List.Ghosting.Example.js","sourceRoot":"../src/","sources":["components/List/examples/List.Ghosting.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,kBAAkB,EAAE,MAAM,sCAAsC,CAAC;AACrF,OAAO,EAAE,IAAI,EAAE,MAAM,iCAAiC,CAAC;AACvD,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,kCAAkC,CAAC;AACnE,OAAO,8BAA8B,CAAC;AAQtC;IAAyC,+CAA0C;IACjF,6BAAY,KAAgC;eAC1C,kBAAM,KAAK,CAAC;IACd,CAAC;IAEM,oCAAM,GAAb;QACU,IAAA,wBAAK,CAAgB;QAE7B,OAAO,CACL,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,QAAQ;YAC/C,6BAAK,SAAS,EAAC,kCAAkC,wBAAqB,IAAI;gBACxE,oBAAC,IAAI,IAAC,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC,aAAa,GAAI,CACpD,CACI,CACb,CAAC;IACJ,CAAC;IAEO,2CAAa,GAArB,UAAsB,IAAkB,EAAE,KAAa,EAAE,WAAoB;QAC3E,OAAO,CACL,6BAAK,SAAS,EAAC,iCAAiC,uBAAoB,IAAI;YACtE,oBAAC,KAAK,IACJ,SAAS,EAAC,kCAAkC,EAC5C,GAAG,EAAE,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,EAC7C,KAAK,EAAE,EAAE,EACT,MAAM,EAAE,EAAE,EACV,QAAQ,EAAE,QAAQ,CAAC,KAAK,GACxB;YACF,6BAAK,SAAS,EAAC,oCAAoC;gBACjD,6BAAK,SAAS,EAAC,iCAAiC,IAAE,IAAI,CAAC,IAAI,CAAO;gBAClE,6BAAK,SAAS,EAAC,kCAAkC,IAAE,UAAQ,KAAO,CAAO,CACrE,CACF,CACP,CAAC;IACJ,CAAC;IACH,0BAAC;AAAD,CAAC,AAlCD,CAAyC,KAAK,CAAC,SAAS,GAkCvD","sourcesContent":["import * as React from 'react';\r\nimport { FocusZone, FocusZoneDirection } from 'office-ui-fabric-react/lib/FocusZone';\r\nimport { List } from 'office-ui-fabric-react/lib/List';\r\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\r\nimport './List.Ghosting.Example.scss';\r\n\r\nexport type IExampleItem = { name: string; thumbnail: string };\r\n\r\nexport interface IListGhostingExampleProps {\r\n  items: IExampleItem[];\r\n}\r\n\r\nexport class ListGhostingExample extends React.Component<IListGhostingExampleProps> {\r\n  constructor(props: IListGhostingExampleProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { items } = this.props;\r\n\r\n    return (\r\n      <FocusZone direction={FocusZoneDirection.vertical}>\r\n        <div className=\"ms-ListGhostingExample-container\" data-is-scrollable={true}>\r\n          <List items={items} onRenderCell={this._onRenderCell} />\r\n        </div>\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  private _onRenderCell(item: IExampleItem, index: number, isScrolling: boolean): JSX.Element {\r\n    return (\r\n      <div className=\"ms-ListGhostingExample-itemCell\" data-is-focusable={true}>\r\n        <Image\r\n          className=\"ms-ListGhostingExample-itemImage\"\r\n          src={isScrolling ? undefined : item.thumbnail}\r\n          width={50}\r\n          height={50}\r\n          imageFit={ImageFit.cover}\r\n        />\r\n        <div className=\"ms-ListGhostingExample-itemContent\">\r\n          <div className=\"ms-ListGhostingExample-itemName\">{item.name}</div>\r\n          <div className=\"ms-ListGhostingExample-itemIndex\">{`Item ${index}`}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}