{"version":3,"file":"List.Basic.Example.js","sourceRoot":"../src/","sources":["components/List/examples/List.Basic.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,MAAM,sCAAsC,CAAC;AAC9D,OAAO,EAAE,SAAS,EAAE,kBAAkB,EAAE,MAAM,sCAAsC,CAAC;AACrF,OAAO,EAAE,SAAS,EAAE,MAAM,sCAAsC,CAAC;AACjE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,kCAAkC,CAAC;AACnE,OAAO,EAAE,IAAI,EAAE,MAAM,iCAAiC,CAAC;AACvD,OAAO,EAAE,IAAI,EAAE,MAAM,iCAAiC,CAAC;AACvD,OAAO,2BAA2B,CAAC;AAanC;IAAsC,4CAA+D;IACnG,0BAAY,KAA6B;QAAzC,YACE,kBAAM,KAAK,CAAC,SAQb;QANC,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAEzD,KAAI,CAAC,KAAK,GAAG;YACX,UAAU,EAAE,EAAE;YACd,KAAK,EAAE,KAAK,CAAC,KAAK;SACnB,CAAC;;IACJ,CAAC;IAEM,iCAAM,GAAb;QACU,IAAA,gCAAoB,CAAgB;QACpC,IAAA,qBAAU,EAAV,+BAAU,CAAgB;QAClC,IAAM,eAAe,GAAG,KAAK,CAAC,MAAM,KAAK,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAK,KAAK,CAAC,MAAM,YAAO,aAAa,CAAC,MAAM,YAAS,CAAC;QAE3H,OAAO,CACL,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,QAAQ;YAC/C,oBAAC,SAAS,IAAC,KAAK,EAAE,gBAAgB,GAAG,eAAe,EAAE,cAAc,EAAE,IAAI,CAAC,gBAAgB,GAAI;YAC/F,oBAAC,IAAI,IAAC,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC,aAAa,GAAI,CAC9C,CACb,CAAC;IACJ,CAAC;IAEO,2CAAgB,GAAxB,UAAyB,IAAY;QAC3B,IAAA,wBAAK,CAAgB;QAE7B,IAAI,CAAC,QAAQ,CAAC;YACZ,UAAU,EAAE,IAAI;YAChB,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,EAAxD,CAAwD,CAAC,CAAC,CAAC,CAAC,KAAK;SACrG,CAAC,CAAC;IACL,CAAC;IAEO,wCAAa,GAArB,UAAsB,IAAkB,EAAE,KAAyB;QACjE,OAAO,CACL,6BAAK,SAAS,EAAC,8BAA8B,uBAAoB,IAAI;YACnE,oBAAC,KAAK,IAAC,SAAS,EAAC,+BAA+B,EAAC,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC,KAAK,GAAI;YACzH,6BAAK,SAAS,EAAC,iCAAiC;gBAC9C,6BAAK,SAAS,EAAC,8BAA8B,IAAE,IAAI,CAAC,IAAI,CAAO;gBAC/D,6BAAK,SAAS,EAAC,+BAA+B,IAAE,UAAQ,KAAO,CAAO;gBACtE,6BAAK,SAAS,EAAC,8BAA8B,IAAE,IAAI,CAAC,WAAW,CAAO,CAClE;YACN,oBAAC,IAAI,IAAC,SAAS,EAAC,6BAA6B,EAAC,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,cAAc,GAAI,CACjG,CACP,CAAC;IACJ,CAAC;IACH,uBAAC;AAAD,CAAC,AA/CD,CAAsC,KAAK,CAAC,SAAS,GA+CpD","sourcesContent":["import * as React from 'react';\r\nimport { getRTL } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { FocusZone, FocusZoneDirection } from 'office-ui-fabric-react/lib/FocusZone';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { List } from 'office-ui-fabric-react/lib/List';\r\nimport './List.Basic.Example.scss';\r\n\r\nexport type IExampleItem = { name: string; thumbnail: string; description: string };\r\n\r\nexport interface IListBasicExampleProps {\r\n  items: IExampleItem[];\r\n}\r\n\r\nexport interface IListBasicExampleState {\r\n  filterText?: string;\r\n  items?: IExampleItem[];\r\n}\r\n\r\nexport class ListBasicExample extends React.Component<IListBasicExampleProps, IListBasicExampleState> {\r\n  constructor(props: IListBasicExampleProps) {\r\n    super(props);\r\n\r\n    this._onFilterChanged = this._onFilterChanged.bind(this);\r\n\r\n    this.state = {\r\n      filterText: '',\r\n      items: props.items\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { items: originalItems } = this.props;\r\n    const { items = [] } = this.state;\r\n    const resultCountText = items.length === originalItems.length ? '' : ` (${items.length} of ${originalItems.length} shown)`;\r\n\r\n    return (\r\n      <FocusZone direction={FocusZoneDirection.vertical}>\r\n        <TextField label={'Filter by name' + resultCountText} onBeforeChange={this._onFilterChanged} />\r\n        <List items={items} onRenderCell={this._onRenderCell} />\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  private _onFilterChanged(text: string): void {\r\n    const { items } = this.props;\r\n\r\n    this.setState({\r\n      filterText: text,\r\n      items: text ? items.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) >= 0) : items\r\n    });\r\n  }\r\n\r\n  private _onRenderCell(item: IExampleItem, index: number | undefined): JSX.Element {\r\n    return (\r\n      <div className=\"ms-ListBasicExample-itemCell\" data-is-focusable={true}>\r\n        <Image className=\"ms-ListBasicExample-itemImage\" src={item.thumbnail} width={50} height={50} imageFit={ImageFit.cover} />\r\n        <div className=\"ms-ListBasicExample-itemContent\">\r\n          <div className=\"ms-ListBasicExample-itemName\">{item.name}</div>\r\n          <div className=\"ms-ListBasicExample-itemIndex\">{`Item ${index}`}</div>\r\n          <div className=\"ms-ListBasicExample-itemDesc\">{item.description}</div>\r\n        </div>\r\n        <Icon className=\"ms-ListBasicExample-chevron\" iconName={getRTL() ? 'ChevronLeft' : 'ChevronRight'} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}