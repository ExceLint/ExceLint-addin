{"version":3,"file":"HoverCard.Basic.Example.js","sourceRoot":"../src/","sources":["components/HoverCard/examples/HoverCard.Basic.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { HoverCard, IExpandingCardProps } from 'office-ui-fabric-react/lib/HoverCard';\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { DetailsList, buildColumns, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { createListItems, IExampleItem } from 'office-ui-fabric-react/lib/utilities/exampleData';\r\nimport { mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\r\n\r\nconst classNames = mergeStyleSets({\r\n  compactCard: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%'\r\n  },\r\n  expandedCard: {\r\n    padding: '16px 24px'\r\n  },\r\n  item: {\r\n    selectors: {\r\n      '&:hover': {\r\n        textDecoration: 'underline',\r\n        cursor: 'pointer'\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport class HoverCardBasicExample extends React.Component<{}, {}> {\r\n  private _items: IExampleItem[] = createListItems(10);\r\n  private _columns: IColumn[] = this._buildColumns();\r\n\r\n  public render() {\r\n    return (\r\n      <Fabric>\r\n        <p>\r\n          Hover over the <i>location</i> cell of a row item to see the card or use the keyboard to navigate to it.\r\n        </p>\r\n        <p>When using the keyboard to tab to it, the card will open but navigation inside of it will not be available.</p>\r\n        <DetailsList setKey=\"hoverSet\" items={this._items} columns={this._columns} onRenderItemColumn={this._onRenderItemColumn} />\r\n      </Fabric>\r\n    );\r\n  }\r\n\r\n  private _onRenderItemColumn = (item: IExampleItem, index: number, column: IColumn): JSX.Element | React.ReactText => {\r\n    const expandingCardProps: IExpandingCardProps = {\r\n      onRenderCompactCard: this._onRenderCompactCard,\r\n      onRenderExpandedCard: this._onRenderExpandedCard,\r\n      renderData: item\r\n    };\r\n\r\n    if (column.key === 'location') {\r\n      return (\r\n        <HoverCard expandingCardProps={expandingCardProps} instantOpenOnClick={true}>\r\n          <div className={classNames.item}>{item.location}</div>\r\n        </HoverCard>\r\n      );\r\n    }\r\n\r\n    return item[column.key as keyof IExampleItem];\r\n  };\r\n\r\n  private _onRenderCompactCard = (item: IExampleItem): JSX.Element => {\r\n    return (\r\n      <div className={classNames.compactCard}>\r\n        <a target=\"_blank\" href={`http://wikipedia.org/wiki/${item.location}`}>\r\n          {item.location}\r\n        </a>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  private _onRenderExpandedCard = (item: IExampleItem): JSX.Element => {\r\n    return (\r\n      <div className={classNames.expandedCard}>\r\n        {item.description}\r\n        <DetailsList setKey=\"expandedCardSet\" items={this._items} columns={this._columns} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  private _buildColumns(): IColumn[] {\r\n    return buildColumns(this._items).filter(column => column.name === 'location' || column.name === 'key');\r\n  }\r\n}\r\n"]}