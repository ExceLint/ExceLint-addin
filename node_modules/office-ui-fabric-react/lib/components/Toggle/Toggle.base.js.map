{"version":3,"file":"Toggle.base.js","sourceRoot":"../src/","sources":["components/Toggle/Toggle.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  initializeComponentRef,\n  classNamesFunction,\n  getId,\n  inputProperties,\n  getNativeProps,\n  warnDeprecations,\n  warnMutuallyExclusive,\n  FocusRects,\n} from '../../Utilities';\nimport { IToggleProps, IToggle, IToggleStyleProps, IToggleStyles } from './Toggle.types';\nimport { Label } from '../../Label';\nimport { KeytipData } from '../../KeytipData';\n\nexport interface IToggleState {\n  checked: boolean;\n}\n\nconst getClassNames = classNamesFunction<IToggleStyleProps, IToggleStyles>();\nconst COMPONENT_NAME = 'Toggle';\n\nexport class ToggleBase extends React.Component<IToggleProps, IToggleState> implements IToggle {\n  private _id: string;\n  private _toggleButton = React.createRef<HTMLButtonElement>();\n\n  public static getDerivedStateFromProps(\n    nextProps: Readonly<IToggleProps>,\n    prevState: Readonly<IToggleState>,\n  ): Partial<IToggleState> | null {\n    if (nextProps.checked === undefined) {\n      return null;\n    }\n\n    return {\n      checked: !!nextProps.checked,\n    };\n  }\n\n  constructor(props: IToggleProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    warnMutuallyExclusive(COMPONENT_NAME, props, {\n      checked: 'defaultChecked',\n    });\n\n    warnDeprecations(COMPONENT_NAME, props, {\n      onAriaLabel: 'ariaLabel',\n      offAriaLabel: undefined,\n      onChanged: 'onChange',\n    });\n\n    this.state = {\n      checked: !!(props.checked || props.defaultChecked),\n    };\n    this._id = props.id || getId('Toggle');\n  }\n\n  /**\n   * Gets the current checked state of the toggle.\n   */\n  public get checked(): boolean {\n    return this.state.checked;\n  }\n\n  public render(): JSX.Element {\n    const {\n      as: RootType = 'div',\n      className,\n      theme,\n      disabled,\n      keytipProps,\n      label,\n      ariaLabel,\n      /* eslint-disable deprecation/deprecation */\n      onAriaLabel,\n      offAriaLabel,\n      /* eslint-enable deprecation/deprecation */\n      offText,\n      onText,\n      styles,\n      inlineLabel,\n    } = this.props;\n    const { checked } = this.state;\n    const stateText = checked ? onText : offText;\n    const badAriaLabel = checked ? onAriaLabel : offAriaLabel;\n    const toggleNativeProps = getNativeProps(this.props, inputProperties, ['defaultChecked']);\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      disabled,\n      checked,\n      inlineLabel,\n      onOffMissing: !onText && !offText,\n    });\n\n    const labelId = `${this._id}-label`;\n    const stateTextId = `${this._id}-stateText`;\n\n    // The following properties take priority for what Narrator should read:\n    // 1. ariaLabel\n    // 2. onAriaLabel (if checked) or offAriaLabel (if not checked)\n    // 3. label AND stateText, if existent\n\n    let labelledById: string | undefined = undefined;\n    if (!ariaLabel && !badAriaLabel) {\n      if (label) {\n        labelledById = labelId;\n      }\n      if (stateText) {\n        labelledById = labelledById ? `${labelledById} ${stateTextId}` : stateTextId;\n      }\n    }\n\n    const ariaRole = this.props.role ? this.props.role : 'switch';\n\n    const renderPill = (keytipAttributes: any = {}) => (\n      <button\n        {...toggleNativeProps}\n        {...keytipAttributes}\n        className={classNames.pill}\n        disabled={disabled}\n        id={this._id}\n        type=\"button\"\n        role={ariaRole}\n        ref={this._toggleButton}\n        aria-disabled={disabled}\n        aria-checked={checked}\n        aria-label={ariaLabel ? ariaLabel : badAriaLabel}\n        data-is-focusable={true}\n        onChange={this._noop}\n        onClick={this._onClick}\n        aria-labelledby={labelledById}\n      >\n        <span className={classNames.thumb} />\n      </button>\n    );\n\n    const pillContent = keytipProps ? (\n      <KeytipData\n        keytipProps={keytipProps}\n        ariaDescribedBy={(toggleNativeProps as any)['aria-describedby']}\n        disabled={disabled}\n      >\n        {(keytipAttributes: any): JSX.Element => renderPill(keytipAttributes)}\n      </KeytipData>\n    ) : (\n      renderPill()\n    );\n\n    return (\n      <RootType className={classNames.root} hidden={(toggleNativeProps as any).hidden}>\n        {label && (\n          <Label htmlFor={this._id} className={classNames.label} id={labelId}>\n            {label}\n          </Label>\n        )}\n\n        <div className={classNames.container}>\n          {pillContent}\n          {stateText && (\n            // This second \"htmlFor\" property is needed to allow the\n            // toggle's stateText to also trigger a state change when clicked.\n            <Label htmlFor={this._id} className={classNames.text} id={stateTextId}>\n              {stateText}\n            </Label>\n          )}\n        </div>\n        <FocusRects />\n      </RootType>\n    );\n  }\n\n  public focus() {\n    if (this._toggleButton.current) {\n      this._toggleButton.current.focus();\n    }\n  }\n\n  private _onClick = (ev: React.MouseEvent<HTMLElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    const { disabled, checked: checkedProp, onChange, onChanged, onClick } = this.props;\n    const { checked } = this.state;\n\n    if (!disabled) {\n      // Only update the state if the user hasn't provided it.\n      if (checkedProp === undefined) {\n        this.setState({\n          checked: !checked,\n        });\n      }\n\n      if (onChange) {\n        onChange(ev, !checked);\n      }\n\n      if (onChanged) {\n        onChanged(!checked);\n      }\n\n      if (onClick) {\n        onClick(ev);\n      }\n    }\n  };\n\n  private _noop(): void {\n    /* no-op */\n  }\n}\n"]}