{"version":3,"file":"Modal.base.js","sourceRoot":"../src/","sources":["components/Modal/Modal.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  classNamesFunction,\n  getId,\n  allowScrollOnElement,\n  allowOverscrollOnElement,\n  KeyCodes,\n  elementContains,\n  warnDeprecations,\n  Async,\n  EventGroup,\n} from '../../Utilities';\nimport { FocusTrapZone, IFocusTrapZone } from '../FocusTrapZone/index';\nimport { animationDuration } from './Modal.styles';\nimport { IModalProps, IModalStyleProps, IModalStyles, IModal } from './Modal.types';\nimport { Overlay } from '../../Overlay';\nimport { ILayerProps, Layer } from '../../Layer';\nimport { Popup } from '../Popup/index';\nimport { withResponsiveMode, ResponsiveMode } from '../../utilities/decorators/withResponsiveMode';\nimport { DirectionalHint } from '../Callout/index';\nimport { Icon } from '../Icon/index';\nimport { DraggableZone, ICoordinates, IDragData } from '../../utilities/DraggableZone/index';\nimport { initializeComponentRef } from '@uifabric/utilities';\n\n// @TODO - need to change this to a panel whenever the breakpoint is under medium (verify the spec)\n\nconst DefaultLayerProps: ILayerProps = {\n  eventBubblingEnabled: false,\n};\n\nexport interface IDialogState {\n  isOpen?: boolean;\n  isVisible?: boolean;\n  isVisibleClose?: boolean;\n  id?: string;\n  hasBeenOpened?: boolean;\n  modalRectangleTop?: number;\n  isModalMenuOpen?: boolean;\n  isInKeyboardMoveMode?: boolean;\n  x: number;\n  y: number;\n}\n\nconst getClassNames = classNamesFunction<IModalStyleProps, IModalStyles>();\nconst COMPONENT_NAME = 'Modal';\n\n@withResponsiveMode\nexport class ModalBase extends React.Component<IModalProps, IDialogState> implements IModal {\n  public static defaultProps: IModalProps = {\n    isOpen: false,\n    isDarkOverlay: true,\n    isBlocking: false,\n    className: '',\n    containerClassName: '',\n  };\n\n  private _onModalCloseTimer: number;\n  private _focusTrapZone = React.createRef<IFocusTrapZone>();\n  private _scrollableContent: HTMLDivElement | null;\n  private _lastSetX: number;\n  private _lastSetY: number;\n  private _allowTouchBodyScroll: boolean;\n  private _hasRegisteredKeyUp: boolean;\n  private _async: Async;\n  private _events: EventGroup;\n  private _minClampedPosition: ICoordinates;\n  private _maxClampedPosition: ICoordinates;\n\n  constructor(props: IModalProps) {\n    super(props);\n\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n    initializeComponentRef(this);\n\n    warnDeprecations(COMPONENT_NAME, props, {\n      onLayerDidMount: 'layerProps.onLayerDidMount',\n    });\n\n    this.state = {\n      id: getId('Modal'),\n      isOpen: props.isOpen,\n      isVisible: props.isOpen,\n      hasBeenOpened: props.isOpen,\n      x: 0,\n      y: 0,\n    };\n\n    this._lastSetX = 0;\n    this._lastSetY = 0;\n\n    const { allowTouchBodyScroll = false } = this.props;\n    this._allowTouchBodyScroll = allowTouchBodyScroll;\n  }\n\n  public UNSAFE_componentWillReceiveProps(newProps: IModalProps): void {\n    clearTimeout(this._onModalCloseTimer);\n\n    // Opening the dialog\n    if (newProps.isOpen) {\n      if (!this.state.isOpen) {\n        // First Open\n        this.setState({\n          isOpen: true,\n        });\n        // Add a keyUp handler for all key up events when the dialog is open\n        if (newProps.dragOptions) {\n          this._registerForKeyUp();\n        }\n      } else {\n        // Modal has been opened\n        // Reopen during closing\n        this.setState({\n          hasBeenOpened: true,\n          isVisible: true,\n        });\n\n        if (newProps.topOffsetFixed) {\n          const dialogMain = document.getElementsByClassName('ms-Dialog-main');\n          let modalRectangle;\n          if (dialogMain.length > 0) {\n            modalRectangle = dialogMain[0].getBoundingClientRect();\n            this.setState({\n              modalRectangleTop: modalRectangle.top,\n            });\n          }\n        }\n      }\n    }\n\n    // Closing the dialog\n    if (!newProps.isOpen && this.state.isOpen) {\n      this._onModalCloseTimer = this._async.setTimeout(this._onModalClose, parseFloat(animationDuration) * 1000);\n      this.setState({\n        isVisible: false,\n      });\n    }\n  }\n\n  public componentDidMount() {\n    // Not all modals show just by updating their props. Some only render when they are mounted and pass in\n    // isOpen as true. We need to add the keyUp handler in componentDidMount if we are in that case.\n    if (this.state.isOpen && this.state.isVisible) {\n      this._registerForKeyUp();\n      this._registerInitialModalPosition();\n    }\n  }\n\n  public componentDidUpdate(prevProps: IModalProps, prevState: IDialogState) {\n    if (!prevProps.isOpen && !prevState.isVisible) {\n      this.setState({\n        isVisible: true,\n      });\n    }\n    if (!prevProps.isOpen && this.props.isOpen) {\n      requestAnimationFrame(() => setTimeout(this._registerInitialModalPosition, 0));\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n    this._events.dispose();\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      className,\n      containerClassName,\n      scrollableContentClassName,\n      elementToFocusOnDismiss,\n      firstFocusableSelector,\n      forceFocusInsideTrap,\n      ignoreExternalFocusing,\n      isBlocking,\n      isClickableOutsideFocusTrap,\n      isDarkOverlay,\n      onDismiss,\n      layerProps,\n      overlay,\n      responsiveMode,\n      titleAriaId,\n      styles,\n      subtitleAriaId,\n      theme,\n      topOffsetFixed,\n      // eslint-disable-next-line deprecation/deprecation\n      onLayerDidMount,\n      isModeless,\n      dragOptions,\n      enableAriaHiddenSiblings,\n    } = this.props;\n    const { isOpen, isVisible, hasBeenOpened, modalRectangleTop, x, y, isInKeyboardMoveMode } = this.state;\n\n    if (!isOpen) {\n      return null;\n    }\n\n    const layerClassName = layerProps === undefined ? '' : layerProps.className;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      className,\n      containerClassName,\n      scrollableContentClassName,\n      isOpen,\n      isVisible,\n      hasBeenOpened,\n      modalRectangleTop,\n      topOffsetFixed,\n      isModeless,\n      layerClassName,\n      isDefaultDragHandle: dragOptions && !dragOptions.dragHandleSelector,\n    });\n\n    const mergedLayerProps = {\n      ...DefaultLayerProps,\n      ...this.props.layerProps,\n      onLayerDidMount: layerProps && layerProps.onLayerDidMount ? layerProps.onLayerDidMount : onLayerDidMount,\n      insertFirst: isModeless,\n      className: classNames.layer,\n    };\n    const modalContent = (\n      <FocusTrapZone\n        data-id={this.state.id}\n        componentRef={this._focusTrapZone}\n        className={classNames.main}\n        elementToFocusOnDismiss={elementToFocusOnDismiss}\n        isClickableOutsideFocusTrap={isModeless || isClickableOutsideFocusTrap || !isBlocking}\n        ignoreExternalFocusing={ignoreExternalFocusing}\n        forceFocusInsideTrap={isModeless ? !isModeless : forceFocusInsideTrap}\n        firstFocusableSelector={firstFocusableSelector}\n        focusPreviouslyFocusedInnerElement={true}\n        onBlur={isInKeyboardMoveMode ? this._onExitKeyboardMoveMode : undefined}\n        enableAriaHiddenSiblings={enableAriaHiddenSiblings}\n      >\n        {dragOptions && isInKeyboardMoveMode && (\n          <div className={classNames.keyboardMoveIconContainer}>\n            {dragOptions.keyboardMoveIconProps ? (\n              <Icon {...dragOptions.keyboardMoveIconProps} />\n            ) : (\n              <Icon iconName=\"move\" className={classNames.keyboardMoveIcon} />\n            )}\n          </div>\n        )}\n        <div ref={this._allowScrollOnModal} className={classNames.scrollableContent} data-is-scrollable={true}>\n          {dragOptions && this.state.isModalMenuOpen && (\n            <dragOptions.menu\n              items={[\n                { key: 'move', text: dragOptions.moveMenuItemText, onClick: this._onEnterKeyboardMoveMode },\n                { key: 'close', text: dragOptions.closeMenuItemText, onClick: this._onModalClose },\n              ]}\n              onDismiss={this._onModalContextMenuClose}\n              alignTargetEdge={true}\n              coverTarget={true}\n              directionalHint={DirectionalHint.topLeftEdge}\n              directionalHintFixed={true}\n              shouldFocusOnMount={true}\n              target={this._scrollableContent}\n            />\n          )}\n          {this.props.children}\n        </div>\n      </FocusTrapZone>\n    );\n\n    // @temp tuatology - Will adjust this to be a panel at certain breakpoints\n    if (responsiveMode! >= ResponsiveMode.small) {\n      return (\n        <Layer {...mergedLayerProps}>\n          <Popup\n            role={isModeless || !isBlocking ? 'dialog' : 'alertdialog'}\n            aria-modal={!isModeless}\n            ariaLabelledBy={titleAriaId}\n            ariaDescribedBy={subtitleAriaId}\n            onDismiss={onDismiss}\n            shouldRestoreFocus={!ignoreExternalFocusing}\n          >\n            <div className={classNames.root} role={!isModeless ? 'document' : undefined}>\n              {!isModeless && (\n                <Overlay\n                  isDarkThemed={isDarkOverlay}\n                  onClick={isBlocking ? undefined : (onDismiss as any)}\n                  allowTouchBodyScroll={this._allowTouchBodyScroll}\n                  {...overlay}\n                />\n              )}\n              {dragOptions ? (\n                <DraggableZone\n                  handleSelector={dragOptions.dragHandleSelector || `.${classNames.main.split(' ')[0]}`}\n                  preventDragSelector=\"button\"\n                  onStart={this._onDragStart}\n                  onDragChange={this._onDrag}\n                  onStop={this._onDragStop}\n                  position={{ x: x, y: y }}\n                >\n                  {modalContent}\n                </DraggableZone>\n              ) : (\n                modalContent\n              )}\n            </div>\n          </Popup>\n        </Layer>\n      );\n    }\n    return null;\n  }\n\n  public focus() {\n    if (this._focusTrapZone.current) {\n      this._focusTrapZone.current.focus();\n    }\n  }\n\n  private _registerInitialModalPosition = (): void => {\n    if (this.props.dragOptions?.keepInBounds && !this._minClampedPosition && !this._maxClampedPosition) {\n      const dialogMain = document.querySelector(`[data-id=${this.state.id}]`);\n      if (dialogMain) {\n        const modalRectangle = dialogMain.getBoundingClientRect();\n        this._minClampedPosition = { x: -modalRectangle.x, y: -modalRectangle.y };\n        this._maxClampedPosition = { x: modalRectangle.x, y: modalRectangle.y };\n      }\n    }\n  };\n\n  /**\n   * Clamps the position coordinates to the maximum/minimum value specified in props\n   */\n  private _getClampedPosition(position: ICoordinates) {\n    if (!this.props.dragOptions || !this.props.dragOptions.keepInBounds) {\n      return position;\n    }\n    return { x: this._getClampedPositionX(position.x), y: this._getClampedPositionY(position.y) };\n  }\n\n  private _getClampedPositionY(y: number) {\n    const minPosition = this._minClampedPosition;\n    const maxPosition = this._maxClampedPosition;\n    if (minPosition) {\n      y = Math.max(minPosition.y, y);\n    }\n    if (maxPosition) {\n      y = Math.min(maxPosition.y, y);\n    }\n    return y;\n  }\n\n  private _getClampedPositionX(x: number) {\n    const minPosition = this._minClampedPosition;\n    const maxPosition = this._maxClampedPosition;\n    if (minPosition) {\n      x = Math.max(minPosition.x, x);\n    }\n    if (maxPosition) {\n      x = Math.min(maxPosition.x, x);\n    }\n    return x;\n  }\n\n  // Allow the user to scroll within the modal but not on the body\n  private _allowScrollOnModal = (elt: HTMLDivElement | null): void => {\n    if (elt) {\n      if (this._allowTouchBodyScroll) {\n        allowOverscrollOnElement(elt, this._events);\n      } else {\n        allowScrollOnElement(elt, this._events);\n      }\n    } else {\n      this._events.off(this._scrollableContent);\n    }\n    this._scrollableContent = elt;\n  };\n\n  private _onModalContextMenuClose = (): void => {\n    this.setState({ isModalMenuOpen: false });\n  };\n\n  private _onModalClose = (): void => {\n    this._lastSetX = 0;\n    this._lastSetY = 0;\n\n    this.setState({\n      isModalMenuOpen: false,\n      isInKeyboardMoveMode: false,\n      isOpen: false,\n      x: 0,\n      y: 0,\n    });\n\n    if (this.props.dragOptions && this._hasRegisteredKeyUp) {\n      this._events.off(window, 'keyup', this._onKeyUp, true /* useCapture */);\n    }\n\n    // Call the onDismiss callback\n    if (this.props.onDismissed) {\n      this.props.onDismissed();\n    }\n  };\n\n  private _onDragStart = (): void => {\n    this.setState({ isModalMenuOpen: false, isInKeyboardMoveMode: false });\n  };\n\n  private _onDrag = (_: React.MouseEvent<HTMLElement> & React.TouchEvent<HTMLElement>, ui: IDragData): void => {\n    const { x, y } = this.state;\n    this.setState(this._getClampedPosition({ x: x + ui.delta.x, y: y + ui.delta.y }));\n  };\n\n  private _onDragStop = (): void => {\n    this.focus();\n  };\n\n  private _onKeyUp = (event: React.KeyboardEvent<HTMLElement>): void => {\n    // Need to handle the CTRL + ALT + SPACE key during keyup due to FireFox bug:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n    // Otherwise it would continue to fire a click even if the event was cancelled\n    // during mouseDown.\n    if (event.altKey && event.ctrlKey && event.keyCode === KeyCodes.space) {\n      // Since this is a global handler, we should make sure the target is within the dialog\n      // before opening the dropdown\n      if (elementContains(this._scrollableContent, event.target as HTMLElement)) {\n        this.setState({ isModalMenuOpen: !this.state.isModalMenuOpen });\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n  };\n\n  // We need a global onKeyDown event when we are in the move mode so that we can\n  // handle the key presses and the components inside the modal do not get the events\n  private _onKeyDown = (event: React.KeyboardEvent<HTMLElement>): void => {\n    if (event.altKey && event.ctrlKey && event.keyCode === KeyCodes.space) {\n      // CTRL + ALT + SPACE is handled during keyUp\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (this.state.isModalMenuOpen && (event.altKey || event.keyCode === KeyCodes.escape)) {\n      this.setState({ isModalMenuOpen: false });\n    }\n\n    if (this.state.isInKeyboardMoveMode && (event.keyCode === KeyCodes.escape || event.keyCode === KeyCodes.enter)) {\n      this.setState({ isInKeyboardMoveMode: false });\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (this.state.isInKeyboardMoveMode) {\n      let handledEvent = true;\n      const delta = this._getMoveDelta(event);\n\n      switch (event.keyCode) {\n        /* eslint-disable no-fallthrough */\n        case KeyCodes.escape:\n          this.setState({ x: this._lastSetX, y: this._lastSetY });\n        case KeyCodes.enter: {\n          // TODO: determine if fallthrough was intentional\n          /* eslint-enable no-fallthrough */\n          this._lastSetX = 0;\n          this._lastSetY = 0;\n          this.setState({ isInKeyboardMoveMode: false });\n          break;\n        }\n        case KeyCodes.up: {\n          this.setState({\n            y: this._getClampedPositionY(this.state.y - delta),\n          });\n          break;\n        }\n        case KeyCodes.down: {\n          this.setState({\n            y: this._getClampedPositionY(this.state.y + delta),\n          });\n          break;\n        }\n        case KeyCodes.left: {\n          this.setState({\n            x: this._getClampedPositionX(this.state.x - delta),\n          });\n          break;\n        }\n        case KeyCodes.right: {\n          this.setState({\n            x: this._getClampedPositionX(this.state.x + delta),\n          });\n          break;\n        }\n        default: {\n          handledEvent = false;\n        }\n      }\n\n      if (handledEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n  };\n\n  private _getMoveDelta(event: React.KeyboardEvent<HTMLElement>): number {\n    let delta = 10;\n    if (event.shiftKey) {\n      if (!event.ctrlKey) {\n        delta = 50;\n      }\n    } else if (event.ctrlKey) {\n      delta = 1;\n    }\n\n    return delta;\n  }\n\n  private _onEnterKeyboardMoveMode = () => {\n    this._lastSetX = this.state.x;\n    this._lastSetY = this.state.y;\n    this.setState({ isInKeyboardMoveMode: true, isModalMenuOpen: false });\n    this._events.on(window, 'keydown', this._onKeyDown, true /* useCapture */);\n  };\n\n  private _onExitKeyboardMoveMode = () => {\n    this._lastSetX = 0;\n    this._lastSetY = 0;\n    this.setState({ isInKeyboardMoveMode: false });\n    this._events.off(window, 'keydown', this._onKeyDown, true /* useCapture */);\n  };\n\n  private _registerForKeyUp = (): void => {\n    if (!this._hasRegisteredKeyUp) {\n      this._events.on(window, 'keyup', this._onKeyUp, true /* useCapture */);\n      this._hasRegisteredKeyUp = true;\n    }\n  };\n}\n"]}