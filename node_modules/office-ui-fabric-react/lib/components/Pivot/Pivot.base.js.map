{"version":3,"file":"Pivot.base.js","sourceRoot":"../src/","sources":["components/Pivot/Pivot.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, KeyCodes, getId, getNativeProps, divProperties, classNamesFunction, warn } from '../../Utilities';\r\nimport { CommandButton } from '../../Button';\r\nimport { IPivotProps, IPivotStyleProps, IPivotStyles } from './Pivot.types';\r\nimport { IPivotItemProps } from './PivotItem.types';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { PivotItem } from './PivotItem';\r\nimport { PivotLinkFormat } from './Pivot.types';\r\nimport { PivotLinkSize } from './Pivot.types';\r\nimport { Icon } from '../../Icon';\r\n\r\nconst getClassNames = classNamesFunction<IPivotStyleProps, IPivotStyles>();\r\n\r\nexport interface IPivotState {\r\n  selectedKey: string | undefined;\r\n}\r\n\r\nconst PivotItemType = (<PivotItem /> as React.ReactElement<IPivotItemProps>).type;\r\n\r\ntype PivotLinkCollection = {\r\n  links: IPivotItemProps[];\r\n  keyToIndexMapping: { [key: string]: number };\r\n  keyToTabIdMapping: { [key: string]: string };\r\n};\r\n\r\n/**\r\n *  Usage:\r\n *\r\n *     <Pivot>\r\n *       <PivotItem headerText=\"Foo\">\r\n *         <Label>Pivot #1</Label>\r\n *       </PivotItem>\r\n *       <PivotItem headerText=\"Bar\">\r\n *         <Label>Pivot #2</Label>\r\n *       </PivotItem>\r\n *       <PivotItem headerText=\"Bas\">\r\n *         <Label>Pivot #3</Label>\r\n *       </PivotItem>\r\n *     </Pivot>\r\n */\r\nexport class PivotBase extends BaseComponent<IPivotProps, IPivotState> {\r\n  private _pivotId: string;\r\n  private _focusZone = React.createRef<FocusZone>();\r\n  private _classNames: { [key in keyof IPivotStyles]: string };\r\n\r\n  constructor(props: IPivotProps) {\r\n    super(props);\r\n\r\n    this._warnDeprecations({\r\n      initialSelectedKey: 'defaultSelectedKey',\r\n      initialSelectedIndex: 'defaultSelectedIndex'\r\n    });\r\n\r\n    this._pivotId = getId('Pivot');\r\n    const links: IPivotItemProps[] = this._getPivotLinks(props).links;\r\n\r\n    const { defaultSelectedKey = props.initialSelectedKey, defaultSelectedIndex = props.initialSelectedIndex } = props;\r\n\r\n    let selectedKey: string | undefined;\r\n\r\n    if (defaultSelectedKey) {\r\n      selectedKey = defaultSelectedKey;\r\n    } else if (typeof defaultSelectedIndex === 'number') {\r\n      selectedKey = links[defaultSelectedIndex].itemKey!;\r\n    } else if (links.length) {\r\n      selectedKey = links[0].itemKey!;\r\n    }\r\n\r\n    this.state = {\r\n      selectedKey\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Sets focus to the first pivot tab.\r\n   */\r\n  public focus(): void {\r\n    if (this._focusZone.current) {\r\n      this._focusZone.current.focus();\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const linkCollection = this._getPivotLinks(this.props);\r\n    const selectedKey = this._getSelectedKey(linkCollection);\r\n\r\n    const divProps = getNativeProps(this.props, divProperties);\r\n\r\n    this._classNames = this._getClassNames(this.props);\r\n\r\n    return (\r\n      <div {...divProps}>\r\n        {this._renderPivotLinks(linkCollection, selectedKey)}\r\n        {this._renderPivotItem(linkCollection, selectedKey)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _getSelectedKey(linkCollection: PivotLinkCollection) {\r\n    const { selectedKey: propsSelectedKey } = this.props;\r\n    if (this._isKeyValid(linkCollection, propsSelectedKey)) {\r\n      return propsSelectedKey;\r\n    }\r\n\r\n    const { selectedKey: stateSelectedKey } = this.state;\r\n    if (this._isKeyValid(linkCollection, stateSelectedKey)) {\r\n      return stateSelectedKey;\r\n    }\r\n\r\n    if (linkCollection.links.length) {\r\n      return linkCollection.links[0].itemKey;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Renders the set of links to route between pivots\r\n   */\r\n  private _renderPivotLinks(linkCollection: PivotLinkCollection, selectedKey: string | undefined): JSX.Element {\r\n    const items = linkCollection.links.map(l => this._renderPivotLink(linkCollection, l, selectedKey));\r\n\r\n    return (\r\n      <FocusZone componentRef={this._focusZone} direction={FocusZoneDirection.horizontal}>\r\n        <div className={this._classNames.root} role=\"tablist\">\r\n          {items}\r\n        </div>\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  private _renderPivotLink = (linkCollection: PivotLinkCollection, link: IPivotItemProps, selectedKey: string | undefined): JSX.Element => {\r\n    const { itemKey, headerButtonProps } = link;\r\n    const tabId = linkCollection.keyToTabIdMapping[itemKey!];\r\n    const { onRenderItemLink } = link;\r\n    let linkContent: JSX.Element | null;\r\n    const isSelected: boolean = selectedKey === itemKey;\r\n\r\n    if (onRenderItemLink) {\r\n      linkContent = onRenderItemLink(link, this._renderLinkContent);\r\n    } else {\r\n      linkContent = this._renderLinkContent(link);\r\n    }\r\n\r\n    return (\r\n      <CommandButton\r\n        {...headerButtonProps}\r\n        id={tabId}\r\n        key={itemKey}\r\n        className={isSelected ? this._classNames.linkIsSelected : this._classNames.link}\r\n        onClick={this._onLinkClick.bind(this, itemKey)}\r\n        onKeyPress={this._onKeyPress.bind(this, itemKey)}\r\n        ariaLabel={link.ariaLabel}\r\n        role=\"tab\"\r\n        aria-selected={isSelected}\r\n        name={link.headerText}\r\n        keytipProps={link.keytipProps}\r\n      >\r\n        {linkContent}\r\n      </CommandButton>\r\n    );\r\n  };\r\n\r\n  private _renderLinkContent = (link: IPivotItemProps): JSX.Element => {\r\n    const { itemCount, itemIcon, headerText } = link;\r\n    const classNames = this._classNames;\r\n\r\n    return (\r\n      <span className={classNames.linkContent}>\r\n        {itemIcon !== undefined && (\r\n          <span className={classNames.icon}>\r\n            <Icon iconName={itemIcon} />\r\n          </span>\r\n        )}\r\n        {headerText !== undefined && <span className={classNames.text}> {link.headerText}</span>}\r\n        {itemCount !== undefined && <span className={classNames.count}> ({itemCount})</span>}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Renders the current Pivot Item\r\n   */\r\n  private _renderPivotItem(linkCollection: PivotLinkCollection, itemKey: string | undefined): JSX.Element | null {\r\n    if (this.props.headersOnly || !itemKey) {\r\n      return null;\r\n    }\r\n\r\n    const index = linkCollection.keyToIndexMapping[itemKey];\r\n    const selectedTabId = linkCollection.keyToTabIdMapping[itemKey];\r\n\r\n    return (\r\n      <div role=\"tabpanel\" aria-labelledby={selectedTabId} className={this._classNames.itemContainer}>\r\n        {React.Children.toArray(this.props.children)[index]}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Gets the set of PivotLinks as arrary of IPivotItemProps\r\n   * The set of Links is determined by child components of type PivotItem\r\n   */\r\n  private _getPivotLinks(props: IPivotProps): PivotLinkCollection {\r\n    const result: PivotLinkCollection = {\r\n      links: [],\r\n      keyToIndexMapping: {},\r\n      keyToTabIdMapping: {}\r\n    };\r\n\r\n    React.Children.map(React.Children.toArray(props.children), (child: any, index: number) => {\r\n      if (typeof child === 'object' && child.type === PivotItemType) {\r\n        const pivotItem = child as PivotItem;\r\n        const { linkText, ...pivotItemProps } = pivotItem.props;\r\n        const itemKey = pivotItem.props.itemKey || index.toString();\r\n\r\n        result.links.push({\r\n          // Use linkText (deprecated) if headerText is not provided\r\n          headerText: linkText,\r\n          ...pivotItemProps,\r\n          itemKey: itemKey\r\n        });\r\n        result.keyToIndexMapping[itemKey] = index;\r\n        result.keyToTabIdMapping[itemKey] = this._getTabId(itemKey, index);\r\n      } else {\r\n        warn('The children of a Pivot component must be of type PivotItem to be rendered.');\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Generates the Id for the tab button.\r\n   */\r\n  private _getTabId(itemKey: string, index: number): string {\r\n    if (this.props.getTabId) {\r\n      return this.props.getTabId(itemKey, index);\r\n    }\r\n\r\n    return this._pivotId + `-Tab${index}`;\r\n  }\r\n\r\n  /**\r\n   * whether the key exists in the pivot items.\r\n   */\r\n  private _isKeyValid(linkCollection: PivotLinkCollection, itemKey: string | undefined): boolean {\r\n    return itemKey !== undefined && linkCollection.keyToIndexMapping[itemKey] !== undefined;\r\n  }\r\n\r\n  /**\r\n   * Handles the onClick event on PivotLinks\r\n   */\r\n  private _onLinkClick(itemKey: string, ev: React.MouseEvent<HTMLElement>): void {\r\n    ev.preventDefault();\r\n    this._updateSelectedItem(itemKey, ev);\r\n  }\r\n\r\n  /**\r\n   * Handle the onKeyPress eventon the PivotLinks\r\n   */\r\n  private _onKeyPress(itemKey: string, ev: React.KeyboardEvent<HTMLElement>): void {\r\n    if (ev.which === KeyCodes.enter) {\r\n      ev.preventDefault();\r\n      this._updateSelectedItem(itemKey);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the state with the new selected index\r\n   */\r\n  private _updateSelectedItem(itemKey: string, ev?: React.MouseEvent<HTMLElement>): void {\r\n    this.setState({\r\n      selectedKey: itemKey\r\n    });\r\n\r\n    const linkCollection = this._getPivotLinks(this.props);\r\n\r\n    if (this.props.onLinkClick && linkCollection.keyToIndexMapping[itemKey] >= 0) {\r\n      const index = linkCollection.keyToIndexMapping[itemKey];\r\n\r\n      // React.Element<any> cannot directly convert to PivotItem.\r\n      const item = React.Children.toArray(this.props.children)[index] as any;\r\n\r\n      if (typeof item === 'object' && item.type === PivotItemType) {\r\n        this.props.onLinkClick(item as PivotItem, ev);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _getClassNames(props: IPivotProps): { [key in keyof IPivotStyles]: string } {\r\n    const { theme } = props;\r\n    const rootIsLarge: boolean = props.linkSize === PivotLinkSize.large;\r\n    const rootIsTabs: boolean = props.linkFormat === PivotLinkFormat.tabs;\r\n\r\n    return getClassNames(props.styles!, {\r\n      theme: theme!,\r\n      rootIsLarge,\r\n      rootIsTabs\r\n    });\r\n  }\r\n}\r\n"]}