{"version":3,"file":"Layer.Basic.Example.js","sourceRoot":"../src/","sources":["components/Layer/examples/Layer.Basic.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,mCAAmC,CAAC;AAC3D,OAAO,uDAAuD,CAAC;AAC/D,OAAO,EAAE,KAAK,EAAE,MAAM,kCAAkC,CAAC;AACzD,OAAO,EAAE,mBAAmB,EAAE,MAAM,oCAAoC,CAAC;AACzE,OAAO,EAAE,aAAa,EAAE,GAAG,EAAE,MAAM,sCAAsC,CAAC;AAC1E,OAAO,KAAK,SAAS,MAAM,YAAY,CAAC;AACxC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,KAAK,MAAM,MAAM,sBAAsB,CAAC;AAM/C;IAAyC,+CAA4C;IAArF;QAAA,qEA6BC;QAxBQ,WAAK,GAAG;YACb,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,kBAAkB,EAAE;SACtC,CAAC;;IAsBJ,CAAC;IAhBQ,+CAAiB,GAAxB;QAAA,iBAMC;QALC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;YACtB,KAAI,CAAC,QAAQ,CAAC;gBACZ,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,kBAAkB,EAAE;aACtC,CAAC,CAAC;QACL,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAEM,oCAAM,GAAb;QACE,OAAO,CACL,6BAAK,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,mBAAmB,CAAC,YAAY,CAAC;YACnE,6BAAK,SAAS,EAAE,MAAM,CAAC,WAAW,IAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAO;YAChE,iCAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAO,CACxB,CACP,CAAC;IACJ,CAAC;IA3Ba,gCAAY,GAAG;QAC3B,OAAO,EAAE,SAAS,CAAC,MAAM;KAC1B,CAAC;IA0BJ,0BAAC;CAAA,AA7BD,CAAyC,aAAa,GA6BrD;SA7BY,mBAAmB;AAmChC;IAAuC,6CAA0C;IAAjF;QAAA,qEAmCC;QA9BQ,WAAK,GAAG;YACb,SAAS,EAAE,KAAK;SACjB,CAAC;QAyBM,eAAS,GAAG,UAAC,EAAmD,EAAE,OAAgB;YACxF,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC;QACxC,CAAC,CAAC;;IACJ,CAAC;IA1BQ,2CAAe,GAAtB;QACE,OAAO;YACL,OAAO,EAAE,cAAc;SACxB,CAAC;IACJ,CAAC;IAEM,kCAAM,GAAb;QACU,IAAA,gCAAS,CAAgB;QACjC,OAAO,CACL;YACE,oBAAC,MAAM,IAAC,KAAK,EAAC,uCAAuC,EAAC,WAAW,QAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,GAAI;YAEjH,SAAS,CAAC,CAAC,CAAC,CACX,oBAAC,KAAK;gBACJ,oBAAC,mBAAmB,OAAG,CACjB,CACT,CAAC,CAAC,CAAC,CACF,oBAAC,mBAAmB,OAAG,CACxB,CACG,CACP,CAAC;IACJ,CAAC;IA7Ba,mCAAiB,GAAG;QAChC,OAAO,EAAE,SAAS,CAAC,MAAM;KAC1B,CAAC;IAgCJ,wBAAC;CAAA,AAnCD,CAAuC,aAAa,GAmCnD;SAnCY,iBAAiB","sourcesContent":["import { Toggle } from 'office-ui-fabric-react/lib/Toggle';\r\nimport 'office-ui-fabric-react/lib/common/_exampleStyles.scss';\r\nimport { Layer } from 'office-ui-fabric-react/lib/Layer';\r\nimport { AnimationClassNames } from 'office-ui-fabric-react/lib/Styling';\r\nimport { BaseComponent, css } from 'office-ui-fabric-react/lib/Utilities';\r\nimport * as PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport * as styles from './Layer.Example.scss';\r\n\r\nexport interface ILayerContentExampleState {\r\n  time: string;\r\n}\r\n\r\nexport class LayerContentExample extends BaseComponent<{}, ILayerContentExampleState> {\r\n  public static contextTypes = {\r\n    message: PropTypes.string\r\n  };\r\n\r\n  public state = {\r\n    time: new Date().toLocaleTimeString()\r\n  };\r\n\r\n  public context: {\r\n    message: string;\r\n  };\r\n\r\n  public componentDidMount() {\r\n    this._async.setInterval(() => {\r\n      this.setState({\r\n        time: new Date().toLocaleTimeString()\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className={css(styles.content, AnimationClassNames.scaleUpIn100)}>\r\n        <div className={styles.textContent}>{this.context.message}</div>\r\n        <div>{this.state.time}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport interface ILayerBasicExampleState {\r\n  showLayer: boolean;\r\n}\r\n\r\nexport class LayerBasicExample extends BaseComponent<{}, ILayerBasicExampleState> {\r\n  public static childContextTypes = {\r\n    message: PropTypes.string\r\n  };\r\n\r\n  public state = {\r\n    showLayer: false\r\n  };\r\n\r\n  public getChildContext() {\r\n    return {\r\n      message: 'Hello world.'\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    const { showLayer } = this.state;\r\n    return (\r\n      <div>\r\n        <Toggle label=\"Wrap the content box below in a Layer\" inlineLabel checked={showLayer} onChange={this._onChange} />\r\n\r\n        {showLayer ? (\r\n          <Layer>\r\n            <LayerContentExample />\r\n          </Layer>\r\n        ) : (\r\n          <LayerContentExample />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onChange = (ev: React.FormEvent<HTMLElement | HTMLInputElement>, checked: boolean): void => {\r\n    this.setState({ showLayer: checked });\r\n  };\r\n}\r\n"]}