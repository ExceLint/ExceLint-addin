{"version":3,"file":"Suggestions.js","sourceRoot":"../src/","sources":["components/pickers/Suggestions/Suggestions.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport {\n  initializeComponentRef,\n  KeyCodes,\n  classNamesFunction,\n  IStyleFunctionOrObject,\n  css,\n  styled,\n} from '../../../Utilities';\nimport { IProcessedStyleSet } from '../../../Styling';\nimport { CommandButton, IButton } from '../../../Button';\nimport { Spinner, ISpinnerStyleProps, ISpinnerStyles } from '../../../Spinner';\nimport { Announced } from '../../../Announced';\nimport {\n  ISuggestionsProps,\n  SuggestionActionType,\n  ISuggestionsStyleProps,\n  ISuggestionsStyles,\n} from './Suggestions.types';\nimport { SuggestionsItem } from './SuggestionsItem';\nimport { getStyles as suggestionsItemStyles } from './SuggestionsItem.styles';\nimport { ISuggestionItemProps, ISuggestionsItemStyleProps, ISuggestionsItemStyles } from './SuggestionsItem.types';\n\nimport * as stylesImport from './Suggestions.scss';\nconst legacyStyles: any = stylesImport;\n\nconst getClassNames = classNamesFunction<ISuggestionsStyleProps, ISuggestionsStyles>();\n\nexport interface ISuggestionsState {\n  selectedActionType: SuggestionActionType;\n}\n\nconst StyledSuggestionsItem = styled<ISuggestionItemProps<any>, ISuggestionsItemStyleProps, ISuggestionsItemStyles>(\n  SuggestionsItem,\n  suggestionsItemStyles,\n  undefined,\n  { scope: 'SuggestionItem' },\n);\n\n/**\n * {@docCategory Pickers}\n */\nexport class Suggestions<T> extends React.Component<ISuggestionsProps<T>, ISuggestionsState> {\n  protected _forceResolveButton = React.createRef<IButton>();\n  protected _searchForMoreButton = React.createRef<IButton>();\n  protected _selectedElement = React.createRef<HTMLDivElement>();\n  private activeSelectedElement: HTMLDivElement | null;\n  private _classNames: Partial<IProcessedStyleSet<ISuggestionsStyles>>;\n\n  constructor(suggestionsProps: ISuggestionsProps<T>) {\n    super(suggestionsProps);\n\n    initializeComponentRef(this);\n\n    this.state = {\n      selectedActionType: SuggestionActionType.none,\n    };\n  }\n\n  public componentDidMount(): void {\n    this.scrollSelected();\n    this.activeSelectedElement = this._selectedElement ? this._selectedElement.current : null;\n  }\n\n  public componentDidUpdate(): void {\n    // Only scroll to selected element if the selected element has changed. Otherwise do nothing.\n    // This prevents some odd behavior where scrolling the active element out of view and clicking on a selected element\n    // will trigger a focus event and not give the clicked element the click.\n    if (this._selectedElement.current && this.activeSelectedElement !== this._selectedElement.current) {\n      this.scrollSelected();\n      this.activeSelectedElement = this._selectedElement.current;\n    }\n  }\n\n  public render(): JSX.Element {\n    const {\n      forceResolveText,\n      mostRecentlyUsedHeaderText,\n      searchForMoreText,\n      className,\n      moreSuggestionsAvailable,\n      noResultsFoundText,\n      suggestions,\n      isLoading,\n      isSearching,\n      loadingText,\n      onRenderNoResultFound,\n      searchingText,\n      isMostRecentlyUsedVisible,\n      resultsMaximumNumber,\n      resultsFooterFull,\n      resultsFooter,\n      isResultsFooterVisible = true,\n      suggestionsHeaderText,\n      suggestionsClassName,\n      theme,\n      styles,\n      suggestionsListId,\n    } = this.props;\n\n    // TODO\n    // Clean this up by leaving only the first part after removing support for SASS.\n    // Currently we can not remove the SASS styles from Suggestions class because it\n    // might be used by consumers separately from pickers extending from BasePicker\n    // and have not used the new 'styles' prop. Because it's expecting a type parameter,\n    // we can not use the 'styled' function without adding some helpers which can break\n    // downstream consumers who did not use the new helpers.\n    // We check for 'styles' prop which is going to be injected by the 'styled' HOC\n    // in BasePicker when the typed Suggestions class is ready to be rendered. If the check\n    // passes we can use the CSS-in-JS styles. If the check fails (ex: custom picker),\n    // then we just use the old SASS styles instead.\n    this._classNames = styles\n      ? getClassNames(styles, {\n          theme: theme!,\n          className,\n          suggestionsClassName,\n          forceResolveButtonSelected: this.state.selectedActionType === SuggestionActionType.forceResolve,\n          searchForMoreButtonSelected: this.state.selectedActionType === SuggestionActionType.searchMore,\n        })\n      : {\n          root: css('ms-Suggestions', className, legacyStyles.root),\n          title: css('ms-Suggestions-title', legacyStyles.suggestionsTitle),\n          searchForMoreButton: css('ms-SearchMore-button', legacyStyles.actionButton, {\n            ['is-selected ' + legacyStyles.buttonSelected]:\n              this.state.selectedActionType === SuggestionActionType.searchMore,\n          }),\n          forceResolveButton: css('ms-forceResolve-button', legacyStyles.actionButton, {\n            ['is-selected ' + legacyStyles.buttonSelected]:\n              this.state.selectedActionType === SuggestionActionType.forceResolve,\n          }),\n          suggestionsAvailable: css('ms-Suggestions-suggestionsAvailable', legacyStyles.suggestionsAvailable),\n          suggestionsContainer: css(\n            'ms-Suggestions-container',\n            legacyStyles.suggestionsContainer,\n            suggestionsClassName,\n          ),\n          noSuggestions: css('ms-Suggestions-none', legacyStyles.suggestionsNone),\n        };\n\n    const spinnerStyles = this._classNames.subComponentStyles\n      ? (this._classNames.subComponentStyles.spinner as IStyleFunctionOrObject<ISpinnerStyleProps, ISpinnerStyles>)\n      : undefined;\n\n    // TODO: cleanup after refactor of pickers to composition pattern and remove SASS support.\n    const spinnerClassNameOrStyles = styles\n      ? { styles: spinnerStyles }\n      : { className: css('ms-Suggestions-spinner', legacyStyles.suggestionsSpinner) };\n\n    const noResults = () => {\n      return noResultsFoundText ? <div className={this._classNames.noSuggestions}>{noResultsFoundText}</div> : null;\n    };\n\n    // MostRecently Used text should supercede the header text if it's there and available.\n    let headerText: string | undefined = suggestionsHeaderText;\n    if (isMostRecentlyUsedVisible && mostRecentlyUsedHeaderText) {\n      headerText = mostRecentlyUsedHeaderText;\n    }\n\n    let footerTitle: ((props: ISuggestionsProps<T>) => JSX.Element) | undefined = undefined;\n    if (isResultsFooterVisible) {\n      footerTitle = suggestions.length >= (resultsMaximumNumber as number) ? resultsFooterFull : resultsFooter;\n    }\n\n    const hasNoSuggestions = (!suggestions || !suggestions.length) && !isLoading;\n    const divProps: React.HtmlHTMLAttributes<HTMLDivElement> =\n      hasNoSuggestions || isLoading ? { role: 'dialog', id: suggestionsListId } : {};\n\n    const forceResolveId =\n      this.state.selectedActionType === SuggestionActionType.forceResolve ? 'sug-selectedAction' : undefined;\n    const searchForMoreId =\n      this.state.selectedActionType === SuggestionActionType.searchMore ? 'sug-selectedAction' : undefined;\n\n    return (\n      <div className={this._classNames.root} {...divProps}>\n        <Announced message={this._getAlertText()} aria-live=\"polite\" />\n\n        {headerText ? <div className={this._classNames.title}>{headerText}</div> : null}\n        {forceResolveText && this._shouldShowForceResolve() && (\n          <CommandButton\n            componentRef={this._forceResolveButton}\n            className={this._classNames.forceResolveButton}\n            id={forceResolveId}\n            onClick={this._forceResolve}\n            data-automationid={'sug-forceResolve'}\n          >\n            {forceResolveText}\n          </CommandButton>\n        )}\n        {isLoading && <Spinner {...spinnerClassNameOrStyles} label={loadingText} />}\n        {hasNoSuggestions\n          ? onRenderNoResultFound\n            ? onRenderNoResultFound(undefined, noResults)\n            : noResults()\n          : this._renderSuggestions()}\n        {searchForMoreText && moreSuggestionsAvailable && (\n          <CommandButton\n            componentRef={this._searchForMoreButton}\n            className={this._classNames.searchForMoreButton}\n            iconProps={{ iconName: 'Search' }}\n            id={searchForMoreId}\n            onClick={this._getMoreResults}\n            data-automationid={'sug-searchForMore'}\n          >\n            {searchForMoreText}\n          </CommandButton>\n        )}\n        {isSearching ? <Spinner {...spinnerClassNameOrStyles} label={searchingText} /> : null}\n        {footerTitle && !moreSuggestionsAvailable && !isMostRecentlyUsedVisible && !isSearching ? (\n          <div className={this._classNames.title}>{footerTitle(this.props)}</div>\n        ) : null}\n      </div>\n    );\n  }\n\n  /**\n   * Returns true if the event was handled, false otherwise\n   */\n  public tryHandleKeyDown = (keyCode: number, currentSuggestionIndex: number): boolean => {\n    let isEventHandled = false;\n    let newSelectedActionType = null;\n    const currentSelectedAction = this.state.selectedActionType;\n    const suggestionLength = this.props.suggestions.length;\n    if (keyCode === KeyCodes.down) {\n      switch (currentSelectedAction) {\n        case SuggestionActionType.forceResolve:\n          if (suggestionLength > 0) {\n            this._refocusOnSuggestions(keyCode);\n            newSelectedActionType = SuggestionActionType.none;\n          } else if (this._searchForMoreButton.current) {\n            newSelectedActionType = SuggestionActionType.searchMore;\n          } else {\n            newSelectedActionType = SuggestionActionType.forceResolve;\n          }\n          break;\n        case SuggestionActionType.searchMore:\n          if (this._forceResolveButton.current) {\n            newSelectedActionType = SuggestionActionType.forceResolve;\n          } else if (suggestionLength > 0) {\n            this._refocusOnSuggestions(keyCode);\n            newSelectedActionType = SuggestionActionType.none;\n          } else {\n            newSelectedActionType = SuggestionActionType.searchMore;\n          }\n          break;\n        case SuggestionActionType.none:\n          if (currentSuggestionIndex === -1 && this._forceResolveButton.current) {\n            newSelectedActionType = SuggestionActionType.forceResolve;\n          }\n          break;\n      }\n    } else if (keyCode === KeyCodes.up) {\n      switch (currentSelectedAction) {\n        case SuggestionActionType.forceResolve:\n          if (this._searchForMoreButton.current) {\n            newSelectedActionType = SuggestionActionType.searchMore;\n          } else if (suggestionLength > 0) {\n            this._refocusOnSuggestions(keyCode);\n            newSelectedActionType = SuggestionActionType.none;\n          }\n          break;\n        case SuggestionActionType.searchMore:\n          if (suggestionLength > 0) {\n            this._refocusOnSuggestions(keyCode);\n            newSelectedActionType = SuggestionActionType.none;\n          } else if (this._forceResolveButton.current) {\n            newSelectedActionType = SuggestionActionType.forceResolve;\n          }\n          break;\n        case SuggestionActionType.none:\n          if (currentSuggestionIndex === -1 && this._searchForMoreButton.current) {\n            newSelectedActionType = SuggestionActionType.searchMore;\n          }\n          break;\n      }\n    }\n\n    if (newSelectedActionType !== null) {\n      this.setState({ selectedActionType: newSelectedActionType });\n      isEventHandled = true;\n    }\n\n    return isEventHandled;\n  };\n\n  public hasSuggestedAction(): boolean {\n    return !!this._searchForMoreButton.current || !!this._forceResolveButton.current;\n  }\n\n  public hasSuggestedActionSelected(): boolean {\n    return this.state.selectedActionType !== SuggestionActionType.none;\n  }\n\n  public executeSelectedAction(): void {\n    switch (this.state.selectedActionType) {\n      case SuggestionActionType.forceResolve:\n        this._forceResolve();\n        break;\n      case SuggestionActionType.searchMore:\n        this._getMoreResults();\n        break;\n    }\n  }\n\n  public focusAboveSuggestions(): void {\n    if (this._forceResolveButton.current) {\n      this.setState({ selectedActionType: SuggestionActionType.forceResolve });\n    } else if (this._searchForMoreButton.current) {\n      this.setState({ selectedActionType: SuggestionActionType.searchMore });\n    }\n  }\n\n  public focusBelowSuggestions(): void {\n    if (this._searchForMoreButton.current) {\n      this.setState({ selectedActionType: SuggestionActionType.searchMore });\n    } else if (this._forceResolveButton.current) {\n      this.setState({ selectedActionType: SuggestionActionType.forceResolve });\n    }\n  }\n\n  public focusSearchForMoreButton(): void {\n    if (this._searchForMoreButton.current) {\n      this._searchForMoreButton.current.focus();\n    }\n  }\n\n  // TODO get the element to scroll into view properly regardless of direction.\n  public scrollSelected(): void {\n    if (this._selectedElement.current && this._selectedElement.current.scrollIntoView !== undefined) {\n      this._selectedElement.current.scrollIntoView(false);\n    }\n  }\n\n  private _getAlertText = () => {\n    const { isLoading, isSearching, suggestions, suggestionsAvailableAlertText, noResultsFoundText } = this.props;\n    if (!isLoading && !isSearching) {\n      if (suggestions.length > 0) {\n        return suggestionsAvailableAlertText || '';\n      }\n      if (noResultsFoundText) {\n        return noResultsFoundText;\n      }\n    }\n    return '';\n  };\n\n  private _renderSuggestions(): JSX.Element | null {\n    const {\n      onRenderSuggestion,\n      removeSuggestionAriaLabel,\n      suggestionsItemClassName,\n      resultsMaximumNumber,\n      showRemoveButtons,\n      suggestionsContainerAriaLabel,\n      suggestionsListId,\n    } = this.props;\n\n    let { suggestions } = this.props;\n\n    const StyledTypedSuggestionsItem: React.FunctionComponent<ISuggestionItemProps<T>> = StyledSuggestionsItem;\n\n    let selectedIndex = -1;\n    suggestions.some((element, index) => {\n      if (element.selected) {\n        selectedIndex = index;\n        return true;\n      }\n      return false;\n    });\n\n    if (resultsMaximumNumber) {\n      suggestions =\n        selectedIndex >= resultsMaximumNumber\n          ? suggestions.slice(selectedIndex - resultsMaximumNumber + 1, selectedIndex + 1)\n          : suggestions.slice(0, resultsMaximumNumber);\n    }\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return (\n      <div\n        className={this._classNames.suggestionsContainer}\n        id={suggestionsListId}\n        role=\"listbox\"\n        aria-label={suggestionsContainerAriaLabel}\n      >\n        {suggestions.map((suggestion, index) => (\n          <div\n            ref={suggestion.selected ? this._selectedElement : undefined}\n            key={(suggestion.item as any).key ? (suggestion.item as any).key : index}\n          >\n            <StyledTypedSuggestionsItem\n              suggestionModel={suggestion}\n              RenderSuggestion={onRenderSuggestion}\n              onClick={this._onClickTypedSuggestionsItem(suggestion.item, index)}\n              className={suggestionsItemClassName}\n              showRemoveButton={showRemoveButtons}\n              removeButtonAriaLabel={removeSuggestionAriaLabel}\n              onRemoveItem={this._onRemoveTypedSuggestionsItem(suggestion.item, index)}\n              id={'sug-' + index}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  private _getMoreResults = (): void => {\n    if (this.props.onGetMoreResults) {\n      this.props.onGetMoreResults();\n    }\n  };\n\n  private _forceResolve = (): void => {\n    if (this.props.createGenericItem) {\n      this.props.createGenericItem();\n    }\n  };\n\n  private _shouldShowForceResolve = (): boolean => {\n    return this.props.showForceResolve ? this.props.showForceResolve() : false;\n  };\n\n  private _onClickTypedSuggestionsItem = (item: T, index: number): ((ev: React.MouseEvent<HTMLElement>) => void) => {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      this.props.onSuggestionClick(ev, item, index);\n    };\n  };\n\n  private _refocusOnSuggestions = (keyCode: number): void => {\n    if (typeof this.props.refocusSuggestions === 'function') {\n      this.props.refocusSuggestions(keyCode);\n    }\n  };\n\n  private _onRemoveTypedSuggestionsItem = (item: T, index: number): ((ev: React.MouseEvent<HTMLElement>) => void) => {\n    return (ev: React.MouseEvent<HTMLElement>): void => {\n      const onSuggestionRemove = this.props.onSuggestionRemove!;\n      onSuggestionRemove(ev, item, index);\n      ev.stopPropagation();\n    };\n  };\n}\n"]}