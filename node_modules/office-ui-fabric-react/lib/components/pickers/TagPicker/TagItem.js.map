{"version":3,"file":"TagItem.js","sourceRoot":"../src/","sources":["components/pickers/TagPicker/TagItem.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,MAAM,EAAE,kBAAkB,EAAE,MAAM,oBAAoB,CAAC;AAChE,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAG7C,OAAO,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAE7C,IAAM,aAAa,GAAG,kBAAkB,EAAsC,CAAC;AAE/E;;GAEG;AACH,MAAM,CAAC,IAAM,WAAW,GAAG,UAAC,KAAoB;IAE5C,IAAA,mBAAK,EACL,qBAAM,EACN,yBAAQ,EACR,yBAAQ,EACR,qEAA8B,EAC9B,yBAAQ,EACR,2BAAS,EACT,mBAAK,EACL,iCAAY,EACZ,mDAAqB,EACrB,gBAA6E,EAA7E,kGAA6E,CACrE;IAEV,IAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE;QACvC,KAAK,EAAE,KAAM;QACb,SAAS,WAAA;QACT,QAAQ,UAAA;QACR,QAAQ,UAAA;KACT,CAAC,CAAC;IAEH,OAAO,CACL,6BACE,SAAS,EAAE,UAAU,CAAC,IAAI,EAC1B,IAAI,EAAE,UAAU,EAChB,GAAG,EAAE,KAAK,0BACY,KAAK,uBACR,CAAC,8BAA8B,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI;QAExE,8BAAM,SAAS,EAAE,UAAU,CAAC,IAAI,gBAAc,KAAK,EAAE,KAAK,EAAE,KAAK,IAC9D,QAAQ,CACJ;QACP,oBAAC,UAAU,IACT,OAAO,EAAE,YAAY,EACrB,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,EACzE,SAAS,EAAE,UAAU,CAAC,KAAK,EAC3B,SAAS,EAAE,qBAAqB,GAChC,CACE,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,OAAO,GAAG,MAAM,CAAoD,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE;IAClH,KAAK,EAAE,SAAS;CACjB,CAAC,CAAC","sourcesContent":["import * as React from 'react';\n\nimport { styled, classNamesFunction } from '../../../Utilities';\nimport { IconButton } from '../../../Button';\n\nimport { ITagItemProps, ITagItemStyleProps, ITagItemStyles } from './TagPicker.types';\nimport { getStyles } from './TagItem.styles';\n\nconst getClassNames = classNamesFunction<ITagItemStyleProps, ITagItemStyles>();\n\n/**\n * {@docCategory TagPicker}\n */\nexport const TagItemBase = (props: ITagItemProps) => {\n  const {\n    theme,\n    styles,\n    selected,\n    disabled,\n    enableTagFocusInDisabledPicker,\n    children,\n    className,\n    index,\n    onRemoveItem,\n    removeButtonAriaLabel,\n    title = typeof props.children === 'string' ? props.children : props.item.name,\n  } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    selected,\n    disabled,\n  });\n\n  return (\n    <div\n      className={classNames.root}\n      role={'listitem'}\n      key={index}\n      data-selection-index={index}\n      data-is-focusable={(enableTagFocusInDisabledPicker || !disabled) && true}\n    >\n      <span className={classNames.text} aria-label={title} title={title}>\n        {children}\n      </span>\n      <IconButton\n        onClick={onRemoveItem}\n        disabled={disabled}\n        iconProps={{ iconName: 'Cancel', styles: { root: { fontSize: '12px' } } }}\n        className={classNames.close}\n        ariaLabel={removeButtonAriaLabel}\n      />\n    </div>\n  );\n};\n\nexport const TagItem = styled<ITagItemProps, ITagItemStyleProps, ITagItemStyles>(TagItemBase, getStyles, undefined, {\n  scope: 'TagItem',\n});\n"]}