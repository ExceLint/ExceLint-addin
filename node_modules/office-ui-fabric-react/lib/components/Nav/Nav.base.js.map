{"version":3,"file":"Nav.base.js","sourceRoot":"../src/","sources":["components/Nav/Nav.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { classNamesFunction, divProperties, getNativeProps } from '../../Utilities';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { ActionButton } from '../../Button';\r\nimport { Icon } from '../../Icon';\r\nimport { buttonStyles } from './Nav.styles';\r\nimport { INav, INavProps, INavLinkGroup, INavLink, INavStyles, INavStyleProps } from './Nav.types';\r\n\r\n// The number pixels per indentation level for Nav links.\r\nconst _indentationSize = 14;\r\n\r\n// The number of pixels of left margin\r\nconst _baseIndent = 3;\r\n\r\n// global var used in _isLinkSelectedKey\r\nlet _urlResolver: HTMLAnchorElement | undefined;\r\n\r\nexport function isRelativeUrl(url: string): boolean {\r\n  // A URL is relative if it has no protocol.\r\n  return !!url && !/^[a-z0-9+-.]:\\/\\//i.test(url);\r\n}\r\n\r\nconst getClassNames = classNamesFunction<INavStyleProps, INavStyles>();\r\n\r\nexport interface INavState {\r\n  isGroupCollapsed?: { [key: string]: boolean };\r\n  isLinkExpandStateChanged?: boolean;\r\n  selectedKey?: string;\r\n}\r\n\r\nexport class NavBase extends React.Component<INavProps, INavState> implements INav {\r\n  public static defaultProps: INavProps = {\r\n    groups: null\r\n  };\r\n\r\n  constructor(props: INavProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isGroupCollapsed: {},\r\n      isLinkExpandStateChanged: false,\r\n      selectedKey: props.initialSelectedKey || props.selectedKey\r\n    };\r\n\r\n    if (props.groups) {\r\n      for (const group of props.groups) {\r\n        if (group.collapseByDefault && group.name) {\r\n          this.state.isGroupCollapsed![group.name] = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: INavProps): void {\r\n    const newGroups = newProps.groups || [];\r\n    const isGroupCollapsed = this.state.isGroupCollapsed!;\r\n\r\n    // If the component's props were updated, new groups may have been added, which may have\r\n    // collapseByDefault set. Ensure that setting is respected for any new groups.\r\n    // (If isGroupCollapsed is already set for a group, don't overwrite that.)\r\n    let hasUpdated = false;\r\n    for (const newGroup of newGroups) {\r\n      if (newGroup.name && newGroup.collapseByDefault && !isGroupCollapsed.hasOwnProperty(newGroup.name)) {\r\n        isGroupCollapsed[newGroup.name] = true;\r\n        hasUpdated = true;\r\n      }\r\n    }\r\n\r\n    if (hasUpdated) {\r\n      this.setState({\r\n        isGroupCollapsed: isGroupCollapsed\r\n      });\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element | null {\r\n    const { styles, groups, className, isOnTop, theme } = this.props;\r\n\r\n    if (!groups) {\r\n      return null;\r\n    }\r\n\r\n    const groupElements: React.ReactElement<{}>[] = groups.map(this._renderGroup);\r\n\r\n    const classNames = getClassNames(styles!, { theme: theme!, className, isOnTop, groups });\r\n\r\n    return (\r\n      <FocusZone direction={FocusZoneDirection.vertical}>\r\n        <nav role=\"navigation\" className={classNames.root} aria-label={this.props.ariaLabel}>\r\n          {groupElements}\r\n        </nav>\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  public get selectedKey(): string | undefined {\r\n    return this.state.selectedKey;\r\n  }\r\n\r\n  private _onRenderLink = (link: INavLink): JSX.Element => {\r\n    const { styles, groups, theme } = this.props;\r\n    const classNames = getClassNames(styles!, { theme: theme!, groups });\r\n    return <div className={classNames.linkText}>{link.name}</div>;\r\n  };\r\n\r\n  private _renderNavLink(link: INavLink, linkIndex: number, nestingLevel: number): JSX.Element {\r\n    const { styles, groups, theme, onRenderLink = this._onRenderLink, linkAs: LinkAs = ActionButton } = this.props;\r\n\r\n    const classNames = getClassNames(styles!, {\r\n      theme: theme!,\r\n      isSelected: this._isLinkSelected(link),\r\n      isDisabled: link.disabled,\r\n      isButtonEntry: link.onClick && !link.forceAnchor,\r\n      leftPadding: _indentationSize * nestingLevel + _baseIndent,\r\n      groups\r\n    });\r\n\r\n    // Prevent hijacking of the parent window if link.target is defined\r\n    const rel = link.url && link.target && !isRelativeUrl(link.url) ? 'noopener noreferrer' : undefined;\r\n\r\n    return (\r\n      <LinkAs\r\n        className={classNames.link}\r\n        styles={buttonStyles}\r\n        href={link.url || (link.forceAnchor ? 'javascript:' : undefined)}\r\n        iconProps={link.iconProps || { iconName: link.icon || '' }}\r\n        onClick={link.onClick ? this._onNavButtonLinkClicked.bind(this, link) : this._onNavAnchorLinkClicked.bind(this, link)}\r\n        title={link.title || link.name}\r\n        target={link.target}\r\n        rel={rel}\r\n        disabled={link.disabled}\r\n        aria-label={link.ariaLabel}\r\n      >\r\n        {onRenderLink(link, this._onRenderLink)}\r\n      </LinkAs>\r\n    );\r\n  }\r\n\r\n  private _renderCompositeLink(link: INavLink, linkIndex: number, nestingLevel: number): React.ReactElement<{}> {\r\n    const divProps: React.HTMLProps<HTMLDivElement> = { ...getNativeProps(link, divProperties, ['onClick']) };\r\n    const { styles, groups, theme } = this.props;\r\n    const classNames = getClassNames(styles!, {\r\n      theme: theme!,\r\n      isExpanded: !!link.isExpanded,\r\n      isSelected: this._isLinkSelected(link),\r\n      isLink: true,\r\n      isDisabled: link.disabled,\r\n      position: _indentationSize * nestingLevel + 1,\r\n      groups\r\n    });\r\n\r\n    return (\r\n      <div {...divProps} key={link.key || linkIndex} className={classNames.compositeLink}>\r\n        {link.links && link.links.length > 0 ? (\r\n          <button\r\n            className={classNames.chevronButton}\r\n            onClick={this._onLinkExpandClicked.bind(this, link)}\r\n            aria-label={this.props.expandButtonAriaLabel}\r\n            aria-expanded={link.isExpanded ? 'true' : 'false'}\r\n          >\r\n            <Icon className={classNames.chevronIcon} iconName=\"ChevronDown\" />\r\n          </button>\r\n        ) : null}\r\n        {this._renderNavLink(link, linkIndex, nestingLevel)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _renderLink(link: INavLink, linkIndex: number, nestingLevel: number): React.ReactElement<{}> {\r\n    const { styles, groups, theme } = this.props;\r\n    const classNames = getClassNames(styles!, { theme: theme!, groups });\r\n\r\n    return (\r\n      <li key={link.key || linkIndex} role=\"listitem\" className={classNames.navItem}>\r\n        {this._renderCompositeLink(link, linkIndex, nestingLevel)}\r\n        {link.isExpanded ? this._renderLinks(link.links, ++nestingLevel) : null}\r\n      </li>\r\n    );\r\n  }\r\n\r\n  private _renderLinks(links: INavLink[] | undefined, nestingLevel: number): React.ReactElement<{}> | null {\r\n    if (!links || !links.length) {\r\n      return null;\r\n    }\r\n    const linkElements: React.ReactElement<{}>[] = links.map((link: INavLink, linkIndex: number) =>\r\n      this._renderLink(link, linkIndex, nestingLevel)\r\n    );\r\n\r\n    const { styles, groups, theme } = this.props;\r\n    const classNames = getClassNames(styles!, { theme: theme!, groups });\r\n\r\n    return (\r\n      <ul role=\"list\" className={classNames.navItems}>\r\n        {linkElements}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  private _renderGroup = (group: INavLinkGroup, groupIndex: number): React.ReactElement<{}> => {\r\n    const { styles, groups, theme, onRenderGroupHeader = this._renderGroupHeader } = this.props;\r\n    const classNames = getClassNames(styles!, {\r\n      theme: theme!,\r\n      isGroup: true,\r\n      isExpanded: !this.state.isGroupCollapsed![group.name!],\r\n      groups\r\n    });\r\n\r\n    return (\r\n      <div key={groupIndex} className={classNames.group}>\r\n        {group.name ? onRenderGroupHeader(group, this._renderGroupHeader) : null}\r\n        <div className={classNames.groupContent}>{this._renderLinks(group.links, 0 /* nestingLevel */)}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  private _renderGroupHeader = (group: INavLinkGroup): React.ReactElement<{}> => {\r\n    const { styles, groups, theme, expandButtonAriaLabel } = this.props;\r\n    const classNames = getClassNames(styles!, {\r\n      theme: theme!,\r\n      isGroup: true,\r\n      isExpanded: !this.state.isGroupCollapsed![group.name!],\r\n      groups\r\n    });\r\n\r\n    return (\r\n      <button\r\n        className={classNames.chevronButton}\r\n        onClick={this._onGroupHeaderClicked.bind(this, group)}\r\n        aria-label={expandButtonAriaLabel}\r\n        aria-expanded={!this.state.isGroupCollapsed![group.name!]}\r\n      >\r\n        <Icon className={classNames.chevronIcon} iconName=\"ChevronDown\" />\r\n        {group.name}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  private _onGroupHeaderClicked(group: INavLinkGroup, ev: React.MouseEvent<HTMLElement>): void {\r\n    const { isGroupCollapsed } = this.state;\r\n    const groupKey = group.name!;\r\n    const isCollapsed = !isGroupCollapsed![groupKey];\r\n\r\n    if (group.onHeaderClick) {\r\n      group.onHeaderClick(ev, isCollapsed);\r\n    }\r\n\r\n    isGroupCollapsed![groupKey] = isCollapsed;\r\n    this.setState({ isGroupCollapsed: isGroupCollapsed });\r\n\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  private _onLinkExpandClicked(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\r\n    const { onLinkExpandClick } = this.props;\r\n\r\n    if (onLinkExpandClick) {\r\n      onLinkExpandClick(ev, link);\r\n    }\r\n\r\n    if (!ev.defaultPrevented) {\r\n      link.isExpanded = !link.isExpanded;\r\n      this.setState({ isLinkExpandStateChanged: true });\r\n    }\r\n\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  private _onNavAnchorLinkClicked(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\r\n    if (this.props.onLinkClick) {\r\n      this.props.onLinkClick(ev, link);\r\n    }\r\n    if (!link.url && link.links && link.links.length > 0) {\r\n      this._onLinkExpandClicked(link, ev);\r\n    }\r\n\r\n    this.setState({ selectedKey: link.key });\r\n  }\r\n\r\n  private _onNavButtonLinkClicked(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\r\n    if (link.onClick) {\r\n      link.onClick(ev, link);\r\n    }\r\n    if (!link.url && link.links && link.links.length > 0) {\r\n      this._onLinkExpandClicked(link, ev);\r\n    }\r\n\r\n    this.setState({ selectedKey: link.key });\r\n  }\r\n\r\n  private _isLinkSelected(link: INavLink): boolean {\r\n    // if caller passes in selectedKey, use it as first choice or\r\n    // if current state.selectedKey (from addressbar) is match to the link or\r\n    // check if URL is matching location.href (if link.url exists)\r\n    if (this.props.selectedKey !== undefined) {\r\n      return link.key === this.props.selectedKey;\r\n    } else if (this.state.selectedKey !== undefined) {\r\n      return link.key === this.state.selectedKey;\r\n    } else if (typeof window === 'undefined' || !link.url) {\r\n      // resolve is not supported for ssr\r\n      return false;\r\n    } else {\r\n      // If selectedKey is undefined in props and state, then check URL\r\n      _urlResolver = _urlResolver || document.createElement('a');\r\n\r\n      _urlResolver.href = link.url || '';\r\n      const target: string = _urlResolver.href;\r\n\r\n      if (location.href === target) {\r\n        return true;\r\n      }\r\n\r\n      // If selectedKey is not defined in state, then check URL to determine link selected status\r\n      if (location.protocol + '//' + location.host + location.pathname === target) {\r\n        return true;\r\n      }\r\n\r\n      if (location.hash) {\r\n        // Match the hash to the url.\r\n        if (location.hash === link.url) {\r\n          return true;\r\n        }\r\n\r\n        // Match a rebased url. (e.g. #foo becomes http://hostname/foo)\r\n        _urlResolver.href = location.hash.substring(1);\r\n\r\n        return _urlResolver.href === target;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n"]}