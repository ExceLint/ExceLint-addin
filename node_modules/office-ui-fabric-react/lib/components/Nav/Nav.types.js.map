{"version":3,"file":"Nav.types.js","sourceRoot":"../src/","sources":["components/Nav/Nav.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\r\nimport { IStyle, ITheme } from '../../Styling';\r\nimport { IRefObject, IRenderFunction, IStyleFunctionOrObject, IComponentAs } from '../../Utilities';\r\nimport { IIconProps } from '../Icon/Icon.types';\r\nimport { IButtonProps } from '../../Button';\r\n\r\nexport interface INav {\r\n  /**\r\n   * The meta 'key' property of the currently selected NavItem of the Nav. Can return\r\n   * undefined if the currently selected nav item has no populated key property. Be aware\r\n   * that in order for Nav to properly understand which key is selected all NavItems in\r\n   * all groups of the Nav must have populated key properties.\r\n   */\r\n  selectedKey: string | undefined;\r\n}\r\n\r\nexport interface INavProps {\r\n  /**\r\n   * Optional callback to access the INav interface. Use this instead of ref for accessing\r\n   * the public methods and properties of the component.\r\n   */\r\n  componentRef?: IRefObject<INav>;\r\n\r\n  /**\r\n   * Call to provide customized styling that will layer on top of the variant rules\r\n   */\r\n  styles?: IStyleFunctionOrObject<INavStyleProps, INavStyles>;\r\n\r\n  /**\r\n   * Theme provided by HOC.\r\n   */\r\n  theme?: ITheme;\r\n\r\n  /**\r\n   * Additional css class to apply to the Nav\r\n   * @defaultvalue undefined\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * A collection of link groups to display in the navigation bar\r\n   */\r\n  groups: INavLinkGroup[] | null;\r\n\r\n  /**\r\n   * Used to customize how content inside the group header is rendered\r\n   * @defaultvalue Default group header rendering\r\n   */\r\n  onRenderGroupHeader?: IRenderFunction<INavLinkGroup>;\r\n\r\n  /**\r\n   * Render a custom link in place of the normal one.\r\n   * This replaces the entire button rather than simply button content\r\n   */\r\n  linkAs?: IComponentAs<IButtonProps>;\r\n\r\n  /**\r\n   * Used to customize how content inside the link tag is rendered\r\n   * @defaultvalue Default link rendering\r\n   */\r\n  onRenderLink?: IRenderFunction<INavLink>;\r\n\r\n  /**\r\n   * Function callback invoked when a link in the navigation is clicked\r\n   */\r\n  onLinkClick?: (ev?: React.MouseEvent<HTMLElement>, item?: INavLink) => void;\r\n\r\n  /**\r\n   * Function callback invoked when the chevron on a link is clicked\r\n   */\r\n  onLinkExpandClick?: (ev?: React.MouseEvent<HTMLElement>, item?: INavLink) => void;\r\n\r\n  /**\r\n   * Indicates whether the navigation component renders on top of other content in the UI\r\n   */\r\n  isOnTop?: boolean;\r\n\r\n  /**\r\n   * (Optional) The key of the nav item initially selected.\r\n   */\r\n  initialSelectedKey?: string;\r\n\r\n  /**\r\n   * (Optional) The key of the nav item selected by caller.\r\n   */\r\n  selectedKey?: string;\r\n\r\n  /**\r\n   * (Optional) The nav container aria label.\r\n   */\r\n  ariaLabel?: string;\r\n\r\n  /**\r\n   * (Optional) The nav container aria label.\r\n   */\r\n  expandButtonAriaLabel?: string;\r\n\r\n  /**\r\n   * Deprecated at v0.68.1 and will be removed at \\>= v1.0.0.\r\n   * @deprecated Removed at v1.0.0.\r\n   **/\r\n  expandedStateText?: string;\r\n\r\n  /**\r\n   * Deprecated at v0.68.1 and will be removed at \\>= v1.0.0.\r\n   * @deprecated Removed at v1.0.0.\r\n   **/\r\n  collapsedStateText?: string;\r\n}\r\n\r\nexport interface INavLinkGroup {\r\n  /**\r\n   * Text to render as the header of a group\r\n   */\r\n  name?: string;\r\n\r\n  /**\r\n   * Links to render within this group\r\n   */\r\n  links: INavLink[];\r\n\r\n  /**\r\n   * The name to use for functional automation tests\r\n   */\r\n  automationId?: string;\r\n\r\n  /**\r\n   * If true, the group should render collapsed by default\r\n   */\r\n  collapseByDefault?: boolean;\r\n\r\n  /**\r\n   * Callback invoked when a group header is clicked\r\n   */\r\n  onHeaderClick?: (ev?: React.MouseEvent<HTMLElement>, isCollapsing?: boolean) => void;\r\n}\r\n\r\nexport interface INavLink {\r\n  /**\r\n   * Text to render for this link\r\n   */\r\n  name: string;\r\n\r\n  /**\r\n   * URL to navigate to for this link\r\n   */\r\n  url: string;\r\n\r\n  /**\r\n   * Unique, stable key for the link, used when rendering the list of links and for tracking\r\n   * the currently selected link.\r\n   */\r\n  key?: string;\r\n\r\n  /**\r\n   * Child links to this link, if any\r\n   */\r\n  links?: INavLink[];\r\n\r\n  /**\r\n   * Callback invoked when this link is clicked. Providing this callback will cause the link\r\n   * to render as a button (rather than an anchor) unless forceAnchor is set to true.\r\n   */\r\n  onClick?: (ev?: React.MouseEvent<HTMLElement>, item?: INavLink) => void;\r\n\r\n  /**\r\n   * Name of an icon to render next to the link button.\r\n   */\r\n  icon?: string;\r\n\r\n  /**\r\n   * Deprecated. Use `iconProps.className` instead.\r\n   * @deprecated Use `iconProps.className` instead.\r\n   */\r\n  iconClassName?: string;\r\n\r\n  /**\r\n   * Props for an icon to render next to the link button.\r\n   */\r\n  iconProps?: IIconProps;\r\n\r\n  /**\r\n   * Deprecated at v0.68.1 and will be removed at \\>= v1.0.0.\r\n   * @deprecated Removed at v1.0.0.\r\n   */\r\n  engagementName?: string;\r\n\r\n  /**\r\n   * Deprecated at v0.68.1 and will be removed at \\>= v1.0.0.\r\n   * @deprecated Removed at v1.0.0.\r\n   */\r\n  altText?: string;\r\n\r\n  /**\r\n   * The name to use for functional automation tests\r\n   */\r\n  automationId?: string;\r\n\r\n  /**\r\n   * Whether or not the link is in an expanded state\r\n   */\r\n  isExpanded?: boolean;\r\n\r\n  /**\r\n   * Aria label for nav link\r\n   */\r\n  ariaLabel?: string;\r\n\r\n  /**\r\n   * Text for title tooltip and ARIA description.\r\n   */\r\n  title?: string;\r\n\r\n  /**\r\n   * Link <a> target.\r\n   */\r\n  target?: string;\r\n\r\n  /**\r\n   * Whether or not the link is disabled.\r\n   */\r\n  disabled?: boolean;\r\n\r\n  /**\r\n   * @deprecated Not used in the Nav control or anywhere else in office-ui-fabric-react.\r\n   */\r\n  parentId?: string;\r\n\r\n  /**\r\n   * (Optional) By default, any link with onClick defined will render as a button.\r\n   * Set this property to true to override that behavior. (Links without onClick defined\r\n   * will render as anchors by default.)\r\n   */\r\n  forceAnchor?: boolean;\r\n\r\n  /**\r\n   * (Optional) Any additional properties to apply to the rendered links.\r\n   */\r\n  [propertyName: string]: any;\r\n}\r\n\r\nexport interface INavStyleProps {\r\n  /**\r\n   * Accept theme prop.\r\n   */\r\n  theme: ITheme;\r\n\r\n  /**\r\n   * Accept custom classNames\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * is element on top boolean\r\n   */\r\n  isOnTop?: boolean;\r\n\r\n  /**\r\n   * is element a link boolean\r\n   */\r\n  isLink?: boolean;\r\n\r\n  /**\r\n   * is element disabled\r\n   */\r\n  isDisabled?: boolean;\r\n\r\n  /**\r\n   * is element a group boolean\r\n   */\r\n  isGroup?: boolean;\r\n\r\n  /**\r\n   * is element expanded boolean\r\n   */\r\n  isExpanded?: boolean;\r\n\r\n  /**\r\n   * is element selected boolean\r\n   */\r\n  isSelected?: boolean;\r\n\r\n  /**\r\n   * is button\r\n   */\r\n  isButtonEntry?: boolean;\r\n\r\n  /**\r\n   * Nav height value\r\n   */\r\n  navHeight?: number;\r\n\r\n  /**\r\n   * left padding value\r\n   */\r\n  leftPadding?: number;\r\n\r\n  /**\r\n   * left padding when expanded value\r\n   */\r\n  leftPaddingExpanded?: number;\r\n\r\n  /**\r\n   * right padding value\r\n   */\r\n  rightPadding?: number;\r\n\r\n  /**\r\n   * position value\r\n   */\r\n  position?: number;\r\n\r\n  /**\r\n   * Inherited from INavProps\r\n   * A collection of link groups to display in the navigation bar\r\n   */\r\n  groups: INavLinkGroup[] | null;\r\n}\r\n\r\nexport interface INavStyles {\r\n  /**\r\n   * Style set for the root element.\r\n   */\r\n  root: IStyle;\r\n\r\n  /**\r\n   * Style set for the link text container div element.\r\n   */\r\n  linkText: IStyle;\r\n\r\n  /**\r\n   * Style set for the link element extending the\r\n   * root style set for ActionButton component.\r\n   */\r\n  link: IStyle;\r\n\r\n  /**\r\n   * Style set for the composite link container div element\r\n   */\r\n  compositeLink: IStyle;\r\n\r\n  /**\r\n   * Style set for the chevron button inside the composite\r\n   * link and group elements.\r\n   */\r\n  chevronButton: IStyle;\r\n\r\n  /**\r\n   * Style set for the chevron icon inside the composite\r\n   * link and group elements.\r\n   */\r\n  chevronIcon: IStyle;\r\n\r\n  /**\r\n   * Style set for the nav links ul element.\r\n   */\r\n  navItems: IStyle;\r\n\r\n  /**\r\n   * Style set for the nav links li element.\r\n   */\r\n  navItem: IStyle;\r\n\r\n  /**\r\n   * Style set for the group root div.\r\n   */\r\n  group: IStyle;\r\n\r\n  /**\r\n   * Style set for the group content div inside group.\r\n   */\r\n  groupContent: IStyle;\r\n}\r\n"]}