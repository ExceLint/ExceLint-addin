{"version":3,"file":"Coachmark.types.js","sourceRoot":"../src/","sources":["components/Coachmark/Coachmark.types.ts"],"names":[],"mappings":"","sourcesContent":["import { IStyle, ITheme } from '../../Styling';\r\nimport { IPositioningContainerProps } from './PositioningContainer/PositioningContainer.types';\r\nimport { IRefObject, IStyleFunctionOrObject } from '../../Utilities';\r\nimport { CoachmarkBase } from './Coachmark.base';\r\nimport { ITeachingBubble } from '../../TeachingBubble';\r\n\r\nexport interface ICoachmark {\r\n  /**\r\n   * Forces the Coachmark to dismiss\r\n   */\r\n  dismiss?: (ev?: any) => void;\r\n}\r\n\r\n/** Coachmark component props */\r\nexport interface ICoachmarkProps extends React.ClassAttributes<CoachmarkBase> {\r\n  /**\r\n   * Optional callback to access the ICoachmark interface. Use this instead of ref for accessing\r\n   * the public methods and properties of the component.\r\n   */\r\n  componentRef?: IRefObject<ICoachmark>;\r\n\r\n  /**\r\n   * If provided, additional class name to provide on the root element.\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * Call to provide customized styling that will layer on top of the variant rules\r\n   */\r\n  styles?: IStyleFunctionOrObject<ICoachmarkStyleProps, ICoachmarkStyles>;\r\n\r\n  /**\r\n   * The target that the Coachmark should try to position itself based on.\r\n   */\r\n  target: HTMLElement | string | null;\r\n\r\n  /**\r\n   * Props to pass to the PositioningContainer component. Specify the `directionalHint` to indicate\r\n   * on which edge the Coachmark/TeachingBubble should be positioned.\r\n   * @defaultvalue directionalHint: DirectionalHint.bottomAutoEdge\r\n   */\r\n  positioningContainerProps?: IPositioningContainerProps;\r\n\r\n  /**\r\n   * Whether or not to force the Coachmark/TeachingBubble content to fit within the window bounds.\r\n   * @defaultvalue true\r\n   */\r\n  isPositionForced?: boolean;\r\n\r\n  /**\r\n   * The starting collapsed state for the Coachmark.  Use `isCollapsed` instead.\r\n   * @defaultvalue true\r\n   * @deprecated Use `isCollapsed` instead.\r\n   */\r\n  collapsed?: boolean;\r\n\r\n  /**\r\n   * The starting collapsed state for the Coachmark.\r\n   * @defaultvalue true\r\n   */\r\n  isCollapsed?: boolean;\r\n\r\n  /**\r\n   * The distance in pixels the mouse is located\r\n   * before opening up the Coachmark.\r\n   * @defaultvalue 10\r\n   */\r\n  mouseProximityOffset?: number;\r\n\r\n  /**\r\n   * Callback when the opening animation begins.\r\n   */\r\n  onAnimationOpenStart?: () => void;\r\n\r\n  /**\r\n   * Callback when the opening animation completes.\r\n   */\r\n  onAnimationOpenEnd?: () => void;\r\n\r\n  /**\r\n   * The width of the Beak component.\r\n   * @deprecated No longer used.\r\n   */\r\n  beakWidth?: number;\r\n\r\n  /**\r\n   * The height of the Beak component.\r\n   * @deprecated No longer used.\r\n   */\r\n  beakHeight?: number;\r\n\r\n  /**\r\n   * Delay before allowing mouse movements to open the Coachmark.\r\n   * @defaultvalue 3600\r\n   */\r\n  delayBeforeMouseOpen?: number;\r\n\r\n  /**\r\n   * Delay in milliseconds before Coachmark animation appears.\r\n   * @defaultvalue 0\r\n   */\r\n  delayBeforeCoachmarkAnimation?: number;\r\n\r\n  /**\r\n   * Callback to run when the mouse moves.\r\n   */\r\n  onMouseMove?: (e: MouseEvent) => void;\r\n\r\n  /**\r\n   * The width of the Coachmark.\r\n   * @deprecated No longer used.\r\n   */\r\n  width?: number;\r\n\r\n  /**\r\n   * The height of the Coachmark.\r\n   * @deprecated No longer used.\r\n   */\r\n  height?: number;\r\n\r\n  /**\r\n   * Color of the Coachmark/TeachingBubble.\r\n   */\r\n  color?: string;\r\n\r\n  /**\r\n   * Beacon color one.\r\n   */\r\n  beaconColorOne?: string;\r\n\r\n  /**\r\n   * Beacon color two.\r\n   */\r\n  beaconColorTwo?: string;\r\n\r\n  /**\r\n   * Text to announce to screen reader / narrator when Coachmark is displayed\r\n   */\r\n  ariaAlertText?: string;\r\n\r\n  /**\r\n   * Ref for TeachingBubble\r\n   * @deprecated Coachmark uses `focusFirstChild` utility instead to focus on TeachingBubbleContent\r\n   */\r\n  teachingBubbleRef?: ITeachingBubble;\r\n\r\n  /**\r\n   *  Defines the element id referencing the element containing label text for Coachmark.\r\n   */\r\n  ariaLabelledBy?: string;\r\n\r\n  /**\r\n   * Defines the element id referencing the element containing the description for the Coachmark.\r\n   */\r\n  ariaDescribedBy?: string;\r\n\r\n  /**\r\n   *  Defines the text content for the ariaLabelledBy element\r\n   */\r\n  ariaLabelledByText?: string;\r\n\r\n  /**\r\n   * Defines the text content for the ariaDescribedBy element\r\n   */\r\n  ariaDescribedByText?: string;\r\n\r\n  /**\r\n   * If true then the Coachmark will not dismiss when it loses focus\r\n   * @defaultvalue false\r\n   */\r\n  preventDismissOnLostFocus?: boolean;\r\n\r\n  /**\r\n   * If true then focus will not be set to the Coachmark when it mounts. Useful in cases where focus on coachmark\r\n   * is causing other components in page to dismiss upon losing focus.\r\n   * @defaultvalue false\r\n   */\r\n  preventFocusOnMount?: boolean;\r\n\r\n  /**\r\n   * Callback when the Coachmark tries to close.\r\n   */\r\n  onDismiss?: (ev?: any) => void;\r\n\r\n  /**\r\n   * Theme provided by higher order component.\r\n   */\r\n  theme?: ITheme;\r\n}\r\n\r\n/** The props needed to construct styles. */\r\nexport interface ICoachmarkStyleProps {\r\n  /**\r\n   * ClassName to provide on the root style area.\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * Current theme.\r\n   */\r\n  theme?: ITheme;\r\n\r\n  /**\r\n   * Is the Coachmark collapsed.\r\n   * Deprecated, use `isCollapsed` instead.\r\n   * @deprecated Use `isCollapsed` instead.\r\n   */\r\n  collapsed?: boolean;\r\n\r\n  /**\r\n   * Is the Coachmark collapsed\r\n   */\r\n  isCollapsed: boolean;\r\n\r\n  /**\r\n   * Is the beacon currently animating.\r\n   */\r\n  isBeaconAnimating: boolean;\r\n\r\n  /**\r\n   * Is the component taking measurements\r\n   */\r\n  isMeasuring: boolean;\r\n\r\n  /**\r\n   * Is the Coachmark finished measuring the dimensions of innerHostElement\r\n   */\r\n  isMeasured: boolean;\r\n\r\n  /**\r\n   * The height measured before the component has been mounted\r\n   * in pixels\r\n   */\r\n  entityHostHeight?: string;\r\n\r\n  /**\r\n   * The width measured in pixels\r\n   */\r\n  entityHostWidth?: string;\r\n\r\n  /**\r\n   * Width of the coachmark\r\n   */\r\n  width?: string;\r\n\r\n  /**\r\n   * Height of the coachmark\r\n   */\r\n  height?: string;\r\n\r\n  /**\r\n   * Color\r\n   */\r\n  color?: string;\r\n\r\n  /**\r\n   * Beacon color one\r\n   */\r\n  beaconColorOne?: string;\r\n\r\n  /**\r\n   * Beacon color two\r\n   */\r\n  beaconColorTwo?: string;\r\n\r\n  /**\r\n   * Transform origin for teaching bubble content\r\n   */\r\n  transformOrigin?: string;\r\n\r\n  /**\r\n   * Delay time for the animation to start\r\n   */\r\n  delayBeforeCoachmarkAnimation?: string;\r\n}\r\n\r\n/** Represents the stylable areas of the control. */\r\nexport interface ICoachmarkStyles {\r\n  /**\r\n   * Style for the root element in the default enabled/unchecked state.\r\n   */\r\n  root?: IStyle;\r\n\r\n  /**\r\n   * The pulsing beacon that animates when the Coachmark is collapsed.\r\n   */\r\n  pulsingBeacon?: IStyle;\r\n\r\n  /**\r\n   * The layer, or div, that the translate animation will be applied to.\r\n   */\r\n  translateAnimationContainer?: IStyle;\r\n\r\n  /**\r\n   * The layer the Scale animation will be applied to.\r\n   */\r\n  scaleAnimationLayer?: IStyle;\r\n\r\n  /**\r\n   * The layer the Rotate animation will be applied to.\r\n   */\r\n  rotateAnimationLayer?: IStyle;\r\n\r\n  /**\r\n   * The layer that content/components/elements will be hosted in.\r\n   */\r\n  entityHost?: IStyle;\r\n\r\n  /**\r\n   * The inner layer that components will be hosted in\r\n   * and primary purpose is scaling the layer down while the\r\n   * Coachmark collapsed.\r\n   */\r\n  entityInnerHost: IStyle;\r\n\r\n  /**\r\n   * The layer that directly contains the TeachingBubbleContent\r\n   */\r\n  childrenContainer: IStyle;\r\n\r\n  /**\r\n   * The styles applied when the Coachmark has collapsed.\r\n   */\r\n  collapsed?: IStyle;\r\n\r\n  /**\r\n   * The styles applied to the ARIA attribute container\r\n   */\r\n  ariaContainer?: IStyle;\r\n}\r\n\r\n/**\r\n * @deprecated No longer used.\r\n */\r\nexport type ICoachmarkTypes = ICoachmarkProps;\r\n"]}