{"version":3,"file":"Beak.js","sourceRoot":"../src/","sources":["components/Coachmark/Beak/Beak.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, initializeComponentRef } from '../../../Utilities';\nimport { IBeakProps } from './Beak.types';\nimport { getStyles, IBeakStyles } from './Beak.styles';\nimport { IBeakStylesProps } from './Beak.types';\nimport { RectangleEdge } from '../../../utilities/positioning';\n\nexport const BEAK_HEIGHT = 10;\nexport const BEAK_WIDTH = 18;\n\nexport class Beak extends React.Component<IBeakProps, {}> {\n  constructor(props: IBeakProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const { left, top, bottom, right, color, direction = RectangleEdge.top } = this.props;\n\n    let svgHeight: number;\n    let svgWidth: number;\n\n    if (direction === RectangleEdge.top || direction === RectangleEdge.bottom) {\n      svgHeight = BEAK_HEIGHT;\n      svgWidth = BEAK_WIDTH;\n    } else {\n      svgHeight = BEAK_WIDTH;\n      svgWidth = BEAK_HEIGHT;\n    }\n\n    let pointOne: string;\n    let pointTwo: string;\n    let pointThree: string;\n    let transform: string;\n\n    switch (direction) {\n      case RectangleEdge.top:\n      default:\n        pointOne = `${BEAK_WIDTH / 2}, 0`;\n        pointTwo = `${BEAK_WIDTH}, ${BEAK_HEIGHT}`;\n        pointThree = `0, ${BEAK_HEIGHT}`;\n        transform = 'translateY(-100%)';\n        break;\n      case RectangleEdge.right:\n        pointOne = `0, 0`;\n        pointTwo = `${BEAK_HEIGHT}, ${BEAK_HEIGHT}`;\n        pointThree = `0, ${BEAK_WIDTH}`;\n        transform = 'translateX(100%)';\n        break;\n      case RectangleEdge.bottom:\n        pointOne = `0, 0`;\n        pointTwo = `${BEAK_WIDTH}, 0`;\n        pointThree = `${BEAK_WIDTH / 2}, ${BEAK_HEIGHT}`;\n        transform = 'translateY(100%)';\n        break;\n      case RectangleEdge.left:\n        pointOne = `${BEAK_HEIGHT}, 0`;\n        pointTwo = `0, ${BEAK_HEIGHT}`;\n        pointThree = `${BEAK_HEIGHT}, ${BEAK_WIDTH}`;\n        transform = 'translateX(-100%)';\n        break;\n    }\n\n    const getClassNames = classNamesFunction<IBeakStylesProps, IBeakStyles>();\n    const classNames = getClassNames(getStyles, {\n      left,\n      top,\n      bottom,\n      right,\n      height: `${svgHeight}px`,\n      width: `${svgWidth}px`,\n      transform: transform,\n      color,\n    });\n\n    return (\n      <div className={classNames.root} role=\"presentation\">\n        <svg height={svgHeight} width={svgWidth} className={classNames.beak}>\n          <polygon points={pointOne + ' ' + pointTwo + ' ' + pointThree} />\n        </svg>\n      </div>\n    );\n  }\n}\n"]}