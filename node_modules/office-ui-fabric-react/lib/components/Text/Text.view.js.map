{"version":3,"file":"Text.view.js","sourceRoot":"../src/","sources":["components/Text/Text.view.tsx"],"names":[],"mappings":";AAAA,qBAAqB;AACrB,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AACvD,OAAO,EAAE,cAAc,EAAE,qBAAqB,EAAE,MAAM,iBAAiB,CAAC;AAGxE,MAAM,CAAC,IAAM,QAAQ,GAA2B,UAAA,KAAK;IACnD,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;QAC9C,OAAO,IAAI,CAAC;KACb;IAEO,IAAA,mBAAK,EAAE,2BAAS,EAAE,aAAqB,EAArB,sCAAqB,EAAE,uBAAO,EAAE,qBAAM,EAAE,uEAAO,CAAW;IAEpF,IAAM,KAAK,GAAG,QAAQ,CAAyB,KAAK,EAAE;QACpD,IAAI,EAAE,QAAQ;KACf,CAAC,CAAC;IAEH,OAAO,UAAC,KAAK,CAAC,IAAI,eAAK,cAAc,CAAC,IAAI,EAAE,qBAAqB,CAAC,EAAI,CAAC;AACzE,CAAC,CAAC","sourcesContent":["/** @jsx withSlots */\nimport * as React from 'react';\nimport { withSlots, getSlots } from '../../Foundation';\nimport { getNativeProps, htmlElementProperties } from '../../Utilities';\nimport { ITextComponent, ITextProps, ITextSlots } from './Text.types';\n\nexport const TextView: ITextComponent['view'] = props => {\n  if (React.Children.count(props.children) === 0) {\n    return null;\n  }\n\n  const { block, className, as: RootType = 'span', variant, nowrap, ...rest } = props;\n\n  const Slots = getSlots<ITextProps, ITextSlots>(props, {\n    root: RootType,\n  });\n\n  return <Slots.root {...getNativeProps(rest, htmlElementProperties)} />;\n};\n"]}