{"version":3,"file":"FocusZone.List.Example.js","sourceRoot":"../src/","sources":["components/FocusZone/examples/FocusZone.List.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,iBAAiB,EAAE,MAAM,sCAAsC,CAAC;AAChG,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAClE,OAAO,EAAE,IAAI,EAAE,MAAM,iCAAiC,CAAC;AACvD,OAAO,EAAE,SAAS,EAAE,kBAAkB,EAAE,MAAM,sCAAsC,CAAC;AACrF,OAAO,EAAE,UAAU,EAAW,SAAS,EAAE,aAAa,EAAE,MAAM,wCAAwC,CAAC;AAEvG,IAAM,KAAK,GAAG,WAAW,CAAC,EAAE,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC;IACtC,GAAG,EAAE,KAAK,CAAC,QAAQ,EAAE;IACrB,IAAI,EAAE,OAAO,GAAG,KAAK;IACrB,GAAG,EAAE,0BAA0B,GAAG,CAAC,GAAG,GAAG,KAAM,CAAC;CACjD,CAAC,EAJqC,CAIrC,CAAC,CAAC;AAEJ,IAAM,OAAO,GAAc;IACzB;QACE,GAAG,EAAE,MAAM;QACX,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,MAAM;QACjB,QAAQ,EAAE,GAAG;KACd;IACD;QACE,GAAG,EAAE,MAAM;QACX,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE,GAAG;QACb,QAAQ,EAAE,UAAA,IAAI,IAAI,OAAA,oBAAC,IAAI,IAAC,IAAI,EAAE,IAAI,CAAC,GAAG,IAAG,IAAI,CAAC,GAAG,CAAQ,EAAvC,CAAuC;KAC1D;IACD;QACE,GAAG,EAAE,MAAM;QACX,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE,GAAG;QACb,QAAQ,EAAE,UAAA,IAAI,IAAI,OAAA,oBAAC,aAAa,QAAE,IAAI,CAAC,GAAG,CAAiB,EAAzC,CAAyC;KAC5D;CACF,CAAC;AAEF;IAA0C,gDAAmB;IAG3D,8BAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAIb;QAoBO,2BAAqB,GAAG,UAAC,EAAoC;YACnE,OAAO,EAAE,CAAC,KAAK,KAAK,iBAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACxD,CAAC,CAAC;QAxBA,KAAI,CAAC,UAAU,GAAG,IAAI,SAAS,EAAE,CAAC;QAClC,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;;IAClC,CAAC;IAEM,qCAAM,GAAb;QAAA,iBAgBC;QAfC,OAAO,CACL,oBAAC,SAAS,IAAC,SAAS,EAAE,kBAAkB,CAAC,QAAQ,EAAE,oBAAoB,EAAE,IAAI,EAAE,oBAAoB,EAAE,IAAI,CAAC,qBAAqB,IAC5H,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK,IAAK,OAAA,CAC1B,oBAAC,UAAU,IACT,GAAG,EAAE,IAAI,CAAC,IAAI,EACd,IAAI,EAAE,IAAI,EACV,SAAS,EAAE,KAAK,EAChB,OAAO,EAAE,OAAO,EAChB,aAAa,EAAE,aAAa,CAAC,IAAI,EACjC,SAAS,EAAE,KAAI,CAAC,UAAU,EAC1B,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,GACrD,CACH,EAV2B,CAU3B,CAAC,CACQ,CACb,CAAC;IACJ,CAAC;IAKH,2BAAC;AAAD,CAAC,AA/BD,CAA0C,KAAK,CAAC,aAAa,GA+B5D","sourcesContent":["import * as React from 'react';\r\nimport { KeyCodes, createArray, getRTLSafeKeyCode } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { FocusZone, FocusZoneDirection } from 'office-ui-fabric-react/lib/FocusZone';\r\nimport { DetailsRow, IColumn, Selection, SelectionMode } from 'office-ui-fabric-react/lib/DetailsList';\r\n\r\nconst ITEMS = createArray(10, index => ({\r\n  key: index.toString(),\r\n  name: 'Item-' + index,\r\n  url: 'http://placehold.it/100x' + (200 + index!)\r\n}));\r\n\r\nconst COLUMNS: IColumn[] = [\r\n  {\r\n    key: 'name',\r\n    name: 'Name',\r\n    fieldName: 'name',\r\n    minWidth: 100\r\n  },\r\n  {\r\n    key: 'link',\r\n    name: 'Link',\r\n    fieldName: 'url',\r\n    minWidth: 100,\r\n    onRender: item => <Link href={item.url}>{item.url}</Link>\r\n  },\r\n  {\r\n    key: 'link',\r\n    name: 'Link',\r\n    fieldName: 'url',\r\n    minWidth: 100,\r\n    onRender: item => <DefaultButton>{item.url}</DefaultButton>\r\n  }\r\n];\r\n\r\nexport class FocusZoneListExample extends React.PureComponent {\r\n  private _selection: Selection;\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this._selection = new Selection();\r\n    this._selection.setItems(ITEMS);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <FocusZone direction={FocusZoneDirection.vertical} isCircularNavigation={true} isInnerZoneKeystroke={this._isInnerZoneKeystroke}>\r\n        {ITEMS.map((item, index) => (\r\n          <DetailsRow\r\n            key={item.name}\r\n            item={item}\r\n            itemIndex={index}\r\n            columns={COLUMNS}\r\n            selectionMode={SelectionMode.none}\r\n            selection={this._selection}\r\n            styles={{ root: { display: 'block', width: '100%' } }}\r\n          />\r\n        ))}\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  private _isInnerZoneKeystroke = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\r\n    return ev.which === getRTLSafeKeyCode(KeyCodes.right);\r\n  };\r\n}\r\n"]}