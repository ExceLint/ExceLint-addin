{"version":3,"file":"FocusZone.Photos.Example.js","sourceRoot":"../src/","sources":["components/FocusZone/examples/FocusZone.Photos.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,MAAM,sCAAsC,CAAC;AACjE,OAAO,EAAE,KAAK,EAAE,MAAM,kCAAkC,CAAC;AACzD,OAAO,iCAAiC,CAAC;AAEzC,IAAM,SAAS,GAAG,EAAE,CAAC;AACrB,IAAI,QAAQ,GAAG,CAAC,CAAC;AAUjB;IAA4C,kDAAwC;IAClF,gCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAIb;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,KAAK,EAAE,KAAI,CAAC,gBAAgB,EAAE;SAC/B,CAAC;;IACJ,CAAC;IAEM,uCAAM,GAAb;QACU,IAAA,wBAAK,CAAgB;QAE7B,OAAO,CACL,oBAAC,SAAS,IAAC,EAAE,EAAC,IAAI,EAAC,SAAS,EAAC,gCAAgC;YAC3D,+JAAoI;YACnI,KAAK,CAAC,GAAG,CAAC,UAAC,IAAY,EAAE,KAAK,IAAK,OAAA,CAClC,4BACE,GAAG,EAAE,IAAI,CAAC,EAAE,EACZ,SAAS,EAAC,gCAAgC,mBAC3B,KAAK,GAAG,CAAC,kBACV,KAAK,CAAC,MAAM,gBACf,OAAO,uBACC,IAAI,EACvB,OAAO,EAAE,IAAI,CAAC,OAAO;gBAErB,oBAAC,KAAK,IAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,GAAI,CAC7D,CACN,EAZmC,CAYnC,CAAC,CACQ,CACb,CAAC;IACJ,CAAC;IAEO,iDAAgB,GAAxB;QACE,IAAM,KAAK,GAAa,EAAE,CAAC;QAE3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAClC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;SAChC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,4CAAW,GAAnB;QAAA,iBAuBC;QAtBC,IAAM,WAAW,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;QACzD,IAAM,EAAE,GAAG,QAAQ,EAAE,CAAC;QAEtB,OAAO;YACL,EAAE,IAAA;YACF,GAAG,EAAE,yBAAuB,WAAW,SAAM;YAC7C,KAAK,EAAE,WAAW;YAClB,MAAM,EAAE,GAAG;YACX,OAAO,EAAE,UAAC,EAAiC;gBACzC,IAAM,KAAK,GAAa,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAY,IAAK,OAAA,IAAI,CAAC,EAAE,KAAK,EAAE,EAAd,CAAc,CAAC,CAAC;gBAElF,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,OAAA,EAAE,CAAC,CAAC;gBAEzB,+DAA+D;gBAC/D,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;oBACtB,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,KAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC,EAAjD,CAAiD,EAAE,IAAI,CAAC,CAAC;iBAC3E;gBAED,EAAE,CAAC,cAAc,EAAE,CAAC;gBACpB,EAAE,CAAC,eAAe,EAAE,CAAC;YACvB,CAAC;SACF,CAAC;IACJ,CAAC;IACH,6BAAC;AAAD,CAAC,AAjED,CAA4C,KAAK,CAAC,SAAS,GAiE1D","sourcesContent":["import * as React from 'react';\r\nimport { FocusZone } from 'office-ui-fabric-react/lib/FocusZone';\r\nimport { Image } from 'office-ui-fabric-react/lib/Image';\r\nimport './FocusZone.Photos.Example.scss';\r\n\r\nconst MAX_COUNT = 20;\r\nlet _counter = 0;\r\n\r\nexport interface IPhoto {\r\n  id: number;\r\n  url: string;\r\n  width: number;\r\n  height: number;\r\n  onClick: (ev: React.MouseEvent<HTMLElement>) => void;\r\n}\r\n\r\nexport class FocusZonePhotosExample extends React.Component<{}, { items: IPhoto[] }> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      items: this._getInitialItems()\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    const { items } = this.state;\r\n\r\n    return (\r\n      <FocusZone as=\"ul\" className=\"ms-FocusZoneExamples-photoList\">\r\n        <p>Note: clicking on the items below will remove them, illustrating how FocusZone will retain focus even when items are removed.</p>\r\n        {items.map((item: IPhoto, index) => (\r\n          <li\r\n            key={item.id}\r\n            className=\"ms-FocusZoneExamples-photoCell\"\r\n            aria-posinset={index + 1}\r\n            aria-setsize={items.length}\r\n            aria-label=\"Photo\"\r\n            data-is-focusable={true}\r\n            onClick={item.onClick}\r\n          >\r\n            <Image src={item.url} width={item.width} height={item.height} />\r\n          </li>\r\n        ))}\r\n      </FocusZone>\r\n    );\r\n  }\r\n\r\n  private _getInitialItems(): IPhoto[] {\r\n    const items: IPhoto[] = [];\r\n\r\n    for (let i = 0; i < MAX_COUNT; i++) {\r\n      items.push(this._createItem());\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  private _createItem(): IPhoto {\r\n    const randomWidth = 50 + Math.floor(Math.random() * 150);\r\n    const id = _counter++;\r\n\r\n    return {\r\n      id,\r\n      url: `http://placehold.it/${randomWidth}x100`,\r\n      width: randomWidth,\r\n      height: 100,\r\n      onClick: (ev: React.MouseEvent<HTMLElement>) => {\r\n        const items: IPhoto[] = this.state.items.filter((item: IPhoto) => item.id !== id);\r\n\r\n        this.setState({ items });\r\n\r\n        // If we have run out of items, repopulate in a couple seconds.\r\n        if (items.length === 0) {\r\n          setTimeout(() => this.setState({ items: this._getInitialItems() }), 2000);\r\n        }\r\n\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    };\r\n  }\r\n}\r\n"]}