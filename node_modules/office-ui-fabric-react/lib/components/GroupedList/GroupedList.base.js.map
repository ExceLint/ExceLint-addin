{"version":3,"file":"GroupedList.base.js","sourceRoot":"../src/","sources":["components/GroupedList/GroupedList.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, IRectangle, assign, classNamesFunction, IClassNames } from '../../Utilities';\r\nimport { IGroupedList, IGroupedListProps, IGroup, IGroupedListStyleProps, IGroupedListStyles } from './GroupedList.types';\r\nimport { GroupedListSection } from './GroupedListSection';\r\nimport { List, ScrollToMode, IListProps } from '../../List';\r\nimport { SelectionMode } from '../../utilities/selection/index';\r\nimport { DEFAULT_ROW_HEIGHTS } from '../DetailsList/DetailsRow.styles';\r\n\r\nconst getClassNames = classNamesFunction<IGroupedListStyleProps, IGroupedListStyles>();\r\nconst { rowHeight: ROW_HEIGHT, compactRowHeight: COMPACT_ROW_HEIGHT } = DEFAULT_ROW_HEIGHTS;\r\n\r\nexport interface IGroupedListState {\r\n  lastWidth?: number;\r\n  lastSelectionMode?: SelectionMode;\r\n  groups?: IGroup[];\r\n}\r\n\r\nexport class GroupedListBase extends BaseComponent<IGroupedListProps, IGroupedListState> implements IGroupedList {\r\n  public static defaultProps = {\r\n    selectionMode: SelectionMode.multiple,\r\n    isHeaderVisible: true,\r\n    groupProps: {},\r\n    compact: false\r\n  };\r\n\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n  };\r\n\r\n  private _classNames: IClassNames<IGroupedListStyles>;\r\n\r\n  private _list = React.createRef<List>();\r\n\r\n  private _isSomeGroupExpanded: boolean;\r\n\r\n  constructor(props: IGroupedListProps) {\r\n    super(props);\r\n\r\n    this._isSomeGroupExpanded = this._computeIsSomeGroupExpanded(props.groups);\r\n\r\n    this.state = {\r\n      lastWidth: 0,\r\n      groups: props.groups\r\n    };\r\n  }\r\n\r\n  public scrollToIndex(index: number, measureItem?: (itemIndex: number) => number, scrollToMode?: ScrollToMode): void {\r\n    if (this._list.current) {\r\n      this._list.current.scrollToIndex(index, measureItem, scrollToMode);\r\n    }\r\n  }\r\n\r\n  public getStartItemIndexInView(): number {\r\n    return this._list.current!.getStartItemIndexInView() || 0;\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IGroupedListProps): void {\r\n    const { groups, selectionMode, compact } = this.props;\r\n    let shouldForceUpdates = false;\r\n\r\n    if (newProps.groups !== groups) {\r\n      this.setState({ groups: newProps.groups });\r\n      shouldForceUpdates = true;\r\n    }\r\n\r\n    if (newProps.selectionMode !== selectionMode || newProps.compact !== compact) {\r\n      shouldForceUpdates = true;\r\n    }\r\n\r\n    if (shouldForceUpdates) {\r\n      this._forceListUpdates();\r\n    }\r\n  }\r\n\r\n  public componentDidMount() {\r\n    const { groupProps, groups = [] } = this.props;\r\n\r\n    if (groupProps && groupProps.isAllGroupsCollapsed) {\r\n      this._setGroupsCollapsedState(groups, groupProps.isAllGroupsCollapsed);\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { className, usePageCache, onShouldVirtualize, theme, styles, compact } = this.props;\r\n    const { groups } = this.state;\r\n    this._classNames = getClassNames(styles, {\r\n      theme: theme!,\r\n      className,\r\n      compact: compact\r\n    });\r\n\r\n    return (\r\n      <div className={this._classNames.root} data-automationid=\"GroupedList\" data-is-scrollable=\"false\" role=\"presentation\">\r\n        {!groups ? (\r\n          this._renderGroup(undefined, 0)\r\n        ) : (\r\n          <List\r\n            ref={this._list}\r\n            role=\"presentation\"\r\n            items={groups}\r\n            onRenderCell={this._renderGroup}\r\n            getItemCountForPage={this._returnOne}\r\n            getPageHeight={this._getPageHeight}\r\n            getPageSpecification={this._getPageSpecification}\r\n            usePageCache={usePageCache}\r\n            onShouldVirtualize={onShouldVirtualize}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public forceUpdate() {\r\n    super.forceUpdate();\r\n    this._forceListUpdates();\r\n  }\r\n\r\n  public toggleCollapseAll(allCollapsed: boolean): void {\r\n    const { groups = [] } = this.state;\r\n    const { groupProps } = this.props;\r\n    const onToggleCollapseAll = groupProps && groupProps.onToggleCollapseAll;\r\n\r\n    if (groups.length > 0) {\r\n      if (onToggleCollapseAll) {\r\n        onToggleCollapseAll(allCollapsed);\r\n      }\r\n\r\n      this._setGroupsCollapsedState(groups, allCollapsed);\r\n\r\n      this._updateIsSomeGroupExpanded();\r\n\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  private _setGroupsCollapsedState(groups: IGroup[], isCollapsed: boolean): void {\r\n    for (let groupIndex = 0; groupIndex < groups.length; groupIndex++) {\r\n      groups[groupIndex].isCollapsed = isCollapsed;\r\n    }\r\n  }\r\n\r\n  private _renderGroup = (group: IGroup | undefined, groupIndex: number): React.ReactNode => {\r\n    const {\r\n      dragDropEvents,\r\n      dragDropHelper,\r\n      eventsToRegister,\r\n      groupProps,\r\n      items,\r\n      listProps,\r\n      onRenderCell,\r\n      selectionMode,\r\n      selection,\r\n      viewport,\r\n      onShouldVirtualize,\r\n      groups,\r\n      compact\r\n    } = this.props;\r\n\r\n    // override group header/footer props as needed\r\n    const dividerProps = {\r\n      onToggleSelectGroup: this._onToggleSelectGroup,\r\n      onToggleCollapse: this._onToggleCollapse,\r\n      onToggleSummarize: this._onToggleSummarize\r\n    };\r\n\r\n    const headerProps = assign({}, groupProps!.headerProps, dividerProps);\r\n    const showAllProps = assign({}, groupProps!.showAllProps, dividerProps);\r\n    const footerProps = assign({}, groupProps!.footerProps, dividerProps);\r\n    const groupNestingDepth = this._getGroupNestingDepth();\r\n\r\n    if (!groupProps!.showEmptyGroups && group && group.count === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <GroupedListSection\r\n        ref={'group_' + groupIndex}\r\n        key={this._getGroupKey(group, groupIndex)}\r\n        dragDropEvents={dragDropEvents}\r\n        dragDropHelper={dragDropHelper}\r\n        eventsToRegister={eventsToRegister}\r\n        footerProps={footerProps}\r\n        getGroupItemLimit={groupProps && groupProps.getGroupItemLimit}\r\n        group={group}\r\n        groupIndex={groupIndex}\r\n        groupNestingDepth={groupNestingDepth}\r\n        groupProps={groupProps}\r\n        headerProps={headerProps}\r\n        listProps={listProps}\r\n        items={items}\r\n        onRenderCell={onRenderCell}\r\n        onRenderGroupHeader={groupProps!.onRenderHeader}\r\n        onRenderGroupShowAll={groupProps!.onRenderShowAll}\r\n        onRenderGroupFooter={groupProps!.onRenderFooter}\r\n        selectionMode={selectionMode}\r\n        selection={selection}\r\n        showAllProps={showAllProps}\r\n        viewport={viewport}\r\n        onShouldVirtualize={onShouldVirtualize}\r\n        groupedListClassNames={this._classNames}\r\n        groups={groups}\r\n        compact={compact}\r\n      />\r\n    );\r\n  };\r\n\r\n  private _returnOne(): number {\r\n    return 1;\r\n  }\r\n\r\n  private _getDefaultGroupItemLimit = (group: IGroup): number => {\r\n    return group.count;\r\n  };\r\n\r\n  private _getGroupItemLimit = (group: IGroup): number => {\r\n    const { groupProps } = this.props;\r\n    const getGroupItemLimit = groupProps && groupProps.getGroupItemLimit ? groupProps.getGroupItemLimit : this._getDefaultGroupItemLimit;\r\n\r\n    return getGroupItemLimit(group);\r\n  };\r\n\r\n  private _getGroupHeight = (group: IGroup): number => {\r\n    const rowHeight = this.props.compact ? COMPACT_ROW_HEIGHT : ROW_HEIGHT;\r\n\r\n    return rowHeight + (group.isCollapsed ? 0 : rowHeight * this._getGroupItemLimit(group));\r\n  };\r\n\r\n  private _getPageHeight: IListProps['getPageHeight'] = (itemIndex: number) => {\r\n    const { groups } = this.state;\r\n    const { getGroupHeight = this._getGroupHeight } = this.props;\r\n    const pageGroup = groups && groups[itemIndex];\r\n\r\n    if (pageGroup) {\r\n      return getGroupHeight(pageGroup, itemIndex);\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  private _getGroupKey(group: IGroup | undefined, index: number): string {\r\n    return 'group-' + (group && group.key ? group.key : String(index));\r\n  }\r\n\r\n  private _getGroupNestingDepth(): number {\r\n    const { groups } = this.state;\r\n    let level = 0;\r\n    let groupsInLevel = groups;\r\n\r\n    while (groupsInLevel && groupsInLevel.length > 0) {\r\n      level++;\r\n      groupsInLevel = groupsInLevel[0].children;\r\n    }\r\n\r\n    return level;\r\n  }\r\n\r\n  private _onToggleCollapse = (group: IGroup): void => {\r\n    const { groupProps } = this.props;\r\n    const onToggleCollapse = groupProps && groupProps.headerProps && groupProps.headerProps.onToggleCollapse;\r\n\r\n    if (group) {\r\n      if (onToggleCollapse) {\r\n        onToggleCollapse(group);\r\n      }\r\n\r\n      group.isCollapsed = !group.isCollapsed;\r\n      this._updateIsSomeGroupExpanded();\r\n      this.forceUpdate();\r\n    }\r\n  };\r\n\r\n  private _onToggleSelectGroup = (group: IGroup): void => {\r\n    if (group) {\r\n      this.props.selection!.toggleRangeSelected(group.startIndex, group.count);\r\n    }\r\n  };\r\n\r\n  private _forceListUpdates(groups?: IGroup[]): void {\r\n    groups = groups || this.state.groups;\r\n\r\n    const groupCount = groups ? groups.length : 1;\r\n\r\n    if (this._list.current) {\r\n      this._list.current.forceUpdate();\r\n\r\n      for (let i = 0; i < groupCount; i++) {\r\n        const group = this._list.current.refs['group_' + String(i)] as GroupedListSection;\r\n        if (group) {\r\n          group.forceListUpdate();\r\n        }\r\n      }\r\n    } else {\r\n      const group = this.refs['group_' + String(0)] as GroupedListSection;\r\n      if (group) {\r\n        group.forceListUpdate();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _onToggleSummarize = (group: IGroup): void => {\r\n    const { groupProps } = this.props;\r\n    const onToggleSummarize = groupProps && groupProps.showAllProps && groupProps.showAllProps.onToggleSummarize;\r\n\r\n    if (onToggleSummarize) {\r\n      onToggleSummarize(group);\r\n    } else {\r\n      if (group) {\r\n        group.isShowingAll = !group.isShowingAll;\r\n      }\r\n\r\n      this.forceUpdate();\r\n    }\r\n  };\r\n\r\n  private _getPageSpecification = (\r\n    itemIndex: number,\r\n    visibleRect: IRectangle\r\n  ): {\r\n    key?: string;\r\n  } => {\r\n    const groups = this.state.groups;\r\n    const pageGroup = groups && groups[itemIndex];\r\n    return {\r\n      key: pageGroup && pageGroup.key\r\n    };\r\n  };\r\n\r\n  private _computeIsSomeGroupExpanded(groups: IGroup[] | undefined): boolean {\r\n    return !!(groups && groups.some(group => (group.children ? this._computeIsSomeGroupExpanded(group.children) : !group.isCollapsed)));\r\n  }\r\n\r\n  private _updateIsSomeGroupExpanded(): void {\r\n    const { groups } = this.state;\r\n    const { onGroupExpandStateChanged } = this.props;\r\n\r\n    const newIsSomeGroupExpanded = this._computeIsSomeGroupExpanded(groups);\r\n    if (this._isSomeGroupExpanded !== newIsSomeGroupExpanded) {\r\n      if (onGroupExpandStateChanged) {\r\n        onGroupExpandStateChanged(newIsSomeGroupExpanded);\r\n      }\r\n      this._isSomeGroupExpanded = newIsSomeGroupExpanded;\r\n    }\r\n  }\r\n}\r\n"]}