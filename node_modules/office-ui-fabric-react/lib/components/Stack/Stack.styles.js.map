{"version":3,"file":"Stack.styles.js","sourceRoot":"../src/","sources":["components/Stack/Stack.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { IStackComponent, IStackStyles, IStackStylesReturnType } from './Stack.types';\r\nimport { parseGap, parsePadding } from './StackUtils';\r\nimport { getGlobalClassNames } from '../../Styling';\r\n\r\nconst nameMap: { [key: string]: string } = {\r\n  start: 'flex-start',\r\n  end: 'flex-end'\r\n};\r\n\r\nconst GlobalClassNames = {\r\n  root: 'ms-Stack',\r\n  inner: 'ms-Stack-inner'\r\n};\r\n\r\nexport const styles: IStackComponent['styles'] = (props, theme, tokens): IStackStylesReturnType => {\r\n  const {\r\n    verticalFill,\r\n    maxWidth,\r\n    maxHeight,\r\n    horizontal,\r\n    reversed,\r\n    gap,\r\n    grow,\r\n    wrap,\r\n    padding,\r\n    horizontalAlign,\r\n    verticalAlign,\r\n    disableShrink,\r\n    className\r\n  } = props;\r\n\r\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\r\n\r\n  const childrenGap = tokens && tokens.childrenGap ? tokens.childrenGap : gap;\r\n  const { rowGap, columnGap } = parseGap(childrenGap, theme);\r\n\r\n  const horizontalMargin = `${-0.5 * columnGap.value}${columnGap.unit}`;\r\n  const verticalMargin = `${-0.5 * rowGap.value}${rowGap.unit}`;\r\n\r\n  // styles to be applied to all direct children regardless of wrap or direction\r\n  const childStyles = {\r\n    textOverflow: 'ellipsis'\r\n  };\r\n\r\n  // selectors to be applied regardless of wrap or direction\r\n  const commonSelectors = {\r\n    // flexShrink styles are applied by the StackItem\r\n    '> *:not(.ms-StackItem)': {\r\n      flexShrink: disableShrink ? 0 : 1\r\n    }\r\n  };\r\n\r\n  if (wrap) {\r\n    return {\r\n      root: [\r\n        classNames.root,\r\n        {\r\n          flexWrap: 'wrap',\r\n          maxWidth,\r\n          maxHeight,\r\n          width: 'auto',\r\n          overflow: 'visible',\r\n          height: '100%'\r\n        },\r\n        horizontalAlign && {\r\n          [horizontal ? 'justifyContent' : 'alignItems']: nameMap[horizontalAlign] || horizontalAlign\r\n        },\r\n        verticalAlign && {\r\n          [horizontal ? 'alignItems' : 'justifyContent']: nameMap[verticalAlign] || verticalAlign\r\n        },\r\n        className,\r\n        {\r\n          // not allowed to be overridden by className\r\n          // since this is necessary in order to prevent collapsing margins\r\n          display: 'flex'\r\n        },\r\n        horizontal && {\r\n          height: verticalFill ? '100%' : 'auto'\r\n        }\r\n      ],\r\n\r\n      inner: [\r\n        classNames.inner,\r\n        {\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          marginLeft: horizontalMargin,\r\n          marginRight: horizontalMargin,\r\n          marginTop: verticalMargin,\r\n          marginBottom: verticalMargin,\r\n          overflow: 'visible',\r\n          boxSizing: 'border-box',\r\n          padding: parsePadding(padding, theme),\r\n          // avoid unnecessary calc() calls if horizontal gap is 0\r\n          width: columnGap.value === 0 ? '100%' : `calc(100% + ${columnGap.value}${columnGap.unit})`,\r\n          maxWidth: '100vw',\r\n\r\n          selectors: {\r\n            '> *': {\r\n              margin: `${0.5 * rowGap.value}${rowGap.unit} ${0.5 * columnGap.value}${columnGap.unit}`,\r\n\r\n              ...childStyles\r\n            },\r\n            ...commonSelectors\r\n          }\r\n        },\r\n        horizontalAlign && {\r\n          [horizontal ? 'justifyContent' : 'alignItems']: nameMap[horizontalAlign] || horizontalAlign\r\n        },\r\n        verticalAlign && {\r\n          [horizontal ? 'alignItems' : 'justifyContent']: nameMap[verticalAlign] || verticalAlign\r\n        },\r\n        horizontal && {\r\n          flexDirection: reversed ? 'row-reverse' : 'row',\r\n\r\n          // avoid unnecessary calc() calls if vertical gap is 0\r\n          height: rowGap.value === 0 ? '100%' : `calc(100% + ${rowGap.value}${rowGap.unit})`,\r\n\r\n          selectors: {\r\n            '> *': {\r\n              maxWidth: columnGap.value === 0 ? '100%' : `calc(100% - ${columnGap.value}${columnGap.unit})`\r\n            }\r\n          }\r\n        },\r\n        !horizontal && {\r\n          flexDirection: reversed ? 'column-reverse' : 'column',\r\n          height: `calc(100% + ${rowGap.value}${rowGap.unit})`,\r\n\r\n          selectors: {\r\n            '> *': {\r\n              maxHeight: rowGap.value === 0 ? '100%' : `calc(100% - ${rowGap.value}${rowGap.unit})`\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    } as IStackStyles;\r\n  }\r\n\r\n  return {\r\n    root: [\r\n      classNames.root,\r\n      {\r\n        display: 'flex',\r\n        flexDirection: horizontal ? (reversed ? 'row-reverse' : 'row') : reversed ? 'column-reverse' : 'column',\r\n        flexWrap: 'nowrap',\r\n        width: 'auto',\r\n        height: verticalFill ? '100%' : 'auto',\r\n        maxWidth,\r\n        maxHeight,\r\n        padding: parsePadding(padding, theme),\r\n        boxSizing: 'border-box',\r\n\r\n        selectors: {\r\n          '> *': childStyles,\r\n\r\n          // apply gap margin to every direct child except the first direct child if the direction is not reversed,\r\n          // and the last direct one if it is\r\n          [reversed ? '> *:not(:last-child)' : '> *:not(:first-child)']: [\r\n            horizontal && {\r\n              marginLeft: `${columnGap.value}${columnGap.unit}`\r\n            },\r\n            !horizontal && {\r\n              marginTop: `${rowGap.value}${rowGap.unit}`\r\n            }\r\n          ],\r\n\r\n          ...commonSelectors\r\n        }\r\n      },\r\n      grow && {\r\n        flexGrow: grow === true ? 1 : grow,\r\n        overflow: 'hidden'\r\n      },\r\n      horizontalAlign && {\r\n        [horizontal ? 'justifyContent' : 'alignItems']: nameMap[horizontalAlign] || horizontalAlign\r\n      },\r\n      verticalAlign && {\r\n        [horizontal ? 'alignItems' : 'justifyContent']: nameMap[verticalAlign] || verticalAlign\r\n      },\r\n      className\r\n    ]\r\n    // TODO: this cast may be hiding some potential issues with styling and name\r\n    //        lookups and should be removed\r\n  } as IStackStyles;\r\n};\r\n"]}