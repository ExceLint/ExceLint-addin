import * as tslib_1 from "tslib";
import * as React from 'react';
import { Stack } from '../Stack';
import { mergeStyleSets, DefaultPalette } from 'office-ui-fabric-react/lib/Styling';
var VerticalStackVerticalAlignExample = /** @class */ (function (_super) {
    tslib_1.__extends(VerticalStackVerticalAlignExample, _super);
    function VerticalStackVerticalAlignExample() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VerticalStackVerticalAlignExample.prototype.render = function () {
        var styles = mergeStyleSets({
            root: {
                background: DefaultPalette.themeTertiary,
                height: 250,
                selectors: {
                    '> *': {
                        width: 50,
                        height: 50,
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        background: DefaultPalette.themePrimary,
                        color: DefaultPalette.white
                    }
                }
            }
        });
        var tokens = {
            sectionStack: {
                childrenGap: 10
            },
            headingStack: {
                childrenGap: 30
            }
        };
        return (React.createElement(Stack, { tokens: tokens.sectionStack },
            React.createElement(Stack, { horizontal: true, disableShrink: true, tokens: tokens.headingStack, horizontalAlign: "space-between" },
                React.createElement(Stack, { grow: true },
                    React.createElement("span", null, "Top-aligned"),
                    React.createElement(Stack, { verticalAlign: "start", className: styles.root },
                        React.createElement("span", null, "1"),
                        React.createElement("span", null, "2"),
                        React.createElement("span", null, "3"))),
                React.createElement(Stack, { grow: true },
                    React.createElement("span", null, "Vertically centered"),
                    React.createElement(Stack, { verticalAlign: "center", className: styles.root },
                        React.createElement("span", null, "1"),
                        React.createElement("span", null, "2"),
                        React.createElement("span", null, "3"))),
                React.createElement(Stack, { grow: true },
                    React.createElement("span", null, "Bottom-aligned"),
                    React.createElement(Stack, { verticalAlign: "end", className: styles.root },
                        React.createElement("span", null, "1"),
                        React.createElement("span", null, "2"),
                        React.createElement("span", null, "3")))),
            React.createElement(Stack, { horizontal: true, disableShrink: true, tokens: tokens.headingStack, horizontalAlign: "space-between" },
                React.createElement(Stack, { grow: true },
                    React.createElement("span", null, "Vertical space around items"),
                    React.createElement(Stack, { verticalAlign: "space-around", className: styles.root },
                        React.createElement("span", null, "1"),
                        React.createElement("span", null, "2"),
                        React.createElement("span", null, "3"))),
                React.createElement(Stack, { grow: true },
                    React.createElement("span", null, "Vertical space between items"),
                    React.createElement(Stack, { verticalAlign: "space-between", className: styles.root },
                        React.createElement("span", null, "1"),
                        React.createElement("span", null, "2"),
                        React.createElement("span", null, "3"))),
                React.createElement(Stack, { grow: true },
                    React.createElement("span", null, "Items vertically evenly spaced"),
                    React.createElement(Stack, { verticalAlign: "space-evenly", className: styles.root },
                        React.createElement("span", null, "1"),
                        React.createElement("span", null, "2"),
                        React.createElement("span", null, "3"))))));
    };
    return VerticalStackVerticalAlignExample;
}(React.Component));
export { VerticalStackVerticalAlignExample };
//# sourceMappingURL=Stack.Vertical.VerticalAlign.Example.js.map