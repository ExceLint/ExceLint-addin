import * as tslib_1 from "tslib";
// @codepen
import * as React from 'react';
import { Stack } from '../Stack';
import { mergeStyleSets, DefaultPalette } from 'office-ui-fabric-react/lib/Styling';
var VerticalStackSpacingExample = /** @class */ (function (_super) {
    tslib_1.__extends(VerticalStackSpacingExample, _super);
    function VerticalStackSpacingExample() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VerticalStackSpacingExample.prototype.render = function () {
        var styles = mergeStyleSets({
            root: {
                background: DefaultPalette.themeTertiary
            },
            item: {
                width: 50,
                height: 50,
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                background: DefaultPalette.themePrimary,
                color: DefaultPalette.white
            }
        });
        return (React.createElement(Stack, { gap: 10 },
            React.createElement(Stack, { horizontal: true, disableShrink: true, gap: 50 },
                React.createElement(Stack, null,
                    React.createElement("span", null, "Numerical spacing"),
                    React.createElement(Stack, { className: styles.root, gap: 10, padding: 10 },
                        React.createElement("span", { className: styles.item }, "1"),
                        React.createElement("span", { className: styles.item }, "2"),
                        React.createElement("span", { className: styles.item }, "3"))),
                React.createElement(Stack, null,
                    React.createElement("span", null, "Custom spacing"),
                    React.createElement(Stack, { className: styles.root, gap: "20%", padding: "m 40px" },
                        React.createElement("span", { className: styles.item }, "1"),
                        React.createElement("span", { className: styles.item }, "2"),
                        React.createElement("span", { className: styles.item }, "3")))),
            React.createElement(Stack, { horizontal: true, disableShrink: true, horizontalAlign: "space-between" },
                React.createElement(Stack, null,
                    React.createElement("span", null, "Themed spacing (extra small)"),
                    React.createElement(Stack, { className: styles.root, gap: "s2", padding: "s2" },
                        React.createElement("span", { className: styles.item }, "1"),
                        React.createElement("span", { className: styles.item }, "2"),
                        React.createElement("span", { className: styles.item }, "3"))),
                React.createElement(Stack, null,
                    React.createElement("span", null, "Themed spacing (small)"),
                    React.createElement(Stack, { className: styles.root, gap: "s1", padding: "s2" },
                        React.createElement("span", { className: styles.item }, "1"),
                        React.createElement("span", { className: styles.item }, "2"),
                        React.createElement("span", { className: styles.item }, "3"))),
                React.createElement(Stack, null,
                    React.createElement("span", null, "Themed spacing (medium)"),
                    React.createElement(Stack, { className: styles.root, gap: "m", padding: "m" },
                        React.createElement("span", { className: styles.item }, "1"),
                        React.createElement("span", { className: styles.item }, "2"),
                        React.createElement("span", { className: styles.item }, "3"))),
                React.createElement(Stack, null,
                    React.createElement("span", null, "Themed spacing (large)"),
                    React.createElement(Stack, { className: styles.root, gap: "l1", padding: "l1" },
                        React.createElement("span", { className: styles.item }, "1"),
                        React.createElement("span", { className: styles.item }, "2"),
                        React.createElement("span", { className: styles.item }, "3"))),
                React.createElement(Stack, null,
                    React.createElement("span", null, "Themed spacing (extra large)"),
                    React.createElement(Stack, { className: styles.root, gap: "l2", padding: "l2" },
                        React.createElement("span", { className: styles.item }, "1"),
                        React.createElement("span", { className: styles.item }, "2"),
                        React.createElement("span", { className: styles.item }, "3"))))));
    };
    return VerticalStackSpacingExample;
}(React.Component));
export { VerticalStackSpacingExample };
//# sourceMappingURL=Stack.Vertical.Spacing.Example.js.map