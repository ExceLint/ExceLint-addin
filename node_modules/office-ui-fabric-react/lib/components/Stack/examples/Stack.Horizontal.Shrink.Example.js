import * as tslib_1 from "tslib";
import * as React from 'react';
import { Slider } from 'office-ui-fabric-react/lib/Slider';
import { Stack } from '../Stack';
import { mergeStyleSets, DefaultPalette } from 'office-ui-fabric-react/lib/Styling';
var HorizontalStackShrinkExample = /** @class */ (function (_super) {
    tslib_1.__extends(HorizontalStackShrinkExample, _super);
    function HorizontalStackShrinkExample(props) {
        var _this = _super.call(this, props) || this;
        _this._onWidthChange = function (value) {
            _this.setState({ stackWidth: value });
        };
        _this.state = {
            stackWidth: 100
        };
        return _this;
    }
    HorizontalStackShrinkExample.prototype.render = function () {
        var styles = mergeStyleSets({
            root: {
                background: DefaultPalette.themeTertiary,
                width: this.state.stackWidth + "%",
                overflow: 'hidden'
            },
            item: {
                height: 50,
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                color: DefaultPalette.white,
                background: DefaultPalette.themePrimary,
                overflow: 'hidden'
            }
        });
        var stackTokens = { childrenGap: 5 };
        return (React.createElement(Stack, { tokens: stackTokens },
            React.createElement(Slider, { label: "Change the stack width to see how child items shrink:", min: 1, max: 100, step: 1, defaultValue: 100, showValue: true, onChange: this._onWidthChange }),
            React.createElement(Stack, { horizontal: true, tokens: stackTokens, padding: 10, className: styles.root },
                React.createElement(Stack.Item, { grow: true, className: styles.item }, "I shrink"),
                React.createElement(Stack.Item, { grow: true, className: styles.item }, "I shrink"),
                React.createElement(Stack.Item, { grow: true, disableShrink: true, className: styles.item, styles: { root: { width: 500 } } }, "I don't shrink"),
                React.createElement(Stack.Item, { grow: true, className: styles.item }, "I shrink"))));
    };
    return HorizontalStackShrinkExample;
}(React.Component));
export { HorizontalStackShrinkExample };
//# sourceMappingURL=Stack.Horizontal.Shrink.Example.js.map