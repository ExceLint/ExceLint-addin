import * as tslib_1 from "tslib";
import * as React from 'react';
import { Stack } from '../Stack';
import { mergeStyleSets, DefaultPalette } from 'office-ui-fabric-react/lib/Styling';
var VerticalStackGrowExample = /** @class */ (function (_super) {
    tslib_1.__extends(VerticalStackGrowExample, _super);
    function VerticalStackGrowExample() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VerticalStackGrowExample.prototype.render = function () {
        var styles = mergeStyleSets({
            root: {
                background: DefaultPalette.themeTertiary,
                height: 250
            },
            item: {
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                background: DefaultPalette.themePrimary,
                color: DefaultPalette.white
            }
        });
        var stackTokens = { childrenGap: 5 };
        return (React.createElement(Stack, { tokens: stackTokens },
            React.createElement(Stack, { tokens: stackTokens, padding: 10, className: styles.root },
                React.createElement(Stack.Item, { grow: 3, className: styles.item }, "Grow is 3"),
                React.createElement(Stack.Item, { grow: 2, className: styles.item }, "Grow is 2"),
                React.createElement(Stack.Item, { grow: true, className: styles.item }, "Grow is 1"))));
    };
    return VerticalStackGrowExample;
}(React.Component));
export { VerticalStackGrowExample };
//# sourceMappingURL=Stack.Vertical.Grow.Example.js.map