import * as tslib_1 from "tslib";
import * as React from 'react';
import { Slider } from 'office-ui-fabric-react/lib/Slider';
import { Stack } from '../Stack';
import { mergeStyleSets, DefaultPalette } from 'office-ui-fabric-react/lib/Styling';
var VerticalStackShrinkExample = /** @class */ (function (_super) {
    tslib_1.__extends(VerticalStackShrinkExample, _super);
    function VerticalStackShrinkExample(props) {
        var _this = _super.call(this, props) || this;
        _this._onHeightChange = function (value) {
            _this.setState({ stackHeight: value });
        };
        _this.state = {
            stackHeight: 100
        };
        return _this;
    }
    VerticalStackShrinkExample.prototype.render = function () {
        var styles = mergeStyleSets({
            root: {
                background: DefaultPalette.themeTertiary,
                height: this.state.stackHeight + "%",
                overflow: 'hidden'
            },
            item: {
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                background: DefaultPalette.themePrimary,
                color: DefaultPalette.white,
                overflow: 'hidden'
            },
            container: {
                height: 200
            }
        });
        var stackTokens = { childrenGap: 5 };
        return (React.createElement(Stack, { tokens: stackTokens },
            React.createElement(Slider, { label: "Change the stack height to see how child items shrink:", min: 1, max: 100, step: 1, defaultValue: 100, showValue: true, onChange: this._onHeightChange }),
            React.createElement("div", { className: styles.container },
                React.createElement(Stack, { tokens: stackTokens, padding: 10, className: styles.root },
                    React.createElement(Stack.Item, { grow: true, className: styles.item }, "I shrink"),
                    React.createElement(Stack.Item, { grow: true, className: styles.item }, "I shrink"),
                    React.createElement(Stack.Item, { grow: true, disableShrink: true, className: styles.item, styles: { root: { height: 50 } } }, "I don't shrink"),
                    React.createElement(Stack.Item, { grow: true, className: styles.item }, "I shrink")))));
    };
    return VerticalStackShrinkExample;
}(React.Component));
export { VerticalStackShrinkExample };
//# sourceMappingURL=Stack.Vertical.Shrink.Example.js.map