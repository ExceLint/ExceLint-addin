{"version":3,"file":"DetailsRowCheck.types.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsRowCheck.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\r\nimport { IStyle, ITheme } from '../../Styling';\r\nimport { IStyleFunctionOrObject } from '../../Utilities';\r\n\r\nexport interface IDetailsRowCheckProps extends React.HTMLAttributes<HTMLElement> {\r\n  /**\r\n   * Theme provided by High-Order Component.\r\n   */\r\n  theme?: ITheme;\r\n\r\n  /**\r\n   * Style override\r\n   */\r\n  styles?: IStyleFunctionOrObject<IDetailsRowCheckStyleProps, IDetailsRowCheckStyles>;\r\n\r\n  /**\r\n   * Is the check part of the header in a DetailsList\r\n   */\r\n  isHeader?: boolean;\r\n\r\n  /**\r\n   * Whether or not this check is selected\r\n   */\r\n  selected?: boolean;\r\n\r\n  /**\r\n   * Deprecated, use `selected` instead.\r\n   * @deprecated Use `selected` instead.\r\n   */\r\n  isSelected?: boolean;\r\n\r\n  /**\r\n   * Is any selected - also true for isSelectionModal\r\n   */\r\n  anySelected?: boolean;\r\n\r\n  /**\r\n   * Can this checkbox be selectable\r\n   */\r\n  canSelect: boolean;\r\n\r\n  /**\r\n   * Is this in compact mode?\r\n   */\r\n  compact?: boolean;\r\n\r\n  /**\r\n   * Optional className to attach to the slider root element.\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * The classname to be passed down to Check component\r\n   */\r\n  checkClassName?: string;\r\n\r\n  /**\r\n   * Whether or not this checkbox is visible\r\n   */\r\n  isVisible?: boolean;\r\n}\r\n\r\nexport type IDetailsRowCheckStyleProps = Required<Pick<IDetailsRowCheckProps, 'theme'>> &\r\n  Pick<IDetailsRowCheckProps, 'compact' | 'isHeader' | 'selected' | 'anySelected' | 'canSelect' | 'className'> & {\r\n    /** Is checkbox visible */\r\n    isVisible?: boolean;\r\n  };\r\n\r\nexport interface IDetailsRowCheckStyles {\r\n  root: IStyle;\r\n  check: IStyle;\r\n  isDisabled: IStyle;\r\n}\r\n"]}