{"version":3,"file":"DetailsRowFields.types.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsRowFields.types.ts"],"names":[],"mappings":"","sourcesContent":["import { IColumn } from './DetailsList.types';\nimport { ICellStyleProps, IDetailsRowStyles } from './DetailsRow.types';\nimport { IDetailsListProps } from './DetailsList';\nimport { IDetailsRowProps } from './DetailsRow';\n\n/**\n * Extended column render props.\n *\n * {@docCategory DetailsList}\n */\nexport type IOverrideColumnRenderProps = Pick<IDetailsListProps, 'onRenderItemColumn' | 'getCellValueKey'> &\n  Pick<IDetailsRowProps, 'cellsByColumn'>;\n\n/**\n * Props interface for the DetailsRowFields component.\n *\n * {@docCategory DetailsList}\n */\nexport interface IDetailsRowFieldsProps extends IOverrideColumnRenderProps {\n  /**\n   * Data source for this component\n   */\n  item: any;\n\n  /**\n   * The item index of the collection for the DetailsList\n   */\n  itemIndex: number;\n\n  /**\n   * Index to start for the column\n   */\n  columnStartIndex: number;\n\n  /**\n   * Columns metadata\n   */\n  columns: IColumn[];\n\n  /**\n   * whether to render as a compact field\n   */\n  compact?: boolean;\n\n  /**\n   * Subset of classnames currently generated in DetailsRow that are used within DetailsRowFields.\n   */\n  rowClassNames: {\n    [k in keyof Pick<\n      IDetailsRowStyles,\n      'isMultiline' | 'isRowHeader' | 'cell' | 'cellAnimation' | 'cellPadded' | 'cellUnpadded' | 'fields'\n    >]: string;\n  };\n\n  /**\n   * Style properties to customize cell render output.\n   */\n  cellStyleProps?: ICellStyleProps;\n\n  enableUpdateAnimations?: boolean;\n}\n"]}