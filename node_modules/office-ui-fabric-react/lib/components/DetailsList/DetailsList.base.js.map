{"version":3,"file":"DetailsList.base.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsList.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport {\n  initializeComponentRef,\n  FocusRects,\n  Async,\n  KeyCodes,\n  elementContains,\n  getRTLSafeKeyCode,\n  IRenderFunction,\n  classNamesFunction,\n  memoizeFunction,\n} from '../../Utilities';\nimport {\n  CheckboxVisibility,\n  ColumnActionsMode,\n  ConstrainMode,\n  DetailsListLayoutMode,\n  IColumn,\n  IDetailsList,\n  IDetailsListProps,\n  IDetailsListStyles,\n  IDetailsListStyleProps,\n  ColumnDragEndLocation,\n} from '../DetailsList/DetailsList.types';\nimport { DetailsHeader } from '../DetailsList/DetailsHeader';\nimport {\n  IDetailsHeader,\n  SelectAllVisibility,\n  IDetailsHeaderProps,\n  IColumnReorderHeaderProps,\n} from '../DetailsList/DetailsHeader.types';\nimport { IDetailsFooterProps } from '../DetailsList/DetailsFooter.types';\nimport { DetailsRowBase } from '../DetailsList/DetailsRow.base';\nimport { DetailsRow } from '../DetailsList/DetailsRow';\nimport { IDetailsRowProps } from '../DetailsList/DetailsRow.types';\nimport { IFocusZone, FocusZone, FocusZoneDirection, IFocusZoneProps } from '../../FocusZone';\nimport { IObjectWithKey, ISelection, Selection, SelectionMode, SelectionZone } from '../../utilities/selection/index';\n\nimport { DragDropHelper } from '../../utilities/dragdrop/DragDropHelper';\nimport { IGroupedList, GroupedList, IGroupDividerProps, IGroupRenderProps } from '../../GroupedList';\nimport { List, IListProps, ScrollToMode } from '../../List';\nimport { withViewport } from '../../utilities/decorators/withViewport';\nimport { GetGroupCount } from '../../utilities/groupedList/GroupedListUtility';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nimport { CHECK_CELL_WIDTH as CHECKBOX_WIDTH } from './DetailsRowCheck.styles';\n// For every group level there is a GroupSpacer added. Importing this const to have the source value in one place.\nimport { SPACER_WIDTH as GROUP_EXPAND_WIDTH } from '../GroupedList/GroupSpacer';\nimport { composeRenderFunction } from '@uifabric/utilities';\nimport { useConst } from '@uifabric/react-hooks';\n\nconst getClassNames = classNamesFunction<IDetailsListStyleProps, IDetailsListStyles>();\n\nexport interface IDetailsListState {\n  focusedItemIndex: number;\n  lastWidth?: number;\n  lastSelectionMode?: SelectionMode;\n  adjustedColumns: IColumn[];\n  isCollapsed?: boolean;\n  isSizing?: boolean;\n  isSomeGroupExpanded?: boolean;\n  /**\n   * A unique object used to force-update the List when it changes.\n   */\n  version: {};\n  getDerivedStateFromProps(nextProps: IDetailsListProps, previousState: IDetailsListState): IDetailsListState;\n}\n\nconst MIN_COLUMN_WIDTH = 100; // this is the global min width\n\nconst DEFAULT_RENDERED_WINDOWS_AHEAD = 2;\nconst DEFAULT_RENDERED_WINDOWS_BEHIND = 2;\n\ntype IDetailsListInnerProps = Omit<IDetailsListProps, 'selection'> &\n  IDetailsListState & {\n    selection: ISelection;\n    dragDropHelper: DragDropHelper | undefined;\n    rootRef: React.RefObject<HTMLDivElement>;\n    listRef: React.RefObject<List>;\n    groupedListRef: React.RefObject<IGroupedList>;\n    focusZoneRef: React.RefObject<IFocusZone>;\n    headerRef: React.RefObject<IDetailsHeader>;\n    selectionZoneRef: React.RefObject<SelectionZone>;\n    onGroupExpandStateChanged: (isSomeGroupExpanded: boolean) => void;\n    onColumnIsSizingChanged: (column: IColumn, isSizing: boolean) => void;\n    onRowDidMount: (row: DetailsRowBase) => void;\n    onRowWillUnmount: (row: DetailsRowBase) => void;\n    onColumnResized: (resizingColumn: IColumn, newWidth: number, resizingColumnIndex: number) => void;\n    onColumnAutoResized: (column: IColumn, columnIndex: number) => void;\n    onToggleCollapse: (collapsed: boolean) => void;\n    onActiveRowChanged: (el?: HTMLElement, ev?: React.FocusEvent<HTMLElement>) => void;\n    onBlur: (event: React.FocusEvent<HTMLElement>) => void;\n    onRenderDefaultRow: (detailsRowProps: IDetailsRowProps) => JSX.Element;\n  };\n\n/**\n * Hooks-based implementation of DetailsList.\n * Since many existing consumers of DetailsList expect `ref` to return a `DetailsList`,\n * this inner component handles rendering while the outer maintains compatibility.\n */\nconst DetailsListInner: React.ComponentType<IDetailsListInnerProps> = (\n  props: IDetailsListInnerProps,\n): JSX.Element | null => {\n  const { selection } = props;\n\n  const {\n    ariaLabelForListHeader,\n    ariaLabelForSelectAllCheckbox,\n    ariaLabelForSelectionColumn,\n    className,\n    checkboxVisibility,\n    compact,\n    constrainMode,\n    dragDropEvents,\n    groups,\n    groupProps,\n    indentWidth,\n    items,\n    isPlaceholderData,\n    isHeaderVisible,\n    layoutMode,\n    onItemInvoked,\n    onItemContextMenu,\n    onColumnHeaderClick,\n    onColumnHeaderContextMenu,\n    selectionMode = selection.mode,\n    selectionPreservedOnEmptyClick,\n    selectionZoneProps,\n    ariaLabel,\n    ariaLabelForGrid,\n    rowElementEventMap,\n    shouldApplyApplicationRole = false,\n    getKey,\n    listProps,\n    usePageCache,\n    onShouldVirtualize,\n    viewport,\n    minimumPixelsForDrag,\n    getGroupHeight,\n    styles,\n    theme,\n    cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n    onRenderCheckbox,\n    useFastIcons,\n    dragDropHelper,\n    adjustedColumns,\n    isCollapsed,\n    isSizing,\n    isSomeGroupExpanded,\n    version,\n    rootRef,\n    listRef,\n    focusZoneRef,\n    columnReorderOptions,\n    groupedListRef,\n    headerRef,\n    onGroupExpandStateChanged,\n    onColumnIsSizingChanged,\n    onRowDidMount,\n    onRowWillUnmount,\n    disableSelectionZone,\n    onColumnResized,\n    onColumnAutoResized,\n    onToggleCollapse,\n    onActiveRowChanged,\n    onBlur,\n    rowElementEventMap: eventsToRegister,\n    onRenderMissingItem,\n    onRenderItemColumn,\n    getCellValueKey,\n    getRowAriaLabel,\n    getRowAriaDescribedBy,\n    checkButtonAriaLabel,\n    checkboxCellClassName,\n    useReducedRowRenderer,\n    enableUpdateAnimations,\n    enterModalSelectionOnTouch,\n    onRenderDefaultRow,\n    selectionZoneRef,\n  } = props;\n\n  const groupNestingDepth = getGroupNestingDepth(groups);\n\n  const additionalListProps = React.useMemo((): IListProps => {\n    return {\n      renderedWindowsAhead: isSizing ? 0 : DEFAULT_RENDERED_WINDOWS_AHEAD,\n      renderedWindowsBehind: isSizing ? 0 : DEFAULT_RENDERED_WINDOWS_BEHIND,\n      getKey,\n      version,\n      ...listProps,\n    };\n  }, [isSizing, getKey, version, listProps]);\n\n  let selectAllVisibility = SelectAllVisibility.none; // for SelectionMode.none\n  if (selectionMode === SelectionMode.single) {\n    selectAllVisibility = SelectAllVisibility.hidden;\n  }\n  if (selectionMode === SelectionMode.multiple) {\n    // if isCollapsedGroupSelectVisible is false, disable select all when the list has all collapsed groups\n    let isCollapsedGroupSelectVisible =\n      groupProps && groupProps.headerProps && groupProps.headerProps.isCollapsedGroupSelectVisible;\n    if (isCollapsedGroupSelectVisible === undefined) {\n      isCollapsedGroupSelectVisible = true;\n    }\n    const isSelectAllVisible = isCollapsedGroupSelectVisible || !groups || isSomeGroupExpanded;\n    selectAllVisibility = isSelectAllVisible ? SelectAllVisibility.visible : SelectAllVisibility.hidden;\n  }\n\n  if (checkboxVisibility === CheckboxVisibility.hidden) {\n    selectAllVisibility = SelectAllVisibility.none;\n  }\n\n  const defaultOnRenderDetailsHeader = React.useCallback(\n    (detailsHeaderProps: IDetailsHeaderProps): JSX.Element | null => {\n      return <DetailsHeader {...detailsHeaderProps} />;\n    },\n    [],\n  );\n\n  const defaultOnRenderDetailsFooter = React.useCallback((): JSX.Element | null => {\n    return null;\n  }, []);\n\n  const propsOnRenderDetailsHeader = props.onRenderDetailsHeader;\n\n  const onRenderDetailsHeader = React.useMemo(() => {\n    return propsOnRenderDetailsHeader\n      ? composeRenderFunction(propsOnRenderDetailsHeader, defaultOnRenderDetailsHeader)\n      : defaultOnRenderDetailsHeader;\n  }, [propsOnRenderDetailsHeader, defaultOnRenderDetailsHeader]);\n\n  const propsOnRenderDetailsFooter = props.onRenderDetailsFooter;\n\n  const onRenderDetailsFooter = React.useMemo(() => {\n    return propsOnRenderDetailsFooter\n      ? composeRenderFunction(propsOnRenderDetailsFooter, defaultOnRenderDetailsFooter)\n      : defaultOnRenderDetailsFooter;\n  }, [propsOnRenderDetailsFooter, defaultOnRenderDetailsFooter]);\n\n  const detailsFooterProps = React.useMemo((): IDetailsFooterProps => {\n    return {\n      columns: adjustedColumns,\n      groupNestingDepth,\n      selection,\n      selectionMode,\n      viewport,\n      checkboxVisibility,\n      indentWidth,\n      cellStyleProps,\n    };\n  }, [\n    adjustedColumns,\n    groupNestingDepth,\n    selection,\n    selectionMode,\n    viewport,\n    checkboxVisibility,\n    indentWidth,\n    cellStyleProps,\n  ]);\n\n  const columnReorderOnDragEnd = columnReorderOptions && columnReorderOptions.onDragEnd;\n\n  const onColumnDragEnd = React.useCallback(\n    (\n      {\n        dropLocation,\n      }: {\n        dropLocation?: ColumnDragEndLocation;\n      },\n      event: MouseEvent,\n    ): void => {\n      let finalDropLocation: ColumnDragEndLocation = ColumnDragEndLocation.outside;\n      if (columnReorderOnDragEnd) {\n        if (dropLocation && dropLocation !== ColumnDragEndLocation.header) {\n          finalDropLocation = dropLocation;\n        } else if (rootRef.current) {\n          const clientRect = rootRef.current.getBoundingClientRect();\n          if (\n            event.clientX > clientRect.left &&\n            event.clientX < clientRect.right &&\n            event.clientY > clientRect.top &&\n            event.clientY < clientRect.bottom\n          ) {\n            finalDropLocation = ColumnDragEndLocation.surface;\n          }\n        }\n        columnReorderOnDragEnd(finalDropLocation);\n      }\n    },\n    [columnReorderOnDragEnd, rootRef],\n  );\n\n  const columnReorderProps = React.useMemo((): IColumnReorderHeaderProps | undefined => {\n    if (columnReorderOptions) {\n      return {\n        ...columnReorderOptions,\n        onColumnDragEnd,\n      };\n    }\n  }, [columnReorderOptions, onColumnDragEnd]);\n\n  const rowCount = (isHeaderVisible ? 1 : 0) + GetGroupCount(groups) + (items ? items.length : 0);\n  const colCount =\n    (selectAllVisibility !== SelectAllVisibility.none ? 1 : 0) +\n    (adjustedColumns ? adjustedColumns.length : 0) +\n    (groups ? 1 : 0);\n\n  const classNames = React.useMemo(() => {\n    return getClassNames(styles, {\n      theme: theme!,\n      compact,\n      isFixed: layoutMode === DetailsListLayoutMode.fixedColumns,\n      isHorizontalConstrained: constrainMode === ConstrainMode.horizontalConstrained,\n      className,\n    });\n  }, [styles, theme, compact, layoutMode, constrainMode, className]);\n\n  const onRenderDetailsGroupFooter = groupProps && groupProps.onRenderFooter;\n\n  const finalOnRenderDetailsGroupFooter = React.useMemo(() => {\n    return onRenderDetailsGroupFooter\n      ? (groupFooterProps: IGroupDividerProps, defaultRender?: IRenderFunction<IGroupDividerProps>) => {\n          return onRenderDetailsGroupFooter(\n            {\n              ...groupFooterProps,\n              columns: adjustedColumns,\n              groupNestingDepth,\n              indentWidth,\n              selection,\n              selectionMode,\n              viewport,\n              checkboxVisibility,\n              cellStyleProps,\n            },\n            defaultRender,\n          );\n        }\n      : undefined;\n  }, [\n    onRenderDetailsGroupFooter,\n    adjustedColumns,\n    groupNestingDepth,\n    indentWidth,\n    selection,\n    selectionMode,\n    viewport,\n    checkboxVisibility,\n    cellStyleProps,\n  ]);\n\n  const onRenderDetailsGroupHeader = groupProps && groupProps.onRenderHeader;\n\n  const finalOnRenderDetailsGroupHeader = React.useMemo(() => {\n    return onRenderDetailsGroupHeader\n      ? (groupHeaderProps: IGroupDividerProps, defaultRender?: IRenderFunction<IGroupDividerProps>) => {\n          return onRenderDetailsGroupHeader(\n            {\n              ...groupHeaderProps,\n              columns: adjustedColumns,\n              groupNestingDepth,\n              indentWidth,\n              selection,\n              selectionMode,\n              viewport,\n              checkboxVisibility,\n              cellStyleProps,\n              ariaColSpan: adjustedColumns.length,\n            },\n            defaultRender,\n          );\n        }\n      : (groupHeaderProps: IGroupDividerProps, defaultRender: IRenderFunction<IGroupDividerProps>) => {\n          return defaultRender({\n            ...groupHeaderProps,\n            ariaColSpan: adjustedColumns.length,\n          });\n        };\n  }, [\n    onRenderDetailsGroupHeader,\n    adjustedColumns,\n    groupNestingDepth,\n    indentWidth,\n    selection,\n    selectionMode,\n    viewport,\n    checkboxVisibility,\n    cellStyleProps,\n  ]);\n\n  const finalGroupProps = React.useMemo((): IGroupRenderProps | undefined => {\n    return {\n      ...groupProps,\n      onRenderFooter: finalOnRenderDetailsGroupFooter,\n      onRenderHeader: finalOnRenderDetailsGroupHeader,\n    };\n  }, [groupProps, finalOnRenderDetailsGroupFooter, finalOnRenderDetailsGroupHeader]);\n\n  const sumColumnWidths = useConst(() =>\n    memoizeFunction((columns: IColumn[]) => {\n      let totalWidth: number = 0;\n\n      columns.forEach((column: IColumn) => (totalWidth += column.calculatedWidth || column.minWidth));\n\n      return totalWidth;\n    }),\n  );\n\n  const collapseAllVisibility = groupProps && groupProps.collapseAllVisibility;\n\n  const rowWidth = React.useMemo(() => {\n    return sumColumnWidths(adjustedColumns);\n  }, [adjustedColumns, sumColumnWidths]);\n\n  const onRenderCell = React.useCallback(\n    (nestingDepth: number, item: any, index: number): React.ReactNode => {\n      const finalOnRenderRow = props.onRenderRow\n        ? composeRenderFunction(props.onRenderRow, onRenderDefaultRow)\n        : onRenderDefaultRow;\n\n      const rowProps: IDetailsRowProps = {\n        item: item,\n        itemIndex: index,\n        compact,\n        columns: adjustedColumns,\n        groupNestingDepth: nestingDepth,\n        selectionMode,\n        selection,\n        onDidMount: onRowDidMount,\n        onWillUnmount: onRowWillUnmount,\n        onRenderItemColumn,\n        getCellValueKey,\n        eventsToRegister,\n        dragDropEvents,\n        dragDropHelper,\n        viewport,\n        checkboxVisibility,\n        collapseAllVisibility,\n        getRowAriaLabel,\n        getRowAriaDescribedBy,\n        checkButtonAriaLabel,\n        checkboxCellClassName,\n        useReducedRowRenderer,\n        indentWidth,\n        cellStyleProps,\n        onRenderDetailsCheckbox: onRenderCheckbox,\n        enableUpdateAnimations,\n        rowWidth,\n        useFastIcons,\n      };\n\n      if (!item) {\n        if (onRenderMissingItem) {\n          return onRenderMissingItem(index, rowProps);\n        }\n\n        return null;\n      }\n\n      return finalOnRenderRow(rowProps);\n    },\n    [\n      compact,\n      adjustedColumns,\n      selectionMode,\n      selection,\n      onRowDidMount,\n      onRowWillUnmount,\n      onRenderItemColumn,\n      getCellValueKey,\n      eventsToRegister,\n      dragDropEvents,\n      dragDropHelper,\n      viewport,\n      checkboxVisibility,\n      collapseAllVisibility,\n      getRowAriaLabel,\n      getRowAriaDescribedBy,\n      checkButtonAriaLabel,\n      checkboxCellClassName,\n      useReducedRowRenderer,\n      indentWidth,\n      cellStyleProps,\n      onRenderCheckbox,\n      enableUpdateAnimations,\n      useFastIcons,\n      onRenderDefaultRow,\n      onRenderMissingItem,\n      props.onRenderRow,\n      rowWidth,\n    ],\n  );\n\n  const onRenderListCell = React.useCallback(\n    (nestingDepth: number): ((item: any, itemIndex: number) => React.ReactNode) => {\n      return (item: any, itemIndex: number): React.ReactNode => {\n        return onRenderCell(nestingDepth, item, itemIndex);\n      };\n    },\n    [onRenderCell],\n  );\n\n  const isRightArrow = React.useCallback(\n    (event: React.KeyboardEvent<HTMLElement>) => {\n      return event.which === getRTLSafeKeyCode(KeyCodes.right, theme);\n    },\n    [theme],\n  );\n\n  const focusZoneProps: IFocusZoneProps = {\n    componentRef: focusZoneRef,\n    className: classNames.focusZone,\n    direction: FocusZoneDirection.vertical,\n    shouldEnterInnerZone: isRightArrow,\n    onActiveElementChanged: onActiveRowChanged,\n    shouldRaiseClicks: false,\n    onBlur: onBlur,\n  };\n\n  const list = groups ? (\n    <GroupedList\n      focusZoneProps={focusZoneProps}\n      componentRef={groupedListRef}\n      groups={groups}\n      groupProps={finalGroupProps}\n      items={items}\n      onRenderCell={onRenderCell}\n      role=\"presentation\"\n      selection={selection}\n      selectionMode={checkboxVisibility !== CheckboxVisibility.hidden ? selectionMode : SelectionMode.none}\n      dragDropEvents={dragDropEvents}\n      dragDropHelper={dragDropHelper}\n      eventsToRegister={rowElementEventMap}\n      listProps={additionalListProps}\n      onGroupExpandStateChanged={onGroupExpandStateChanged}\n      usePageCache={usePageCache}\n      onShouldVirtualize={onShouldVirtualize}\n      getGroupHeight={getGroupHeight}\n      compact={compact}\n    />\n  ) : (\n    <FocusZone {...focusZoneProps}>\n      <List\n        ref={listRef}\n        role=\"presentation\"\n        items={items}\n        onRenderCell={onRenderListCell(0)}\n        usePageCache={usePageCache}\n        onShouldVirtualize={onShouldVirtualize}\n        {...additionalListProps}\n      />\n    </FocusZone>\n  );\n\n  const onHeaderKeyDown = React.useCallback(\n    (ev: React.KeyboardEvent<HTMLElement>): void => {\n      if (ev.which === KeyCodes.down) {\n        if (focusZoneRef.current && focusZoneRef.current.focus()) {\n          // select the first item in list after down arrow key event\n          // only if nothing was selected; otherwise start with the already-selected item\n          if (selection.getSelectedIndices().length === 0) {\n            selection.setIndexSelected(0, true, false);\n          }\n\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n      }\n    },\n    [selection, focusZoneRef],\n  );\n\n  const onContentKeyDown = React.useCallback(\n    (ev: React.KeyboardEvent<HTMLElement>): void => {\n      if (ev.which === KeyCodes.up && !ev.altKey) {\n        if (headerRef.current && headerRef.current.focus()) {\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n      }\n    },\n    [headerRef],\n  );\n\n  return (\n    // If shouldApplyApplicationRole is true, role application will be applied to make arrow keys work\n    // with JAWS.\n    <div\n      ref={rootRef}\n      className={classNames.root}\n      data-automationid=\"DetailsList\"\n      data-is-scrollable=\"false\"\n      aria-label={ariaLabel}\n      {...(shouldApplyApplicationRole ? { role: 'application' } : {})}\n    >\n      <FocusRects />\n      <div\n        role=\"grid\"\n        aria-label={ariaLabelForGrid}\n        aria-rowcount={isPlaceholderData ? -1 : rowCount}\n        aria-colcount={colCount}\n        aria-readonly=\"true\"\n        aria-busy={isPlaceholderData}\n      >\n        <div onKeyDown={onHeaderKeyDown} role=\"presentation\" className={classNames.headerWrapper}>\n          {isHeaderVisible &&\n            onRenderDetailsHeader(\n              {\n                componentRef: headerRef,\n                selectionMode: selectionMode,\n                layoutMode: layoutMode!,\n                selection: selection,\n                columns: adjustedColumns,\n                onColumnClick: onColumnHeaderClick,\n                onColumnContextMenu: onColumnHeaderContextMenu,\n                onColumnResized: onColumnResized,\n                onColumnIsSizingChanged: onColumnIsSizingChanged,\n                onColumnAutoResized: onColumnAutoResized,\n                groupNestingDepth: groupNestingDepth,\n                isAllCollapsed: isCollapsed,\n                onToggleCollapseAll: onToggleCollapse,\n                ariaLabel: ariaLabelForListHeader,\n                ariaLabelForSelectAllCheckbox: ariaLabelForSelectAllCheckbox,\n                ariaLabelForSelectionColumn: ariaLabelForSelectionColumn,\n                selectAllVisibility: selectAllVisibility,\n                collapseAllVisibility: groupProps && groupProps.collapseAllVisibility,\n                viewport: viewport,\n                columnReorderProps: columnReorderProps,\n                minimumPixelsForDrag: minimumPixelsForDrag,\n                cellStyleProps: cellStyleProps,\n                checkboxVisibility,\n                indentWidth,\n                onRenderDetailsCheckbox: onRenderCheckbox,\n                rowWidth: sumColumnWidths(adjustedColumns),\n                useFastIcons,\n              },\n              onRenderDetailsHeader,\n            )}\n        </div>\n        <div onKeyDown={onContentKeyDown} role=\"presentation\" className={classNames.contentWrapper}>\n          {!disableSelectionZone ? (\n            <SelectionZone\n              ref={selectionZoneRef}\n              selection={selection}\n              selectionPreservedOnEmptyClick={selectionPreservedOnEmptyClick}\n              selectionMode={selectionMode}\n              onItemInvoked={onItemInvoked}\n              onItemContextMenu={onItemContextMenu}\n              enterModalOnTouch={enterModalSelectionOnTouch}\n              {...(selectionZoneProps || {})}\n            >\n              {list}\n            </SelectionZone>\n          ) : (\n            list\n          )}\n        </div>\n        {onRenderDetailsFooter({\n          ...detailsFooterProps,\n        })}\n      </div>\n    </div>\n  );\n};\n\n@withViewport\nexport class DetailsListBase extends React.Component<IDetailsListProps, IDetailsListState> implements IDetailsList {\n  public static defaultProps = {\n    layoutMode: DetailsListLayoutMode.justified,\n    selectionMode: SelectionMode.multiple,\n    constrainMode: ConstrainMode.horizontalConstrained,\n    checkboxVisibility: CheckboxVisibility.onHover,\n    isHeaderVisible: true,\n    compact: false,\n    useFastIcons: true,\n  };\n\n  // References\n  private _async: Async;\n  private _root = React.createRef<HTMLDivElement>();\n  private _header = React.createRef<IDetailsHeader>();\n  private _groupedList = React.createRef<IGroupedList>();\n  private _list = React.createRef<List>();\n  private _focusZone = React.createRef<IFocusZone>();\n  private _selectionZone = React.createRef<SelectionZone>();\n\n  private _selection: ISelection;\n  private _activeRows: { [key: string]: DetailsRowBase };\n  private _dragDropHelper: DragDropHelper | undefined;\n  private _initialFocusedIndex: number | undefined;\n\n  private _columnOverrides: {\n    [key: string]: IColumn;\n  };\n\n  public static getDerivedStateFromProps(\n    nextProps: IDetailsListProps,\n    previousState: IDetailsListState,\n  ): IDetailsListState {\n    return previousState.getDerivedStateFromProps(nextProps, previousState);\n  }\n\n  constructor(props: IDetailsListProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._async = new Async(this);\n\n    this._activeRows = {};\n    this._columnOverrides = {};\n\n    this.state = {\n      focusedItemIndex: -1,\n      lastWidth: 0,\n      adjustedColumns: this._getAdjustedColumns(props, undefined),\n      isSizing: false,\n      isCollapsed: props.groupProps && props.groupProps.isAllGroupsCollapsed,\n      isSomeGroupExpanded: props.groupProps && !props.groupProps.isAllGroupsCollapsed,\n      version: {},\n      getDerivedStateFromProps: this._getDerivedStateFromProps,\n    };\n\n    this._selection =\n      props.selection ||\n      new Selection({\n        onSelectionChanged: undefined,\n        getKey: props.getKey,\n        selectionMode: props.selectionMode,\n      });\n\n    if (!this.props.disableSelectionZone) {\n      this._selection.setItems(props.items as IObjectWithKey[], false);\n    }\n\n    this._dragDropHelper = props.dragDropEvents\n      ? new DragDropHelper({\n          selection: this._selection,\n          minimumPixelsForDrag: props.minimumPixelsForDrag,\n        })\n      : undefined;\n    this._initialFocusedIndex = props.initialFocusedIndex;\n  }\n\n  public scrollToIndex(index: number, measureItem?: (itemIndex: number) => number, scrollToMode?: ScrollToMode): void {\n    this._list.current && this._list.current.scrollToIndex(index, measureItem, scrollToMode);\n    this._groupedList.current && this._groupedList.current.scrollToIndex(index, measureItem, scrollToMode);\n  }\n\n  public focusIndex(\n    index: number,\n    forceIntoFirstElement: boolean = false,\n    measureItem?: (itemIndex: number) => number,\n    scrollToMode?: ScrollToMode,\n  ): void {\n    const item = this.props.items[index];\n    if (item) {\n      this.scrollToIndex(index, measureItem, scrollToMode);\n\n      const itemKey = this._getItemKey(item, index);\n      const row = this._activeRows[itemKey];\n      if (row) {\n        this._setFocusToRow(row, forceIntoFirstElement);\n      }\n    }\n  }\n\n  public getStartItemIndexInView(): number {\n    if (this._list && this._list.current) {\n      return this._list.current.getStartItemIndexInView();\n    } else if (this._groupedList && this._groupedList.current) {\n      return this._groupedList.current.getStartItemIndexInView();\n    }\n    return 0;\n  }\n\n  public componentWillUnmount(): void {\n    if (this._dragDropHelper) {\n      // TODO If the DragDropHelper was passed via props, this will dispose it, which is incorrect behavior.\n      this._dragDropHelper.dispose();\n    }\n    this._async.dispose();\n  }\n\n  public componentDidUpdate(prevProps: IDetailsListProps, prevState: IDetailsListState) {\n    this._notifyColumnsResized();\n\n    if (this._initialFocusedIndex !== undefined) {\n      const item = this.props.items[this._initialFocusedIndex];\n      if (item) {\n        const itemKey = this._getItemKey(item, this._initialFocusedIndex);\n        const row = this._activeRows[itemKey];\n        if (row) {\n          this._setFocusToRowIfPending(row);\n        }\n      }\n    }\n\n    if (\n      this.props.items !== prevProps.items &&\n      this.props.items.length > 0 &&\n      this.state.focusedItemIndex !== -1 &&\n      !elementContains(this._root.current, document.activeElement as HTMLElement, false)\n    ) {\n      // Item set has changed and previously-focused item is gone.\n      // Set focus to item at index of previously-focused item if it is in range,\n      // else set focus to the last item.\n      const index =\n        this.state.focusedItemIndex < this.props.items.length\n          ? this.state.focusedItemIndex\n          : this.props.items.length - 1;\n      const item = this.props.items[index];\n      const itemKey = this._getItemKey(item, this.state.focusedItemIndex);\n      const row = this._activeRows[itemKey];\n      if (row) {\n        this._setFocusToRow(row);\n      } else {\n        this._initialFocusedIndex = index;\n      }\n    }\n    if (this.props.onDidUpdate) {\n      this.props.onDidUpdate(this);\n    }\n  }\n\n  public render(): JSX.Element {\n    return (\n      <DetailsListInner\n        {...this.props}\n        {...this.state}\n        selection={this._selection}\n        dragDropHelper={this._dragDropHelper}\n        rootRef={this._root}\n        listRef={this._list}\n        groupedListRef={this._groupedList}\n        focusZoneRef={this._focusZone}\n        headerRef={this._header}\n        selectionZoneRef={this._selectionZone}\n        onGroupExpandStateChanged={this._onGroupExpandStateChanged}\n        onColumnIsSizingChanged={this._onColumnIsSizingChanged}\n        onRowDidMount={this._onRowDidMount}\n        onRowWillUnmount={this._onRowWillUnmount}\n        onColumnResized={this._onColumnResized}\n        onColumnAutoResized={this._onColumnAutoResized}\n        onToggleCollapse={this._onToggleCollapse}\n        onActiveRowChanged={this._onActiveRowChanged}\n        onBlur={this._onBlur}\n        onRenderDefaultRow={this._onRenderRow}\n      />\n    );\n  }\n\n  public forceUpdate(): void {\n    super.forceUpdate();\n    this._forceListUpdates();\n  }\n\n  protected _onRenderRow = (\n    props: IDetailsRowProps,\n    defaultRender?: IRenderFunction<IDetailsRowProps>,\n  ): JSX.Element => {\n    return <DetailsRow {...props} />;\n  };\n\n  private _getDerivedStateFromProps = (\n    nextProps: IDetailsListProps,\n    previousState: IDetailsListState,\n  ): IDetailsListState => {\n    const {\n      checkboxVisibility,\n      items,\n      setKey,\n      selectionMode = this._selection.mode,\n      columns,\n      viewport,\n      compact,\n      dragDropEvents,\n    } = this.props;\n\n    const { isAllGroupsCollapsed = undefined } = this.props.groupProps || {};\n    const newViewportWidth = (nextProps.viewport && nextProps.viewport.width) || 0;\n    const oldViewportWidth = (viewport && viewport.width) || 0;\n    const shouldResetSelection = nextProps.setKey !== setKey || nextProps.setKey === undefined;\n    let shouldForceUpdates = false;\n\n    if (nextProps.layoutMode !== this.props.layoutMode) {\n      shouldForceUpdates = true;\n    }\n\n    let nextState = previousState;\n\n    if (shouldResetSelection) {\n      this._initialFocusedIndex = nextProps.initialFocusedIndex;\n      // reset focusedItemIndex when setKey changes\n      nextState = {\n        ...nextState,\n        focusedItemIndex: this._initialFocusedIndex !== undefined ? this._initialFocusedIndex : -1,\n      };\n    }\n\n    if (!this.props.disableSelectionZone && nextProps.items !== items) {\n      this._selection.setItems(nextProps.items, shouldResetSelection);\n    }\n\n    if (\n      nextProps.checkboxVisibility !== checkboxVisibility ||\n      nextProps.columns !== columns ||\n      newViewportWidth !== oldViewportWidth ||\n      nextProps.compact !== compact\n    ) {\n      shouldForceUpdates = true;\n    }\n\n    nextState = {\n      ...nextState,\n      ...this._adjustColumns(nextProps, nextState, true),\n    };\n\n    if (nextProps.selectionMode !== selectionMode) {\n      shouldForceUpdates = true;\n    }\n\n    if (\n      isAllGroupsCollapsed === undefined &&\n      nextProps.groupProps &&\n      nextProps.groupProps.isAllGroupsCollapsed !== undefined\n    ) {\n      nextState = {\n        ...nextState,\n        isCollapsed: nextProps.groupProps.isAllGroupsCollapsed,\n        isSomeGroupExpanded: !nextProps.groupProps.isAllGroupsCollapsed,\n      };\n    }\n\n    if (nextProps.dragDropEvents !== dragDropEvents) {\n      this._dragDropHelper && this._dragDropHelper.dispose();\n      this._dragDropHelper = nextProps.dragDropEvents\n        ? new DragDropHelper({\n            selection: this._selection,\n            minimumPixelsForDrag: nextProps.minimumPixelsForDrag,\n          })\n        : undefined;\n      shouldForceUpdates = true;\n    }\n\n    if (shouldForceUpdates) {\n      nextState = {\n        ...nextState,\n        version: {},\n      };\n    }\n\n    return nextState;\n  };\n\n  private _onGroupExpandStateChanged = (isSomeGroupExpanded: boolean): void => {\n    this.setState({ isSomeGroupExpanded: isSomeGroupExpanded });\n  };\n\n  private _onColumnIsSizingChanged = (column: IColumn, isSizing: boolean): void => {\n    this.setState({ isSizing: isSizing });\n  };\n\n  private _getGroupNestingDepth(): number {\n    const { groups } = this.props;\n    let level = 0;\n    let groupsInLevel = groups;\n\n    while (groupsInLevel && groupsInLevel.length > 0) {\n      level++;\n      groupsInLevel = groupsInLevel[0].children;\n    }\n\n    return level;\n  }\n\n  private _onRowDidMount = (row: DetailsRowBase): void => {\n    const { item, itemIndex } = row.props;\n    const itemKey = this._getItemKey(item, itemIndex);\n    this._activeRows[itemKey] = row; // this is used for column auto resize\n\n    this._setFocusToRowIfPending(row);\n\n    const { onRowDidMount } = this.props;\n    if (onRowDidMount) {\n      onRowDidMount(item, itemIndex);\n    }\n  };\n\n  private _setFocusToRowIfPending(row: DetailsRowBase): void {\n    const { itemIndex } = row.props;\n    if (this._initialFocusedIndex !== undefined && itemIndex === this._initialFocusedIndex) {\n      this._setFocusToRow(row);\n      delete this._initialFocusedIndex;\n    }\n  }\n\n  private _setFocusToRow(row: DetailsRowBase, forceIntoFirstElement: boolean = false): void {\n    if (this._selectionZone.current) {\n      this._selectionZone.current.ignoreNextFocus();\n    }\n    this._async.setTimeout((): void => {\n      row.focus(forceIntoFirstElement);\n    }, 0);\n  }\n\n  private _onRowWillUnmount = (row: DetailsRowBase): void => {\n    const { onRowWillUnmount } = this.props;\n\n    const { item, itemIndex } = row.props;\n    const itemKey = this._getItemKey(item, itemIndex);\n    delete this._activeRows[itemKey];\n\n    if (onRowWillUnmount) {\n      onRowWillUnmount(item, itemIndex);\n    }\n  };\n\n  private _onToggleCollapse = (collapsed: boolean): void => {\n    this.setState({\n      isCollapsed: collapsed,\n    });\n    if (this._groupedList.current) {\n      this._groupedList.current.toggleCollapseAll(collapsed);\n    }\n  };\n\n  private _forceListUpdates(): void {\n    if (this._groupedList.current) {\n      this._groupedList.current.forceUpdate();\n    }\n    if (this._list.current) {\n      this._list.current.forceUpdate();\n    }\n  }\n\n  private _notifyColumnsResized(): void {\n    this.state.adjustedColumns.forEach(column => {\n      if (column.onColumnResize) {\n        column.onColumnResize(column.currentWidth);\n      }\n    });\n  }\n\n  private _adjustColumns(\n    newProps: IDetailsListProps,\n    previousState: IDetailsListState,\n    forceUpdate?: boolean,\n    resizingColumnIndex?: number,\n  ): IDetailsListState {\n    const adjustedColumns = this._getAdjustedColumns(newProps, previousState, forceUpdate, resizingColumnIndex);\n    const { viewport } = this.props;\n    const viewportWidth = viewport && viewport.width ? viewport.width : 0;\n\n    return {\n      ...previousState,\n      adjustedColumns: adjustedColumns,\n      lastWidth: viewportWidth,\n    };\n  }\n\n  /** Returns adjusted columns, given the viewport size and layout mode. */\n  private _getAdjustedColumns(\n    newProps: IDetailsListProps,\n    previousState: IDetailsListState | undefined,\n    forceUpdate?: boolean,\n    resizingColumnIndex?: number,\n  ): IColumn[] {\n    const { items: newItems, layoutMode, selectionMode, viewport } = newProps;\n    const viewportWidth = viewport && viewport.width ? viewport.width : 0;\n    let { columns: newColumns } = newProps;\n\n    const columns = this.props ? this.props.columns : [];\n    const lastWidth = previousState ? previousState.lastWidth : -1;\n    const lastSelectionMode = previousState ? previousState.lastSelectionMode : undefined;\n\n    if (\n      !forceUpdate &&\n      lastWidth === viewportWidth &&\n      lastSelectionMode === selectionMode &&\n      (!columns || newColumns === columns)\n    ) {\n      return newColumns || [];\n    }\n\n    newColumns = newColumns || buildColumns(newItems, true);\n\n    let adjustedColumns: IColumn[];\n\n    if (layoutMode === DetailsListLayoutMode.fixedColumns) {\n      adjustedColumns = this._getFixedColumns(newColumns);\n\n      // Preserve adjusted column calculated widths.\n      adjustedColumns.forEach(column => {\n        this._rememberCalculatedWidth(column, column.calculatedWidth!);\n      });\n    } else {\n      if (resizingColumnIndex !== undefined) {\n        adjustedColumns = this._getJustifiedColumnsAfterResize(\n          newColumns,\n          viewportWidth,\n          newProps,\n          resizingColumnIndex,\n        );\n      } else {\n        adjustedColumns = this._getJustifiedColumns(newColumns, viewportWidth, newProps, 0);\n      }\n\n      adjustedColumns.forEach(column => {\n        this._getColumnOverride(column.key).currentWidth = column.calculatedWidth;\n      });\n    }\n\n    return adjustedColumns;\n  }\n\n  /** Builds a set of columns based on the given columns mixed with the current overrides. */\n  private _getFixedColumns(newColumns: IColumn[]): IColumn[] {\n    return newColumns.map(column => {\n      const newColumn: IColumn = { ...column, ...this._columnOverrides[column.key] };\n\n      if (!newColumn.calculatedWidth) {\n        newColumn.calculatedWidth = newColumn.maxWidth || newColumn.minWidth || MIN_COLUMN_WIDTH;\n      }\n\n      return newColumn;\n    });\n  }\n\n  private _getJustifiedColumnsAfterResize(\n    newColumns: IColumn[],\n    viewportWidth: number,\n    props: IDetailsListProps,\n    resizingColumnIndex: number,\n  ): IColumn[] {\n    const fixedColumns = newColumns.slice(0, resizingColumnIndex);\n    fixedColumns.forEach(column => (column.calculatedWidth = this._getColumnOverride(column.key).currentWidth));\n\n    const fixedWidth = fixedColumns.reduce((total, column, i) => total + getPaddedWidth(column, i === 0, props), 0);\n\n    const remainingColumns = newColumns.slice(resizingColumnIndex);\n    const remainingWidth = viewportWidth - fixedWidth;\n\n    return [\n      ...fixedColumns,\n      ...this._getJustifiedColumns(remainingColumns, remainingWidth, props, resizingColumnIndex),\n    ];\n  }\n\n  /** Builds a set of columns to fix within the viewport width. */\n  private _getJustifiedColumns(\n    newColumns: IColumn[],\n    viewportWidth: number,\n    props: IDetailsListProps,\n    firstIndex: number,\n  ): IColumn[] {\n    const { selectionMode = this._selection.mode, checkboxVisibility } = props;\n    const rowCheckWidth =\n      selectionMode !== SelectionMode.none && checkboxVisibility !== CheckboxVisibility.hidden ? CHECKBOX_WIDTH : 0;\n    const groupExpandWidth = this._getGroupNestingDepth() * GROUP_EXPAND_WIDTH;\n    let totalWidth = 0; // offset because we have one less inner padding.\n    const availableWidth = viewportWidth - (rowCheckWidth + groupExpandWidth);\n    const adjustedColumns: IColumn[] = newColumns.map((column, i) => {\n      const newColumn = {\n        ...column,\n        calculatedWidth: column.minWidth || MIN_COLUMN_WIDTH,\n        ...this._columnOverrides[column.key],\n      };\n\n      const isFirst = i + firstIndex === 0;\n      totalWidth += getPaddedWidth(newColumn, isFirst, props);\n\n      return newColumn;\n    });\n\n    let lastIndex = adjustedColumns.length - 1;\n\n    // Shrink or remove collapsable columns.\n    while (lastIndex > 0 && totalWidth > availableWidth) {\n      const column = adjustedColumns[lastIndex];\n\n      const minWidth = column.minWidth || MIN_COLUMN_WIDTH;\n      const overflowWidth = totalWidth - availableWidth;\n\n      // eslint-disable-next-line deprecation/deprecation\n      if (column.calculatedWidth! - minWidth >= overflowWidth || !(column.isCollapsible || column.isCollapsable)) {\n        const originalWidth = column.calculatedWidth!;\n        column.calculatedWidth = Math.max(column.calculatedWidth! - overflowWidth, minWidth);\n        totalWidth -= originalWidth - column.calculatedWidth;\n      } else {\n        totalWidth -= getPaddedWidth(column, false, props);\n        adjustedColumns.splice(lastIndex, 1);\n      }\n      lastIndex--;\n    }\n\n    // Then expand columns starting at the beginning, until we've filled the width.\n    for (let i = 0; i < adjustedColumns.length && totalWidth < availableWidth; i++) {\n      const column = adjustedColumns[i];\n      const isLast = i === adjustedColumns.length - 1;\n      const overrides = this._columnOverrides[column.key];\n      if (overrides && overrides.calculatedWidth && !isLast) {\n        continue;\n      }\n\n      const spaceLeft = availableWidth - totalWidth;\n      let increment: number;\n      if (isLast) {\n        increment = spaceLeft;\n      } else {\n        const maxWidth = column.maxWidth;\n        const minWidth = column.minWidth || maxWidth || MIN_COLUMN_WIDTH;\n        increment = maxWidth ? Math.min(spaceLeft, maxWidth - minWidth) : spaceLeft;\n      }\n\n      column.calculatedWidth = (column.calculatedWidth as number) + increment;\n      totalWidth += increment;\n    }\n\n    return adjustedColumns;\n  }\n\n  private _onColumnResized = (resizingColumn: IColumn, newWidth: number, resizingColumnIndex: number): void => {\n    const newCalculatedWidth = Math.max(resizingColumn.minWidth || MIN_COLUMN_WIDTH, newWidth);\n    if (this.props.onColumnResize) {\n      this.props.onColumnResize(resizingColumn, newCalculatedWidth, resizingColumnIndex);\n    }\n\n    this._rememberCalculatedWidth(resizingColumn, newCalculatedWidth);\n\n    this.setState({\n      ...this._adjustColumns(this.props, this.state, true, resizingColumnIndex),\n      version: {},\n    });\n  };\n\n  private _rememberCalculatedWidth(column: IColumn, newCalculatedWidth: number): void {\n    const overrides = this._getColumnOverride(column.key);\n    overrides.calculatedWidth = newCalculatedWidth;\n    overrides.currentWidth = newCalculatedWidth;\n  }\n\n  private _getColumnOverride(key: string): IColumn {\n    return (this._columnOverrides[key] = this._columnOverrides[key] || {});\n  }\n\n  /**\n   * Callback function when double clicked on the details header column resizer\n   * which will measure the column cells of all the active rows and resize the\n   * column to the max cell width.\n   *\n   * @param column - double clicked column definition\n   * @param columnIndex - double clicked column index\n   * TODO: min width 100 should be changed to const value and should be consistent with the\n   * value used on _onSizerMove method in DetailsHeader\n   */\n  private _onColumnAutoResized = (column: IColumn, columnIndex: number): void => {\n    let max = 0;\n    let count = 0;\n    const totalCount = Object.keys(this._activeRows).length;\n\n    for (const key in this._activeRows) {\n      if (this._activeRows.hasOwnProperty(key)) {\n        const currentRow = this._activeRows[key];\n        currentRow.measureCell(columnIndex, (width: number) => {\n          max = Math.max(max, width);\n          count++;\n          if (count === totalCount) {\n            this._onColumnResized(column, max, columnIndex);\n          }\n        });\n      }\n    }\n  };\n\n  /**\n   * Call back function when an element in FocusZone becomes active. It will translate it into item\n   * and call onActiveItemChanged callback if specified.\n   *\n   * @param row - element that became active in Focus Zone\n   * @param focus - event from Focus Zone\n   */\n  private _onActiveRowChanged = (el?: HTMLElement, ev?: React.FocusEvent<HTMLElement>): void => {\n    const { items, onActiveItemChanged } = this.props;\n\n    if (!el) {\n      return;\n    }\n\n    // Check and assign index only if the event was raised from any DetailsRow element\n    if (el.getAttribute('data-item-index')) {\n      const index = Number(el.getAttribute('data-item-index'));\n      if (index >= 0) {\n        if (onActiveItemChanged) {\n          onActiveItemChanged(items[index], index, ev);\n        }\n        this.setState({\n          focusedItemIndex: index,\n        });\n      }\n    }\n  };\n\n  private _onBlur = (event: React.FocusEvent<HTMLElement>): void => {\n    this.setState({\n      focusedItemIndex: -1,\n    });\n  };\n\n  private _getItemKey(item: any, itemIndex: number): string | number {\n    const { getKey } = this.props;\n\n    let itemKey: string | number | undefined = undefined;\n    if (item) {\n      itemKey = item.key;\n    }\n\n    if (getKey) {\n      itemKey = getKey(item, itemIndex);\n    }\n\n    if (!itemKey) {\n      itemKey = itemIndex;\n    }\n\n    return itemKey;\n  }\n}\n\nexport function buildColumns(\n  items: any[],\n  canResizeColumns?: boolean,\n  onColumnClick?: (ev: React.MouseEvent<HTMLElement>, column: IColumn) => void,\n  sortedColumnKey?: string,\n  isSortedDescending?: boolean,\n  groupedColumnKey?: string,\n  isMultiline?: boolean,\n) {\n  const columns: IColumn[] = [];\n\n  if (items && items.length) {\n    const firstItem = items[0];\n\n    for (const propName in firstItem) {\n      if (firstItem.hasOwnProperty(propName)) {\n        columns.push({\n          key: propName,\n          name: propName,\n          fieldName: propName,\n          minWidth: MIN_COLUMN_WIDTH,\n          maxWidth: 300,\n          isCollapsable: !!columns.length,\n          isCollapsible: !!columns.length,\n          isMultiline: isMultiline === undefined ? false : isMultiline,\n          isSorted: sortedColumnKey === propName,\n          isSortedDescending: !!isSortedDescending,\n          isRowHeader: false,\n          columnActionsMode: ColumnActionsMode.clickable,\n          isResizable: canResizeColumns,\n          onColumnClick: onColumnClick,\n          isGrouped: groupedColumnKey === propName,\n        });\n      }\n    }\n  }\n\n  return columns;\n}\n\nfunction getPaddedWidth(column: IColumn, isFirst: boolean, props: IDetailsListProps): number {\n  const { cellStyleProps = DEFAULT_CELL_STYLE_PROPS } = props;\n\n  return (\n    column.calculatedWidth! +\n    cellStyleProps.cellLeftPadding +\n    cellStyleProps.cellRightPadding +\n    (column.isPadded ? cellStyleProps.cellExtraRightPadding : 0)\n  );\n}\n\nfunction getGroupNestingDepth(groups: IDetailsListProps['groups']): number {\n  let level = 0;\n  let groupsInLevel = groups;\n\n  while (groupsInLevel && groupsInLevel.length > 0) {\n    level++;\n    groupsInLevel = groupsInLevel[0].children;\n  }\n\n  return level;\n}\n"]}