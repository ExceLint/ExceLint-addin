{"version":3,"file":"Icon.types.js","sourceRoot":"../src/","sources":["components/Icon/Icon.types.ts"],"names":[],"mappings":"AAKA,2BAA2B;AAC3B,MAAM,CAAN,IAAY,QAsBX;AAtBD,WAAY,QAAQ;IAClB;;OAEG;IACH,6CAAW,CAAA;IAEX;;OAEG;IACH,yCAAS,CAAA;IAET;;;OAGG;IACH,kDAAgB,CAAA;IAEhB;;;OAGG;IACH,8CAAc,CAAA;AAChB,CAAC,EAtBW,QAAQ,KAAR,QAAQ,QAsBnB","sourcesContent":["import * as React from 'react';\r\nimport { IImageProps } from '../Image/Image.types';\r\nimport { IStyle, ITheme } from '../../Styling';\r\nimport { IBaseProps, IStyleFunctionOrObject } from '../../Utilities';\r\n\r\n// Please keep alphabetized\r\nexport enum IconType {\r\n  /**\r\n   * Render using the fabric icon font.\r\n   */\r\n  default = 0,\r\n\r\n  /**\r\n   * Render using an image, where imageProps would be used.\r\n   */\r\n  image = 1,\r\n\r\n  /**\r\n   * Deprecated, use `default`.\r\n   * @deprecated Use `default`.\r\n   */\r\n  Default = 100000,\r\n\r\n  /**\r\n   * Deprecated, use `image`.\r\n   * @deprecated Use `image`.\r\n   */\r\n  Image = 100001\r\n}\r\n\r\nexport interface IIconProps extends IBaseProps, React.HTMLAttributes<HTMLElement> {\r\n  /**\r\n   * The name of the icon to use from the icon font. If string is empty, a placeholder icon will be rendered the same width as an icon\r\n   */\r\n  iconName?: string;\r\n\r\n  /**\r\n   * The aria label of the button for the benefit of screen readers.\r\n   */\r\n  ariaLabel?: string;\r\n\r\n  /**\r\n   * The type of icon to render (image or icon font).\r\n   */\r\n  iconType?: IconType;\r\n\r\n  /**\r\n   * If rendering an image icon, these props will be passed to the Image component.\r\n   */\r\n  imageProps?: IImageProps;\r\n\r\n  /**\r\n   * If rendering an image icon, this function callback will be invoked in the event loading the image errors.\r\n   */\r\n  imageErrorAs?: React.StatelessComponent<IImageProps> | React.ComponentClass<IImageProps>;\r\n\r\n  /**\r\n   * Gets the styles for an Icon.\r\n   */\r\n  styles?: IStyleFunctionOrObject<IIconStyleProps, IIconStyles>;\r\n  theme?: ITheme;\r\n}\r\n\r\nexport interface IIconStyleProps {\r\n  className?: string;\r\n  iconClassName?: string;\r\n  isPlaceholder: boolean;\r\n  isImage: boolean;\r\n  styles?: Partial<IIconStyles>;\r\n  theme?: ITheme;\r\n}\r\n\r\nexport interface IIconStyles {\r\n  root?: IStyle;\r\n\r\n  /**\r\n   * Deprecated. Use `root`.\r\n   * @deprecated Use `root`.\r\n   */\r\n  imageContainer?: IStyle;\r\n}\r\n"]}