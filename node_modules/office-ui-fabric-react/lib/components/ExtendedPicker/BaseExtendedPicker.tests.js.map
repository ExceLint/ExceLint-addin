{"version":3,"file":"BaseExtendedPicker.tests.js","sourceRoot":"../src/","sources":["components/ExtendedPicker/BaseExtendedPicker.tests.tsx"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as ReactTestUtils from 'react-dom/test-utils';\r\n/* tslint:enable:no-unused-variable */\r\nimport * as renderer from 'react-test-renderer';\r\n\r\nimport { IBaseExtendedPickerProps } from './BaseExtendedPicker.types';\r\nimport { BaseExtendedPicker } from './BaseExtendedPicker';\r\nimport { IBaseFloatingPickerProps, BaseFloatingPicker, SuggestionsStore } from '../FloatingPicker/index';\r\nimport { IBaseSelectedItemsListProps, ISelectedItemProps, BaseSelectedItemsList } from '../SelectedItemsList/index';\r\nimport { KeyCodes } from '../../Utilities';\r\n\r\nfunction onResolveSuggestions(text: string): ISimple[] {\r\n  return [\r\n    'black',\r\n    'blue',\r\n    'brown',\r\n    'cyan',\r\n    'green',\r\n    'magenta',\r\n    'mauve',\r\n    'orange',\r\n    'pink',\r\n    'purple',\r\n    'red',\r\n    'rose',\r\n    'violet',\r\n    'white',\r\n    'yellow'\r\n  ]\r\n    .filter((tag: string) => tag.toLowerCase().indexOf(text.toLowerCase()) === 0)\r\n    .map((item: string) => ({ key: item, name: item }));\r\n}\r\n\r\nconst BasePickerWithType = BaseFloatingPicker as new (props: IBaseFloatingPickerProps<ISimple>) => BaseFloatingPicker<\r\n  ISimple,\r\n  IBaseFloatingPickerProps<ISimple>\r\n>;\r\n\r\nconst BaseSelectedItemsListWithType = BaseSelectedItemsList as new (props: IBaseSelectedItemsListProps<ISimple>) => BaseSelectedItemsList<\r\n  ISimple,\r\n  IBaseSelectedItemsListProps<ISimple>\r\n>;\r\n\r\nconst basicSuggestionRenderer = (props: ISimple) => {\r\n  return <div> {props.name} </div>;\r\n};\r\n\r\nconst basicItemRenderer = (props: ISelectedItemProps<ISimple>) => {\r\n  return <div> {props.name} </div>;\r\n};\r\n\r\nconst basicRenderFloatingPicker = (props: IBaseFloatingPickerProps<ISimple>) => {\r\n  return <BasePickerWithType {...props} />;\r\n};\r\n\r\nconst basicRenderSelectedItemsList = (props: IBaseSelectedItemsListProps<ISimple>) => {\r\n  return <BaseSelectedItemsListWithType />;\r\n};\r\n\r\nconst floatingPickerProps = {\r\n  onResolveSuggestions: onResolveSuggestions,\r\n  onRenderSuggestionsItem: basicSuggestionRenderer,\r\n  suggestionsStore: new SuggestionsStore<ISimple>()\r\n};\r\n\r\nconst selectedItemsListProps: IBaseSelectedItemsListProps<ISimple> = {\r\n  onRenderItem: basicItemRenderer\r\n};\r\n\r\nexport interface ISimple {\r\n  key: string;\r\n  name: string;\r\n}\r\n\r\nexport type TypedBaseExtendedPicker = BaseExtendedPicker<ISimple, IBaseExtendedPickerProps<ISimple>>;\r\n\r\ndescribe('Pickers', () => {\r\n  describe('BasePicker', () => {\r\n    const BaseExtendedPickerWithType = BaseExtendedPicker as new (props: IBaseExtendedPickerProps<ISimple>) => BaseExtendedPicker<\r\n      ISimple,\r\n      IBaseExtendedPickerProps<ISimple>\r\n    >;\r\n\r\n    it('renders BaseExtendedPicker correctly', () => {\r\n      const component = renderer.create(\r\n        <BaseExtendedPickerWithType\r\n          floatingPickerProps={floatingPickerProps}\r\n          selectedItemsListProps={selectedItemsListProps}\r\n          onRenderSelectedItems={basicRenderSelectedItemsList}\r\n          onRenderFloatingPicker={basicRenderFloatingPicker}\r\n        />\r\n      );\r\n      const tree = component.toJSON();\r\n      expect(tree).toMatchSnapshot();\r\n    });\r\n\r\n    it('force resolves to the first suggestion', () => {\r\n      const root = document.createElement('div');\r\n      document.body.appendChild(root);\r\n\r\n      const picker: TypedBaseExtendedPicker = ReactDOM.render(\r\n        <BaseExtendedPickerWithType\r\n          floatingPickerProps={floatingPickerProps}\r\n          selectedItemsListProps={selectedItemsListProps}\r\n          onRenderSelectedItems={basicRenderSelectedItemsList}\r\n          onRenderFloatingPicker={basicRenderFloatingPicker}\r\n        />,\r\n        root\r\n      ) as TypedBaseExtendedPicker;\r\n\r\n      if (picker.inputElement) {\r\n        picker.inputElement.value = 'bl';\r\n      }\r\n\r\n      expect(picker.floatingPicker.current && picker.floatingPicker.current.suggestions.length).toBe(2);\r\n      expect(picker.floatingPicker.current && picker.floatingPicker.current.suggestions[0].name).toBe('black');\r\n\r\n      // Force resolve to the first suggestions\r\n      picker.floatingPicker.current && picker.floatingPicker.current.forceResolveSuggestion();\r\n      expect(picker.items.length).toBe(1);\r\n      expect(picker.items[0].name).toBe('black');\r\n\r\n      ReactDOM.unmountComponentAtNode(root);\r\n    });\r\n\r\n    it('Can hide and show picker', () => {\r\n      const root = document.createElement('div');\r\n      document.body.appendChild(root);\r\n\r\n      const picker: TypedBaseExtendedPicker = ReactDOM.render(\r\n        <BaseExtendedPickerWithType\r\n          floatingPickerProps={floatingPickerProps}\r\n          selectedItemsListProps={selectedItemsListProps}\r\n          onRenderSelectedItems={basicRenderSelectedItemsList}\r\n          onRenderFloatingPicker={basicRenderFloatingPicker}\r\n        />,\r\n        root\r\n      ) as TypedBaseExtendedPicker;\r\n\r\n      if (picker.inputElement) {\r\n        picker.inputElement.value = 'bl';\r\n      }\r\n\r\n      expect(picker.floatingPicker.current && picker.floatingPicker.current.isSuggestionsShown).toBeTruthy();\r\n      picker.floatingPicker.current && picker.floatingPicker.current.hidePicker();\r\n      expect(picker.floatingPicker.current && picker.floatingPicker.current.isSuggestionsShown).toBeFalsy();\r\n      picker.floatingPicker.current && picker.floatingPicker.current.showPicker();\r\n      expect(picker.floatingPicker.current && picker.floatingPicker.current.isSuggestionsShown).toBeTruthy();\r\n\r\n      ReactDOM.unmountComponentAtNode(root);\r\n    });\r\n\r\n    it('Completes the suggestion', () => {\r\n      const root = document.createElement('div');\r\n      document.body.appendChild(root);\r\n\r\n      const picker: TypedBaseExtendedPicker = ReactDOM.render(\r\n        <BaseExtendedPickerWithType\r\n          floatingPickerProps={floatingPickerProps}\r\n          selectedItemsListProps={selectedItemsListProps}\r\n          onRenderSelectedItems={basicRenderSelectedItemsList}\r\n          onRenderFloatingPicker={basicRenderFloatingPicker}\r\n        />,\r\n        root\r\n      ) as TypedBaseExtendedPicker;\r\n\r\n      if (picker.inputElement) {\r\n        picker.inputElement.value = 'bl';\r\n        ReactTestUtils.Simulate.keyDown(picker.inputElement, { which: KeyCodes.down });\r\n      }\r\n\r\n      picker.floatingPicker.current && picker.floatingPicker.current.completeSuggestion();\r\n      expect(picker.selectedItemsList.current && picker.selectedItemsList.current.items.length).toBe(1);\r\n      expect(picker.selectedItemsList.current && picker.selectedItemsList.current.items[0].name).toBe('blue');\r\n\r\n      ReactDOM.unmountComponentAtNode(root);\r\n    });\r\n  });\r\n});\r\n"]}