{"version":3,"file":"BaseExtendedPicker.types.js","sourceRoot":"../src/","sources":["components/ExtendedPicker/BaseExtendedPicker.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\r\nimport { Autofill } from '../../Autofill';\r\nimport { IInputProps } from '../../Pickers';\r\nimport { IBaseFloatingPickerProps } from '../../FloatingPicker';\r\nimport { IBaseSelectedItemsListProps } from '../../SelectedItemsList';\r\nimport { IRefObject } from '../../Utilities';\r\nimport { IFocusZoneProps } from '../../FocusZone';\r\n\r\nexport interface IBaseExtendedPicker<T> {\r\n  /** Forces the picker to resolve */\r\n  forceResolve?: () => void;\r\n  /** Gets the current value of the input. */\r\n  items: T[] | undefined;\r\n  /** Sets focus to the input. */\r\n  focus: () => void;\r\n}\r\n\r\n// Type T is the type of the item that is displayed\r\n// and searched for by the people picker. For example, if the picker is\r\n// displaying persona's than type T could either be of Persona or Ipersona props\r\nexport interface IBaseExtendedPickerProps<T> {\r\n  /**\r\n   * Ref of the component\r\n   */\r\n  componentRef?: IRefObject<IBaseExtendedPicker<T>>;\r\n\r\n  /**\r\n   * Header/title element for the picker\r\n   */\r\n  headerComponent?: JSX.Element;\r\n\r\n  /**\r\n   * Initial items that have already been selected and should appear in the people picker.\r\n   */\r\n  defaultSelectedItems?: T[];\r\n\r\n  /**\r\n   * A callback for when the selected list of items changes.\r\n   */\r\n  onChange?: (items?: T[]) => void;\r\n\r\n  /**\r\n   * A callback for when text is pasted into the input\r\n   */\r\n  onPaste?: (pastedText: string) => T[];\r\n\r\n  /**\r\n   * A callback for when the user put focus on the picker\r\n   */\r\n  onFocus?: React.FocusEventHandler<HTMLInputElement | Autofill>;\r\n\r\n  /**\r\n   * A callback for when the user moves the focus away from the picker\r\n   */\r\n  onBlur?: React.FocusEventHandler<HTMLInputElement | Autofill>;\r\n\r\n  /**\r\n   * ClassName for the picker.\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * Function that specifies how the floating picker will appear.\r\n   */\r\n  onRenderFloatingPicker: React.ComponentType<IBaseFloatingPickerProps<T>>;\r\n\r\n  /**\r\n   * Function that specifies how the floating picker will appear.\r\n   */\r\n  onRenderSelectedItems: React.ComponentType<IBaseSelectedItemsListProps<T>>;\r\n\r\n  /**\r\n   * Floating picker properties\r\n   */\r\n  floatingPickerProps: IBaseFloatingPickerProps<T>;\r\n\r\n  /**\r\n   * Selected items list properties\r\n   */\r\n  selectedItemsListProps: IBaseSelectedItemsListProps<T>;\r\n\r\n  /**\r\n   * Autofill input native props\r\n   * @defaultvalue undefined\r\n   */\r\n  inputProps?: IInputProps;\r\n\r\n  /**\r\n   * Flag for disabling the picker.\r\n   * @defaultvalue false\r\n   */\r\n  disabled?: boolean;\r\n\r\n  /**\r\n   * Restrict the amount of selectable items.\r\n   * @defaultvalue undefined\r\n   */\r\n  itemLimit?: number;\r\n\r\n  /**\r\n   * A callback to process a selection after the user selects a suggestion from the picker.\r\n   * The returned item will be added to the selected items list\r\n   */\r\n  onItemSelected?: (selectedItem?: T) => T | PromiseLike<T>;\r\n\r\n  /**\r\n   * A callback on when an item was added to the selected item list\r\n   */\r\n  onItemAdded?: (addedItem: T) => void;\r\n\r\n  /**\r\n   * A callback on when an item or items were removed from the selected item list\r\n   */\r\n  onItemsRemoved?: (removedItems: T[]) => void;\r\n\r\n  /**\r\n   * If using as a controlled component use selectedItems here instead of the SelectedItemsList\r\n   */\r\n  selectedItems?: T[];\r\n\r\n  /**\r\n   * If using as a controlled component use suggestionItems here instead of FloatingPicker\r\n   */\r\n  suggestionItems?: T[];\r\n\r\n  /**\r\n   * Focus zone props\r\n   */\r\n  focusZoneProps?: IFocusZoneProps;\r\n\r\n  /**\r\n   * Current rendered query string that's corealte to current rendered result\r\n   **/\r\n  currentRenderedQueryString?: string;\r\n}\r\n"]}