import * as tslib_1 from "tslib";
import * as React from 'react';
import { Persona, PersonaSize, PersonaPresence } from 'office-ui-fabric-react/lib/Persona';
import { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';
import { Label } from 'office-ui-fabric-react/lib/Label';
import { TestImages } from '../../../common/TestImages';
import * as exampleStylesImport from '../../../common/_exampleStyles.scss';
var exampleStyles = exampleStylesImport;
var examplePersona = {
    imageUrl: TestImages.personaFemale,
    imageInitials: 'AL',
    text: 'Annie Lindqvist',
    secondaryText: 'Software Engineer',
    tertiaryText: 'In a meeting',
    optionalText: 'Available at 4:00pm'
};
var PersonaBasicExample = /** @class */ (function (_super) {
    tslib_1.__extends(PersonaBasicExample, _super);
    function PersonaBasicExample(props) {
        var _this = _super.call(this, props) || this;
        _this._onChange = function (ev, checked) {
            _this.setState({ renderPersonaDetails: checked });
        };
        _this.state = {
            renderPersonaDetails: true
        };
        return _this;
    }
    PersonaBasicExample.prototype.render = function () {
        var renderPersonaDetails = this.state.renderPersonaDetails;
        return (React.createElement("div", null,
            React.createElement("div", null,
                React.createElement(Checkbox, { label: "Include persona details", checked: renderPersonaDetails, onChange: this._onChange })),
            React.createElement(Label, { className: exampleStyles.exampleLabel }, "Size 10 Persona, with no presence"),
            React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size10, hidePersonaDetails: !renderPersonaDetails })),
            React.createElement(Label, { className: exampleStyles.exampleLabel }, "Size 10 Persona, with presence"),
            React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size10, presence: PersonaPresence.offline, hidePersonaDetails: !renderPersonaDetails })),
            React.createElement(Label, { className: exampleStyles.exampleLabel }, "Size 24 Persona"),
            React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size24, presence: PersonaPresence.online, hidePersonaDetails: !renderPersonaDetails })),
            React.createElement(Label, { className: exampleStyles.exampleLabel }, "Size 28 Persona"),
            React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size28, presence: PersonaPresence.online, hidePersonaDetails: !renderPersonaDetails })),
            React.createElement(Label, { className: exampleStyles.exampleLabel }, "Size 32 Persona"),
            React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size32, presence: PersonaPresence.online, hidePersonaDetails: !renderPersonaDetails })),
            React.createElement(Label, { className: exampleStyles.exampleLabel }, "Size 40 Persona"),
            React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size40, presence: PersonaPresence.away, hidePersonaDetails: !renderPersonaDetails })),
            React.createElement(Label, { className: exampleStyles.exampleLabel }, "Size 48 Persona (default) "),
            React.createElement(Persona, tslib_1.__assign({}, examplePersona, { hidePersonaDetails: !renderPersonaDetails, presence: PersonaPresence.busy })),
            React.createElement(Label, { className: exampleStyles.exampleLabel }, "Size 72 Persona"),
            React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size72, presence: PersonaPresence.dnd, hidePersonaDetails: !renderPersonaDetails })),
            React.createElement(Label, { className: exampleStyles.exampleLabel }, "Size 100 Persona"),
            React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size100, presence: PersonaPresence.blocked, hidePersonaDetails: !renderPersonaDetails }))));
    };
    return PersonaBasicExample;
}(React.Component));
export { PersonaBasicExample };
//# sourceMappingURL=Persona.Basic.Example.js.map