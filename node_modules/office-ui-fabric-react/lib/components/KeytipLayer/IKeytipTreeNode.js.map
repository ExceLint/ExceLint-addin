{"version":3,"file":"IKeytipTreeNode.js","sourceRoot":"../src/","sources":["components/KeytipLayer/IKeytipTreeNode.ts"],"names":[],"mappings":"","sourcesContent":["export interface IKeytipTreeNode {\r\n  /**\r\n   * ID of the <Keytip> DOM element. Needed to locate the correct keytip in the KeytipLayer's 'keytip' state array\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * KeySequence that invokes this KeytipTreeNode's onExecute function\r\n   */\r\n  keySequences: string[];\r\n\r\n  /**\r\n   * Overflow set sequence for this keytip\r\n   */\r\n  overflowSetSequence?: string[];\r\n\r\n  /**\r\n   * Control's execute function for when keytip is invoked, passed from the component to the Manager in the IKeytipProps\r\n   */\r\n  onExecute?: (executeTarget: HTMLElement | null, target: HTMLElement | null) => void;\r\n\r\n  /**\r\n   * Function to execute when we return to this keytip\r\n   */\r\n  onReturn?: (executeTarget: HTMLElement | null, target: HTMLElement | null) => void;\r\n\r\n  /**\r\n   * List of keytip IDs that should become visible when this keytip is pressed, can be empty\r\n   */\r\n  children: string[];\r\n\r\n  /**\r\n   * Parent keytip ID\r\n   */\r\n  parent: string;\r\n\r\n  /**\r\n   * Whether or not this keytip will have children keytips that are dynamically created (DOM is generated on keytip activation)\r\n   * Common cases are keytips in a menu or modal\r\n   */\r\n  hasDynamicChildren?: boolean;\r\n\r\n  /**\r\n   * Whether or not this keytip belongs to a component that has a menu\r\n   * Keytip mode will stay on when a menu is opened, even if the items in that menu have no keytips\r\n   */\r\n  hasMenu?: boolean;\r\n\r\n  /**\r\n   * T/F if this keytip's component is currently disabled\r\n   */\r\n  disabled?: boolean;\r\n\r\n  /**\r\n   * T/F if this keytip is a persisted keytip\r\n   */\r\n  persisted?: boolean;\r\n}\r\n"]}