{"version":3,"file":"Calendar.js","sourceRoot":"../src/","sources":["components/Calendar/Calendar.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  ICalendar,\n  ICalendarProps,\n  ICalendarStrings,\n  ICalendarIconStrings,\n  ICalendarFormatDateCallbacks,\n} from './Calendar.types';\nimport { DayOfWeek, FirstWeekOfYear, DateRangeType } from '../../utilities/dateValues/DateValues';\nimport { CalendarDay, ICalendarDay } from './CalendarDay';\nimport { CalendarMonth, ICalendarMonth } from './CalendarMonth';\nimport { compareDates, getDateRangeArray } from '../../utilities/dateMath/DateMath';\nimport {\n  css,\n  elementContains,\n  KeyCodes,\n  getNativeProps,\n  divProperties,\n  initializeComponentRef,\n  FocusRects,\n} from '../../Utilities';\nimport * as stylesImport from './Calendar.scss';\nconst styles: any = stylesImport;\n\nconst leftArrow = 'Up';\nconst rightArrow = 'Down';\nconst closeIcon = 'CalculatorMultiply';\nconst iconStrings: ICalendarIconStrings = {\n  leftNavigation: leftArrow,\n  rightNavigation: rightArrow,\n  closeIcon: closeIcon,\n};\nconst defaultWorkWeekDays: DayOfWeek[] = [\n  DayOfWeek.Monday,\n  DayOfWeek.Tuesday,\n  DayOfWeek.Wednesday,\n  DayOfWeek.Thursday,\n  DayOfWeek.Friday,\n];\n\nconst dateTimeFormatterCallbacks: ICalendarFormatDateCallbacks = {\n  formatMonthDayYear: (date: Date, strings: ICalendarStrings) =>\n    strings.months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getFullYear(),\n  formatMonthYear: (date: Date, strings: ICalendarStrings) =>\n    strings.months[date.getMonth()] + ' ' + date.getFullYear(),\n  formatDay: (date: Date) => date.getDate().toString(),\n  formatYear: (date: Date) => date.getFullYear().toString(),\n};\n\nexport interface ICalendarState {\n  /** The currently focused date in the day picker, but not necessarily selected */\n  navigatedDayDate?: Date;\n\n  /** The currently focused date in the month picker, but not necessarily selected */\n  navigatedMonthDate?: Date;\n\n  /** The currently selected date in the calendar */\n  selectedDate?: Date;\n\n  /** State used to show/hide month picker */\n  isMonthPickerVisible?: boolean;\n\n  /** State used to show/hide day picker */\n  isDayPickerVisible?: boolean;\n}\n\nexport class Calendar extends React.Component<ICalendarProps, ICalendarState> implements ICalendar {\n  public static defaultProps: ICalendarProps = {\n    onSelectDate: undefined,\n    onDismiss: undefined,\n    isMonthPickerVisible: true,\n    isDayPickerVisible: true,\n    showMonthPickerAsOverlay: false,\n    value: undefined,\n    today: new Date(),\n    firstDayOfWeek: DayOfWeek.Sunday,\n    dateRangeType: DateRangeType.Day,\n    autoNavigateOnSelection: false,\n    showGoToToday: true,\n    strings: null,\n    highlightCurrentMonth: false,\n    highlightSelectedMonth: false,\n    navigationIcons: iconStrings,\n    showWeekNumbers: false,\n    firstWeekOfYear: FirstWeekOfYear.FirstDay,\n    dateTimeFormatter: dateTimeFormatterCallbacks,\n    showSixWeeksByDefault: false,\n    workWeekDays: defaultWorkWeekDays,\n    showCloseButton: false,\n    allFocusable: false,\n  };\n\n  private _dayPicker = React.createRef<ICalendarDay>();\n  private _monthPicker = React.createRef<ICalendarMonth>();\n  private _hasFocus = false;\n\n  private _focusOnUpdate: boolean;\n\n  constructor(props: ICalendarProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    const currentDate = props.value && !isNaN(props.value.getTime()) ? props.value : props.today || new Date();\n\n    this.state = {\n      selectedDate: currentDate,\n      navigatedDayDate: currentDate,\n      navigatedMonthDate: currentDate,\n\n      /** When showMonthPickerAsOverlay is active it overrides isMonthPickerVisible/isDayPickerVisible props\n       (These props permanently set the visibility of their respective calendars). */\n      isMonthPickerVisible: this.props.showMonthPickerAsOverlay ? false : this.props.isMonthPickerVisible,\n      isDayPickerVisible: this.props.showMonthPickerAsOverlay ? true : this.props.isDayPickerVisible,\n    };\n\n    this._focusOnUpdate = false;\n  }\n\n  public UNSAFE_componentWillReceiveProps(nextProps: ICalendarProps): void {\n    const { autoNavigateOnSelection, value, today = new Date() } = nextProps;\n\n    // Make sure auto-navigation is supported for programmatic changes to selected date, i.e.,\n    // if selected date is updated via props, we may need to modify the navigated date\n    const overrideNavigatedDate = autoNavigateOnSelection && !compareDates(value!, this.props.value!);\n    if (overrideNavigatedDate) {\n      this.setState({\n        navigatedMonthDate: value,\n        navigatedDayDate: value,\n      });\n    }\n\n    this.setState({\n      selectedDate: value || today,\n    });\n  }\n\n  public componentDidUpdate(): void {\n    if (this._focusOnUpdate) {\n      this.focus();\n      this._focusOnUpdate = false;\n    }\n  }\n\n  public render(): JSX.Element {\n    const rootClass = 'ms-DatePicker';\n    const {\n      firstDayOfWeek,\n      dateRangeType,\n      strings,\n      showMonthPickerAsOverlay,\n      autoNavigateOnSelection,\n      showGoToToday,\n      highlightCurrentMonth,\n      highlightSelectedMonth,\n      navigationIcons,\n      minDate,\n      maxDate,\n      restrictedDates,\n      className,\n      showCloseButton,\n      allFocusable,\n      yearPickerHidden,\n      today,\n    } = this.props;\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties, ['value']);\n    const { selectedDate, navigatedDayDate, navigatedMonthDate, isMonthPickerVisible, isDayPickerVisible } = this.state;\n    const onHeaderSelect = showMonthPickerAsOverlay ? this._onHeaderSelect : undefined;\n    const monthPickerOnly = !showMonthPickerAsOverlay && !isDayPickerVisible;\n    const overlayedWithButton = showMonthPickerAsOverlay && showGoToToday;\n\n    let goTodayEnabled = showGoToToday;\n\n    if (goTodayEnabled && navigatedDayDate && navigatedMonthDate && today) {\n      goTodayEnabled =\n        navigatedDayDate.getFullYear() !== today.getFullYear() ||\n        navigatedDayDate.getMonth() !== today.getMonth() ||\n        navigatedMonthDate.getFullYear() !== today.getFullYear() ||\n        navigatedMonthDate.getMonth() !== today.getMonth();\n    }\n\n    return (\n      <div className={css(rootClass, styles.root, className)} role=\"application\">\n        <div\n          {...nativeProps}\n          onBlur={this._onBlur}\n          onFocus={this._onFocus}\n          className={css(\n            'ms-DatePicker-picker ms-DatePicker-picker--opened ms-DatePicker-picker--focused',\n            styles.picker,\n            styles.pickerIsOpened,\n            styles.pickerIsFocused,\n            isMonthPickerVisible && 'ms-DatePicker-monthPickerVisible ' + styles.monthPickerVisible,\n            isMonthPickerVisible && isDayPickerVisible && 'ms-DatePicker-calendarsInline ' + styles.calendarsInline,\n            monthPickerOnly && 'ms-DatePicker-monthPickerOnly ' + styles.monthPickerOnly,\n            showMonthPickerAsOverlay && 'ms-DatePicker-monthPickerAsOverlay ' + styles.monthPickerAsOverlay,\n          )}\n        >\n          <div\n            className={css(\n              'ms-DatePicker-holder ms-slideDownIn10',\n              styles.holder,\n              overlayedWithButton && styles.holderWithButton,\n            )}\n            onKeyDown={this._onDatePickerPopupKeyDown}\n          >\n            <div className={css('ms-DatePicker-frame', styles.frame)}>\n              <div className={css('ms-DatePicker-wrap', styles.wrap, showGoToToday && styles.goTodaySpacing)}>\n                {isDayPickerVisible && (\n                  <CalendarDay\n                    selectedDate={selectedDate!}\n                    navigatedDate={navigatedDayDate!}\n                    today={this.props.today}\n                    onSelectDate={this._onSelectDate}\n                    onNavigateDate={this._onNavigateDayDate}\n                    onDismiss={this.props.onDismiss}\n                    firstDayOfWeek={firstDayOfWeek!}\n                    dateRangeType={dateRangeType!}\n                    autoNavigateOnSelection={autoNavigateOnSelection!}\n                    strings={strings!}\n                    onHeaderSelect={onHeaderSelect}\n                    navigationIcons={navigationIcons!}\n                    showWeekNumbers={this.props.showWeekNumbers}\n                    firstWeekOfYear={this.props.firstWeekOfYear!}\n                    dateTimeFormatter={this.props.dateTimeFormatter!}\n                    showSixWeeksByDefault={this.props.showSixWeeksByDefault}\n                    minDate={minDate}\n                    maxDate={maxDate}\n                    restrictedDates={restrictedDates}\n                    workWeekDays={this.props.workWeekDays}\n                    componentRef={this._dayPicker}\n                    showCloseButton={showCloseButton}\n                    allFocusable={allFocusable}\n                  />\n                )}\n                {isDayPickerVisible && isMonthPickerVisible && <div className={styles.divider} />}\n                {isMonthPickerVisible && (\n                  <CalendarMonth\n                    navigatedDate={navigatedMonthDate!}\n                    selectedDate={navigatedDayDate!}\n                    strings={strings!}\n                    onNavigateDate={this._onNavigateMonthDate}\n                    today={this.props.today}\n                    highlightCurrentMonth={highlightCurrentMonth!}\n                    highlightSelectedMonth={highlightSelectedMonth!}\n                    onHeaderSelect={onHeaderSelect}\n                    navigationIcons={navigationIcons!}\n                    dateTimeFormatter={this.props.dateTimeFormatter!}\n                    minDate={minDate}\n                    maxDate={maxDate}\n                    componentRef={this._monthPicker}\n                    yearPickerHidden={yearPickerHidden || showMonthPickerAsOverlay}\n                  />\n                )}\n\n                {showGoToToday && (\n                  <button\n                    role=\"button\"\n                    className={css('ms-DatePicker-goToday js-goToday', styles.goToday, {\n                      [styles.goTodayInlineMonth]: isMonthPickerVisible,\n                      [styles.goToTodayIsDisabled]: !goTodayEnabled,\n                    })}\n                    onClick={this._onGotoTodayClick}\n                    onKeyDown={this._onGotoTodayKeyDown}\n                    tabIndex={0}\n                    disabled={!goTodayEnabled}\n                    type=\"button\"\n                  >\n                    {strings!.goToToday}\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        <FocusRects />\n      </div>\n    );\n  }\n\n  public focus() {\n    if (this.state.isDayPickerVisible && this._dayPicker.current) {\n      this._dayPicker.current.focus();\n    } else if (this.state.isMonthPickerVisible && this._monthPicker.current) {\n      this._monthPicker.current.focus();\n    }\n  }\n\n  private _onBlur = (event: React.FocusEvent<HTMLElement>) => {\n    if (!elementContains(event.currentTarget, event.relatedTarget as HTMLElement)) {\n      this._hasFocus = false;\n      this.props.onBlur && this.props.onBlur(event);\n    }\n  };\n\n  private _onFocus = (event: React.FocusEvent<HTMLElement>) => {\n    if (!this._hasFocus) {\n      this._hasFocus = true;\n      this.props.onFocus && this.props.onFocus(event);\n    }\n  };\n\n  private _navigateDayPickerDay = (date: Date): void => {\n    this.setState({\n      navigatedDayDate: date,\n      navigatedMonthDate: date,\n    });\n  };\n\n  private _navigateMonthPickerDay = (date: Date): void => {\n    this.setState({\n      navigatedMonthDate: date,\n    });\n  };\n\n  private _onNavigateDayDate = (date: Date, focusOnNavigatedDay: boolean): void => {\n    this._navigateDayPickerDay(date);\n    this._focusOnUpdate = focusOnNavigatedDay;\n  };\n\n  private _onNavigateMonthDate = (date: Date, focusOnNavigatedDay: boolean): void => {\n    if (!focusOnNavigatedDay) {\n      this._navigateMonthPickerDay(date);\n      this._focusOnUpdate = focusOnNavigatedDay;\n      return;\n    }\n\n    const monthPickerOnly = !this.props.showMonthPickerAsOverlay && !this.props.isDayPickerVisible;\n\n    if (monthPickerOnly) {\n      this._onSelectDate(date);\n    }\n\n    this._navigateDayPickerDay(date);\n  };\n\n  private _onSelectDate = (date: Date, selectedDateRangeArray?: Date[]): void => {\n    const { onSelectDate } = this.props;\n\n    this.setState({\n      selectedDate: date,\n    });\n\n    if (onSelectDate) {\n      onSelectDate(date, selectedDateRangeArray);\n    }\n  };\n\n  private _onHeaderSelect = (focus: boolean): void => {\n    this.setState({\n      isDayPickerVisible: !this.state.isDayPickerVisible,\n      isMonthPickerVisible: !this.state.isMonthPickerVisible,\n    });\n\n    if (focus) {\n      this._focusOnUpdate = true;\n    }\n  };\n\n  private _onGotoToday = (): void => {\n    const { dateRangeType, firstDayOfWeek, today, workWeekDays, selectDateOnClick } = this.props;\n\n    if (selectDateOnClick) {\n      // When using Defaultprops, TypeScript doesn't know that React is going to inject defaults\n      // so we use exclamation mark as a hint to the type checker (see link below)\n      // https://decembersoft.com/posts/error-ts2532-optional-react-component-props-in-typescript/\n      const dates = getDateRangeArray(today!, dateRangeType!, firstDayOfWeek!, workWeekDays!);\n      this._onSelectDate(today!, dates);\n    }\n\n    this._navigateDayPickerDay(today!);\n    this._focusOnUpdate = true;\n  };\n\n  private _onGotoTodayClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    this._onGotoToday();\n  };\n\n  private _onGotoTodayKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.enter) {\n      ev.preventDefault();\n      this._onGotoToday();\n    }\n  };\n\n  private _onDatePickerPopupKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    switch (ev.which) {\n      case KeyCodes.enter:\n        ev.preventDefault();\n        break;\n\n      case KeyCodes.backspace:\n        ev.preventDefault();\n        break;\n\n      case KeyCodes.escape:\n        this._handleEscKey(ev);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  private _handleEscKey = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (this.props.onDismiss) {\n      this.props.onDismiss();\n    }\n  };\n}\n"]}