{"version":3,"file":"Panel.PreventDefault.Example.js","sourceRoot":"../src/","sources":["components/Panel/examples/Panel.PreventDefault.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAC/C,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAClE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,kCAAkC,CAAC;AACpE,OAAO,EAAE,MAAM,EAAE,MAAM,mCAAmC,CAAC;AAC3D,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAO/B;IAAgD,sDAAqD;IAArG;QAAA,qEA2CC;QA1CQ,WAAK,GAAG;YACb,SAAS,EAAE,KAAK;YAChB,QAAQ,EAAE,IAAI;SACf,CAAC;QAgBM,gBAAU,GAAG,UAAC,EAA4C;YAChE,IAAI,EAAE,CAAC,OAAO,KAAK,QAAQ,CAAC,MAAM,EAAE;gBAClC,EAAE,CAAC,cAAc,EAAE,CAAC;gBACpB,EAAE,CAAC,eAAe,EAAE,CAAC;aACtB;QACH,CAAC,CAAC;QAEM,qBAAe,GAAG;YACxB,KAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QACpD,CAAC,CAAC;QAEM,gBAAU,GAAG,UAAC,EAAqC;YACzD,IAAI,EAAE,IAAI,EAAE,CAAC,OAAO,KAAK,QAAQ,CAAC,MAAM,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBAChE,EAAE,CAAC,cAAc,EAAE,CAAC;gBACpB,OAAO;aACR;YAED,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;QACtC,CAAC,CAAC;QAEM,gBAAU,GAAG;YACnB,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;QACrC,CAAC,CAAC;;IACJ,CAAC;IArCQ,2CAAM,GAAb;QACE,OAAO,CACL;YACE,oBAAC,aAAa,IAAC,aAAa,EAAC,wBAAwB,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAC,YAAY,GAAG;YACpG,oBAAC,KAAK,IAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,CAAC,cAAc,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,UAAU,EAAC,OAAO;gBACjH,gGAAuE;gBACvE,kCAAU,SAAS,EAAE,IAAI,CAAC,UAAU,GAAI;gBAExC,oBAAC,MAAM,IAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,eAAe,EAAE,KAAK,EAAC,8BAA8B,GAAG,CACvG,CACJ,CACP,CAAC;IACJ,CAAC;IAyBH,iCAAC;AAAD,CAAC,AA3CD,CAAgD,KAAK,CAAC,SAAS,GA2C9D","sourcesContent":["import { KeyCodes } from '@uifabric/utilities';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\r\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\r\nimport * as React from 'react';\r\n\r\nexport interface IPanelPreventDefaultExampleState {\r\n  showPanel: boolean;\r\n  allowEsc: boolean;\r\n}\r\n\r\nexport class PanelPreventDefaultExample extends React.Component<{}, IPanelPreventDefaultExampleState> {\r\n  public state = {\r\n    showPanel: false,\r\n    allowEsc: true\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <DefaultButton secondaryText=\"Opens the Sample Panel\" onClick={this._showPanel} text=\"Open Panel\" />\r\n        <Panel isOpen={this.state.showPanel} type={PanelType.smallFixedNear} onDismiss={this._hidePanel} headerText=\"Panel\">\r\n          <div>Hitting escape inside the text area will not close the Panel</div>\r\n          <textarea onKeyDown={this._onKeyDown} />\r\n\r\n          <Toggle checked={this.state.allowEsc} onChange={this._toggleAllowEsc} label=\"Allow ESC key to close panel\" />\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (ev.keyCode === KeyCodes.escape) {\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n    }\r\n  };\r\n\r\n  private _toggleAllowEsc = () => {\r\n    this.setState({ allowEsc: !this.state.allowEsc });\r\n  };\r\n\r\n  private _hidePanel = (ev?: React.KeyboardEvent<HTMLElement>) => {\r\n    if (ev && ev.keyCode === KeyCodes.escape && !this.state.allowEsc) {\r\n      ev.preventDefault();\r\n      return;\r\n    }\r\n\r\n    this.setState({ showPanel: false });\r\n  };\r\n\r\n  private _showPanel = (): void => {\r\n    this.setState({ showPanel: true });\r\n  };\r\n}\r\n"]}