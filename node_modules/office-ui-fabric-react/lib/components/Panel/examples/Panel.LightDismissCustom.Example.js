import * as tslib_1 from "tslib";
import { DefaultButton, PrimaryButton } from 'office-ui-fabric-react/lib/Button';
import { Dialog, DialogFooter, DialogType } from 'office-ui-fabric-react/lib/Dialog';
import { Panel } from 'office-ui-fabric-react/lib/Panel';
import * as React from 'react';
var PanelLightDismissCustomExample = /** @class */ (function (_super) {
    tslib_1.__extends(PanelLightDismissCustomExample, _super);
    function PanelLightDismissCustomExample() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            showPanel: false,
            hideDialog: true
        };
        _this._showPanel = function () {
            _this.setState({ showPanel: true });
        };
        _this._hidePanel = function () {
            _this.setState({ showPanel: false });
        };
        _this._showDialog = function () {
            _this.setState({ hideDialog: false });
        };
        _this._closeDialog = function () {
            _this.setState({ hideDialog: true });
        };
        _this._closeDialogAndHidePanel = function () {
            _this._hidePanel();
            _this._closeDialog();
        };
        return _this;
    }
    PanelLightDismissCustomExample.prototype.render = function () {
        return (React.createElement("div", null,
            React.createElement(DefaultButton, { text: "Open panel", onClick: this._showPanel }),
            React.createElement(Panel, { isOpen: this.state.showPanel, isLightDismiss: true, headerText: "Light Dismiss Panel", onDismiss: this._hidePanel, onLightDismissClick: this._showDialog },
                React.createElement("span", null, "Light Dismiss usage is meant for the Contextual Menu on mobile sized breakpoints.")),
            React.createElement(Dialog, { hidden: this.state.hideDialog, onDismiss: this._closeDialog, dialogContentProps: {
                    type: DialogType.normal,
                    title: 'Are you sure you want to close the panel?'
                }, modalProps: {
                    titleAriaId: 'myLabelId',
                    subtitleAriaId: 'mySubTextId',
                    isBlocking: true,
                    styles: { main: { maxWidth: 450 } }
                } },
                React.createElement(DialogFooter, null,
                    React.createElement(PrimaryButton, { onClick: this._closeDialogAndHidePanel, text: "Yes" }),
                    React.createElement(DefaultButton, { onClick: this._closeDialog, text: "No" })))));
    };
    return PanelLightDismissCustomExample;
}(React.Component));
export { PanelLightDismissCustomExample };
//# sourceMappingURL=Panel.LightDismissCustom.Example.js.map