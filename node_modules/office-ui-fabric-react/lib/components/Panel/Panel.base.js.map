{"version":3,"file":"Panel.base.js","sourceRoot":"../src/","sources":["components/Panel/Panel.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { IconButton } from '../../Button';\r\nimport { Layer } from '../../Layer';\r\nimport { Overlay } from '../../Overlay';\r\nimport { Popup } from '../../Popup';\r\nimport { getTheme, IconFontSizes, IProcessedStyleSet } from '../../Styling';\r\nimport {\r\n  allowScrollOnElement,\r\n  BaseComponent,\r\n  classNamesFunction,\r\n  divProperties,\r\n  elementContains,\r\n  getId,\r\n  getNativeProps,\r\n  getRTL\r\n} from '../../Utilities';\r\nimport { FocusTrapZone } from '../FocusTrapZone/index';\r\nimport { IPanel, IPanelProps, IPanelStyleProps, IPanelStyles, PanelType } from './Panel.types';\r\n\r\nconst getClassNames = classNamesFunction<IPanelStyleProps, IPanelStyles>();\r\n\r\nexport interface IPanelState {\r\n  isFooterSticky?: boolean;\r\n  isOpen?: boolean;\r\n  isAnimating?: boolean;\r\n  id?: string;\r\n}\r\n\r\nexport class PanelBase extends BaseComponent<IPanelProps, IPanelState> implements IPanel {\r\n  public static defaultProps: IPanelProps = {\r\n    isHiddenOnDismiss: false,\r\n    isOpen: false,\r\n    isBlocking: true,\r\n    hasCloseButton: true,\r\n    type: PanelType.smallFixedFar\r\n  };\r\n\r\n  private _panel = React.createRef<HTMLDivElement>();\r\n  private _classNames: IProcessedStyleSet<IPanelStyles>;\r\n  private _scrollableContent: HTMLDivElement | null;\r\n\r\n  constructor(props: IPanelProps) {\r\n    super(props);\r\n\r\n    this._warnDeprecations({\r\n      ignoreExternalFocusing: 'focusTrapZoneProps',\r\n      forceFocusInsideTrap: 'focusTrapZoneProps',\r\n      firstFocusableSelector: 'focusTrapZoneProps'\r\n    });\r\n\r\n    this.state = {\r\n      isFooterSticky: false,\r\n      isOpen: false,\r\n      isAnimating: false,\r\n      id: getId('Panel')\r\n    };\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this._events.on(window, 'resize', this._updateFooterPosition);\r\n\r\n    if (this._shouldListenForOuterClick(this.props)) {\r\n      this._events.on(document.body, 'mousedown', this._dismissOnOuterClick, true);\r\n    }\r\n\r\n    if (this.props.isOpen) {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(previousProps: IPanelProps): void {\r\n    const shouldListenOnOuterClick = this._shouldListenForOuterClick(this.props);\r\n    const previousShouldListenOnOuterClick = this._shouldListenForOuterClick(previousProps);\r\n\r\n    if (shouldListenOnOuterClick && !previousShouldListenOnOuterClick) {\r\n      this._events.on(document.body, 'mousedown', this._dismissOnOuterClick, true);\r\n    } else if (!shouldListenOnOuterClick && previousShouldListenOnOuterClick) {\r\n      this._events.off(document.body, 'mousedown', this._dismissOnOuterClick, true);\r\n    }\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IPanelProps): void {\r\n    if (newProps.isOpen !== this.state.isOpen) {\r\n      if (newProps.isOpen) {\r\n        this.open();\r\n      } else {\r\n        this.dismiss();\r\n      }\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element | null {\r\n    const {\r\n      className = '',\r\n      elementToFocusOnDismiss,\r\n      firstFocusableSelector,\r\n      focusTrapZoneProps,\r\n      forceFocusInsideTrap,\r\n      hasCloseButton,\r\n      headerText,\r\n      headerClassName = '',\r\n      ignoreExternalFocusing,\r\n      isBlocking,\r\n      isFooterAtBottom,\r\n      isLightDismiss,\r\n      isHiddenOnDismiss,\r\n      layerProps,\r\n      type,\r\n      styles,\r\n      theme,\r\n      customWidth,\r\n      onLightDismissClick = this._onPanelClick,\r\n      onRenderNavigation = this._onRenderNavigation,\r\n      onRenderHeader = this._onRenderHeader,\r\n      onRenderBody = this._onRenderBody,\r\n      onRenderFooter = this._onRenderFooter\r\n    } = this.props;\r\n    const { isFooterSticky, isOpen, isAnimating, id } = this.state;\r\n    const isLeft = type === PanelType.smallFixedNear || type === PanelType.customNear ? true : false;\r\n    const isRTL = getRTL();\r\n    const isOnRightSide = isRTL ? isLeft : !isLeft;\r\n    const headerTextId = headerText && id + '-headerText';\r\n    const customWidthStyles = type === PanelType.custom || type === PanelType.customNear ? { width: customWidth } : {};\r\n    const nativeProps = getNativeProps(this.props, divProperties);\r\n\r\n    if (!isOpen && !isAnimating && !isHiddenOnDismiss) {\r\n      return null;\r\n    }\r\n\r\n    this._classNames = getClassNames(styles!, {\r\n      theme: theme!,\r\n      className,\r\n      focusTrapZoneClassName: focusTrapZoneProps ? focusTrapZoneProps.className : undefined,\r\n      hasCloseButton,\r\n      headerClassName,\r\n      isAnimating,\r\n      isFooterAtBottom,\r\n      isFooterSticky,\r\n      isOnRightSide,\r\n      isOpen,\r\n      isHiddenOnDismiss,\r\n      type\r\n    });\r\n\r\n    const { _classNames } = this;\r\n\r\n    let overlay;\r\n    if (isBlocking && isOpen) {\r\n      overlay = <Overlay className={_classNames.overlay} isDarkThemed={false} onClick={isLightDismiss ? onLightDismissClick : undefined} />;\r\n    }\r\n\r\n    const header = onRenderHeader(this.props, this._onRenderHeader, headerTextId);\r\n\r\n    return (\r\n      <Layer {...layerProps}>\r\n        <Popup\r\n          role=\"dialog\"\r\n          aria-modal=\"true\"\r\n          ariaLabelledBy={header ? headerTextId : undefined}\r\n          onDismiss={this.dismiss}\r\n          className={_classNames.hiddenPanel}\r\n        >\r\n          <div aria-hidden={!isOpen && isAnimating} {...nativeProps} ref={this._panel} className={_classNames.root}>\r\n            {overlay}\r\n            <FocusTrapZone\r\n              ignoreExternalFocusing={ignoreExternalFocusing}\r\n              forceFocusInsideTrap={isHiddenOnDismiss && !isOpen ? false : forceFocusInsideTrap}\r\n              firstFocusableSelector={firstFocusableSelector}\r\n              isClickableOutsideFocusTrap={true}\r\n              {...focusTrapZoneProps}\r\n              className={_classNames.main}\r\n              style={customWidthStyles}\r\n              elementToFocusOnDismiss={elementToFocusOnDismiss}\r\n            >\r\n              <div className={_classNames.commands} data-is-visible={true}>\r\n                {onRenderNavigation(this.props, this._onRenderNavigation)}\r\n              </div>\r\n              <div className={_classNames.contentInner}>\r\n                {header}\r\n                <div ref={this._allowScrollOnPanel} className={_classNames.scrollableContent} data-is-scrollable={true}>\r\n                  {onRenderBody(this.props, this._onRenderBody)}\r\n                </div>\r\n                {onRenderFooter(this.props, this._onRenderFooter)}\r\n              </div>\r\n            </FocusTrapZone>\r\n          </div>\r\n        </Popup>\r\n      </Layer>\r\n    );\r\n  }\r\n\r\n  public open() {\r\n    if (!this.state.isOpen) {\r\n      this.setState(\r\n        {\r\n          isOpen: true,\r\n          isAnimating: true\r\n        },\r\n        () => {\r\n          this._async.setTimeout(this._onTransitionComplete, 200);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public dismiss = (ev?: React.SyntheticEvent<HTMLElement>): void => {\r\n    if (this.state.isOpen) {\r\n      if (this.props.onDismiss) {\r\n        this.props.onDismiss(ev);\r\n      }\r\n\r\n      if (!ev || (ev && !ev.defaultPrevented)) {\r\n        this.setState(\r\n          {\r\n            isOpen: false,\r\n            isAnimating: true\r\n          },\r\n          () => {\r\n            this._async.setTimeout(this._onTransitionComplete, 200);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  // Allow the user to scroll within the panel but not on the body\r\n  private _allowScrollOnPanel = (elt: HTMLDivElement | null): void => {\r\n    if (elt) {\r\n      allowScrollOnElement(elt, this._events);\r\n    } else {\r\n      this._events.off(this._scrollableContent);\r\n    }\r\n    this._scrollableContent = elt;\r\n  };\r\n\r\n  private _shouldListenForOuterClick(props: IPanelProps): boolean {\r\n    return !!props.isBlocking && !!props.isOpen;\r\n  }\r\n\r\n  private _onRenderNavigation = (props: IPanelProps): JSX.Element | null => {\r\n    if (!this.props.onRenderNavigationContent && !this.props.onRenderNavigation && !this.props.hasCloseButton) {\r\n      return null;\r\n    }\r\n    const { onRenderNavigationContent = this._onRenderNavigationContent } = this.props;\r\n    return <div className={this._classNames.navigation}>{onRenderNavigationContent(props, this._onRenderNavigationContent)}</div>;\r\n  };\r\n\r\n  private _onRenderNavigationContent = (props: IPanelProps): JSX.Element | null => {\r\n    const { closeButtonAriaLabel, hasCloseButton } = props;\r\n    const theme = getTheme();\r\n    if (hasCloseButton) {\r\n      // TODO -Issue #5689: Comment in once Button is converted to mergeStyles\r\n      // const iconButtonStyles = this._classNames.subComponentStyles\r\n      // ? (this._classNames.subComponentStyles.iconButton as IStyleFunctionOrObject<IButtonStyleProps, IButtonStyles>)\r\n      // : undefined;\r\n      return (\r\n        <IconButton\r\n          // TODO -Issue #5689: Comment in once Button is converted to mergeStyles\r\n          // className={iconButtonStyles}\r\n          styles={{\r\n            root: {\r\n              height: 'auto',\r\n              width: '44px',\r\n              color: theme.palette.neutralSecondary,\r\n              fontSize: IconFontSizes.large\r\n            },\r\n            rootHovered: {\r\n              color: theme.palette.neutralPrimary\r\n            }\r\n          }}\r\n          className={this._classNames.closeButton}\r\n          onClick={this._onPanelClick}\r\n          ariaLabel={closeButtonAriaLabel}\r\n          data-is-visible={true}\r\n          iconProps={{ iconName: 'Cancel' }}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  private _onRenderHeader = (\r\n    props: IPanelProps,\r\n    defaultRender?: (props?: IPanelProps) => JSX.Element | null,\r\n    headerTextId?: string | undefined\r\n  ): JSX.Element | null => {\r\n    const { headerText } = props;\r\n\r\n    if (headerText) {\r\n      return (\r\n        <div className={this._classNames.header}>\r\n          <p className={this._classNames.headerText} id={headerTextId} role=\"heading\" aria-level={2}>\r\n            {headerText}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  private _onRenderBody = (props: IPanelProps): JSX.Element => {\r\n    return <div className={this._classNames.content}>{props.children}</div>;\r\n  };\r\n\r\n  private _onRenderFooter = (props: IPanelProps): JSX.Element | null => {\r\n    const { onRenderFooterContent = null } = this.props;\r\n    if (onRenderFooterContent) {\r\n      return (\r\n        <div className={this._classNames.footer}>\r\n          <div className={this._classNames.footerInner}>{onRenderFooterContent()}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  private _updateFooterPosition(): void {\r\n    const scrollableContent = this._scrollableContent;\r\n    if (scrollableContent) {\r\n      const height = scrollableContent.clientHeight;\r\n      const innerHeight = scrollableContent.scrollHeight;\r\n\r\n      this.setState({\r\n        isFooterSticky: height < innerHeight ? true : false\r\n      });\r\n    }\r\n  }\r\n\r\n  private _dismissOnOuterClick(ev: any): void {\r\n    const panel = this._panel.current;\r\n    if (this.state.isOpen && panel) {\r\n      if (!elementContains(panel, ev.target)) {\r\n        if (this.props.onOuterClick) {\r\n          this.props.onOuterClick();\r\n          ev.preventDefault();\r\n        } else {\r\n          this.dismiss();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _onPanelClick = (ev?: any): void => {\r\n    this.dismiss(ev);\r\n  };\r\n\r\n  private _onTransitionComplete = (): void => {\r\n    this._updateFooterPosition();\r\n    this.setState({\r\n      isAnimating: false\r\n    });\r\n\r\n    if (!this.state.isOpen && this.props.onDismissed) {\r\n      this.props.onDismissed();\r\n    }\r\n  };\r\n}\r\n"]}