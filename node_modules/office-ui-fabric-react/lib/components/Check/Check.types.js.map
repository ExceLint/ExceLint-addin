{"version":3,"file":"Check.types.js","sourceRoot":"../src/","sources":["components/Check/Check.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\r\nimport { CheckBase } from './Check.base';\r\nimport { IStyle, ITheme } from '../../Styling';\r\nimport { IRefObject, IStyleFunctionOrObject } from '../../Utilities';\r\n\r\nexport interface ICheckProps extends React.ClassAttributes<CheckBase> {\r\n  /**\r\n   * Gets the component ref.\r\n   */\r\n  componentRef?: IRefObject<ICheckProps>;\r\n\r\n  /**\r\n   * Whether or not this menu item is currently checked.\r\n   * @defaultvalue false\r\n   */\r\n  checked?: boolean;\r\n\r\n  /**\r\n   * Call to provide customized styling that will layer on top of the variant rules\r\n   */\r\n  styles?: IStyleFunctionOrObject<ICheckStyleProps, ICheckStyles>;\r\n\r\n  /**\r\n   * Flag to always show the check icon. Not currently working.\r\n   */\r\n  alwaysShowCheck?: boolean;\r\n\r\n  /**\r\n   * Theme provided by HOC.\r\n   */\r\n  theme?: ITheme;\r\n\r\n  /**\r\n   * Additional css class to apply to the Check\r\n   * @defaultvalue undefined\r\n   */\r\n  className?: string;\r\n}\r\n\r\nexport interface ICheckStyleProps {\r\n  /**\r\n   * Accept theme prop.\r\n   */\r\n  theme: ITheme;\r\n\r\n  /**\r\n   * Accept custom classNames\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * Accept custom checkBox size in pixels.\r\n   * @defaultvalue '18px'\r\n   */\r\n  checkBoxHeight?: string;\r\n\r\n  checked?: boolean;\r\n}\r\n\r\nexport interface ICheckStyles {\r\n  /**\r\n   * Style for the root element.\r\n   */\r\n  root: IStyle;\r\n\r\n  /**\r\n   * The 'check' icon styles.\r\n   */\r\n  check: IStyle;\r\n\r\n  /**\r\n   * The 'circle' icon styles.\r\n   */\r\n  circle: IStyle;\r\n\r\n  /**\r\n   * Check host style\r\n   */\r\n  checkHost: IStyle;\r\n}\r\n"]}