#!/usr/bin/python3

import json
import csv
import os
import argparse

"""
read in excelint-cli generated JSON files and produce a CSV file, where each line contains the following:

Workbook name
Sheet name
Suspiciousness threshold
Formatting threshold
Number of suspicious ranges
Number of cells in suspicious ranges
"""


def process_workbook(dirname, fname, output_file):
    qualified_origname = os.path.join(dirname, fname)
    with open(qualified_origname, 'r') as f:
        with open(output_file, 'a') as csvfile:
            writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
            j = json.load(f)
            for i in range(0, len(j)):
                workbookName = j[i]['workbookName']
                workbook = j[i]['worksheets']
                for sheet in workbook.keys():
                    s = { 'workbookName' : workbookName,
                          'worksheet' : sheet,
                          'suspiciousRanges' : workbook[sheet]['suspiciousRanges'],
                          'suspiciousCells' : workbook[sheet]['suspiciousCells'],
                          'suspiciousnessThreshold' : workbook[sheet]['suspiciousnessThreshold'],
                          'formattingDiscount' : workbook[sheet]['formattingDiscount'] }
                    writer.writerow(s)
    
    
parser = argparse.ArgumentParser('json-to-csv.py')
parser.add_argument('--input', help='Process an input .json file, as generated by xlsx-to-json.py.')
parser.add_argument('--output', help='Name of output csv file.')
parser.add_argument('--directory', help='Process all .json files in a directory.')

args = parser.parse_args()

if args.output is None or (args.input is None and args.directory is None):
    parser.print_help()
    exit(-1)

# Write the header.
with open(args.output, 'w') as csvfile:
    fieldnames = ['workbookName', 'worksheet', 'suspiciousRanges', 'suspiciousCells', 'suspiciousnessThreshold', 'formattingDiscount']
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
    writer.writeheader()
    
if args.directory is None:
    process_workbook('.', args.input, args.output)
else:
    fnames = os.listdir(args.directory)
    for fname in fnames:
        # Skip subdirectories
        if os.path.isdir(os.path.join(args.directory, fname)):
            continue
        if fname.endswith("-stats.json") and not fname.startswith("~$"):
            print("processing " + fname)
            try:
                process_workbook(args.directory, fname, args.output)
            except:
                pass

    
